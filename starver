let Settings = {
  extractorInfo: {
    enable: true
  },
  playeronTOP: {
    enable: true
  },
  boxonTOP: {
    enable: true
  },
  roofWH: {
    enable: true,
    opacity: 0.4
  },
  AutoCraft: {
    enable: false,
    key: "KeyE",
    id: undefined
  },
  AutoRecycle: {
    enable: false,
    key: "KeyR",
    id: undefined
  },
  AutoTotem: {
    enable: false,
    key: "KeyH"
  },
  extractorPut: {
    key: "KeyN",
    enable: false
  },
  AutoSteal: {
    enable: false,
    key: "KeyQ"
  },
  ColoredSpikes: {
    enable: true,
    Style: localStorage.getItem("colored_style_idnts") || 1
  },
  DrawInChest: {
    enable: true
  },
  AutoCrown: {
    enable: true,
    ready: false
  },
  SwordInChest: {
    enable: false,
    key: "KeyX"
  },
  AutoSpike: {
    enable: false,
    key: "Space"
  },
  TotemInfo: {
    enable: true
  }
}
var c = this;
var [d, e, f, g, i, k, m, n, o, p, q, r, s, t, u, v, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, _, aa, ba, ca, da, ea, fa, ha, ia, ja, ka, la, ma, na, oa, pa, qa, ra, sa, ta, ua, va, wa, xa, ya, za, Aa, Ba, Ca, Da, Ea, Fa, Ga, Ha, Ia, Ja, Ka, La, Ma, Na, Oa, Pa, Qa, Ra, Sa] = ["fillStyle", "sin", "fontStretch", "save", "atan2", "Uint32Array", "lineWidth", "reset", "random", "createElement", "CanvasRenderingContext2D", "drawImage", "log10", "abs", "splice", "requestAnimationFrame", "cancelAnimationFrame", "floor", "imageSmoothingEnabled", "shadowBlur", "PI", "indexOf", "canvas", "bezierCurveTo", "log", "scale", "arc", "moveTo", "lineTo", "stroke", "sign", "Uint8Array", "direction", "toString", "imageSmoothingQuality", "strokeStyle", "getContext", "font", "join", "pow", "closePath", "beginPath", "style", "letterSpacing", "JSON", "max", "arcTo", "lineDashOffset", "lineJoin", "getElementById", "fontVariantCaps", "prototype", "shadowColor", "measureText", "strokeText", "Uint16Array", "shift", "textBaseline", "fillRect", "miterLimit", "rotate", "fillText", "min", "globalAlpha", "slice", "textRendering", "fill", "acos", "cos", "document", "fontKerning", "sqrt", "filter", "clearRect", "shadowOffsetY", "lineCap", "textAlign", "translate", "shadowOffsetX", "removeEventListener", "addEventListener", "keys", "push", "length", "sort", "restore", "wordSpacing", "globalCompositeOperation"];
function Ta(c) {
  this.m = 2147483648;
  this.a = 1103515245;
  this.c = 12345;
  this.state = c || Math[A](Math[o]() * (this.m - 1));
}
c.loginKey = null;
c.ga = null;
c.WEBSOCKET_URL = "europe.starver.io";
Ta[ia][o] = function () {
  this.state = (this.a * this.state + this.c) % this.m;
  return this.state / this.m;
};
Ta[ia].ﱢ︌︊︁ = function (c) {
  this.state = c;
};
RAND_SIZE = 10000;
RANDOM = [];
var Ua = new Ta();
Ua.ﱢ︌︊︁(new Date().getTime());
for (var Va = 0; Va < 10000; Va++) {
  RANDOM[Na](Ua[o]());
}
Utils = {
  ﱞ︍︊︁: function (d) {
    c.open(d, "_blank").focus();
  },
  ﱠ︍︊︁: function (d) {
    c.open(d, "_blank", "location=yes,height=570,width=520,scrollbars=yes,status=yes");
  },
  ﱟ︍︊︁: function (c, d) {
    for (var e in c) {
      if (c[e] != d[e]) {
        return false;
      }
    }
    return true;
  },
  ﱡ︍︊︁: function (c, d) {
    if (c[Oa] != d[Oa]) {
      return false;
    }
    for (var e = 0; e < c[Oa]; e++) {
      if (typeof c == "object") {
        if (!this.ﱟ︍︊︁(c[e], d[e])) {
          return false;
        }
      } else if (c[e] != d[e]) {
        return false;
      }
    }
    return true;
  },
  ﱣ︍︊︁: function (c, d) {
    d.x = c.x;
    d.y = c.y;
  },
  ﱢ︍︊︁: function (c, d) {
    return {
      x: c.x - d.x,
      y: c.y - d.y
    };
  },
  ﱞ︎︊︁: function (c, d) {
    c.x *= d;
    c.y *= d;
  },
  ﱠ︎︊︁: function (c, d) {
    return c.x * d.x + c.y * d.y;
  },
  ﱟ︎︊︁: function (c) {
    return Math[Ca](c.x * c.x + c.y * c.y);
  },
  sign: function (c) {
    if (c < 0) {
      return -1;
    } else {
      return 1;
    }
  },
  ﱡ︎︊︁: function (c, d) {
    return c.x * d.y - c.y * d.x;
  },
  ﱣ︎︊︁: function (c, d, e, f) {
    var g = f - d;
    var k = e - c;
    return Math[i](g, k);
  },
  ﱢ︎︊︁: function (c, d) {
    return Math[ya](this.ﱠ︎︊︁(c, d) / (this.ﱟ︎︊︁(c) * this.ﱟ︎︊︁(d))) * this[N](this.ﱡ︎︊︁(c, d));
  },
  ﱞ️︊︁: function (c) {
    _url = location.href;
    c = c.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var d = new RegExp("[\\?&]" + c + "=([^&#]*)").exec(_url);
    if (d === null) {
      return null;
    } else {
      return d[1];
    }
  },
  ﱠ️︊︁: function (c, d) {
    var e = Math[D] * 2;
    d = (d % e + e) % e;
    if (Math[t](c - d) > Math[D]) {
      if (c > d) {
        return d + e;
      } else {
        return d - e;
      }
    } else {
      return d;
    }
  },
  ﱟ️︊︁: function (c, d) {
    return this.ﱢ︎︊︁({
      x: 1,
      y: 0
    }, this.ﱢ︍︊︁(c, d));
  },
  ﱡ️︊︁: function (c, d) {
    return Math[Ca]((d.x - c.x) * (d.x - c.x) + (d.y - c.y) * (d.y - c.y));
  },
  ﱣ️︊︁: function (c, d) {
    return {
      x: Math[za](d) * c,
      y: Math[e](d) * c
    };
  },
  ﱢ️︊︁: function (c, d) {
    c.x += d.x;
    c.y += d.y;
  },
  ﱞ︀︋︁: function (c, d) {
    c.x -= d.x;
    c.y -= d.y;
  },
  ﱠ︀︋︁: function (c, d, e) {
    c.x += d;
    c.y += e;
  },
  ﱟ︀︋︁: function (c, d, e) {
    return {
      x: c.x + d,
      y: c.y + e
    };
  },
  move: function (c, d, f) {
    c.x += Math[za](f) * d;
    c.y += Math[e](f) * d;
  },
  ﱡ︀︋︁: function (c, d) {
    return Math[A]((c - d) / 2);
  },
  ﱣ︀︋︁: function (c, d) {
    return {
      x: (c.x + d.x) / 2,
      y: (c.y + d.y) / 2
    };
  },
  ﱢ︀︋︁: function () {
    if (Math[o]() > 0.5) {
      return 1;
    } else {
      return -1;
    }
  },
  ﱞ︁︋︁: function (c, d, f) {
    var g = this.ﱢ︀︋︁();
    var i = this.ﱢ︀︋︁();
    var k = Math[o]() * Math[D] / 2;
    return {
      x: Math[A](c + Math[za](k) * g * f),
      y: Math[A](d + Math[e](k) * i * f)
    };
  },
  ﱠ︁︋︁: function (c, d, e, f) {
    this.x = c;
    this.y = d;
    this.w = e;
    this.ﱟ︁︋︁ = f;
  },
  ﱡ︁︋︁: function (c) {
    a = [];
    a[Na].apply(a, c);
    for (var d = []; a[Oa] > 0;) {
      var e = Math[A](Math[o]() * a[Oa]);
      d[Na](a[e]);
      a[u](e, 1);
    }
    return d;
  },
  ﱣ︁︋︁: function (c) {
    if (c >= 20000) {
      c = (c - 20000) * 1000;
    } else if (c >= 10000) {
      c = (c - 10000) * 100;
    }
    return c;
  },
  ﱢ︁︋︁: function (c) {
    if (typeof c != "number") {
      return "0";
    }
    if (c >= 10000) {
      var d = Math[A](Math[s](c)) - 2;
      var e = Math[ba](0, 3 - d);
      var f = Math[A](c / 1000)[Q]();
      if (e) {
        for (var g = (f += "." + (c % 1000 / 1000)[Q]().substring(2).substring(0, e))[Oa] - 1, i = 0; g > 0 && f[g] == "0"; g--) {
          i++;
        }
        if ((f = f.substring(0, f[Oa] - i))[f[Oa] - 1] == ".") {
          f = f.substring(0, f[Oa] - 1);
        }
      }
      return f += "k";
    }
    return c[Q]();
  },
  ﱞ︂︋︁: function (c) {
    return c * (2 - c);
  },
  ﱠ︂︋︁: function (c) {
    return --c * c * c + 1;
  },
  ﱟ︂︋︁: function (c) {
    if (c < 0.5) {
      return c * 2 * c;
    } else {
      return (4 - c * 2) * c - 1;
    }
  },
  ﱡ︂︋︁: function (c) {
    if (c < 0.5) {
      return c * 4 * c * c;
    } else {
      return (c - 1) * (c * 2 - 2) * (c * 2 - 2) + 1;
    }
  },
  ﱣ︂︋︁: function (c) {
    if (c < 0.5) {
      return c * 8 * c * c * c;
    } else {
      return 1 - --c * 8 * c * c * c;
    }
  },
  ﱢ︂︋︁: function (c) {
    return 1 - --c * c * c * c;
  },
  ﱞ︃︋︁: function (c) {
    return 1 + --c * c * c * c * c;
  },
  ﱠ︃︋︁: function (c, d, e, f, g, i) {
    this.ﱟ︃︋︁ = c;
    this.ﱡ︃︋︁ = d;
    this[ba] = e;
    this[ta] = f;
    this.ﱣ︃︋︁ = g;
    this.ﱢ︃︋︁ = i;
    this.ﱞ︄︋︁ = 0;
    this.update = function () {
      if (this.ﱟ︃︋︁) {
        if ((c = this.ﱡ︃︋︁ + nj * this.ﱣ︃︋︁) > this[ba]) {
          this.ﱡ︃︋︁ = this[ba];
          this.ﱟ︃︋︁ = false;
          return true;
        }
        this.ﱡ︃︋︁ = c;
      } else {
        var c;
        if ((c = this.ﱡ︃︋︁ - nj * this.ﱢ︃︋︁) < this[ta]) {
          this.ﱡ︃︋︁ = this[ta];
          this.ﱟ︃︋︁ = true;
        } else {
          this.ﱡ︃︋︁ = c;
        }
      }
    };
    return false;
  },
  ﱠ︄︋︁: function (c, d, e, f, g, i) {
    this.ﱟ︄︋︁ = c;
    this.ﱡ︄︋︁ = d;
    this.em = e;
    this.ﱣ︄︋︁ = f;
    this.x = g;
    this.ex = i;
    this.ﱢ︄︋︁ = function () {
      this.x = this.sex;
      this.ﱡ︄︋︁ = 0;
    };
    this.ﱞ︅︋︁ = function (c) {
      if (c !== this.ex) {
        this.ex = c;
        this.ﱣ︄︋︁ = this.x;
        this.ﱡ︄︋︁ = 0;
      }
      if (this.ex !== this.x) {
        this.ﱡ︄︋︁ += nj;
        if (this.ﱡ︄︋︁ > this.em) {
          this.x = this.ex;
        } else {
          var d = this.ﱟ︄︋︁(this.ﱡ︄︋︁ / this.em);
          this.x = this.ﱣ︄︋︁ + (this.ex - this.ﱣ︄︋︁) * d;
        }
      }
    };
  },
  ﱠ︅︋︁: function (c, d, e, f, g, i, k, m, n) {
    this.ﱟ︄︋︁ = c;
    this.ﱡ︄︋︁ = d;
    this.em = e;
    this.ﱣ︄︋︁ = f;
    this.ﱟ︅︋︁ = g;
    this.x = i;
    this.y = k;
    this.ex = m;
    this.ﱡ︅︋︁ = n;
    this.ﱞ︅︋︁ = function (c) {
      if (!(c.x == this.ex && c.y == this.ﱡ︅︋︁)) {
        this.ex = c.x;
        this.ﱡ︅︋︁ = c.y;
        this.ﱣ︄︋︁ = this.x;
        this.ﱟ︅︋︁ = this.y;
        this.ﱡ︄︋︁ = 0;
      }
      if (this.ex != this.x || this.ﱡ︅︋︁ != this.y) {
        this.ﱡ︄︋︁ += nj;
        if (this.ﱡ︄︋︁ > this.em) {
          this.x = this.ex;
          this.y = this.ﱡ︅︋︁;
        } else {
          var d = this.ﱟ︄︋︁(this.ﱡ︄︋︁ / this.em);
          this.x = this.ﱣ︄︋︁ + (this.ex - this.ﱣ︄︋︁) * d;
          this.y = this.ﱟ︅︋︁ + (this.ﱡ︅︋︁ - this.ﱟ︅︋︁) * d;
        }
      }
    };
  },
  ﱣ︅︋︁: function (c) {
    for (var d = "", e = 0; e < c; e++) {
      d += String.fromCharCode(48 + Math[A](Math[o]() * 74));
    }
    return d;
  },
  ﱢ︅︋︁: function (c, d) {
    if (!d) {
      d = location.href;
    }
    c = c.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var e = new RegExp("[\\?&]" + c + "=([^&#]*)").exec(d);
    if (e == null) {
      return null;
    } else {
      return e[1];
    }
  },
  ﱞ︆︋︁: function (c, d) {
    return c.x >= d.x && c.x <= d.x + d.w && c.y >= d.y && c.y <= d.y + d.ﱟ︁︋︁;
  },
  ﱠ︆︋︁: function (c, d, e, f, g, i, k, m) {
    if (Math[ba](c, g) < Math[ta](d, i) && Math[ba](e, k) < Math[ta](f, m)) {
      return 1;
    } else {
      return 0;
    }
  },
  ﱟ︆︋︁: function (c, d, e) {
    return (1 - e) * c + e * d;
  },
  ﱡ︆︋︁: function (c) {
    return c.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
  }
};
Math[N] = Math[N] || function (c) {
  if (c === 0) {
    return 0;
  } else if (c > 0) {
    return 1;
  } else {
    return -1;
  }
};
Math[s] = Math[s] || function (c) {
  return Math[H](c) / Math.LOG10;
};
(function (d) {
  var e = false;
  if (typeof define == "function" && define.amd) {
    define(d);
    e = true;
  }
  if (typeof exports == "object") {
    module.exports = d();
    e = true;
  }
  if (!e) {
    var f = c.Cookies;
    var g = c.Cookies = d();
    g.ﱣ︆︋︁ = function () {
      c.Cookies = f;
      return g;
    };
  }
})(function () {
  function c() {
    for (var c = 0, d = {}; c < arguments[Oa]; c++) {
      var e = arguments[c];
      for (var f in e) {
        d[f] = e[f];
      }
    }
    return d;
  }
  return function e(d) {
    function f(e, g, i) {
      var k;
      if (typeof document != "undefined") {
        if (arguments[Oa] > 1) {
          if (typeof (i = c({
            path: "/"
          }, f.ﱢ︆︋︁, i)).expires == "number") {
            var m = new Date();
            m.setMilliseconds(m.getMilliseconds() + i.expires * 86400000);
            i.expires = m;
          }
          try {
            k = JSON.stringify(g);
            if (/^[\{\[]/.test(k)) {
              g = k;
            }
          } catch (c) {}
          g = d.write ? d.write(g, e) : encodeURIComponent(String(g)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
          e = (e = (e = encodeURIComponent(String(e))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
          return document.cookie = [e, "=", g, i.expires ? "; expires=" + i.expires.toUTCString() : "", i.path ? "; path=" + i.path : "", i.domain ? "; domain=" + i.domain : "", i.ﱞ︇︋︁ ? "; secure" : ""][V]("");
        }
        if (!e) {
          k = {};
        }
        for (var n = document.cookie ? document.cookie.split("; ") : [], o = /(%[0-9A-Z]{2})+/g, p = 0; p < n[Oa]; p++) {
          var q = n[p].split("=");
          var r = q[va](1)[V]("=");
          if (r.charAt(0) === "\"") {
            r = r[va](1, -1);
          }
          try {
            var s = q[0].replace(o, decodeURIComponent);
            r = d.read ? d.read(r, s) : d(r, s) || r.replace(o, decodeURIComponent);
            if (this.json) {
              try {
                r = JSON.parse(r);
              } catch (c) {}
            }
            if (e === s) {
              k = r;
              break;
            }
            if (!e) {
              k[s] = r;
            }
          } catch (c) {}
        }
        return k;
      }
    }
    f.set = f;
    f.get = function (c) {
      return f.call(f, c);
    };
    f.ﱠ︇︋︁ = function () {
      return f.apply({
        json: true
      }, [][va].call(arguments));
    };
    f.ﱢ︆︋︁ = {};
    f.remove = function (d, e) {
      f(d, "", c(e, {
        expires: -1
      }));
    };
    f.ﱟ︇︋︁ = e;
    return f;
  }(function () {});
});
var Wa;
var Xa;
var Ya;
var Za;
var $a;
var _a;
var ab;
var bb;
var cb;
var db;
var eb;
var fb = document[fa]("game_canvas");
var gb = fb[T]("2d");
var hb = fb.width;
var ib = fb.height;
var jb = fb.width / 2;
var kb = fb.height / 2;
var lb = {
  x: jb,
  y: kb
};
var mb = 1;
var nb = 1;
var ob = -1;
var pb = "J" + bb;
var qb = "S" + Eb;
var rb = window;
var sb = (vb = "O") + "N";
var tb = rb;
qb = "N";
var ub = "J";
var vb = "O" + bb;
var wb = tb;
var xb = wb;
sb = "N" + undefined;
var yb = xb;
var zb = yb;
var Ab = zb;
var Bb = Ab;
ub = "O";
var Cb = Bb = Ab;
var Db = Cb;
var Eb = "J" + (db = "S");
function Fb(c) {
  var d = new Image();
  d.src = c.toDataURL("image/png");
  d.width = c.width;
  d.height = c.height;
  d.ﱡ︇︋︁ = 1;
  return d;
}
fb.oncontextmenu = function () {
  return false;
};
pb = "J";
vb = sb;
sb = bb;
bb = Eb;
vb = Eb;
Za = $a = Eb + (ub += pb = qb);
qb = ub + pb;
_a = Wa = Xa = Eb + ub;
vb = Eb + ub;
ab = Xa;
sb = Eb + ub;
cb = Ya = Wa;
ub = bb = Eb;
db = Xa;
eb = Wa;
pb = vb;
var Gb = c.devicePixelRatio || 1;
var Hb = gb.webkitBackingStorePixelRatio || gb.ﱣ︇︋︁ || gb.ﱢ︇︋︁ || gb.ﱞ︈︋︁ || gb.ﱠ︈︋︁ || 1;
function Ib() {
  if (fb.width != c.innerWidth) {
    fb.width = c.innerWidth;
    hb = fb.width;
    jb = fb.width / 2;
  }
  if (fb.height != c.innerHeight) {
    fb.height = c.innerHeight;
    ib = fb.height;
    kb = fb.height / 2;
  }
  lb = {
    x: jb,
    y: kb
  };
  var d = fb.width;
  var e = fb.height;
  nb = ob === -1 ? Gb / Hb : ob;
  fb.width = d * nb;
  fb.height = e * nb;
  fb[Z].width = d + "px";
  fb[Z].height = e + "px";
  gb[I](nb, nb);
  if (hj) {
    hj.ﱡ︈︋︁.ﱟ︈︋︁ = d;
    hj.ﱡ︈︋︁.ﱣ︈︋︁ = e;
  }
  if (pj.ﱢ︈︋︁) {
    pj.update();
  } else if (dj.ﱢ︈︋︁) {
    dj.update();
  } else if (jj.ﱢ︈︋︁) {
    jj.update();
  } else if (ij.ﱢ︈︋︁) {
    ij.update();
  }
}
var Jb = document[fa]("game_body");
Jb.ondragstart = function () {
  return false;
};
Jb.ondrop = function () {
  return false;
};
Jb.onresize = Ib;
(function () {
  for (var d = 0, e = ["ms", "moz", "webkit", "o"], f = 0; f < e[Oa] && !c[v]; ++f) {
    c[v] = window[e[f] + "RequestAnimationFrame"];
    c[z] = window[e[f] + "CancelAnimationFrame"] || window[e[f] + "CancelRequestAnimationFrame"];
  }
  if (!c[v]) {
    c[v] = function (e, f) {
      var g = new Date().getTime();
      var i = Math[ba](0, 16 - (g - d));
      var k = c.setTimeout(function () {
        e(g + i);
      }, i);
      d = g + i;
      return k;
    };
  }
  if (!c[z]) {
    c[z] = function (c) {
      clearTimeout(c);
    };
  }
})();
var Kb = navigator.language || navigator.userLanguage;
var Lb = -new Date().getTimezoneOffset() / 60;
var Mb = "Europe";
var Nb = "South America";
var Ob = Mb;
if (Lb >= -2 && Lb <= 2) {
  Ob = Mb;
} else if (Lb > 2 && Lb <= 5) {
  Ob = "Russia";
} else if (Lb > 5 && Lb <= 9) {
  Ob = "Asia";
} else if (Lb > 9) {
  Ob = "Australia";
} else if (Lb >= -5 && Lb < -2) {
  Ob = Kb === "pt-BR" || Kb === "pt-br" || Kb === "pt" || Kb === "pt-pt" ? Nb : "North America";
} else if (Lb < -5) {
  Ob = Kb === "pt-BR" || Kb === "pt-br" || Kb === "pt" || Kb === "pt-pt" ? Nb : "West America";
}
var Ta = {
  ﱞ︉︋︁: function (c) {
    var d = 2147483648;
    var e = c || Math[A](Math[o]() * (d - 1));
    this.init = function (c) {
      e = c || Math[A](Math[o]() * (d - 1));
    };
    this.get = function () {
      return (e = (e * 1103515245 + 12345) % d) / d;
    };
  }
};
var Pb = [[0, "DRAGON", 18, 6, 66, 35, 0], [0, "WINTER", 91, 18, 5, 40, 8], [0, "DESERT", 135, 180, 89, 124, 5], [0, "LAVA", 142, 6, 82, 99, 6], [0, "FOREST", 6, 150, 90, 154, 8], [0, "WINTER", 6, 6, 90, 150, 0], [1, "b", 0, 5, 175, 0], [1, "t", 2, 5, 174, 0], [1, "t", 5, 5, 173, 0], [1, "b", 3, 5, 176, 0], [1, "t", 0, 5, 177, 0], [1, "t", 3, 5, 178, 0], [1, "t", 4, 5, 179, 0], [1, "b", 0, 5, 180, 0], [1, "t", 5, 5, 181, 0], [1, "b", 2, 5, 182, 0], [1, "b", 1, 5, 183, 0], [1, "b", 2, 5, 184, 0], [1, "t", 5, 5, 185, 0], [1, "t", 2, 5, 186, 0], [1, "t", 0, 5, 187, 0], [1, "t", 5, 5, 188, 0], [1, "t", 1, 5, 189, 0], [1, "b", 2, 5, 190, 0], [1, "t", 4, 5, 191, 0], [1, "b", 3, 5, 192, 0], [1, "t", 5, 5, 193, 0], [1, "t", 0, 5, 194, 0], [1, "t", 3, 5, 195, 0], [1, "b", 0, 5, 196, 0], [1, "t", 5, 5, 197, 0], [1, "t", 2, 5, 198, 0], [1, "b", 2, 5, 199, 0], [1, "t", 4, 5, 200, 0], [1, "t", 1, 5, 201, 0], [1, "b", 1, 5, 202, 0], [1, "t", 5, 5, 203, 0], [1, "t", 2, 5, 204, 0], [1, "t", 4, 5, 205, 0], [1, "b", 2, 5, 206, 0], [1, "t", 1, 5, 207, 0], [1, "t", 4, 5, 208, 0], [1, "t", 2, 5, 209, 0], [1, "b", 0, 5, 210, 0], [1, "t", 5, 5, 211, 0], [1, "t", 1, 5, 212, 0], [1, "t", 2, 5, 213, 0], [1, "b", 3, 5, 214, 0], [1, "t", 5, 5, 215, 0], [1, "b", 0, 5, 216, 0], [1, "t", 4, 5, 217, 0], [1, "t", 2, 5, 218, 0], [1, "t", 1, 5, 219, 0], [1, "t", 3, 5, 220, 0], [1, "t", 5, 5, 221, 0], [1, "t", 2, 5, 222, 0], [1, "t", 4, 5, 223, 0], [1, "b", 3, 5, 224, 0], [1, "t", 1, 5, 225, 0], [1, "t", 3, 5, 226, 0], [1, "b", 0, 5, 227, 0], [1, "t", 3, 5, 228, 0], [1, "t", 5, 5, 229, 0], [1, "t", 2, 5, 230, 0], [1, "t", 0, 5, 231, 0], [1, "b", 2, 5, 232, 0], [1, "t", 1, 5, 233, 0], [1, "t", 4, 5, 234, 0], [1, "b", 1, 5, 235, 0], [1, "t", 4, 5, 236, 0], [1, "t", 2, 5, 237, 0], [1, "t", 0, 5, 238, 0], [1, "t", 4, 5, 239, 0], [1, "b", 2, 5, 240, 0], [1, "t", 5, 5, 241, 0], [1, "b", 1, 5, 242, 0], [1, "t", 4, 5, 243, 0], [1, "t", 2, 5, 244, 0], [1, "t", 1, 5, 245, 0], [1, "b", 1, 5, 246, 0], [1, "t", 3, 5, 247, 0], [1, "b", 2, 5, 248, 0], [1, "t", 5, 5, 249, 0], [1, "t", 2, 5, 250, 0], [1, "t", 4, 5, 251, 0], [1, "b", 1, 5, 252, 0], [1, "t", 4, 5, 253, 0], [1, "t", 1, 5, 254, 0], [1, "t", 3, 5, 255, 0], [1, "t", 5, 5, 256, 0], [1, "b", 2, 5, 257, 0], [1, "t", 4, 5, 258, 0], [1, "b", 3, 5, 259, 0], [1, "t", 5, 5, 260, 0], [1, "b", 0, 5, 261, 0], [1, "t", 3, 5, 262, 0], [1, "t", 4, 5, 263, 0], [1, "t", 2, 5, 264, 0], [1, "b", 1, 5, 265, 0], [1, "b", 2, 5, 266, 0], [1, "t", 3, 5, 267, 0], [1, "t", 4, 5, 268, 0], [1, "t", 0, 5, 269, 0], [1, "t", 5, 5, 270, 0], [1, "t", 3, 5, 271, 0], [1, "t", 4, 5, 272, 0], [1, "t", 1, 5, 273, 0], [1, "b", 2, 5, 274, 0], [1, "t", 1, 5, 275, 0], [1, "t", 4, 5, 276, 0], [1, "b", 1, 5, 277, 0], [1, "b", 2, 5, 278, 0], [1, "t", 1, 5, 279, 0], [1, "t", 4, 5, 280, 0], [1, "t", 2, 5, 281, 0], [1, "t", 5, 5, 282, 0], [1, "b", 2, 5, 283, 0], [1, "t", 1, 5, 284, 0], [1, "b", 3, 5, 285, 0], [1, "t", 4, 5, 286, 0], [1, "t", 0, 5, 287, 0], [1, "t", 5, 5, 288, 0], [1, "t", 2, 5, 289, 0], [1, "b", 1, 5, 290, 0], [1, "t", 4, 5, 292, 0], [1, "t", 2, 5, 291, 0], [1, "b", 2, 5, 293, 0], [1, "t", 1, 5, 294, 0], [1, "t", 3, 5, 295, 0], [1, "t", 5, 5, 296, 0], [1, "b", 0, 5, 297, 0], [1, "b", 3, 5, 298, 0], [1, "t", 4, 5, 299, 0], [1, "t", 2, 5, 300, 0], [1, "t", 4, 5, 301, 0], [1, "b", 0, 5, 302, 0], [1, "b", 2, 5, 303, 0], [1, "t", 1, 6, 303, 0], [1, "t", 2, 7, 303, 0], [1, "t", 1, 5, 304, 0], [1, "t", 3, 6, 304, 0], [1, "t", 4, 7, 304, 0], [1, "t", 5, 8, 303, 0], [1, "b", 1, 8, 304, 0], [1, "b", 2, 9, 304, 0], [1, "b", 3, 12, 303, 0], [1, "b", 3, 17, 304, 0], [1, "t", 1, 9, 303, 0], [1, "t", 1, 15, 304, 0], [1, "t", 1, 13, 303, 0], [1, "t", 3, 10, 303, 0], [1, "t", 3, 14, 304, 0], [1, "t", 4, 10, 304, 0], [1, "t", 5, 11, 304, 0], [1, "t", 5, 14, 303, 0], [1, "t", 5, 16, 304, 0], [1, "t", 5, 13, 304, 0], [1, "t", 2, 12, 304, 0], [1, "t", 1, 11, 303, 0], [1, "b", 3, 15, 303, 0], [1, "b", 0, 16, 303, 0], [1, "t", 3, 17, 303, 0], [1, "t", 4, 18, 303, 0], [1, "t", 2, 19, 303, 0], [1, "t", 1, 20, 303, 0], [1, "b", 1, 21, 303, 0], [1, "t", 2, 22, 303, 0], [1, "t", 4, 23, 303, 0], [1, "b", 3, 24, 303, 0], [1, "t", 5, 25, 303, 0], [1, "t", 1, 26, 303, 0], [1, "t", 2, 27, 303, 0], [1, "t", 4, 28, 303, 0], [1, "b", 0, 18, 304, 0], [1, "t", 2, 19, 304, 0], [1, "t", 5, 20, 304, 0], [1, "b", 2, 21, 304, 0], [1, "t", 4, 22, 304, 0], [1, "t", 2, 23, 304, 0], [1, "t", 1, 24, 304, 0], [1, "t", 3, 25, 304, 0], [1, "t", 0, 27, 304, 0], [1, "t", 5, 26, 304, 0], [1, "b", 2, 28, 304, 0], [1, "t", 1, 29, 304, 0], [1, "b", 1, 29, 303, 0], [1, "b", 2, 30, 303, 0], [1, "t", 4, 31, 303, 0], [1, "t", 0, 32, 303, 0], [1, "t", 5, 33, 303, 0], [1, "t", 2, 34, 303, 0], [1, "t", 4, 35, 303, 0], [1, "t", 1, 36, 303, 0], [1, "b", 3, 37, 303, 0], [1, "t", 2, 32, 304, 0], [1, "t", 4, 30, 304, 0], [1, "t", 1, 31, 304, 0], [1, "b", 1, 33, 304, 0], [1, "t", 2, 35, 304, 0], [1, "t", 5, 34, 304, 0], [1, "b", 2, 36, 304, 0], [1, "t", 5, 37, 304, 0], [1, "t", 1, 38, 304, 0], [1, "b", 1, 40, 303, 0], [1, "t", 3, 39, 303, 0], [1, "t", 3, 42, 304, 0], [1, "t", 5, 38, 303, 0], [1, "t", 5, 39, 304, 0], [1, "t", 5, 41, 303, 0], [1, "t", 4, 41, 304, 0], [1, "t", 4, 44, 303, 0], [1, "b", 2, 40, 304, 0], [1, "b", 2, 43, 303, 0], [1, "t", 1, 42, 303, 0], [1, "t", 1, 43, 304, 0], [1, "t", 5, 44, 304, 0], [1, "b", 1, 45, 303, 0], [1, "t", 2, 45, 304, 0], [1, "t", 2, 46, 303, 0], [1, "t", 4, 47, 303, 0], [1, "b", 0, 48, 303, 0], [1, "t", 5, 49, 303, 0], [1, "t", 2, 50, 303, 0], [1, "t", 1, 51, 303, 0], [1, "t", 4, 52, 303, 0], [1, "t", 5, 46, 304, 0], [1, "t", 2, 47, 304, 0], [1, "t", 5, 48, 304, 0], [1, "t", 1, 49, 304, 0], [1, "t", 2, 50, 304, 0], [1, "b", 1, 53, 303, 0], [1, "b", 2, 51, 304, 0], [1, "t", 5, 52, 304, 0], [1, "t", 3, 53, 304, 0], [1, "b", 2, 54, 303, 0], [1, "t", 5, 54, 304, 0], [1, "t", 5, 55, 303, 0], [1, "t", 3, 56, 303, 0], [1, "t", 4, 57, 303, 0], [1, "t", 5, 58, 303, 0], [1, "b", 1, 55, 304, 0], [1, "t", 2, 56, 304, 0], [1, "t", 0, 57, 304, 0], [1, "t", 3, 58, 304, 0], [1, "t", 3, 63, 304, 0], [1, "t", 3, 59, 303, 0], [1, "t", 4, 59, 304, 0], [1, "t", 5, 60, 303, 0], [1, "t", 0, 60, 304, 0], [1, "t", 0, 66, 303, 0], [1, "t", 0, 70, 304, 0], [1, "t", 3, 61, 304, 0], [1, "t", 3, 67, 303, 0], [1, "t", 3, 73, 304, 0], [1, "t", 3, 76, 303, 0], [1, "t", 3, 78, 304, 0], [1, "t", 1, 61, 303, 0], [1, "t", 1, 73, 303, 0], [1, "t", 1, 79, 303, 0], [1, "b", 2, 62, 304, 0], [1, "b", 2, 70, 303, 0], [1, "t", 5, 62, 303, 0], [1, "t", 5, 68, 303, 0], [1, "t", 5, 71, 304, 0], [1, "t", 5, 77, 304, 0], [1, "t", 5, 75, 303, 0], [1, "t", 5, 64, 304, 0], [1, "t", 5, 65, 303, 0], [1, "t", 5, 80, 303, 0], [1, "t", 1, 76, 304, 0], [1, "t", 3, 63, 303, 0], [1, "t", 5, 82, 304, 0], [1, "b", 2, 65, 304, 0], [1, "t", 1, 64, 303, 0], [1, "t", 1, 68, 304, 0], [1, "t", 2, 69, 304, 0], [1, "t", 4, 69, 303, 0], [1, "t", 5, 66, 304, 0], [1, "t", 0, 67, 304, 0], [1, "b", 2, 72, 304, 0], [1, "t", 0, 71, 303, 0], [1, "t", 4, 72, 303, 0], [1, "t", 4, 74, 304, 0], [1, "t", 2, 74, 303, 0], [1, "t", 3, 75, 304, 0], [1, "t", 1, 77, 303, 0], [1, "t", 4, 78, 303, 0], [1, "t", 4, 79, 304, 0], [1, "t", 2, 80, 304, 0], [1, "b", 1, 81, 304, 0], [1, "t", 2, 81, 303, 0], [1, "t", 5, 82, 303, 0], [1, "t", 1, 83, 303, 0], [1, "b", 2, 83, 304, 0], [1, "t", 1, 84, 304, 0], [1, "t", 4, 84, 303, 0], [1, "t", 5, 85, 304, 0], [1, "t", 3, 85, 303, 0], [1, "b", 2, 86, 304, 0], [1, "t", 1, 86, 303, 0], [1, "b", 3, 87, 303, 0], [1, "t", 4, 87, 304, 0], [1, "t", 4, 88, 303, 0], [1, "t", 0, 88, 304, 0], [1, "b", 1, 89, 303, 0], [1, "t", 3, 89, 304, 0], [1, "t", 3, 90, 303, 0], [1, "t", 4, 90, 304, 0], [1, "t", 4, 91, 303, 0], [1, "t", 0, 91, 304, 0], [1, "b", 2, 92, 303, 0], [1, "t", 4, 92, 304, 0], [1, "t", 5, 93, 303, 0], [1, "t", 0, 93, 304, 0], [1, "b", 3, 94, 303, 0], [1, "b", 0, 94, 304, 0], [1, "b", 0, 95, 303, 0], [1, "t", 2, 95, 304, 0], [1, "f", 1, 5, 151, 1], [1, "f", 2, 5, 153, 1], [1, "f", 0, 5, 152, 1], [1, "f", 0, 5, 147, 1], [1, "f", 0, 5, 144, 1], [1, "f", 0, 5, 140, 1], [1, "f", 1, 5, 149, 1], [1, "f", 1, 5, 146, 1], [1, "f", 1, 5, 143, 1], [1, "f", 1, 5, 141, 1], [1, "f", 2, 5, 150, 1], [1, "f", 2, 5, 148, 1], [1, "f", 2, 5, 145, 1], [1, "f", 2, 5, 142, 1], [1, "f", 2, 5, 139, 1], [1, "f", 2, 5, 136, 1], [1, "f", 2, 5, 133, 1], [1, "f", 2, 5, 131, 1], [1, "f", 2, 5, 127, 1], [1, "f", 2, 5, 125, 1], [1, "f", 1, 5, 138, 1], [1, "f", 1, 5, 135, 1], [1, "f", 1, 5, 132, 1], [1, "f", 1, 5, 130, 1], [1, "f", 1, 5, 128, 1], [1, "f", 1, 5, 126, 1], [1, "f", 1, 5, 124, 1], [1, "f", 0, 5, 129, 1], [1, "f", 0, 5, 134, 1], [1, "f", 0, 5, 137, 1], [1, "f", 0, 5, 123, 1], [1, "f", 1, 5, 122, 1], [1, "f", 1, 5, 120, 1], [1, "f", 1, 5, 117, 1], [1, "f", 1, 5, 115, 1], [1, "f", 1, 5, 111, 1], [1, "f", 1, 5, 108, 1], [1, "f", 2, 5, 121, 1], [1, "f", 2, 5, 118, 1], [1, "f", 2, 5, 116, 1], [1, "f", 2, 5, 113, 1], [1, "f", 2, 5, 110, 1], [1, "f", 0, 5, 119, 1], [1, "f", 0, 5, 114, 1], [1, "f", 0, 5, 112, 1], [1, "f", 0, 5, 109, 1], [1, "f", 1, 5, 106, 1], [1, "f", 1, 5, 103, 1], [1, "f", 1, 5, 100, 1], [1, "f", 1, 5, 97, 1], [1, "f", 1, 5, 95, 1], [1, "f", 2, 5, 107, 1], [1, "f", 2, 5, 105, 1], [1, "f", 2, 5, 102, 1], [1, "f", 2, 5, 99, 1], [1, "f", 2, 5, 96, 1], [1, "f", 2, 5, 94, 1], [1, "f", 0, 5, 104, 1], [1, "f", 0, 5, 101, 1], [1, "f", 0, 5, 98, 1], [1, "f", 0, 5, 93, 1], [1, "f", 1, 5, 92, 1], [1, "f", 1, 5, 89, 1], [1, "f", 1, 5, 86, 1], [1, "f", 1, 5, 83, 1], [1, "f", 1, 5, 80, 1], [1, "f", 1, 5, 78, 1], [1, "f", 2, 5, 90, 1], [1, "f", 2, 5, 88, 1], [1, "f", 2, 5, 85, 1], [1, "f", 2, 5, 82, 1], [1, "f", 2, 5, 79, 1], [1, "f", 2, 5, 77, 1], [1, "f", 2, 5, 75, 1], [1, "f", 2, 5, 72, 1], [1, "f", 0, 5, 91, 1], [1, "f", 0, 5, 87, 1], [1, "f", 0, 5, 84, 1], [1, "f", 0, 5, 81, 1], [1, "f", 0, 5, 76, 1], [1, "f", 0, 5, 74, 1], [1, "f", 1, 5, 73, 1], [1, "f", 1, 5, 71, 1], [1, "f", 1, 5, 68, 1], [1, "f", 1, 5, 66, 1], [1, "f", 1, 5, 62, 1], [1, "f", 1, 5, 59, 1], [1, "f", 1, 5, 56, 1], [1, "f", 1, 5, 53, 1], [1, "f", 1, 5, 50, 1], [1, "f", 2, 5, 70, 1], [1, "f", 2, 5, 67, 1], [1, "f", 2, 5, 65, 1], [1, "f", 2, 5, 63, 1], [1, "f", 2, 5, 60, 1], [1, "f", 2, 5, 57, 1], [1, "f", 2, 5, 54, 1], [1, "f", 2, 5, 51, 1], [1, "f", 0, 5, 69, 1], [1, "f", 0, 5, 64, 1], [1, "f", 0, 5, 61, 1], [1, "f", 0, 5, 58, 1], [1, "f", 0, 5, 55, 1], [1, "f", 0, 5, 52, 1], [1, "f", 0, 5, 49, 1], [1, "f", 0, 5, 45, 1], [1, "f", 0, 5, 42, 1], [1, "f", 0, 5, 38, 1], [1, "f", 0, 5, 34, 1], [1, "f", 0, 5, 31, 1], [1, "f", 1, 5, 48, 1], [1, "f", 1, 5, 44, 1], [1, "f", 1, 5, 41, 1], [1, "f", 1, 5, 37, 1], [1, "f", 1, 5, 33, 1], [1, "f", 1, 5, 29, 1], [1, "f", 2, 5, 30, 1], [1, "f", 2, 5, 32, 1], [1, "f", 2, 5, 35, 1], [1, "f", 2, 5, 39, 1], [1, "f", 2, 5, 46, 1], [1, "f", 2, 5, 43, 1], [1, "f", 1, 5, 47, 1], [1, "f", 0, 5, 40, 1], [1, "f", 0, 5, 36, 1], [1, "f", 0, 5, 28, 1], [1, "f", 1, 5, 25, 1], [1, "f", 1, 5, 22, 1], [1, "f", 1, 5, 20, 1], [1, "f", 1, 5, 16, 1], [1, "f", 1, 5, 13, 1], [1, "f", 1, 5, 10, 1], [1, "f", 2, 5, 27, 1], [1, "f", 2, 5, 24, 1], [1, "f", 2, 5, 21, 1], [1, "f", 2, 5, 19, 1], [1, "f", 2, 5, 15, 1], [1, "f", 2, 5, 12, 1], [1, "f", 2, 5, 9, 1], [1, "f", 0, 5, 26, 1], [1, "f", 0, 5, 23, 1], [1, "f", 0, 5, 14, 1], [1, "f", 0, 5, 11, 1], [1, "f", 0, 5, 17, 1], [1, "f", 1, 5, 18, 1], [1, "f", 1, 5, 8, 1], [1, "f", 0, 5, 7, 1], [1, "f", 1, 5, 6, 1], [1, "f", 0, 5, 5, 1], [1, "f", 1, 6, 5, 1], [1, "f", 2, 7, 5, 1], [1, "f", 0, 8, 5, 1], [1, "f", 1, 9, 5, 1], [1, "f", 1, 12, 5, 1], [1, "f", 1, 15, 5, 1], [1, "f", 1, 17, 5, 1], [1, "f", 1, 22, 5, 1], [1, "f", 1, 26, 5, 1], [1, "f", 2, 10, 5, 1], [1, "f", 2, 13, 5, 1], [1, "f", 2, 16, 5, 1], [1, "f", 2, 18, 5, 1], [1, "f", 2, 21, 5, 1], [1, "f", 2, 23, 5, 1], [1, "f", 2, 25, 5, 1], [1, "f", 2, 27, 5, 1], [1, "f", 0, 11, 5, 1], [1, "f", 0, 14, 5, 1], [1, "f", 0, 19, 5, 1], [1, "f", 0, 24, 5, 1], [1, "f", 0, 28, 5, 1], [1, "f", 1, 20, 5, 1], [1, "f", 1, 29, 5, 1], [1, "f", 1, 32, 5, 1], [1, "f", 1, 35, 5, 1], [1, "f", 1, 38, 5, 1], [1, "f", 1, 41, 5, 1], [1, "f", 1, 45, 5, 1], [1, "f", 2, 30, 5, 1], [1, "f", 2, 33, 5, 1], [1, "f", 2, 36, 5, 1], [1, "f", 2, 39, 5, 1], [1, "f", 2, 42, 5, 1], [1, "f", 2, 44, 5, 1], [1, "f", 2, 46, 5, 1], [1, "f", 0, 43, 5, 1], [1, "f", 0, 40, 5, 1], [1, "f", 0, 37, 5, 1], [1, "f", 0, 34, 5, 1], [1, "f", 0, 31, 5, 1], [1, "f", 0, 47, 5, 1], [1, "f", 1, 48, 5, 1], [1, "f", 1, 51, 5, 1], [1, "f", 1, 53, 5, 1], [1, "f", 1, 57, 5, 1], [1, "f", 1, 60, 5, 1], [1, "f", 1, 63, 5, 1], [1, "f", 1, 65, 5, 1], [1, "f", 2, 64, 5, 1], [1, "f", 2, 62, 5, 1], [1, "f", 2, 59, 5, 1], [1, "f", 2, 56, 5, 1], [1, "f", 2, 52, 5, 1], [1, "f", 2, 49, 5, 1], [1, "f", 2, 54, 5, 1], [1, "f", 0, 50, 5, 1], [1, "f", 0, 55, 5, 1], [1, "f", 0, 58, 5, 1], [1, "f", 0, 61, 5, 1], [1, "f", 0, 66, 5, 1], [1, "f", 1, 67, 5, 1], [1, "f", 1, 70, 5, 1], [1, "f", 1, 72, 5, 1], [1, "f", 1, 75, 5, 1], [1, "f", 1, 79, 5, 1], [1, "f", 2, 68, 5, 1], [1, "f", 2, 71, 5, 1], [1, "f", 2, 74, 5, 1], [1, "f", 2, 76, 5, 1], [1, "f", 2, 78, 5, 1], [1, "f", 0, 69, 5, 1], [1, "f", 0, 73, 5, 1], [1, "f", 0, 77, 5, 1], [1, "f", 0, 80, 5, 1], [1, "f", 1, 81, 5, 1], [1, "f", 1, 84, 5, 1], [1, "f", 1, 87, 5, 1], [1, "f", 1, 89, 5, 1], [1, "f", 1, 92, 5, 1], [1, "f", 1, 94, 5, 1], [1, "f", 0, 82, 5, 1], [1, "f", 2, 83, 5, 1], [1, "f", 2, 85, 5, 1], [1, "f", 2, 88, 5, 1], [1, "f", 2, 90, 5, 1], [1, "f", 2, 93, 5, 1], [1, "f", 2, 95, 5, 1], [1, "f", 0, 86, 5, 1], [1, "f", 0, 91, 5, 1], [1, "f", 2, 6, 153, 1], [1, "f", 1, 6, 152, 1], [1, "t", 1, 93, 301, 0], [1, "t", 3, 94, 302, 0], [1, "t", 5, 95, 302, 0], [1, "t", 5, 93, 302, 0], [1, "b", 3, 92, 302, 0], [1, "t", 1, 91, 302, 0], [1, "t", 5, 90, 302, 0], [1, "b", 2, 92, 301, 0], [1, "t", 1, 91, 301, 0], [1, "t", 2, 90, 301, 0], [1, "b", 2, 89, 302, 0], [1, "t", 4, 89, 301, 0], [1, "t", 1, 88, 302, 0], [1, "t", 2, 88, 301, 0], [1, "t", 3, 87, 302, 0], [1, "t", 4, 87, 299, 0], [1, "t", 4, 86, 302, 0], [1, "t", 1, 85, 302, 0], [1, "t", 5, 85, 301, 0], [1, "b", 2, 84, 302, 0], [1, "t", 5, 83, 302, 0], [1, "t", 1, 82, 302, 0], [1, "t", 5, 81, 302, 0], [1, "t", 2, 80, 302, 0], [1, "t", 4, 79, 302, 0], [1, "t", 2, 78, 302, 0], [1, "b", 1, 77, 302, 0], [1, "b", 2, 76, 302, 0], [1, "t", 2, 75, 302, 0], [1, "t", 4, 74, 302, 0], [1, "b", 1, 73, 302, 0], [1, "t", 2, 72, 302, 0], [1, "t", 4, 71, 302, 0], [1, "b", 3, 70, 302, 0], [1, "t", 1, 69, 302, 0], [1, "t", 2, 68, 302, 0], [1, "t", 5, 67, 302, 0], [1, "b", 1, 66, 302, 0], [1, "t", 2, 65, 302, 0], [1, "t", 4, 64, 302, 0], [1, "b", 3, 63, 302, 0], [1, "t", 5, 62, 302, 0], [1, "b", 1, 61, 302, 0], [1, "t", 3, 60, 302, 0], [1, "t", 4, 59, 302, 0], [1, "b", 2, 58, 302, 0], [1, "t", 5, 57, 302, 0], [1, "t", 1, 56, 302, 0], [1, "t", 3, 55, 302, 0], [1, "t", 4, 54, 302, 0], [1, "t", 1, 53, 302, 0], [1, "t", 5, 52, 302, 0], [1, "t", 2, 51, 302, 0], [1, "t", 4, 50, 302, 0], [1, "t", 2, 49, 302, 0], [1, "b", 1, 48, 302, 0], [1, "t", 3, 47, 302, 0], [1, "t", 4, 46, 302, 0], [1, "t", 1, 45, 302, 0], [1, "t", 2, 44, 302, 0], [1, "t", 5, 43, 302, 0], [1, "t", 2, 42, 302, 0], [1, "t", 1, 41, 302, 0], [1, "t", 4, 40, 302, 0], [1, "b", 2, 39, 302, 0], [1, "t", 5, 38, 302, 0], [1, "t", 1, 37, 302, 0], [1, "t", 2, 36, 302, 0], [1, "t", 5, 35, 302, 0], [1, "t", 0, 34, 302, 0], [1, "t", 3, 33, 302, 0], [1, "t", 4, 32, 302, 0], [1, "b", 1, 31, 302, 0], [1, "t", 2, 30, 302, 0], [1, "t", 4, 29, 302, 0], [1, "t", 2, 28, 302, 0], [1, "t", 5, 27, 302, 0], [1, "b", 3, 26, 302, 0], [1, "t", 1, 25, 302, 0], [1, "t", 4, 24, 302, 0], [1, "t", 2, 23, 302, 0], [1, "t", 1, 22, 302, 0], [1, "t", 5, 21, 302, 0], [1, "t", 2, 20, 302, 0], [1, "t", 4, 19, 302, 0], [1, "b", 1, 18, 302, 0], [1, "t", 5, 17, 302, 0], [1, "t", 3, 16, 302, 0], [1, "t", 1, 15, 302, 0], [1, "t", 5, 14, 302, 0], [1, "t", 3, 13, 302, 0], [1, "t", 4, 12, 302, 0], [1, "t", 1, 11, 302, 0], [1, "t", 2, 10, 302, 0], [1, "t", 4, 9, 302, 0], [1, "b", 3, 8, 302, 0], [1, "t", 5, 8, 302, 0], [1, "t", 5, 7, 302, 0], [1, "b", 2, 6, 302, 0], [1, "t", 1, 6, 301, 0], [1, "t", 4, 6, 300, 0], [1, "t", 2, 6, 299, 0], [1, "b", 0, 6, 298, 0], [1, "t", 5, 6, 297, 0], [1, "t", 2, 6, 296, 0], [1, "t", 0, 6, 295, 0], [1, "b", 2, 6, 294, 0], [1, "t", 5, 6, 293, 0], [1, "t", 1, 6, 292, 0], [1, "b", 0, 6, 291, 0], [1, "t", 2, 6, 290, 0], [1, "t", 5, 6, 289, 0], [1, "t", 1, 6, 288, 0], [1, "t", 4, 6, 287, 0], [1, "t", 2, 6, 286, 0], [1, "t", 5, 6, 285, 0], [1, "t", 2, 6, 284, 0], [1, "b", 0, 6, 283, 0], [1, "t", 2, 6, 282, 0], [1, "t", 5, 6, 281, 0], [1, "b", 2, 6, 280, 0], [1, "t", 5, 6, 279, 0], [1, "t", 1, 6, 278, 0], [1, "t", 4, 6, 277, 0], [1, "t", 3, 6, 276, 0], [1, "t", 5, 6, 275, 0], [1, "b", 0, 6, 274, 0], [1, "t", 5, 6, 273, 0], [1, "t", 1, 6, 272, 0], [1, "t", 4, 6, 271, 0], [1, "b", 3, 6, 270, 0], [1, "t", 5, 6, 269, 0], [1, "t", 1, 6, 268, 0], [1, "t", 4, 6, 267, 0], [1, "t", 1, 6, 266, 0], [1, "t", 3, 6, 265, 0], [1, "t", 4, 6, 264, 0], [1, "b", 2, 6, 263, 0], [1, "t", 5, 6, 262, 0], [1, "t", 3, 6, 261, 0], [1, "t", 0, 6, 260, 0], [1, "t", 5, 6, 259, 0], [1, "t", 1, 6, 258, 0], [1, "t", 3, 6, 257, 0], [1, "t", 4, 6, 255, 0], [1, "t", 3, 6, 254, 0], [1, "t", 5, 6, 253, 0], [1, "b", 2, 6, 252, 0], [1, "t", 5, 6, 251, 0], [1, "t", 1, 6, 250, 0], [1, "t", 3, 6, 249, 0], [1, "t", 4, 6, 248, 0], [1, "b", 3, 6, 247, 0], [1, "t", 5, 6, 246, 0], [1, "t", 3, 6, 245, 0], [1, "t", 5, 6, 244, 0], [1, "t", 0, 6, 243, 0], [1, "t", 4, 6, 242, 0], [1, "t", 3, 6, 241, 0], [1, "t", 5, 6, 240, 0], [1, "b", 0, 6, 239, 0], [1, "t", 3, 6, 238, 0], [1, "t", 4, 6, 237, 0], [1, "t", 1, 6, 236, 0], [1, "t", 5, 6, 235, 0], [1, "b", 2, 6, 234, 0], [1, "t", 2, 6, 233, 0], [1, "t", 4, 6, 232, 0], [1, "b", 3, 6, 231, 0], [1, "t", 5, 6, 230, 0], [1, "t", 1, 6, 229, 0], [1, "t", 2, 6, 228, 0], [1, "t", 5, 6, 227, 0], [1, "b", 2, 6, 226, 0], [1, "t", 4, 6, 225, 0], [1, "t", 0, 6, 224, 0], [1, "t", 2, 6, 223, 0], [1, "t", 0, 6, 222, 0], [1, "b", 2, 6, 221, 0], [1, "t", 4, 6, 220, 0], [1, "b", 3, 6, 219, 0], [1, "t", 5, 6, 218, 0], [1, "t", 0, 6, 217, 0], [1, "t", 3, 6, 216, 0], [1, "b", 0, 6, 215, 0], [1, "t", 4, 6, 214, 0], [1, "t", 2, 6, 213, 0], [1, "t", 0, 6, 212, 0], [1, "t", 2, 6, 211, 0], [1, "b", 3, 6, 210, 0], [1, "t", 0, 6, 209, 0], [1, "t", 5, 6, 207, 0], [1, "t", 2, 6, 208, 0], [1, "t", 0, 6, 206, 0], [1, "t", 2, 6, 205, 0], [1, "t", 2, 6, 203, 0], [1, "b", 0, 6, 202, 0], [1, "t", 3, 6, 201, 0], [1, "t", 4, 6, 199, 0], [1, "t", 0, 6, 198, 0], [1, "t", 2, 6, 197, 0], [1, "t", 4, 6, 196, 0], [1, "t", 1, 6, 195, 0], [1, "t", 3, 6, 194, 0], [1, "t", 4, 6, 192, 0], [1, "t", 2, 6, 191, 0], [1, "b", 0, 6, 190, 0], [1, "t", 3, 6, 189, 0], [1, "t", 4, 6, 187, 0], [1, "b", 0, 6, 186, 0], [1, "t", 2, 6, 185, 0], [1, "t", 4, 6, 184, 0], [1, "t", 2, 6, 183, 0], [1, "t", 0, 6, 182, 0], [1, "b", 2, 6, 181, 0], [1, "t", 5, 6, 180, 0], [1, "t", 2, 6, 179, 0], [1, "t", 0, 6, 178, 0], [1, "t", 2, 6, 177, 0], [1, "t", 4, 6, 176, 0], [1, "b", 2, 6, 175, 0], [1, "t", 1, 6, 174, 0], [1, "t", 5, 6, 173, 0], [1, "t", 2, 6, 256, 0], [1, "t", 4, 6, 204, 0], [1, "t", 4, 6, 200, 0], [1, "t", 2, 6, 193, 0], [1, "t", 2, 6, 188, 0], [1, "f", 1, 6, 150, 1], [1, "f", 2, 6, 151, 1], [1, "f", 2, 6, 149, 1], [1, "f", 1, 6, 148, 1], [1, "f", 2, 6, 147, 1], [1, "f", 2, 6, 145, 1], [1, "f", 2, 6, 143, 1], [1, "f", 1, 6, 146, 1], [1, "f", 1, 6, 144, 1], [1, "f", 1, 6, 142, 1], [1, "f", 2, 6, 141, 1], [1, "f", 2, 6, 139, 1], [1, "f", 2, 6, 137, 1], [1, "f", 2, 6, 135, 1], [1, "f", 2, 6, 133, 1], [1, "f", 1, 6, 140, 1], [1, "f", 1, 6, 138, 1], [1, "f", 1, 6, 136, 1], [1, "f", 1, 6, 134, 1], [1, "f", 1, 6, 132, 1], [1, "f", 2, 6, 131, 1], [1, "f", 2, 6, 129, 1], [1, "f", 2, 6, 127, 1], [1, "f", 2, 6, 125, 1], [1, "f", 2, 6, 123, 1], [1, "f", 2, 6, 121, 1], [1, "f", 1, 6, 130, 1], [1, "f", 1, 6, 128, 1], [1, "f", 1, 6, 126, 1], [1, "f", 1, 6, 124, 1], [1, "f", 1, 6, 122, 1], [1, "f", 1, 6, 120, 1], [1, "f", 2, 6, 119, 1], [1, "f", 2, 6, 117, 1], [1, "f", 2, 6, 115, 1], [1, "f", 2, 6, 113, 1], [1, "f", 2, 6, 111, 1], [1, "f", 2, 6, 109, 1], [1, "f", 1, 6, 118, 1], [1, "f", 1, 6, 116, 1], [1, "f", 1, 6, 114, 1], [1, "f", 1, 6, 112, 1], [1, "f", 1, 6, 110, 1], [1, "f", 1, 6, 108, 1], [1, "f", 1, 6, 106, 1], [1, "f", 1, 6, 104, 1], [1, "f", 2, 6, 107, 1], [1, "f", 2, 6, 105, 1], [1, "f", 2, 6, 103, 1], [1, "f", 2, 6, 101, 1], [1, "f", 2, 6, 99, 1], [1, "f", 2, 6, 97, 1], [1, "f", 2, 6, 95, 1], [1, "f", 2, 6, 93, 1], [1, "f", 2, 6, 91, 1], [1, "f", 1, 6, 102, 1], [1, "f", 1, 6, 100, 1], [1, "f", 1, 6, 98, 1], [1, "f", 1, 6, 96, 1], [1, "f", 1, 6, 94, 1], [1, "f", 1, 6, 92, 1], [1, "f", 1, 6, 90, 1], [1, "f", 1, 6, 88, 1], [1, "f", 1, 6, 86, 1], [1, "f", 2, 6, 89, 1], [1, "f", 2, 6, 87, 1], [1, "f", 2, 6, 85, 1], [1, "f", 2, 6, 83, 1], [1, "f", 2, 6, 81, 1], [1, "f", 2, 6, 79, 1], [1, "f", 2, 6, 77, 1], [1, "f", 1, 6, 84, 1], [1, "f", 1, 6, 82, 1], [1, "f", 1, 6, 80, 1], [1, "f", 1, 6, 78, 1], [1, "f", 1, 6, 76, 1], [1, "f", 2, 6, 75, 1], [1, "f", 2, 6, 73, 1], [1, "f", 2, 6, 71, 1], [1, "f", 2, 6, 69, 1], [1, "f", 2, 6, 67, 1], [1, "f", 2, 6, 65, 1], [1, "f", 1, 6, 74, 1], [1, "f", 1, 6, 72, 1], [1, "f", 1, 6, 70, 1], [1, "f", 1, 6, 68, 1], [1, "f", 1, 6, 66, 1], [1, "f", 1, 6, 64, 1], [1, "f", 2, 6, 63, 1], [1, "f", 2, 6, 61, 1], [1, "f", 2, 6, 59, 1], [1, "f", 2, 6, 57, 1], [1, "f", 2, 6, 55, 1], [1, "f", 2, 6, 53, 1], [1, "f", 2, 6, 51, 1], [1, "f", 1, 6, 62, 1], [1, "f", 1, 6, 60, 1], [1, "f", 1, 6, 58, 1], [1, "f", 1, 6, 56, 1], [1, "f", 1, 6, 54, 1], [1, "f", 1, 6, 52, 1], [1, "f", 1, 6, 50, 1], [1, "f", 2, 6, 49, 1], [1, "f", 2, 6, 47, 1], [1, "f", 2, 6, 45, 1], [1, "f", 2, 6, 43, 1], [1, "f", 2, 6, 41, 1], [1, "f", 2, 6, 39, 1], [1, "f", 1, 6, 48, 1], [1, "f", 1, 6, 46, 1], [1, "f", 1, 6, 44, 1], [1, "f", 1, 6, 42, 1], [1, "f", 1, 6, 40, 1], [1, "f", 1, 6, 38, 1], [1, "f", 2, 6, 37, 1], [1, "f", 2, 6, 35, 1], [1, "f", 2, 6, 33, 1], [1, "f", 2, 6, 31, 1], [1, "f", 2, 6, 29, 1], [1, "f", 2, 6, 27, 1], [1, "f", 1, 6, 36, 1], [1, "f", 1, 6, 34, 1], [1, "f", 1, 6, 32, 1], [1, "f", 1, 6, 30, 1], [1, "f", 1, 6, 28, 1], [1, "f", 1, 6, 26, 1], [1, "f", 2, 6, 25, 1], [1, "f", 2, 6, 23, 1], [1, "f", 2, 6, 21, 1], [1, "f", 2, 6, 19, 1], [1, "f", 2, 6, 17, 1], [1, "f", 2, 6, 15, 1], [1, "f", 1, 6, 24, 1], [1, "f", 1, 6, 22, 1], [1, "f", 1, 6, 20, 1], [1, "f", 1, 6, 18, 1], [1, "f", 1, 6, 16, 1], [1, "f", 2, 6, 13, 1], [1, "f", 2, 6, 11, 1], [1, "f", 2, 6, 9, 1], [1, "f", 2, 6, 7, 1], [1, "f", 1, 6, 14, 1], [1, "f", 1, 6, 12, 1], [1, "f", 1, 6, 10, 1], [1, "f", 1, 6, 8, 1], [1, "f", 1, 6, 6, 1], [1, "f", 1, 8, 6, 1], [1, "f", 2, 7, 6, 1], [1, "f", 2, 9, 6, 1], [1, "f", 2, 11, 6, 1], [1, "f", 2, 13, 6, 1], [1, "f", 2, 15, 6, 1], [1, "f", 1, 10, 6, 1], [1, "f", 1, 12, 6, 1], [1, "f", 1, 14, 6, 1], [1, "f", 1, 16, 6, 1], [1, "f", 1, 18, 6, 1], [1, "f", 1, 20, 6, 1], [1, "f", 1, 22, 6, 1], [1, "f", 1, 24, 6, 1], [1, "f", 1, 26, 6, 1], [1, "f", 2, 17, 6, 1], [1, "f", 2, 19, 6, 1], [1, "f", 2, 21, 6, 1], [1, "f", 2, 23, 6, 1], [1, "f", 2, 25, 6, 1], [1, "f", 2, 27, 6, 1], [1, "f", 2, 29, 6, 1], [1, "f", 2, 31, 6, 1], [1, "f", 2, 33, 6, 1], [1, "f", 1, 28, 6, 1], [1, "f", 1, 30, 6, 1], [1, "f", 1, 32, 6, 1], [1, "f", 1, 34, 6, 1], [1, "f", 2, 67, 6, 1], [1, "f", 2, 69, 6, 1], [1, "f", 2, 71, 6, 1], [1, "f", 2, 73, 6, 1], [1, "f", 2, 75, 6, 1], [1, "f", 1, 68, 6, 1], [1, "f", 1, 70, 6, 1], [1, "f", 1, 72, 6, 1], [1, "f", 1, 74, 6, 1], [1, "f", 1, 76, 6, 1], [1, "f", 2, 77, 6, 1], [1, "f", 2, 79, 6, 1], [1, "f", 2, 81, 6, 1], [1, "f", 2, 83, 6, 1], [1, "f", 2, 85, 6, 1], [1, "f", 1, 78, 6, 1], [1, "f", 1, 80, 6, 1], [1, "f", 1, 82, 6, 1], [1, "f", 1, 84, 6, 1], [1, "f", 1, 86, 6, 1], [1, "f", 2, 87, 6, 1], [1, "f", 2, 89, 6, 1], [1, "f", 2, 91, 6, 1], [1, "f", 2, 93, 6, 1], [1, "f", 1, 88, 6, 1], [1, "f", 1, 90, 6, 1], [1, "f", 1, 92, 6, 1], [1, "f", 1, 94, 6, 1], [1, "f", 2, 95, 6, 1], [1, "f", 1, 95, 7, 1], [1, "f", 1, 83, 7, 1], [1, "f", 1, 81, 7, 1], [1, "f", 1, 79, 7, 1], [1, "f", 1, 77, 7, 1], [1, "f", 1, 75, 7, 1], [1, "f", 1, 73, 7, 1], [1, "f", 1, 71, 7, 1], [1, "f", 1, 69, 7, 1], [1, "f", 1, 33, 7, 1], [1, "f", 1, 31, 7, 1], [1, "f", 1, 29, 7, 1], [1, "f", 1, 27, 7, 1], [1, "f", 1, 25, 7, 1], [1, "f", 1, 23, 7, 1], [1, "f", 1, 21, 7, 1], [1, "f", 1, 19, 7, 1], [1, "f", 1, 17, 7, 1], [1, "f", 1, 15, 7, 1], [1, "f", 1, 13, 7, 1], [1, "f", 1, 11, 7, 1], [1, "f", 1, 9, 7, 1], [1, "f", 1, 7, 7, 1], [1, "s", 0, 7, 8, 1], [1, "t", 4, 7, 174, 0], [1, "t", 5, 7, 175, 0], [1, "t", 4, 7, 176, 0], [1, "b", 2, 7, 177, 0], [1, "t", 3, 94, 301, 0], [1, "b", 3, 95, 301, 0], [1, "t", 4, 96, 301, 0], [1, "t", 1, 97, 301, 0], [1, "t", 2, 98, 301, 0], [1, "t", 4, 99, 301, 0], [1, "t", 2, 100, 301, 0], [1, "t", 4, 96, 304, 0], [1, "t", 2, 96, 302, 0], [1, "t", 2, 97, 304, 0], [1, "t", 2, 96, 303, 0], [1, "t", 5, 97, 303, 0], [1, "t", 5, 98, 304, 0], [1, "b", 2, 97, 302, 0], [1, "b", 2, 99, 304, 0], [1, "t", 1, 98, 303, 0], [1, "t", 4, 98, 302, 0], [1, "t", 4, 99, 303, 0], [1, "t", 4, 100, 304, 0], [1, "t", 5, 99, 302, 0], [1, "t", 5, 101, 303, 0], [1, "t", 2, 100, 303, 0], [1, "t", 0, 100, 302, 0], [1, "t", 0, 101, 304, 0], [1, "t", 4, 102, 304, 0], [1, "f", 0, 94, 7, 1], [1, "f", 1, 93, 7, 1], [1, "f", 1, 92, 7, 1], [1, "f", 0, 91, 7, 1], [1, "f", 1, 90, 7, 1], [1, "f", 1, 89, 7, 1], [1, "f", 0, 88, 7, 1], [1, "f", 1, 87, 7, 1], [1, "f", 1, 86, 7, 1], [1, "f", 1, 85, 7, 1], [1, "f", 0, 84, 7, 1], [1, "f", 1, 82, 7, 1], [1, "f", 0, 80, 7, 1], [1, "f", 1, 78, 7, 1], [1, "f", 0, 76, 7, 1], [1, "f", 1, 74, 7, 1], [1, "f", 0, 72, 7, 1], [1, "f", 0, 70, 7, 1], [1, "f", 1, 68, 7, 1], [1, "f", 1, 32, 7, 1], [1, "f", 0, 30, 7, 1], [1, "f", 1, 28, 7, 1], [1, "f", 0, 26, 7, 1], [1, "f", 1, 24, 7, 1], [1, "f", 0, 22, 7, 1], [1, "f", 1, 20, 7, 1], [1, "f", 0, 18, 7, 1], [1, "f", 1, 16, 7, 1], [1, "f", 0, 14, 7, 1], [1, "f", 1, 12, 7, 1], [1, "f", 0, 10, 7, 1], [1, "f", 1, 8, 7, 1], [1, "s", 1, 7, 9, 1], [1, "f", 0, 95, 152, 1], [1, "f", 1, 95, 151, 1], [1, "f", 0, 95, 11, 1], [1, "f", 1, 95, 12, 1], [1, "f", 1, 95, 14, 1], [1, "f", 1, 95, 19, 1], [1, "f", 0, 95, 15, 1], [1, "f", 0, 95, 20, 1], [1, "f", 1, 95, 21, 1], [1, "f", 1, 95, 26, 1], [1, "f", 1, 95, 37, 1], [1, "f", 0, 95, 44, 1], [1, "f", 1, 95, 50, 1], [1, "f", 1, 95, 52, 1], [1, "f", 0, 95, 53, 1], [1, "f", 1, 95, 54, 1], [1, "f", 1, 95, 62, 1], [1, "f", 0, 95, 55, 1], [1, "f", 1, 95, 64, 1], [1, "f", 0, 95, 58, 1], [1, "f", 0, 95, 61, 1], [1, "f", 0, 95, 68, 1], [1, "f", 0, 95, 72, 1], [1, "f", 0, 95, 78, 1], [1, "f", 1, 95, 115, 1], [1, "f", 1, 95, 117, 1], [1, "f", 1, 95, 128, 1], [1, "f", 0, 95, 85, 1], [1, "f", 0, 95, 91, 1], [1, "f", 0, 95, 95, 1], [1, "f", 0, 95, 114, 1], [1, "f", 2, 95, 113, 1], [1, "f", 1, 95, 119, 1], [1, "f", 0, 95, 120, 1], [1, "f", 1, 95, 121, 1], [1, "f", 0, 95, 127, 1], [1, "f", 1, 95, 130, 1], [1, "f", 0, 95, 131, 1], [1, "f", 1, 95, 132, 1], [1, "f", 1, 95, 136, 1], [1, "f", 0, 95, 137, 1], [1, "f", 0, 95, 143, 1], [1, "f", 0, 95, 147, 1], [1, "f", 1, 95, 138, 1], [1, "f", 1, 95, 144, 1], [1, "f", 1, 95, 10, 1], [1, "f", 0, 95, 8, 1], [1, "f", 1, 95, 9, 1], [1, "f", 0, 95, 13, 1], [1, "f", 1, 95, 16, 1], [1, "f", 1, 95, 17, 1], [1, "f", 0, 95, 18, 1], [1, "f", 1, 95, 45, 1], [1, "f", 0, 95, 51, 1], [1, "f", 1, 95, 56, 1], [1, "f", 1, 95, 57, 1], [1, "f", 1, 95, 59, 1], [1, "f", 1, 95, 60, 1], [1, "f", 1, 95, 63, 1], [1, "f", 0, 95, 65, 1], [1, "f", 1, 95, 66, 1], [1, "f", 1, 95, 67, 1], [1, "f", 1, 95, 69, 1], [1, "f", 1, 95, 70, 1], [1, "f", 0, 95, 71, 1], [1, "f", 1, 95, 73, 1], [1, "f", 1, 95, 74, 1], [1, "f", 0, 95, 75, 1], [1, "f", 1, 95, 76, 1], [1, "f", 1, 95, 77, 1], [1, "f", 1, 95, 79, 1], [1, "f", 1, 95, 80, 1], [1, "f", 0, 95, 81, 1], [1, "f", 1, 95, 82, 1], [1, "f", 0, 95, 83, 1], [1, "f", 1, 95, 84, 1], [1, "f", 1, 95, 86, 1], [1, "f", 1, 95, 88, 1], [1, "f", 0, 95, 87, 1], [1, "f", 1, 95, 89, 1], [1, "f", 1, 95, 90, 1], [1, "f", 1, 95, 92, 1], [1, "f", 1, 95, 93, 1], [1, "f", 1, 95, 94, 1], [1, "f", 1, 95, 96, 1], [1, "f", 1, 95, 97, 1], [1, "f", 0, 95, 98, 1], [1, "f", 1, 95, 99, 1], [1, "f", 1, 95, 100, 1], [1, "f", 0, 95, 101, 1], [1, "f", 1, 95, 102, 1], [1, "f", 0, 95, 103, 1], [1, "f", 1, 95, 104, 1], [1, "f", 1, 95, 105, 1], [1, "f", 0, 95, 106, 1], [1, "f", 1, 95, 107, 1], [1, "f", 1, 95, 108, 1], [1, "f", 1, 95, 109, 1], [1, "f", 0, 95, 110, 1], [1, "f", 1, 95, 111, 1], [1, "f", 0, 95, 112, 1], [1, "f", 1, 95, 116, 1], [1, "f", 0, 95, 118, 1], [1, "f", 0, 95, 122, 1], [1, "f", 1, 95, 123, 1], [1, "f", 1, 95, 124, 1], [1, "f", 0, 95, 125, 1], [1, "f", 1, 95, 126, 1], [1, "f", 1, 95, 129, 1], [1, "f", 1, 95, 133, 1], [1, "f", 0, 95, 134, 1], [1, "f", 1, 95, 135, 1], [1, "f", 1, 95, 139, 1], [1, "f", 0, 95, 140, 1], [1, "f", 1, 95, 141, 1], [1, "f", 1, 95, 142, 1], [1, "f", 1, 95, 146, 1], [1, "f", 0, 95, 145, 1], [1, "f", 1, 95, 148, 1], [1, "f", 1, 95, 149, 1], [1, "f", 1, 95, 150, 1], [1, "f", 1, 95, 153, 1], [1, "cs", 0, 64, 9, 1], [1, "cs", 1, 64, 10, 1], [1, "cs", 2, 64, 16, 1], [1, "cs", 2, 64, 19, 1], [1, "cs", 0, 64, 20, 1], [1, "cs", 1, 64, 21, 1], [1, "cs", 2, 64, 22, 1], [1, "cs", 0, 64, 23, 1], [1, "cs", 2, 64, 24, 1], [1, "cs", 1, 64, 29, 1], [1, "cs", 2, 64, 30, 1], [1, "cs", 3, 64, 31, 1], [1, "cs", 0, 64, 32, 1], [1, "cs", 1, 64, 33, 1], [1, "cs", 2, 64, 34, 1], [1, "cs", 0, 64, 35, 1], [1, "cs", 2, 64, 8, 1], [1, "cs", 2, 65, 8, 1], [1, "cs", 1, 65, 9, 1], [1, "cs", 2, 65, 10, 1], [1, "cs", 3, 65, 11, 1], [1, "cs", 1, 65, 16, 1], [1, "cs", 0, 64, 17, 1], [1, "cs", 3, 65, 17, 1], [1, "cs", 2, 64, 18, 1], [1, "cs", 2, 65, 18, 1], [1, "cs", 0, 65, 19, 1], [1, "cs", 1, 65, 20, 1], [1, "cs", 3, 65, 21, 1], [1, "cs", 2, 65, 22, 1], [1, "cs", 3, 65, 23, 1], [1, "cs", 0, 65, 24, 1], [1, "cs", 2, 65, 29, 1], [1, "cs", 3, 65, 30, 1], [1, "cs", 0, 65, 31, 1], [1, "cs", 1, 65, 32, 1], [1, "cs", 2, 65, 33, 1], [1, "cs", 3, 65, 34, 1], [1, "cs", 2, 63, 9, 1], [1, "cs", 0, 62, 9, 1], [1, "cs", 2, 61, 9, 1], [1, "cs", 0, 60, 9, 1], [1, "cs", 2, 59, 9, 1], [1, "cs", 2, 58, 9, 1], [1, "cs", 0, 57, 9, 1], [1, "cs", 2, 56, 9, 1], [1, "cs", 2, 55, 9, 1], [1, "cs", 2, 54, 9, 1], [1, "cs", 0, 53, 9, 1], [1, "cs", 0, 51, 9, 1], [1, "cs", 2, 52, 9, 1], [1, "cs", 2, 50, 9, 1], [1, "cs", 2, 48, 9, 1], [1, "cs", 2, 49, 9, 1], [1, "cs", 0, 47, 9, 1], [1, "cs", 0, 45, 9, 1], [1, "cs", 0, 43, 9, 1], [1, "cs", 2, 46, 9, 1], [1, "cs", 2, 44, 9, 1], [1, "cs", 2, 42, 9, 1], [1, "cs", 2, 41, 9, 1], [1, "cs", 0, 40, 9, 1], [1, "cs", 2, 39, 9, 1], [1, "cs", 2, 38, 9, 1], [1, "cs", 0, 37, 9, 1], [1, "cs", 0, 63, 8, 1], [1, "cs", 2, 65, 7, 1], [1, "cs", 3, 64, 7, 1], [1, "cs", 2, 62, 8, 1], [1, "cs", 3, 61, 8, 1], [1, "cs", 1, 62, 7, 1], [1, "cs", 2, 63, 7, 1], [1, "cs", 0, 64, 6, 1], [1, "cs", 3, 65, 6, 1], [1, "cs", 2, 63, 6, 1], [1, "cs", 2, 62, 6, 1], [1, "cs", 2, 61, 6, 1], [1, "cs", 2, 60, 6, 1], [1, "cs", 2, 59, 6, 1], [1, "cs", 2, 61, 7, 1], [1, "cs", 0, 60, 7, 1], [1, "cs", 2, 60, 8, 1], [1, "cs", 2, 59, 7, 1], [1, "cs", 2, 59, 8, 1], [1, "cs", 1, 58, 8, 1], [1, "cs", 1, 57, 6, 1], [1, "cs", 1, 55, 7, 1], [1, "cs", 0, 56, 6, 1], [1, "cs", 2, 58, 6, 1], [1, "cs", 2, 58, 7, 1], [1, "cs", 2, 57, 7, 1], [1, "cs", 2, 56, 7, 1], [1, "cs", 2, 55, 6, 1], [1, "cs", 2, 57, 8, 1], [1, "cs", 2, 56, 8, 1], [1, "cs", 2, 55, 8, 1], [1, "cs", 0, 54, 8, 1], [1, "cs", 0, 50, 7, 1], [1, "cs", 0, 53, 6, 1], [1, "cs", 2, 54, 6, 1], [1, "cs", 2, 54, 7, 1], [1, "cs", 2, 53, 7, 1], [1, "cs", 2, 52, 7, 1], [1, "cs", 2, 52, 6, 1], [1, "cs", 1, 52, 8, 1], [1, "cs", 2, 53, 8, 1], [1, "cs", 2, 51, 8, 1], [1, "cs", 2, 51, 7, 1], [1, "cs", 2, 51, 6, 1], [1, "cs", 2, 50, 6, 1], [1, "cs", 2, 50, 8, 1], [1, "cs", 2, 49, 8, 1], [1, "cs", 2, 49, 7, 1], [1, "cs", 2, 49, 6, 1], [1, "cs", 0, 46, 7, 1], [1, "cs", 1, 48, 8, 1], [1, "cs", 1, 44, 7, 1], [1, "cs", 1, 41, 8, 1], [1, "cs", 2, 48, 7, 1], [1, "cs", 2, 48, 6, 1], [1, "cs", 2, 47, 6, 1], [1, "cs", 2, 47, 7, 1], [1, "cs", 2, 47, 8, 1], [1, "cs", 2, 46, 8, 1], [1, "cs", 2, 45, 8, 1], [1, "cs", 2, 45, 7, 1], [1, "cs", 2, 45, 6, 1], [1, "cs", 2, 46, 6, 1], [1, "cs", 2, 44, 6, 1], [1, "cs", 2, 44, 8, 1], [1, "cs", 2, 43, 8, 1], [1, "cs", 2, 43, 7, 1], [1, "cs", 2, 43, 6, 1], [1, "cs", 2, 42, 6, 1], [1, "cs", 2, 42, 7, 1], [1, "cs", 2, 42, 8, 1], [1, "cs", 2, 41, 7, 1], [1, "cs", 2, 41, 6, 1], [1, "cs", 2, 40, 6, 1], [1, "cs", 2, 40, 7, 1], [1, "cs", 2, 40, 8, 1], [1, "cs", 2, 39, 8, 1], [1, "cs", 0, 39, 7, 1], [1, "cs", 1, 38, 8, 1], [1, "cs", 2, 39, 6, 1], [1, "cs", 2, 38, 6, 1], [1, "cs", 2, 37, 6, 1], [1, "cs", 2, 38, 7, 1], [1, "cs", 2, 37, 7, 1], [1, "cs", 2, 37, 8, 1], [1, "cs", 2, 37, 10, 1], [1, "cs", 2, 38, 10, 1], [1, "cs", 0, 38, 11, 1], [1, "cs", 0, 38, 17, 1], [1, "cs", 1, 37, 18, 1], [1, "cs", 0, 38, 19, 1], [1, "cs", 2, 37, 11, 1], [1, "cs", 2, 37, 16, 1], [1, "cs", 2, 37, 17, 1], [1, "cs", 2, 38, 18, 1], [1, "cs", 2, 37, 19, 1], [1, "cs", 3, 38, 16, 1], [1, "cs", 0, 37, 21, 1], [1, "cs", 0, 38, 22, 1], [1, "cs", 0, 38, 24, 1], [1, "cs", 2, 37, 20, 1], [1, "cs", 2, 38, 20, 1], [1, "cs", 2, 38, 21, 1], [1, "cs", 1, 37, 23, 1], [1, "cs", 3, 37, 22, 1], [1, "cs", 3, 38, 23, 1], [1, "cs", 2, 37, 24, 1], [1, "cs", 0, 38, 30, 1], [1, "cs", 0, 38, 32, 1], [1, "cs", 0, 37, 31, 1], [1, "cs", 1, 38, 34, 1], [1, "cs", 1, 37, 29, 1], [1, "cs", 2, 38, 29, 1], [1, "cs", 2, 37, 30, 1], [1, "cs", 2, 38, 31, 1], [1, "cs", 2, 37, 32, 1], [1, "cs", 3, 38, 33, 1], [1, "cs", 3, 38, 35, 1], [1, "cs", 2, 37, 33, 1], [1, "cs", 2, 36, 8, 1], [1, "cs", 0, 36, 11, 1], [1, "cs", 0, 35, 9, 1], [1, "cs", 2, 36, 9, 1], [1, "cs", 2, 36, 10, 1], [1, "cs", 2, 35, 10, 1], [1, "cs", 1, 33, 8, 1], [1, "cs", 3, 34, 9, 1], [1, "cs", 3, 35, 8, 1], [1, "cs", 2, 34, 8, 1], [1, "cs", 0, 36, 7, 1], [1, "cs", 1, 34, 7, 1], [1, "cs", 2, 35, 7, 1], [1, "cs", 2, 35, 6, 1], [1, "cs", 2, 36, 6, 1], [1, "cs", 2, 68, 9, 1], [1, "cs", 2, 66, 10, 1], [1, "cs", 3, 66, 9, 1], [1, "cs", 0, 67, 9, 1], [1, "cs", 0, 66, 8, 1], [1, "cs", 2, 67, 8, 1], [1, "cs", 1, 68, 8, 1], [1, "cs", 1, 66, 11, 1], [1, "cs", 2, 67, 10, 1], [1, "cs", 0, 66, 6, 1], [1, "cs", 2, 66, 7, 1], [1, "cs", 2, 67, 7, 1], [1, "cs", 2, 69, 8, 1], [1, "cs", 2, 63, 32, 1], [1, "cs", 2, 62, 34, 1], [1, "cs", 2, 60, 35, 1], [1, "cs", 3, 59, 35, 1], [1, "cs", 0, 61, 35, 1], [1, "cs", 0, 63, 34, 1], [1, "cs", 2, 63, 33, 1], [1, "cs", 2, 63, 35, 1], [1, "cs", 2, 62, 35, 1], [1, "cs", 2, 58, 36, 1], [1, "cs", 1, 59, 36, 1], [1, "cs", 1, 62, 36, 1], [1, "cs", 2, 60, 36, 1], [1, "cs", 2, 61, 34, 1], [1, "cs", 3, 62, 33, 1], [1, "cs", 3, 63, 36, 1], [1, "cs", 3, 61, 36, 1], [1, "cs", 0, 42, 36, 1], [1, "cs", 1, 39, 36, 1], [1, "cs", 2, 41, 36, 1], [1, "cs", 3, 39, 35, 1], [1, "cs", 3, 40, 36, 1], [1, "cs", 3, 43, 36, 1], [1, "cs", 1, 40, 35, 1], [1, "cs", 2, 41, 35, 1], [1, "cs", 2, 40, 34, 1], [1, "cs", 2, 39, 34, 1], [1, "cs", 2, 39, 33, 1], [1, "cs", 2, 39, 32, 1], [1, "cs", 0, 40, 33, 1], [1, "cs", 2, 41, 34, 1], [1, "cs", 1, 44, 36, 1], [1, "cs", 3, 43, 35, 1], [1, "cs", 2, 42, 35, 1], [1, "cs", 0, 37, 34, 1], [1, "cs", 3, 59, 30, 1], [1, "cs", 0, 60, 29, 1], [1, "cs", 2, 60, 28, 1], [1, "cs", 3, 60, 27, 1], [1, "cs", 0, 60, 26, 1], [1, "cs", 2, 54, 25, 1], [1, "cs", 2, 48, 25, 1], [1, "cs", 2, 42, 26, 1], [1, "cs", 0, 55, 25, 1], [1, "cs", 2, 59, 26, 1], [1, "cs", 0, 43, 26, 1], [1, "cs", 1, 42, 27, 1], [1, "cs", 2, 42, 28, 1], [1, "cs", 2, 43, 30, 1], [1, "cs", 0, 42, 29, 1], [1, "cs", 0, 54, 24, 1], [1, "cs", 0, 48, 24, 1], [1, "cs", 2, 54, 23, 1], [1, "cs", 2, 48, 23, 1], [1, "cs", 2, 63, 22, 1], [1, "cs", 2, 63, 21, 1], [1, "cs", 2, 39, 21, 1], [1, "cs", 3, 57, 18, 1], [1, "cs", 2, 56, 18, 1], [1, "cs", 3, 51, 21, 1], [1, "cs", 0, 51, 20, 1], [1, "cs", 2, 51, 19, 1], [1, "cs", 3, 51, 18, 1], [1, "cs", 2, 63, 16, 1], [1, "cs", 2, 63, 10, 1], [1, "cs", 2, 56, 13, 1], [1, "cs", 3, 57, 13, 1], [1, "cs", 1, 45, 18, 1], [1, "cs", 2, 47, 18, 1], [1, "cs", 2, 46, 18, 1], [1, "cs", 0, 46, 13, 1], [1, "cs", 2, 45, 13, 1], [1, "cs", 2, 39, 10, 1], [1, "cs", 2, 39, 16, 1], [1, "cs", 2, 47, 17, 1], [1, "a", 0, 51, 15, 1], [1, "a", 1, 53, 14, 1], [1, "a", 1, 49, 14, 1], [1, "de", 8, 55, 15, 0], [1, "de", 9, 48, 28, 0], [1, "de", 10, 58, 26, 0], [1, "de", 11, 59, 29, 0], [1, "de", 11, 55, 34, 0], [1, "de", 10, 48, 33, 0], [1, "de", 9, 41, 32, 0], [1, "de", 9, 56, 24, 0], [1, "de", 9, 62, 16, 0], [1, "de", 9, 45, 11, 0], [1, "de", 9, 44, 17, 0], [1, "de", 10, 44, 13, 0], [1, "de", 10, 58, 13, 0], [1, "de", 10, 63, 31, 0], [1, "de", 8, 60, 30, 0], [1, "de", 8, 43, 26, 0], [1, "de", 10, 43, 29, 0], [1, "de", 10, 53, 29, 0], [1, "de", 10, 53, 24, 0], [1, "de", 9, 53, 19, 0], [1, "de", 11, 49, 19, 0], [1, "de", 10, 39, 26, 0], [1, "de", 9, 46, 24, 0], [1, "de", 9, 62, 10, 0], [1, "de", 8, 40, 14, 0], [1, "de", 32, 55, 35, 0], [1, "de", 32, 60, 33, 0], [1, "de", 32, 63, 28, 0], [1, "de", 32, 63, 24, 0], [1, "de", 32, 58, 22, 0], [1, "de", 32, 59, 17, 0], [1, "de", 32, 63, 13, 0], [1, "de", 32, 59, 10, 0], [1, "de", 32, 56, 12, 0], [1, "de", 32, 52, 17, 0], [1, "de", 32, 51, 14, 0], [1, "de", 32, 39, 12, 0], [1, "de", 32, 39, 18, 0], [1, "de", 32, 41, 25, 0], [1, "de", 32, 39, 30, 0], [1, "de", 32, 50, 29, 0], [1, "de", 32, 43, 34, 0], [1, "de", 32, 47, 34, 0], [1, "de", 31, 54, 33, 0], [1, "de", 31, 59, 24, 0], [1, "de", 31, 63, 19, 0], [1, "de", 31, 47, 15, 0], [1, "de", 31, 43, 17, 0], [1, "de", 31, 39, 27, 0], [1, "de", 31, 48, 27, 0], [1, "de", 31, 57, 27, 0], [1, "de", 32, 44, 27, 0], [1, "d", 0, 12, 13, 1], [1, "d", 0, 89, 13, 1], [1, "d", 1, 91, 21, 1], [1, "d", 1, 10, 22, 1], [1, "f", 2, 89, 18, 1], [1, "f", 0, 88, 19, 1], [1, "g", 1, 85, 22, 1], [1, "s", 1, 90, 29, 1], [1, "s", 1, 92, 15, 1], [1, "s", 0, 91, 31, 1], [1, "s", 2, 90, 38, 1], [1, "s", 0, 91, 42, 1], [1, "s", 0, 90, 49, 1], [1, "f", 1, 86, 43, 1], [1, "f", 0, 81, 45, 1], [1, "f", 2, 66, 44, 1], [1, "f", 2, 55, 49, 1], [1, "f", 1, 54, 50, 1], [1, "f", 2, 43, 45, 1], [1, "f", 2, 31, 48, 1], [1, "f", 1, 27, 39, 1], [1, "f", 1, 80, 46, 1], [1, "f", 1, 69, 48, 1], [1, "g", 0, 80, 40, 1], [1, "g", 2, 81, 40, 1], [1, "s", 2, 77, 39, 1], [1, "s", 0, 68, 43, 1], [1, "s", 2, 57, 41, 1], [1, "s", 1, 56, 42, 1], [1, "s", 1, 40, 41, 1], [1, "s", 2, 48, 48, 1], [1, "f", 2, 17, 12, 1], [1, "f", 0, 13, 31, 1], [1, "f", 1, 14, 32, 1], [1, "s", 0, 15, 27, 1], [1, "s", 0, 13, 39, 1], [1, "f", 2, 11, 17, 1], [1, "f", 1, 12, 18, 1], [1, "g", 2, 12, 25, 1], [1, "f", 0, 16, 45, 1], [1, "f", 1, 17, 46, 1], [1, "s", 1, 74, 48, 1], [1, "s", 1, 20, 47, 1], [1, "g", 0, 58, 59, 1], [1, "g", 0, 46, 72, 1], [1, "g", 0, 69, 79, 1], [1, "g", 0, 72, 74, 1], [1, "g", 0, 26, 88, 1], [1, "g", 0, 20, 74, 1], [1, "g", 0, 28, 67, 1], [1, "g", 0, 49, 86, 1], [1, "g", 0, 77, 90, 1], [1, "g", 0, 87, 72, 1], [1, "g", 0, 14, 85, 1], [1, "g", 1, 85, 97, 1], [1, "g", 1, 68, 104, 1], [1, "g", 1, 63, 91, 1], [1, "g", 1, 39, 90, 1], [1, "g", 1, 34, 99, 1], [1, "g", 1, 17, 103, 1], [1, "g", 2, 77, 60, 1], [1, "g", 2, 19, 56, 1], [1, "g", 2, 39, 60, 1], [1, "g", 2, 87, 57, 1], [1, "f", 0, 9, 62, 1], [1, "f", 0, 12, 81, 1], [1, "f", 0, 26, 59, 1], [1, "f", 0, 35, 53, 1], [1, "f", 0, 44, 58, 1], [1, "f", 0, 88, 62, 1], [1, "f", 0, 91, 82, 1], [1, "f", 0, 84, 85, 1], [1, "f", 0, 79, 69, 1], [1, "f", 0, 64, 71, 1], [1, "f", 0, 62, 83, 1], [1, "f", 0, 34, 81, 1], [1, "f", 0, 39, 71, 1], [1, "f", 0, 54, 94, 1], [1, "f", 1, 81, 70, 1], [1, "f", 1, 91, 72, 1], [1, "f", 1, 8, 91, 1], [1, "f", 1, 14, 81, 1], [1, "f", 1, 29, 79, 1], [1, "f", 1, 13, 65, 1], [1, "f", 1, 46, 97, 1], [1, "f", 1, 43, 73, 1], [1, "f", 1, 60, 69, 1], [1, "f", 1, 70, 96, 1], [1, "f", 1, 58, 84, 1], [1, "s", 1, 56, 76, 1], [1, "s", 1, 85, 74, 1], [1, "s", 0, 72, 71, 1], [1, "s", 0, 41, 62, 1], [1, "s", 0, 60, 61, 1], [1, "s", 0, 20, 66, 1], [1, "s", 0, 47, 83, 1], [1, "s", 0, 29, 86, 1], [1, "s", 0, 78, 92, 1], [1, "s", 0, 62, 102, 1], [1, "s", 0, 18, 95, 1], [1, "s", 2, 64, 101, 1], [1, "s", 2, 78, 84, 1], [1, "s", 2, 49, 83, 1], [1, "s", 2, 15, 76, 1], [1, "s", 2, 21, 84, 1], [1, "f", 1, 26, 94, 1], [1, "f", 2, 23, 96, 1], [1, "f", 2, 25, 72, 1], [1, "f", 2, 85, 77, 1], [1, "f", 2, 79, 95, 1], [1, "f", 2, 51, 65, 1], [1, "f", 2, 69, 60, 1], [1, "f", 1, 25, 105, 1], [1, "s", 1, 18, 68, 1], [1, "s", 0, 55, 76, 1], [1, "s", 0, 74, 59, 1], [1, "f", 1, 46, 142, 1], [1, "f", 1, 19, 140, 1], [1, "f", 1, 77, 137, 1], [1, "f", 0, 75, 137, 1], [1, "f", 0, 55, 138, 1], [1, "f", 0, 33, 127, 1], [1, "f", 0, 76, 121, 1], [1, "f", 0, 55, 121, 1], [1, "f", 0, 13, 123, 1], [1, "f", 0, 18, 141, 1], [1, "f", 0, 40, 137, 1], [1, "f", 2, 76, 142, 1], [1, "f", 2, 57, 140, 1], [1, "f", 2, 39, 138, 1], [1, "f", 2, 16, 143, 1], [1, "f", 2, 29, 131, 1], [1, "f", 0, 70, 150, 1], [1, "f", 0, 28, 146, 1], [1, "f", 0, 12, 132, 1], [1, "f", 0, 90, 129, 1], [1, "f", 1, 87, 131, 1], [1, "f", 0, 91, 143, 1], [1, "f", 2, 87, 145, 1], [1, "f", 1, 89, 141, 1], [1, "f", 1, 63, 130, 1], [1, "f", 1, 75, 122, 1], [1, "f", 1, 52, 124, 1], [1, "f", 1, 34, 127, 1], [1, "f", 1, 14, 123, 1], [1, "f", 1, 24, 122, 1], [1, "f", 0, 83, 108, 1], [1, "f", 0, 89, 118, 1], [1, "f", 0, 56, 107, 1], [1, "f", 0, 38, 113, 1], [1, "f", 0, 16, 110, 1], [1, "f", 1, 80, 105, 1], [1, "f", 1, 82, 109, 1], [1, "f", 1, 87, 118, 1], [1, "f", 1, 59, 110, 1], [1, "f", 1, 29, 111, 1], [1, "f", 2, 28, 112, 1], [1, "f", 2, 70, 112, 1], [1, "f", 2, 42, 111, 1], [1, "s", 0, 68, 157, 1], [1, "s", 0, 81, 158, 1], [1, "s", 0, 25, 172, 1], [1, "s", 0, 22, 161, 1], [1, "s", 0, 35, 152, 1], [1, "s", 0, 66, 144, 1], [1, "s", 0, 87, 145, 1], [1, "s", 0, 86, 145, 1], [1, "s", 0, 84, 135, 1], [1, "s", 0, 69, 133, 1], [1, "s", 0, 84, 122, 1], [1, "s", 0, 68, 121, 1], [1, "s", 0, 48, 124, 1], [1, "s", 0, 26, 129, 1], [1, "s", 0, 9, 127, 1], [1, "s", 0, 11, 144, 1], [1, "s", 0, 9, 109, 1], [1, "s", 0, 35, 101, 1], [1, "s", 0, 47, 109, 1], [1, "s", 0, 58, 111, 1], [1, "s", 0, 84, 110, 1], [1, "s", 0, 28, 114, 1], [1, "s", 1, 30, 116, 1], [1, "s", 1, 46, 112, 1], [1, "s", 1, 81, 111, 1], [1, "s", 1, 70, 123, 1], [1, "s", 1, 49, 127, 1], [1, "s", 1, 66, 134, 1], [1, "s", 1, 67, 144, 1], [1, "s", 1, 38, 152, 1], [1, "s", 1, 21, 164, 1], [1, "s", 1, 12, 147, 1], [1, "s", 1, 24, 130, 1], [1, "s", 1, 12, 125, 1], [1, "s", 1, 65, 158, 1], [1, "s", 1, 83, 167, 1], [1, "s", 1, 65, 167, 1], [1, "s", 1, 47, 164, 1], [1, "s", 1, 56, 168, 1], [1, "s", 2, 54, 169, 1], [1, "s", 2, 88, 170, 1], [1, "s", 2, 91, 162, 1], [1, "s", 2, 79, 149, 1], [1, "s", 2, 75, 144, 1], [1, "s", 2, 57, 150, 1], [1, "s", 2, 47, 143, 1], [1, "s", 2, 31, 145, 1], [1, "s", 2, 36, 138, 1], [1, "s", 2, 10, 163, 1], [1, "s", 2, 22, 142, 1], [1, "g", 2, 78, 132, 1], [1, "g", 1, 48, 135, 1], [1, "g", 2, 16, 136, 1], [1, "g", 0, 62, 92, 1], [1, "g", 2, 70, 80, 1], [1, "g", 2, 15, 86, 1], [1, "g", 2, 47, 75, 1], [1, "g", 2, 36, 89, 1], [1, "g", 2, 80, 90, 1], [1, "f", 1, 39, 118, 1], [1, "d", 2, 84, 54, 1], [1, "d", 2, 16, 54, 1], [1, "de", 7, 13, 13, 0], [1, "de", 5, 16, 28, 0], [1, "de", 5, 9, 25, 0], [1, "de", 5, 34, 41, 0], [1, "de", 4, 28, 40, 0], [1, "de", 6, 31, 47, 0], [1, "de", 6, 12, 39, 0], [1, "de", 4, 16, 47, 0], [1, "de", 4, 7, 46, 0], [1, "de", 6, 7, 33, 0], [1, "de", 6, 40, 42, 0], [1, "de", 7, 20, 48, 0], [1, "de", 7, 29, 59, 0], [1, "de", 6, 27, 58, 0], [1, "de", 6, 15, 54, 0], [1, "de", 5, 12, 66, 0], [1, "de", 5, 37, 53, 0], [1, "de", 4, 10, 63, 0], [1, "de", 7, 49, 48, 0], [1, "de", 7, 37, 63, 0], [1, "de", 6, 33, 68, 0], [1, "de", 6, 56, 52, 0], [1, "de", 5, 59, 58, 0], [1, "de", 6, 48, 58, 0], [1, "de", 4, 53, 63, 0], [1, "de", 4, 67, 44, 0], [1, "de", 5, 70, 49, 0], [1, "de", 5, 82, 55, 0], [1, "de", 5, 79, 41, 0], [1, "de", 5, 91, 29, 0], [1, "de", 7, 91, 43, 0], [1, "de", 6, 85, 44, 0], [1, "de", 6, 74, 60, 0], [1, "de", 6, 90, 8, 0], [1, "de", 5, 91, 15, 0], [1, "de", 4, 87, 20, 0], [1, "de", 7, 93, 11, 0], [1, "de", 6, 91, 21, 0], [1, "de", 6, 85, 35, 0], [1, "de", 5, 93, 58, 0], [1, "de", 5, 87, 63, 0], [1, "de", 7, 77, 62, 0], [1, "de", 6, 68, 61, 0], [1, "de", 5, 90, 73, 0], [1, "de", 4, 87, 71, 0], [1, "de", 7, 80, 71, 0], [1, "de", 7, 83, 77, 0], [1, "de", 7, 89, 83, 0], [1, "de", 4, 71, 80, 0], [1, "de", 4, 71, 70, 0], [1, "de", 5, 63, 72, 0], [1, "de", 4, 54, 75, 0], [1, "de", 5, 44, 83, 0], [1, "de", 5, 42, 74, 0], [1, "de", 5, 15, 81, 0], [1, "de", 4, 29, 80, 0], [1, "de", 4, 37, 90, 0], [1, "de", 4, 7, 75, 0], [1, "de", 6, 22, 74, 0], [1, "de", 6, 43, 95, 0], [1, "de", 6, 57, 85, 0], [1, "de", 6, 19, 94, 0], [1, "de", 6, 9, 92, 0], [1, "de", 5, 26, 89, 0], [1, "de", 5, 31, 112, 0], [1, "de", 5, 54, 108, 0], [1, "de", 5, 55, 95, 0], [1, "de", 5, 35, 104, 0], [1, "de", 5, 13, 110, 0], [1, "de", 7, 27, 107, 0], [1, "de", 7, 47, 99, 0], [1, "de", 7, 11, 104, 0], [1, "de", 7, 9, 111, 0], [1, "de", 7, 40, 114, 0], [1, "de", 7, 28, 117, 0], [1, "de", 7, 47, 113, 0], [1, "de", 7, 63, 104, 0], [1, "de", 4, 64, 92, 0], [1, "de", 6, 86, 97, 0], [1, "de", 5, 76, 91, 0], [1, "de", 5, 85, 86, 0], [1, "de", 6, 78, 83, 0], [1, "de", 6, 71, 97, 0], [1, "de", 4, 69, 105, 0], [1, "de", 4, 79, 104, 0], [1, "de", 4, 86, 109, 0], [1, "de", 4, 86, 118, 0], [1, "de", 5, 70, 113, 0], [1, "de", 6, 69, 121, 0], [1, "de", 6, 76, 122, 0], [1, "de", 7, 87, 130, 0], [1, "de", 4, 84, 123, 0], [1, "de", 4, 57, 121, 0], [1, "de", 5, 53, 125, 0], [1, "de", 5, 62, 131, 0], [1, "de", 6, 67, 143, 0], [1, "de", 5, 77, 143, 0], [1, "de", 5, 85, 136, 0], [1, "de", 6, 87, 147, 0], [1, "de", 6, 92, 140, 0], [1, "de", 4, 93, 127, 0], [1, "de", 5, 93, 106, 0], [1, "de", 5, 45, 144, 0], [1, "de", 4, 41, 139, 0], [1, "de", 4, 54, 138, 0], [1, "de", 6, 29, 145, 0], [1, "de", 6, 29, 132, 0], [1, "de", 6, 35, 127, 0], [1, "de", 6, 64, 142, 0], [1, "de", 5, 23, 131, 0], [1, "de", 5, 9, 134, 0], [1, "de", 6, 11, 121, 0], [1, "de", 4, 26, 121, 0], [1, "de", 35, 58, 150, 0], [1, "de", 33, 48, 156, 0], [1, "de", 33, 25, 158, 0], [1, "de", 33, 36, 154, 0], [1, "de", 34, 9, 154, 0], [1, "de", 34, 13, 148, 0], [1, "de", 34, 21, 142, 0], [1, "de", 34, 38, 139, 0], [1, "de", 34, 47, 144, 0], [1, "de", 34, 68, 142, 0], [1, "de", 36, 70, 135, 0], [1, "de", 36, 64, 132, 0], [1, "de", 36, 86, 134, 0], [1, "de", 36, 90, 141, 0], [1, "de", 36, 93, 131, 0], [1, "de", 36, 91, 125, 0], [1, "de", 36, 76, 123, 0], [1, "de", 33, 82, 122, 0], [1, "de", 35, 56, 122, 0], [1, "de", 35, 40, 119, 0], [1, "de", 35, 17, 112, 0], [1, "de", 35, 37, 102, 0], [1, "de", 33, 18, 97, 0], [1, "de", 34, 10, 83, 0], [1, "de", 33, 19, 73, 0], [1, "de", 33, 10, 60, 0], [1, "de", 35, 24, 60, 0], [1, "de", 36, 14, 45, 0], [1, "de", 36, 21, 42, 0], [1, "de", 35, 8, 32, 0], [1, "de", 33, 9, 24, 0], [1, "de", 35, 35, 27, 0], [1, "de", 33, 56, 35, 0], [1, "de", 36, 53, 36, 0], [1, "de", 33, 45, 35, 0], [1, "de", 35, 53, 39, 0], [1, "de", 36, 57, 30, 0], [1, "de", 33, 86, 108, 0], [1, "de", 33, 68, 112, 0], [1, "de", 33, 49, 109, 0], [1, "de", 33, 46, 95, 0], [1, "de", 33, 90, 76, 0], [1, "de", 36, 76, 83, 0], [1, "de", 36, 70, 72, 0], [1, "de", 36, 78, 63, 0], [1, "de", 36, 90, 64, 0], [1, "de", 36, 60, 70, 0], [1, "de", 35, 75, 90, 0], [1, "de", 35, 81, 58, 0], [1, "de", 35, 91, 51, 0], [1, "de", 35, 93, 56, 0], [1, "de", 35, 61, 60, 0], [1, "de", 35, 66, 46, 0], [1, "de", 33, 90, 19, 0], [1, "de", 34, 92, 9, 0], [1, "de", 35, 75, 39, 0], [1, "de", 35, 67, 42, 0], [1, "de", 35, 93, 37, 0], [1, "de", 36, 89, 28, 0], [1, "de", 36, 42, 61, 0], [1, "de", 33, 49, 50, 0], [1, "de", 33, 44, 75, 0], [1, "de", 33, 46, 85, 0], [1, "de", 33, 64, 84, 0], [1, "de", 33, 56, 94, 0], [1, "de", 33, 25, 90, 0], [1, "de", 33, 31, 69, 0], [1, "de", 35, 34, 54, 0], [1, "de", 35, 29, 47, 0], [1, "de", 36, 42, 41, 0], [1, "de", 36, 29, 34, 0], [1, "de", 35, 20, 55, 0], [1, "de", 35, 14, 52, 0], [1, "s", 2, 12, 171, 1], [1, "r", 20, 188, 0], [1, "r", 21, 188, 0], [1, "r", 22, 188, 0], [1, "r", 23, 188, 0], [1, "r", 24, 188, 0], [1, "r", 25, 189, 0], [1, "r", 24, 189, 0], [1, "r", 23, 189, 0], [1, "r", 22, 189, 0], [1, "r", 21, 189, 0], [1, "r", 20, 189, 0], [1, "r", 19, 189, 0], [1, "r", 19, 190, 0], [1, "r", 19, 191, 0], [1, "r", 20, 191, 0], [1, "r", 21, 191, 0], [1, "r", 22, 191, 0], [1, "r", 24, 191, 0], [1, "r", 23, 191, 0], [1, "r", 25, 191, 0], [1, "r", 25, 190, 0], [1, "r", 24, 190, 0], [1, "r", 23, 190, 0], [1, "r", 22, 190, 0], [1, "r", 21, 190, 0], [1, "r", 20, 190, 0], [1, "r", 26, 190, 0], [1, "r", 26, 191, 0], [1, "r", 24, 193, 0], [1, "r", 23, 193, 0], [1, "r", 22, 193, 0], [1, "r", 20, 192, 0], [1, "r", 21, 192, 0], [1, "r", 22, 192, 0], [1, "r", 23, 192, 0], [1, "r", 24, 192, 0], [1, "r", 25, 192, 0], [1, "r", 53, 199, 0], [1, "r", 52, 200, 0], [1, "r", 54, 199, 0], [1, "r", 55, 199, 0], [1, "r", 55, 200, 0], [1, "r", 54, 200, 0], [1, "r", 53, 200, 0], [1, "r", 51, 200, 0], [1, "r", 56, 200, 0], [1, "r", 55, 201, 0], [1, "r", 54, 201, 0], [1, "r", 55, 202, 0], [1, "r", 54, 203, 0], [1, "r", 54, 204, 0], [1, "r", 54, 202, 0], [1, "r", 53, 202, 0], [1, "r", 52, 202, 0], [1, "r", 53, 201, 0], [1, "r", 52, 201, 0], [1, "r", 51, 201, 0], [1, "r", 51, 202, 0], [1, "r", 50, 202, 0], [1, "r", 50, 201, 0], [1, "r", 56, 201, 0], [1, "r", 53, 203, 0], [1, "r", 52, 203, 0], [1, "r", 51, 203, 0], [1, "r", 56, 202, 0], [1, "r", 55, 203, 0], [1, "r", 53, 204, 0], [1, "r", 52, 204, 0], [1, "r", 55, 204, 0], [1, "r", 56, 203, 0], [1, "r", 56, 244, 0], [1, "r", 54, 246, 0], [1, "r", 50, 248, 0], [1, "r", 48, 248, 0], [1, "r", 43, 248, 0], [1, "r", 45, 238, 0], [1, "r", 44, 238, 0], [1, "r", 43, 238, 0], [1, "r", 46, 238, 0], [1, "r", 47, 238, 0], [1, "r", 48, 238, 0], [1, "r", 49, 238, 0], [1, "r", 50, 238, 0], [1, "r", 51, 238, 0], [1, "r", 52, 238, 0], [1, "r", 53, 238, 0], [1, "r", 54, 239, 0], [1, "r", 53, 240, 0], [1, "r", 53, 239, 0], [1, "r", 52, 239, 0], [1, "r", 51, 239, 0], [1, "r", 50, 239, 0], [1, "r", 49, 239, 0], [1, "r", 48, 239, 0], [1, "r", 47, 239, 0], [1, "r", 46, 239, 0], [1, "r", 45, 239, 0], [1, "r", 44, 239, 0], [1, "r", 43, 239, 0], [1, "r", 42, 239, 0], [1, "r", 41, 240, 0], [1, "r", 42, 240, 0], [1, "r", 43, 240, 0], [1, "r", 44, 240, 0], [1, "r", 45, 240, 0], [1, "r", 46, 240, 0], [1, "r", 47, 240, 0], [1, "r", 48, 240, 0], [1, "r", 49, 240, 0], [1, "r", 50, 240, 0], [1, "r", 51, 240, 0], [1, "r", 52, 240, 0], [1, "r", 54, 240, 0], [1, "r", 55, 240, 0], [1, "r", 56, 241, 0], [1, "r", 55, 241, 0], [1, "r", 54, 241, 0], [1, "r", 53, 241, 0], [1, "r", 52, 241, 0], [1, "r", 51, 241, 0], [1, "r", 49, 241, 0], [1, "r", 50, 241, 0], [1, "r", 48, 241, 0], [1, "r", 47, 241, 0], [1, "r", 46, 241, 0], [1, "r", 45, 241, 0], [1, "r", 44, 241, 0], [1, "r", 43, 241, 0], [1, "r", 42, 241, 0], [1, "r", 41, 241, 0], [1, "r", 40, 242, 0], [1, "r", 41, 242, 0], [1, "r", 42, 242, 0], [1, "r", 43, 242, 0], [1, "r", 44, 242, 0], [1, "r", 45, 242, 0], [1, "r", 46, 242, 0], [1, "r", 47, 242, 0], [1, "r", 48, 242, 0], [1, "r", 49, 242, 0], [1, "r", 50, 242, 0], [1, "r", 51, 242, 0], [1, "r", 52, 242, 0], [1, "r", 53, 242, 0], [1, "r", 54, 242, 0], [1, "r", 55, 242, 0], [1, "r", 56, 242, 0], [1, "r", 56, 243, 0], [1, "r", 55, 243, 0], [1, "r", 54, 243, 0], [1, "r", 53, 243, 0], [1, "r", 52, 243, 0], [1, "r", 51, 243, 0], [1, "r", 50, 243, 0], [1, "r", 49, 243, 0], [1, "r", 48, 243, 0], [1, "r", 47, 243, 0], [1, "r", 46, 243, 0], [1, "r", 45, 243, 0], [1, "r", 44, 243, 0], [1, "r", 43, 243, 0], [1, "r", 42, 243, 0], [1, "r", 41, 243, 0], [1, "r", 40, 243, 0], [1, "r", 40, 244, 0], [1, "r", 41, 244, 0], [1, "r", 43, 244, 0], [1, "r", 44, 244, 0], [1, "r", 45, 244, 0], [1, "r", 46, 244, 0], [1, "r", 47, 244, 0], [1, "r", 48, 244, 0], [1, "r", 49, 244, 0], [1, "r", 50, 244, 0], [1, "r", 51, 244, 0], [1, "r", 52, 244, 0], [1, "r", 53, 244, 0], [1, "r", 54, 244, 0], [1, "r", 55, 244, 0], [1, "r", 42, 244, 0], [1, "r", 40, 245, 0], [1, "r", 41, 245, 0], [1, "r", 42, 245, 0], [1, "r", 43, 245, 0], [1, "r", 44, 245, 0], [1, "r", 45, 245, 0], [1, "r", 46, 245, 0], [1, "r", 47, 245, 0], [1, "r", 48, 245, 0], [1, "r", 49, 245, 0], [1, "r", 50, 245, 0], [1, "r", 51, 245, 0], [1, "r", 52, 246, 0], [1, "r", 52, 245, 0], [1, "r", 53, 245, 0], [1, "r", 54, 245, 0], [1, "r", 55, 245, 0], [1, "r", 53, 246, 0], [1, "r", 51, 246, 0], [1, "r", 50, 246, 0], [1, "r", 49, 246, 0], [1, "r", 48, 246, 0], [1, "r", 47, 246, 0], [1, "r", 45, 246, 0], [1, "r", 46, 246, 0], [1, "r", 44, 246, 0], [1, "r", 43, 246, 0], [1, "r", 42, 246, 0], [1, "r", 41, 246, 0], [1, "r", 42, 247, 0], [1, "r", 43, 247, 0], [1, "r", 44, 247, 0], [1, "r", 45, 247, 0], [1, "r", 46, 247, 0], [1, "r", 47, 247, 0], [1, "r", 48, 247, 0], [1, "r", 50, 247, 0], [1, "r", 51, 247, 0], [1, "r", 52, 247, 0], [1, "r", 53, 247, 0], [1, "r", 54, 247, 0], [1, "r", 49, 247, 0], [1, "r", 49, 248, 0], [1, "r", 47, 248, 0], [1, "r", 46, 248, 0], [1, "r", 45, 248, 0], [1, "r", 51, 248, 0], [1, "r", 55, 246, 1], [1, "r", 55, 247, 1], [1, "r", 56, 247, 1], [1, "r", 56, 248, 1], [1, "r", 95, 270, 1], [1, "r", 93, 270, 1], [1, "r", 94, 270, 1], [1, "r", 95, 271, 1], [1, "r", 94, 271, 1], [1, "r", 93, 271, 1], [1, "r", 94, 282, 1], [1, "r", 93, 282, 1], [1, "r", 93, 281, 1], [1, "r", 92, 281, 1], [1, "r", 92, 280, 1], [1, "r", 91, 280, 1], [1, "r", 90, 279, 1], [1, "r", 95, 275, 1], [1, "r", 95, 274, 1], [1, "r", 95, 273, 1], [1, "r", 95, 272, 1], [1, "r", 94, 274, 1], [1, "r", 94, 273, 1], [1, "r", 94, 272, 1], [1, "r", 93, 272, 1], [1, "r", 93, 273, 1], [1, "r", 93, 274, 1], [1, "r", 92, 273, 1], [1, "r", 92, 272, 1], [1, "r", 92, 270, 1], [1, "r", 92, 271, 1], [1, "r", 92, 269, 1], [1, "r", 90, 269, 1], [1, "r", 91, 269, 1], [1, "r", 91, 271, 1], [1, "r", 91, 270, 1], [1, "r", 95, 278, 1], [1, "r", 95, 277, 1], [1, "r", 95, 276, 1], [1, "r", 94, 276, 1], [1, "r", 94, 275, 1], [1, "r", 93, 275, 1], [1, "r", 92, 274, 1], [1, "r", 92, 275, 1], [1, "r", 91, 275, 1], [1, "r", 90, 275, 1], [1, "r", 89, 274, 1], [1, "r", 90, 274, 1], [1, "r", 89, 275, 1], [1, "r", 88, 274, 1], [1, "r", 88, 273, 1], [1, "r", 86, 272, 1], [1, "r", 85, 271, 1], [1, "r", 86, 271, 1], [1, "r", 87, 272, 1], [1, "r", 55, 248, 1], [1, "r", 54, 248, 1], [1, "r", 56, 249, 1], [1, "r", 55, 249, 1], [1, "r", 55, 250, 1], [1, "r", 56, 250, 1], [1, "r", 57, 250, 1], [1, "r", 57, 249, 1], [1, "r", 59, 250, 1], [1, "r", 58, 250, 1], [1, "r", 60, 250, 1], [1, "r", 61, 251, 1], [1, "r", 60, 251, 1], [1, "r", 62, 251, 1], [1, "r", 62, 252, 1], [1, "r", 63, 252, 1], [1, "r", 58, 251, 1], [1, "r", 57, 251, 1], [1, "r", 56, 251, 1], [1, "r", 58, 252, 1], [1, "r", 57, 252, 1], [1, "r", 57, 253, 1], [1, "r", 58, 253, 1], [1, "r", 58, 254, 1], [1, "r", 59, 255, 1], [1, "r", 58, 255, 1], [1, "r", 57, 254, 1], [1, "r", 56, 252, 1], [1, "r", 55, 251, 1], [1, "r", 60, 255, 1], [1, "r", 61, 255, 1], [1, "r", 61, 256, 1], [1, "r", 60, 256, 1], [1, "r", 62, 256, 1], [1, "r", 62, 257, 1], [1, "r", 61, 257, 1], [1, "r", 64, 253, 1], [1, "r", 64, 254, 1], [1, "r", 65, 254, 1], [1, "r", 61, 250, 1], [1, "r", 64, 252, 1], [1, "r", 65, 253, 1], [1, "r", 66, 254, 1], [1, "r", 65, 255, 1], [1, "r", 64, 255, 1], [1, "r", 64, 256, 1], [1, "r", 65, 256, 1], [1, "r", 65, 257, 1], [1, "r", 64, 257, 1], [1, "r", 63, 257, 1], [1, "r", 62, 258, 1], [1, "r", 63, 258, 1], [1, "r", 64, 258, 1], [1, "r", 66, 255, 1], [1, "r", 66, 256, 1], [1, "r", 66, 257, 1], [1, "r", 66, 258, 1], [1, "r", 65, 258, 1], [1, "r", 67, 258, 1], [1, "r", 67, 257, 1], [1, "r", 67, 259, 1], [1, "r", 66, 259, 1], [1, "r", 65, 259, 1], [1, "r", 56, 246, 1], [1, "r", 56, 245, 1], [1, "r", 68, 258, 1], [1, "r", 68, 259, 1], [1, "r", 68, 260, 1], [1, "r", 69, 260, 1], [1, "r", 69, 261, 1], [1, "r", 70, 261, 1], [1, "r", 71, 261, 1], [1, "r", 67, 260, 1], [1, "r", 89, 269, 1], [1, "r", 89, 268, 1], [1, "r", 90, 268, 1], [1, "r", 82, 267, 1], [1, "r", 83, 267, 1], [1, "r", 80, 266, 1], [1, "r", 81, 266, 1], [1, "r", 81, 267, 1], [1, "r", 79, 266, 1], [1, "r", 78, 265, 1], [1, "r", 77, 265, 1], [1, "r", 76, 264, 1], [1, "r", 75, 264, 1], [1, "r", 75, 263, 1], [1, "r", 74, 263, 1], [1, "r", 74, 262, 1], [1, "r", 72, 262, 1], [1, "r", 73, 262, 1], [1, "r", 71, 262, 1], [1, "r", 85, 270, 1], [1, "r", 84, 270, 1], [1, "r", 84, 269, 1], [1, "r", 83, 269, 1], [1, "r", 82, 269, 1], [1, "r", 81, 269, 1], [1, "r", 81, 268, 1], [1, "r", 82, 268, 1], [1, "r", 83, 268, 1], [1, "r", 80, 268, 1], [1, "r", 80, 267, 1], [1, "r", 79, 267, 1], [1, "r", 78, 266, 1], [1, "r", 76, 265, 1], [1, "r", 75, 262, 1], [1, "r", 90, 280, 1], [1, "r", 89, 280, 1], [1, "r", 89, 279, 1], [1, "r", 88, 279, 1], [1, "r", 88, 278, 1], [1, "r", 87, 277, 1], [1, "r", 86, 276, 1], [1, "r", 86, 275, 1], [1, "r", 86, 274, 1], [1, "r", 86, 273, 1], [1, "r", 85, 273, 1], [1, "r", 85, 272, 1], [1, "r", 85, 274, 1], [1, "r", 86, 277, 1], [1, "r", 87, 278, 1], [1, "r", 84, 271, 1], [1, "r", 83, 270, 1], [1, "r", 87, 273, 1], [1, "r", 91, 274, 1], [1, "r", 89, 273, 1], [1, "r", 88, 272, 1], [1, "r", 91, 281, 1], [1, "r", 92, 282, 1], [1, "r", 88, 280, 1], [1, "r", 87, 279, 1], [1, "r", 85, 275, 1], [1, "r", 84, 273, 1], [1, "r", 84, 272, 1], [1, "r", 83, 271, 1], [1, "r", 82, 270, 1], [1, "r", 84, 267, 0], [1, "r", 85, 267, 0], [1, "r", 76, 262, 0], [1, "r", 77, 262, 0], [1, "r", 88, 268, 0], [1, "r", 78, 262, 0], [1, "r", 79, 262, 0], [1, "r", 80, 262, 0], [1, "r", 80, 263, 0], [1, "r", 81, 263, 0], [1, "r", 82, 263, 0], [1, "r", 83, 263, 0], [1, "r", 84, 263, 0], [1, "r", 85, 263, 0], [1, "r", 88, 262, 0], [1, "r", 89, 262, 0], [1, "r", 90, 262, 0], [1, "r", 87, 262, 0], [1, "r", 86, 262, 0], [1, "r", 86, 263, 0], [1, "r", 87, 263, 0], [1, "r", 91, 262, 0], [1, "r", 95, 262, 0], [1, "r", 94, 262, 0], [1, "r", 86, 267, 0], [1, "r", 87, 267, 0], [1, "r", 87, 268, 0], [1, "r", 86, 268, 0], [1, "r", 74, 189, 0], [1, "r", 75, 189, 0], [1, "r", 76, 189, 0], [1, "r", 77, 189, 0], [1, "r", 78, 190, 0], [1, "r", 77, 190, 0], [1, "r", 75, 190, 0], [1, "r", 76, 190, 0], [1, "r", 74, 190, 0], [1, "r", 73, 190, 0], [1, "r", 78, 191, 0], [1, "r", 76, 191, 0], [1, "r", 77, 191, 0], [1, "r", 75, 191, 0], [1, "r", 74, 191, 0], [1, "r", 78, 192, 0], [1, "r", 77, 192, 0], [1, "r", 76, 192, 0], [1, "r", 75, 192, 0], [1, "r", 74, 192, 0], [1, "r", 73, 191, 0], [1, "f", 1, 96, 22, 1], [1, "s", 1, 97, 22, 1], [1, "f", 1, 98, 22, 1], [1, "s", 0, 99, 22, 1], [1, "s", 1, 100, 21, 1], [1, "s", 1, 96, 49, 1], [1, "s", 1, 100, 50, 1], [1, "s", 0, 99, 49, 1], [1, "s", 0, 97, 49, 1], [1, "f", 1, 98, 49, 1], [1, "r", 70, 218, 0], [1, "r", 71, 218, 0], [1, "r", 72, 218, 0], [1, "r", 73, 218, 0], [1, "r", 74, 219, 0], [1, "r", 73, 219, 0], [1, "r", 72, 219, 0], [1, "r", 71, 219, 0], [1, "r", 70, 219, 0], [1, "r", 73, 220, 0], [1, "r", 72, 220, 0], [1, "r", 71, 220, 0], [1, "r", 72, 221, 0], [1, "r", 71, 221, 0], [1, "r", 70, 221, 0], [1, "r", 69, 221, 0], [1, "r", 68, 221, 0], [1, "r", 70, 220, 0], [1, "r", 69, 220, 0], [1, "r", 69, 219, 0], [1, "r", 68, 220, 0], [1, "r", 73, 221, 0], [1, "r", 73, 222, 0], [1, "r", 71, 222, 0], [1, "r", 72, 222, 0], [1, "r", 74, 221, 0], [1, "r", 74, 220, 0], [1, "r", 75, 220, 0], [1, "r", 75, 221, 0], [1, "r", 70, 222, 0], [1, "r", 69, 222, 0], [1, "r", 29, 217, 0], [1, "r", 30, 217, 0], [1, "r", 31, 217, 0], [1, "r", 32, 217, 0], [1, "r", 31, 219, 0], [1, "r", 30, 219, 0], [1, "r", 29, 219, 0], [1, "r", 27, 219, 0], [1, "r", 25, 219, 0], [1, "r", 26, 219, 0], [1, "r", 28, 219, 0], [1, "r", 26, 218, 0], [1, "r", 27, 218, 0], [1, "r", 28, 218, 0], [1, "r", 29, 218, 0], [1, "r", 30, 218, 0], [1, "r", 28, 217, 0], [1, "r", 26, 217, 0], [1, "r", 27, 217, 0], [1, "r", 28, 216, 0], [1, "r", 29, 216, 0], [1, "r", 30, 216, 0], [1, "r", 31, 218, 0], [1, "r", 32, 218, 0], [1, "r", 31, 216, 0], [1, "r", 31, 221, 0], [1, "r", 31, 220, 0], [1, "r", 30, 220, 0], [1, "r", 29, 220, 0], [1, "r", 28, 220, 0], [1, "r", 27, 220, 0], [1, "r", 26, 220, 0], [1, "r", 25, 218, 0], [1, "r", 27, 221, 0], [1, "r", 28, 221, 0], [1, "r", 29, 221, 0], [1, "r", 30, 221, 0], [1, "r", 32, 220, 0], [1, "r", 32, 219, 0], [1, "r", 33, 218, 0], [1, "r", 33, 219, 0], [1, "r", 75, 238, 0], [1, "r", 76, 238, 0], [1, "r", 77, 239, 0], [1, "r", 76, 239, 0], [1, "r", 75, 239, 0], [1, "r", 74, 239, 0], [1, "r", 76, 240, 0], [1, "r", 77, 240, 0], [1, "r", 78, 240, 0], [1, "r", 77, 241, 0], [1, "r", 76, 241, 0], [1, "r", 75, 241, 0], [1, "r", 75, 240, 0], [1, "r", 74, 240, 0], [1, "r", 78, 239, 0], [1, "r", 77, 238, 0], [1, "r", 18, 253, 0], [1, "r", 19, 252, 0], [1, "r", 20, 252, 0], [1, "r", 21, 253, 0], [1, "r", 23, 254, 0], [1, "r", 20, 254, 0], [1, "r", 19, 254, 0], [1, "r", 22, 254, 0], [1, "r", 18, 254, 0], [1, "r", 19, 253, 0], [1, "r", 20, 253, 0], [1, "r", 21, 254, 0], [1, "r", 22, 253, 0], [1, "r", 21, 255, 0], [1, "r", 20, 255, 0], [1, "r", 19, 255, 0], [1, "r", 18, 255, 0], [1, "r", 17, 255, 0], [1, "r", 17, 254, 0], [1, "r", 22, 255, 0], [1, "r", 19, 256, 0], [1, "r", 20, 256, 0], [1, "r", 21, 256, 0], [1, "r", 39, 270, 0], [1, "r", 40, 270, 0], [1, "r", 41, 270, 0], [1, "r", 43, 270, 0], [1, "r", 44, 270, 0], [1, "r", 46, 270, 0], [1, "r", 42, 270, 0], [1, "r", 45, 270, 0], [1, "r", 44, 269, 0], [1, "r", 43, 269, 0], [1, "r", 42, 269, 0], [1, "r", 40, 269, 0], [1, "r", 41, 269, 0], [1, "r", 45, 271, 0], [1, "r", 44, 271, 0], [1, "r", 43, 271, 0], [1, "r", 42, 271, 0], [1, "r", 41, 271, 0], [1, "r", 40, 271, 0], [1, "r", 39, 271, 0], [1, "r", 46, 271, 0], [1, "r", 45, 272, 0], [1, "r", 44, 272, 0], [1, "r", 43, 272, 0], [1, "r", 42, 272, 0], [1, "r", 19, 284, 0], [1, "r", 20, 284, 0], [1, "r", 21, 285, 0], [1, "r", 22, 285, 0], [1, "r", 23, 286, 0], [1, "r", 22, 288, 0], [1, "r", 20, 288, 0], [1, "r", 18, 288, 0], [1, "r", 17, 287, 0], [1, "r", 16, 287, 0], [1, "r", 16, 286, 0], [1, "r", 17, 286, 0], [1, "r", 18, 286, 0], [1, "r", 19, 286, 0], [1, "r", 20, 286, 0], [1, "r", 21, 286, 0], [1, "r", 22, 286, 0], [1, "r", 20, 285, 0], [1, "r", 19, 285, 0], [1, "r", 18, 285, 0], [1, "r", 17, 285, 0], [1, "r", 19, 287, 0], [1, "r", 18, 287, 0], [1, "r", 20, 287, 0], [1, "r", 21, 287, 0], [1, "r", 22, 287, 0], [1, "r", 23, 287, 0], [1, "r", 21, 288, 0], [1, "r", 19, 288, 0], [1, "r", 17, 288, 0], [1, "r", 19, 289, 0], [1, "r", 21, 289, 0], [1, "r", 22, 289, 0], [1, "r", 20, 289, 0], [1, "r", 23, 288, 0], [1, "r", 24, 287, 0], [1, "r", 24, 286, 0], [1, "r", 23, 285, 0], [1, "r", 66, 286, 0], [1, "r", 64, 287, 0], [1, "r", 63, 287, 0], [1, "r", 60, 287, 0], [1, "r", 59, 285, 0], [1, "r", 58, 284, 0], [1, "r", 59, 283, 0], [1, "r", 65, 283, 0], [1, "r", 64, 283, 0], [1, "r", 63, 283, 0], [1, "r", 62, 283, 0], [1, "r", 61, 283, 0], [1, "r", 60, 283, 0], [1, "r", 59, 284, 0], [1, "r", 58, 285, 0], [1, "r", 60, 286, 0], [1, "r", 59, 286, 0], [1, "r", 61, 287, 0], [1, "r", 62, 287, 0], [1, "r", 61, 286, 0], [1, "r", 62, 286, 0], [1, "r", 63, 286, 0], [1, "r", 64, 286, 0], [1, "r", 65, 286, 0], [1, "r", 67, 285, 0], [1, "r", 66, 285, 0], [1, "r", 65, 285, 0], [1, "r", 64, 285, 0], [1, "r", 63, 285, 0], [1, "r", 62, 285, 0], [1, "r", 61, 285, 0], [1, "r", 60, 285, 0], [1, "r", 60, 284, 0], [1, "r", 61, 284, 0], [1, "r", 62, 284, 0], [1, "r", 63, 284, 0], [1, "r", 64, 284, 0], [1, "r", 65, 284, 0], [1, "r", 66, 284, 0], [1, "r", 65, 287, 0], [1, "r", 67, 286, 0], [1, "p", 0, 13, 189, 1], [1, "p", 0, 32, 184, 1], [1, "p", 0, 47, 191, 1], [1, "p", 0, 64, 184, 1], [1, "p", 0, 84, 192, 1], [1, "p", 0, 78, 207, 1], [1, "p", 0, 58, 216, 1], [1, "p", 0, 41, 211, 1], [1, "p", 0, 18, 211, 1], [1, "p", 0, 14, 230, 1], [1, "p", 0, 29, 237, 1], [1, "p", 0, 50, 230, 1], [1, "p", 0, 78, 241, 1], [1, "p", 0, 74, 256, 1], [1, "p", 0, 68, 266, 1], [1, "p", 0, 48, 259, 1], [1, "p", 0, 31, 263, 1], [1, "p", 0, 18, 274, 1], [1, "p", 0, 33, 283, 1], [1, "p", 0, 66, 287, 1], [1, "p", 0, 82, 291, 1], [1, "p", 0, 16, 295, 1], [1, "p", 0, 45, 294, 1], [1, "p", 0, 18, 252, 1], [1, "p", 0, 79, 227, 1], [1, "p", 0, 32, 200, 1], [1, "p", 0, 64, 200, 1], [1, "s", 0, 21, 193, 1], [1, "s", 1, 18, 189, 1], [1, "s", 2, 26, 189, 1], [1, "b", 1, 15, 181, 0], [1, "b", 2, 18, 190, 0], [1, "b", 2, 29, 193, 0], [1, "t", 3, 16, 182, 0], [1, "t", 3, 13, 195, 0], [1, "t", 4, 16, 183, 0], [1, "t", 5, 10, 184, 0], [1, "t", 5, 23, 182, 0], [1, "t", 4, 30, 187, 0], [1, "t", 1, 26, 192, 0], [1, "b", 1, 25, 188, 0], [1, "s", 1, 24, 181, 1], [1, "t", 3, 33, 183, 0], [1, "b", 1, 36, 189, 0], [1, "t", 2, 35, 190, 0], [1, "b", 3, 19, 200, 0], [1, "s", 0, 28, 194, 1], [1, "s", 1, 32, 196, 1], [1, "s", 1, 36, 183, 1], [1, "s", 2, 38, 184, 1], [1, "s", 2, 10, 192, 1], [1, "s", 2, 12, 183, 1], [1, "s", 1, 15, 199, 1], [1, "b", 0, 12, 202, 0], [1, "t", 2, 13, 203, 0], [1, "t", 4, 20, 200, 0], [1, "t", 4, 12, 194, 0], [1, "t", 5, 15, 205, 0], [1, "t", 5, 29, 200, 0], [1, "t", 3, 28, 201, 0], [1, "s", 2, 25, 199, 1], [1, "s", 1, 22, 204, 1], [1, "g", 2, 25, 205, 1], [1, "b", 1, 27, 216, 0], [1, "s", 1, 25, 217, 1], [1, "s", 1, 33, 217, 1], [1, "s", 2, 35, 215, 1], [1, "s", 0, 32, 221, 1], [1, "t", 2, 31, 222, 0], [1, "t", 4, 26, 221, 0], [1, "b", 3, 27, 222, 0], [1, "b", 0, 17, 217, 0], [1, "t", 3, 18, 216, 0], [1, "t", 4, 13, 215, 0], [1, "t", 5, 30, 213, 0], [1, "t", 5, 24, 208, 0], [1, "s", 1, 12, 216, 1], [1, "s", 2, 11, 210, 1], [1, "s", 2, 34, 223, 1], [1, "b", 2, 36, 218, 0], [1, "t", 4, 40, 206, 0], [1, "t", 5, 35, 203, 0], [1, "t", 3, 39, 206, 0], [1, "b", 1, 34, 204, 0], [1, "s", 1, 33, 206, 1], [1, "s", 1, 42, 203, 1], [1, "s", 0, 47, 196, 1], [1, "b", 2, 40, 196, 0], [1, "t", 4, 39, 197, 0], [1, "t", 5, 44, 187, 0], [1, "b", 1, 46, 181, 0], [1, "t", 2, 47, 182, 0], [1, "b", 0, 57, 182, 0], [1, "b", 3, 56, 183, 0], [1, "t", 4, 55, 184, 0], [1, "t", 5, 62, 195, 0], [1, "s", 1, 51, 185, 1], [1, "s", 2, 62, 180, 1], [1, "s", 2, 61, 188, 1], [1, "s", 1, 61, 189, 1], [1, "s", 2, 48, 195, 1], [1, "b", 1, 51, 199, 0], [1, "t", 2, 52, 199, 0], [1, "t", 3, 56, 204, 0], [1, "t", 4, 57, 204, 0], [1, "t", 4, 51, 204, 0], [1, "s", 1, 52, 205, 1], [1, "s", 2, 57, 200, 1], [1, "s", 1, 56, 199, 1], [1, "b", 0, 55, 192, 0], [1, "t", 3, 56, 193, 0], [1, "t", 4, 50, 190, 0], [1, "b", 1, 76, 188, 0], [1, "t", 2, 75, 188, 0], [1, "t", 2, 73, 192, 0], [1, "t", 4, 72, 191, 0], [1, "t", 5, 78, 193, 0], [1, "b", 0, 79, 192, 0], [1, "s", 2, 79, 190, 1], [1, "s", 1, 74, 194, 1], [1, "s", 1, 72, 187, 1], [1, "s", 0, 74, 183, 1], [1, "s", 1, 75, 183, 1], [1, "t", 2, 69, 181, 0], [1, "t", 4, 70, 182, 0], [1, "t", 5, 69, 180, 0], [1, "b", 1, 65, 189, 0], [1, "b", 2, 66, 189, 0], [1, "t", 3, 64, 188, 0], [1, "t", 4, 67, 192, 0], [1, "b", 2, 85, 183, 0], [1, "t", 1, 84, 184, 0], [1, "t", 4, 81, 180, 0], [1, "t", 5, 89, 180, 0], [1, "t", 0, 90, 188, 0], [1, "t", 3, 89, 190, 0], [1, "s", 1, 87, 187, 1], [1, "s", 2, 87, 197, 1], [1, "b", 1, 84, 200, 0], [1, "t", 2, 83, 201, 0], [1, "t", 4, 87, 207, 0], [1, "s", 2, 79, 202, 1], [1, "s", 1, 80, 203, 1], [1, "t", 0, 71, 200, 0], [1, "b", 2, 72, 201, 0], [1, "t", 2, 65, 205, 0], [1, "t", 1, 66, 206, 0], [1, "t", 4, 63, 209, 0], [1, "t", 5, 73, 203, 0], [1, "s", 0, 70, 207, 1], [1, "s", 1, 71, 206, 1], [1, "s", 2, 68, 199, 1], [1, "s", 1, 64, 213, 1], [1, "t", 0, 85, 213, 0], [1, "b", 2, 84, 212, 0], [1, "t", 3, 77, 209, 0], [1, "t", 4, 83, 216, 0], [1, "t", 4, 73, 209, 0], [1, "b", 0, 86, 222, 0], [1, "b", 3, 87, 221, 0], [1, "s", 1, 80, 214, 1], [1, "s", 2, 87, 216, 1], [1, "s", 2, 84, 224, 1], [1, "s", 1, 77, 227, 1], [1, "t", 1, 74, 222, 0], [1, "b", 1, 69, 218, 0], [1, "b", 2, 75, 219, 0], [1, "s", 2, 74, 218, 1], [1, "s", 1, 69, 223, 1], [1, "s", 1, 77, 221, 1], [1, "b", 1, 72, 211, 0], [1, "b", 1, 85, 232, 0], [1, "t", 2, 84, 233, 0], [1, "t", 2, 78, 238, 0], [1, "b", 1, 77, 237, 0], [1, "t", 5, 87, 236, 0], [1, "t", 5, 76, 229, 0], [1, "b", 2, 74, 241, 0], [1, "s", 0, 73, 242, 1], [1, "s", 0, 81, 238, 1], [1, "s", 1, 82, 237, 1], [1, "s", 2, 72, 237, 1], [1, "s", 2, 78, 242, 1], [1, "b", 1, 66, 230, 0], [1, "b", 2, 62, 229, 0], [1, "t", 4, 67, 231, 0], [1, "t", 4, 62, 228, 0], [1, "t", 5, 64, 233, 0], [1, "t", 2, 65, 234, 0], [1, "t", 2, 51, 220, 0], [1, "t", 1, 50, 218, 0], [1, "b", 1, 45, 223, 0], [1, "b", 2, 46, 224, 0], [1, "t", 4, 49, 218, 0], [1, "t", 4, 47, 225, 0], [1, "s", 1, 50, 215, 1], [1, "s", 2, 51, 213, 1], [1, "s", 2, 42, 227, 1], [1, "s", 1, 44, 227, 1], [1, "s", 1, 60, 230, 1], [1, "s", 2, 59, 231, 1], [1, "b", 1, 85, 252, 0], [1, "t", 2, 84, 251, 0], [1, "t", 2, 74, 250, 0], [1, "t", 0, 75, 251, 0], [1, "b", 0, 83, 246, 0], [1, "t", 3, 82, 247, 0], [1, "t", 4, 81, 259, 0], [1, "t", 4, 69, 249, 0], [1, "t", 5, 87, 246, 0], [1, "t", 5, 75, 252, 0], [1, "s", 1, 79, 257, 1], [1, "s", 2, 78, 249, 1], [1, "s", 2, 80, 258, 1], [1, "s", 1, 88, 254, 1], [1, "s", 1, 85, 264, 1], [1, "s", 2, 89, 263, 1], [1, "s", 2, 87, 269, 1], [1, "s", 0, 84, 268, 1], [1, "s", 2, 76, 267, 1], [1, "s", 1, 66, 261, 1], [1, "s", 1, 87, 274, 1], [1, "s", 1, 76, 263, 1], [1, "s", 1, 59, 251, 1], [1, "s", 0, 59, 252, 1], [1, "t", 2, 86, 265, 0], [1, "t", 0, 78, 270, 0], [1, "t", 2, 79, 271, 0], [1, "t", 0, 77, 260, 0], [1, "t", 3, 78, 261, 0], [1, "b", 1, 71, 264, 0], [1, "b", 1, 88, 269, 0], [1, "t", 5, 84, 264, 0], [1, "t", 5, 79, 261, 0], [1, "t", 5, 72, 265, 0], [1, "t", 5, 77, 270, 0], [1, "t", 0, 87, 261, 0], [1, "t", 2, 86, 260, 0], [1, "t", 4, 84, 255, 0], [1, "t", 4, 68, 255, 0], [1, "t", 1, 67, 254, 0], [1, "t", 2, 65, 262, 0], [1, "t", 1, 57, 260, 0], [1, "t", 2, 58, 259, 0], [1, "b", 1, 63, 256, 0], [1, "b", 1, 52, 248, 0], [1, "t", 2, 53, 248, 0], [1, "s", 1, 50, 253, 1], [1, "s", 2, 67, 263, 1], [1, "s", 2, 52, 252, 1], [1, "s", 2, 71, 244, 1], [1, "b", 0, 57, 245, 0], [1, "t", 2, 58, 244, 0], [1, "b", 1, 53, 237, 0], [1, "t", 2, 54, 237, 0], [1, "t", 2, 41, 238, 0], [1, "t", 1, 42, 237, 0], [1, "t", 5, 57, 235, 0], [1, "t", 5, 60, 246, 0], [1, "t", 5, 50, 252, 0], [1, "t", 1, 42, 248, 0], [1, "b", 1, 43, 249, 0], [1, "b", 3, 37, 243, 0], [1, "s", 0, 50, 236, 1], [1, "s", 2, 39, 247, 1], [1, "s", 2, 51, 235, 1], [1, "s", 2, 60, 243, 1], [1, "s", 2, 36, 240, 1], [1, "s", 2, 43, 254, 1], [1, "s", 1, 42, 254, 1], [1, "t", 1, 38, 233, 0], [1, "t", 2, 35, 235, 0], [1, "t", 4, 33, 228, 0], [1, "t", 4, 33, 245, 0], [1, "t", 4, 43, 235, 0], [1, "t", 5, 45, 249, 0], [1, "t", 5, 41, 253, 0], [1, "b", 1, 20, 227, 0], [1, "b", 1, 14, 240, 0], [1, "t", 3, 21, 227, 0], [1, "t", 3, 27, 234, 0], [1, "t", 3, 15, 241, 0], [1, "t", 3, 12, 229, 0], [1, "t", 4, 17, 224, 0], [1, "t", 4, 11, 231, 0], [1, "t", 4, 22, 238, 0], [1, "t", 4, 11, 239, 0], [1, "t", 1, 22, 243, 0], [1, "b", 2, 23, 242, 0], [1, "s", 1, 23, 238, 1], [1, "s", 1, 22, 228, 1], [1, "s", 2, 24, 228, 1], [1, "s", 2, 21, 236, 1], [1, "s", 0, 13, 228, 1], [1, "s", 0, 16, 242, 1], [1, "s", 1, 15, 244, 1], [1, "s", 1, 34, 236, 1], [1, "t", 1, 26, 249, 0], [1, "t", 1, 22, 256, 0], [1, "t", 2, 23, 255, 0], [1, "b", 1, 17, 256, 0], [1, "b", 2, 18, 256, 0], [1, "s", 0, 21, 252, 1], [1, "s", 2, 20, 250, 1], [1, "s", 2, 23, 259, 1], [1, "s", 1, 13, 257, 1], [1, "t", 1, 31, 254, 0], [1, "t", 2, 32, 254, 0], [1, "t", 4, 28, 254, 0], [1, "t", 4, 34, 258, 0], [1, "t", 0, 29, 260, 0], [1, "b", 2, 30, 261, 0], [1, "t", 0, 43, 262, 0], [1, "t", 2, 42, 263, 0], [1, "t", 4, 46, 264, 0], [1, "b", 1, 39, 265, 0], [1, "b", 1, 58, 267, 0], [1, "t", 2, 57, 268, 0], [1, "t", 4, 62, 270, 0], [1, "t", 5, 52, 273, 0], [1, "s", 1, 52, 269, 1], [1, "s", 1, 41, 272, 1], [1, "s", 2, 41, 274, 1], [1, "t", 2, 42, 268, 0], [1, "t", 0, 43, 268, 0], [1, "b", 1, 46, 272, 0], [1, "b", 1, 14, 265, 0], [1, "t", 2, 15, 266, 0], [1, "t", 4, 19, 264, 0], [1, "t", 4, 29, 263, 0], [1, "t", 4, 11, 269, 0], [1, "t", 1, 29, 271, 0], [1, "b", 2, 28, 272, 0], [1, "t", 2, 24, 267, 0], [1, "t", 2, 20, 279, 0], [1, "t", 0, 19, 278, 0], [1, "t", 3, 13, 278, 0], [1, "b", 0, 21, 284, 0], [1, "b", 0, 18, 289, 0], [1, "t", 2, 20, 283, 0], [1, "t", 2, 19, 290, 0], [1, "t", 4, 19, 283, 0], [1, "t", 4, 20, 290, 0], [1, "s", 1, 16, 285, 1], [1, "s", 1, 24, 288, 1], [1, "s", 2, 26, 287, 1], [1, "s", 2, 16, 278, 1], [1, "s", 1, 21, 268, 1], [1, "s", 2, 19, 268, 1], [1, "t", 0, 12, 294, 0], [1, "b", 1, 13, 295, 0], [1, "t", 3, 13, 291, 0], [1, "t", 3, 10, 299, 0], [1, "t", 4, 11, 287, 0], [1, "t", 4, 17, 298, 0], [1, "t", 1, 27, 294, 0], [1, "b", 2, 26, 295, 0], [1, "t", 3, 33, 297, 0], [1, "b", 1, 48, 278, 0], [1, "b", 0, 46, 280, 0], [1, "b", 2, 50, 280, 0], [1, "t", 0, 44, 282, 0], [1, "b", 1, 49, 283, 0], [1, "b", 0, 51, 278, 0], [1, "b", 3, 50, 279, 0], [1, "b", 3, 44, 284, 0], [1, "b", 0, 47, 284, 0], [1, "b", 2, 42, 283, 0], [1, "t", 4, 51, 277, 0], [1, "b", 1, 44, 286, 0], [1, "b", 2, 46, 286, 0], [1, "b", 1, 42, 285, 0], [1, "b", 3, 41, 286, 0], [1, "t", 5, 42, 287, 0], [1, "b", 1, 42, 278, 0], [1, "b", 2, 43, 279, 0], [1, "b", 0, 40, 280, 0], [1, "t", 4, 39, 283, 0], [1, "t", 4, 39, 279, 0], [1, "t", 5, 43, 277, 0], [1, "t", 5, 47, 287, 0], [1, "t", 4, 46, 277, 0], [1, "t", 4, 45, 290, 0], [1, "t", 4, 36, 285, 0], [1, "t", 3, 35, 284, 0], [1, "t", 3, 36, 272, 0], [1, "t", 4, 35, 271, 0], [1, "t", 1, 29, 279, 0], [1, "b", 1, 32, 277, 0], [1, "t", 3, 31, 278, 0], [1, "b", 2, 28, 280, 0], [1, "t", 4, 29, 286, 0], [1, "t", 5, 28, 275, 0], [1, "t", 3, 37, 292, 0], [1, "b", 1, 36, 291, 0], [1, "b", 0, 34, 298, 0], [1, "t", 4, 31, 292, 0], [1, "t", 4, 46, 295, 0], [1, "t", 4, 59, 287, 0], [1, "b", 1, 58, 286, 0], [1, "s", 1, 68, 284, 1], [1, "s", 2, 70, 286, 1], [1, "s", 0, 67, 284, 1], [1, "t", 3, 66, 283, 0], [1, "t", 1, 65, 282, 0], [1, "b", 1, 64, 288, 0], [1, "t", 3, 60, 293, 0], [1, "t", 1, 61, 294, 0], [1, "b", 1, 76, 294, 0], [1, "t", 5, 75, 295, 0], [1, "t", 5, 56, 293, 0], [1, "t", 5, 59, 281, 0], [1, "t", 5, 67, 291, 0], [1, "b", 0, 88, 293, 0], [1, "t", 2, 89, 292, 0], [1, "t", 2, 85, 286, 0], [1, "t", 4, 88, 289, 0], [1, "t", 4, 79, 287, 0], [1, "b", 1, 84, 285, 0], [1, "t", 3, 75, 284, 0], [1, "b", 0, 75, 278, 0], [1, "t", 3, 74, 277, 0], [1, "t", 4, 81, 276, 0], [1, "t", 2, 65, 276, 0], [1, "b", 1, 66, 275, 0], [1, "g", 0, 45, 261, 1], [1, "g", 1, 39, 258, 1], [1, "g", 0, 35, 250, 1], [1, "g", 2, 22, 247, 1], [1, "g", 2, 27, 227, 1], [1, "g", 2, 63, 218, 1], [1, "g", 1, 56, 224, 1], [1, "g", 0, 46, 231, 1], [1, "g", 1, 65, 240, 1], [1, "g", 2, 67, 238, 1], [1, "g", 2, 79, 232, 1], [1, "g", 2, 72, 253, 1], [1, "g", 2, 62, 264, 1], [1, "g", 2, 28, 267, 1], [1, "g", 2, 58, 274, 1], [1, "de", 2, 14, 182, 0], [1, "de", 2, 24, 182, 0], [1, "de", 0, 11, 185, 0], [1, "de", 0, 14, 194, 0], [1, "de", 1, 25, 196, 0], [1, "de", 3, 31, 183, 0], [1, "de", 0, 38, 181, 0], [1, "de", 2, 45, 186, 0], [1, "de", 1, 38, 191, 0], [1, "de", 0, 56, 181, 0], [1, "de", 1, 68, 182, 0], [1, "de", 2, 80, 181, 0], [1, "de", 3, 86, 187, 0], [1, "de", 0, 84, 193, 0], [1, "de", 1, 82, 201, 0], [1, "de", 2, 64, 191, 0], [1, "de", 2, 72, 200, 0], [1, "de", 3, 64, 201, 0], [1, "de", 2, 76, 209, 0], [1, "de", 3, 71, 212, 0], [1, "de", 1, 86, 214, 0], [1, "de", 0, 57, 208, 0], [1, "de", 0, 41, 203, 0], [1, "de", 1, 15, 206, 0], [1, "de", 2, 25, 209, 0], [1, "de", 3, 16, 218, 0], [1, "de", 3, 11, 227, 0], [1, "de", 0, 22, 229, 0], [1, "de", 1, 15, 239, 0], [1, "de", 2, 24, 238, 0], [1, "de", 3, 22, 246, 0], [1, "de", 3, 10, 253, 0], [1, "de", 1, 18, 258, 0], [1, "de", 1, 28, 261, 0], [1, "de", 1, 14, 267, 0], [1, "de", 0, 24, 268, 0], [1, "de", 0, 15, 278, 0], [1, "de", 2, 21, 279, 0], [1, "de", 2, 30, 272, 0], [1, "de", 2, 29, 281, 0], [1, "de", 2, 15, 284, 0], [1, "de", 3, 12, 291, 0], [1, "de", 3, 30, 287, 0], [1, "de", 3, 27, 293, 0], [1, "de", 0, 25, 296, 0], [1, "de", 0, 11, 298, 0], [1, "de", 0, 8, 286, 0], [1, "de", 2, 36, 299, 0], [1, "de", 2, 37, 280, 0], [1, "de", 3, 38, 291, 0], [1, "de", 1, 48, 287, 0], [1, "de", 1, 46, 277, 0], [1, "de", 1, 53, 278, 0], [1, "de", 3, 48, 295, 0], [1, "de", 0, 57, 294, 0], [1, "de", 1, 65, 290, 0], [1, "de", 1, 84, 292, 0], [1, "de", 2, 77, 295, 0], [1, "de", 2, 84, 287, 0], [1, "de", 0, 74, 279, 0], [1, "de", 3, 65, 274, 0], [1, "de", 2, 71, 267, 0], [1, "de", 2, 65, 261, 0], [1, "de", 2, 47, 264, 0], [1, "de", 3, 47, 258, 0], [1, "de", 3, 53, 251, 0], [1, "de", 2, 40, 253, 0], [1, "de", 0, 35, 244, 0], [1, "de", 0, 37, 233, 0], [1, "de", 3, 44, 226, 0], [1, "de", 2, 37, 219, 0], [1, "de", 2, 54, 234, 0], [1, "de", 1, 66, 234, 0], [1, "de", 2, 65, 241, 0], [1, "de", 0, 68, 249, 0], [1, "de", 3, 78, 257, 0], [1, "de", 2, 86, 253, 0], [1, "de", 2, 83, 245, 0], [1, "de", 1, 82, 238, 0], [1, "de", 3, 76, 235, 0], [1, "de", 2, 86, 232, 0], [1, "de", 0, 86, 224, 0], [1, "de", 2, 76, 226, 0], [1, "de", 2, 61, 228, 0], [1, "de", 2, 58, 217, 0], [1, "de", 0, 49, 217, 0], [1, "de", 19, 11, 179, 0], [1, "de", 20, 17, 180, 0], [1, "de", 22, 18, 181, 0], [1, "de", 19, 30, 184, 0], [1, "de", 19, 27, 187, 0], [1, "de", 19, 30, 195, 0], [1, "de", 19, 18, 192, 0], [1, "de", 19, 44, 182, 0], [1, "de", 19, 49, 182, 0], [1, "de", 19, 54, 182, 0], [1, "de", 19, 59, 183, 0], [1, "de", 19, 56, 186, 0], [1, "de", 19, 46, 188, 0], [1, "de", 19, 58, 193, 0], [1, "de", 19, 67, 187, 0], [1, "de", 19, 65, 192, 0], [1, "de", 19, 71, 180, 0], [1, "de", 19, 78, 187, 0], [1, "de", 19, 80, 194, 0], [1, "de", 19, 72, 193, 0], [1, "de", 19, 82, 182, 0], [1, "de", 19, 88, 185, 0], [1, "de", 19, 87, 189, 0], [1, "de", 19, 86, 197, 0], [1, "de", 19, 85, 203, 0], [1, "de", 19, 74, 200, 0], [1, "de", 19, 70, 202, 0], [1, "de", 19, 83, 199, 0], [1, "de", 19, 86, 208, 0], [1, "de", 19, 84, 214, 0], [1, "de", 19, 83, 211, 0], [1, "de", 19, 84, 217, 0], [1, "de", 19, 77, 210, 0], [1, "de", 19, 71, 210, 0], [1, "de", 19, 73, 213, 0], [1, "de", 19, 66, 207, 0], [1, "de", 19, 66, 204, 0], [1, "de", 19, 62, 209, 0], [1, "de", 19, 63, 201, 0], [1, "de", 19, 56, 205, 0], [1, "de", 19, 49, 199, 0], [1, "de", 19, 50, 205, 0], [1, "de", 19, 40, 197, 0], [1, "de", 19, 38, 198, 0], [1, "de", 19, 40, 208, 0], [1, "de", 19, 36, 204, 0], [1, "de", 19, 33, 204, 0], [1, "de", 19, 29, 202, 0], [1, "de", 19, 27, 200, 0], [1, "de", 19, 26, 193, 0], [1, "de", 19, 18, 201, 0], [1, "de", 19, 20, 199, 0], [1, "de", 19, 12, 196, 0], [1, "de", 19, 12, 204, 0], [1, "de", 19, 11, 201, 0], [1, "de", 19, 23, 208, 0], [1, "de", 19, 31, 214, 0], [1, "de", 19, 26, 215, 0], [1, "de", 19, 36, 217, 0], [1, "de", 19, 32, 223, 0], [1, "de", 19, 26, 223, 0], [1, "de", 19, 18, 218, 0], [1, "de", 19, 15, 215, 0], [1, "de", 19, 17, 212, 0], [1, "de", 19, 15, 224, 0], [1, "de", 19, 19, 229, 0], [1, "de", 19, 10, 230, 0], [1, "de", 19, 22, 240, 0], [1, "de", 19, 13, 238, 0], [1, "de", 19, 13, 243, 0], [1, "de", 19, 24, 244, 0], [1, "de", 19, 24, 250, 0], [1, "de", 19, 28, 253, 0], [1, "de", 19, 33, 255, 0], [1, "de", 19, 34, 260, 0], [1, "de", 19, 31, 260, 0], [1, "de", 19, 38, 267, 0], [1, "de", 19, 44, 264, 0], [1, "de", 19, 43, 261, 0], [1, "de", 19, 16, 257, 0], [1, "de", 19, 22, 258, 0], [1, "de", 19, 12, 253, 0], [1, "de", 19, 8, 242, 0], [1, "de", 19, 8, 255, 0], [1, "de", 19, 15, 264, 0], [1, "de", 19, 20, 265, 0], [1, "de", 19, 12, 271, 0], [1, "de", 19, 8, 272, 0], [1, "de", 19, 13, 277, 0], [1, "de", 19, 21, 277, 0], [1, "de", 19, 21, 281, 0], [1, "de", 19, 27, 282, 0], [1, "de", 19, 29, 278, 0], [1, "de", 19, 29, 273, 0], [1, "de", 19, 36, 271, 0], [1, "de", 19, 8, 278, 0], [1, "de", 19, 11, 286, 0], [1, "de", 19, 17, 291, 0], [1, "de", 19, 14, 294, 0], [1, "de", 19, 8, 292, 0], [1, "de", 19, 12, 300, 0], [1, "de", 19, 18, 298, 0], [1, "de", 19, 16, 301, 0], [1, "de", 19, 27, 296, 0], [1, "de", 19, 25, 292, 0], [1, "de", 19, 23, 301, 0], [1, "de", 19, 28, 301, 0], [1, "de", 19, 35, 297, 0], [1, "de", 19, 37, 301, 0], [1, "de", 19, 43, 301, 0], [1, "de", 19, 46, 294, 0], [1, "de", 19, 46, 288, 0], [1, "de", 19, 40, 287, 0], [1, "de", 19, 50, 301, 0], [1, "de", 19, 58, 301, 0], [1, "de", 19, 64, 301, 0], [1, "de", 19, 71, 301, 0], [1, "de", 19, 80, 301, 0], [1, "de", 19, 87, 301, 0], [1, "de", 19, 86, 294, 0], [1, "de", 19, 87, 290, 0], [1, "de", 19, 82, 286, 0], [1, "de", 19, 75, 285, 0], [1, "de", 19, 66, 292, 0], [1, "de", 19, 66, 288, 0], [1, "de", 19, 58, 288, 0], [1, "de", 19, 67, 282, 0], [1, "de", 19, 61, 281, 0], [1, "de", 19, 60, 295, 0], [1, "de", 19, 50, 282, 0], [1, "de", 19, 47, 283, 0], [1, "de", 19, 48, 281, 0], [1, "de", 19, 44, 277, 0], [1, "de", 19, 41, 282, 0], [1, "de", 19, 38, 281, 0], [1, "de", 19, 42, 288, 0], [1, "de", 19, 52, 281, 0], [1, "de", 19, 50, 275, 0], [1, "de", 19, 39, 277, 0], [1, "de", 19, 38, 284, 0], [1, "de", 19, 51, 285, 0], [1, "de", 19, 38, 278, 0], [1, "de", 19, 47, 272, 0], [1, "de", 19, 44, 267, 0], [1, "de", 19, 76, 280, 0], [1, "de", 19, 78, 272, 0], [1, "de", 19, 68, 275, 0], [1, "de", 19, 70, 265, 0], [1, "de", 19, 65, 263, 0], [1, "de", 19, 64, 262, 0], [1, "de", 19, 60, 268, 0], [1, "de", 19, 56, 266, 0], [1, "de", 19, 55, 260, 0], [1, "de", 19, 59, 258, 0], [1, "de", 19, 62, 255, 0], [1, "de", 19, 67, 253, 0], [1, "de", 19, 69, 256, 0], [1, "de", 19, 44, 253, 0], [1, "de", 19, 44, 250, 0], [1, "de", 19, 36, 245, 0], [1, "de", 19, 39, 239, 0], [1, "de", 19, 42, 234, 0], [1, "de", 19, 37, 235, 0], [1, "de", 19, 45, 226, 0], [1, "de", 19, 46, 222, 0], [1, "de", 19, 51, 218, 0], [1, "de", 19, 68, 218, 0], [1, "de", 19, 74, 224, 0], [1, "de", 19, 76, 218, 0], [1, "de", 19, 84, 221, 0], [1, "de", 19, 88, 223, 0], [1, "de", 19, 76, 230, 0], [1, "de", 19, 86, 234, 0], [1, "de", 19, 79, 237, 0], [1, "de", 19, 75, 243, 0], [1, "de", 19, 81, 245, 0], [1, "de", 19, 83, 247, 0], [1, "de", 19, 88, 247, 0], [1, "de", 19, 84, 254, 0], [1, "de", 19, 86, 251, 0], [1, "de", 19, 85, 260, 0], [1, "de", 19, 79, 260, 0], [1, "de", 19, 76, 251, 0], [1, "de", 19, 72, 251, 0], [1, "de", 19, 69, 251, 0], [1, "de", 19, 87, 266, 0], [1, "de", 19, 89, 270, 0], [1, "de", 19, 87, 271, 0], [1, "de", 19, 82, 277, 0], [1, "de", 19, 87, 284, 0], [1, "de", 19, 87, 237, 0], [1, "de", 19, 88, 179, 0], [1, "de", 19, 50, 191, 0], [1, "de", 19, 52, 221, 0], [1, "de", 19, 34, 234, 0], [1, "de", 19, 27, 233, 0], [1, "de", 19, 37, 293, 0], [1, "de", 29, 13, 181, 0], [1, "de", 29, 8, 180, 0], [1, "de", 30, 13, 186, 0], [1, "de", 31, 24, 183, 0], [1, "de", 32, 33, 185, 0], [1, "de", 32, 37, 182, 0], [1, "de", 29, 45, 183, 0], [1, "de", 30, 48, 183, 0], [1, "de", 30, 58, 181, 0], [1, "de", 30, 66, 188, 0], [1, "de", 30, 66, 182, 0], [1, "de", 29, 63, 196, 0], [1, "de", 29, 54, 194, 0], [1, "de", 30, 79, 189, 0], [1, "de", 30, 87, 182, 0], [1, "de", 30, 83, 185, 0], [1, "de", 29, 88, 189, 0], [1, "de", 29, 85, 202, 0], [1, "de", 31, 82, 203, 0], [1, "de", 32, 80, 201, 0], [1, "de", 32, 87, 209, 0], [1, "de", 32, 83, 214, 0], [1, "de", 30, 88, 220, 0], [1, "de", 30, 78, 229, 0], [1, "de", 30, 73, 223, 0], [1, "de", 29, 74, 217, 0], [1, "de", 29, 67, 217, 0], [1, "de", 30, 72, 208, 0], [1, "de", 30, 73, 199, 0], [1, "de", 30, 65, 207, 0], [1, "de", 29, 63, 210, 0], [1, "de", 29, 50, 204, 0], [1, "de", 30, 41, 205, 0], [1, "de", 29, 35, 205, 0], [1, "de", 30, 27, 202, 0], [1, "de", 30, 20, 201, 0], [1, "de", 29, 10, 203, 0], [1, "de", 29, 14, 196, 0], [1, "de", 29, 24, 187, 0], [1, "de", 29, 28, 223, 0], [1, "de", 29, 32, 212, 0], [1, "de", 30, 28, 214, 0], [1, "de", 31, 24, 218, 0], [1, "de", 29, 36, 219, 0], [1, "de", 29, 37, 217, 0], [1, "de", 29, 52, 217, 0], [1, "de", 29, 59, 217, 0], [1, "de", 29, 69, 231, 0], [1, "de", 29, 64, 242, 0], [1, "de", 30, 53, 253, 0], [1, "de", 30, 45, 250, 0], [1, "de", 30, 58, 261, 0], [1, "de", 30, 73, 276, 0], [1, "de", 30, 64, 276, 0], [1, "de", 30, 82, 285, 0], [1, "de", 30, 65, 293, 0], [1, "de", 30, 56, 288, 0], [1, "de", 30, 45, 296, 0], [1, "de", 30, 40, 288, 0], [1, "de", 30, 37, 283, 0], [1, "de", 30, 53, 280, 0], [1, "de", 30, 41, 277, 0], [1, "de", 29, 28, 296, 0], [1, "de", 29, 18, 292, 0], [1, "de", 29, 24, 284, 0], [1, "de", 30, 10, 295, 0], [1, "de", 30, 10, 286, 0], [1, "de", 30, 15, 279, 0], [1, "de", 30, 15, 269, 0], [1, "de", 30, 21, 259, 0], [1, "de", 30, 12, 256, 0], [1, "de", 30, 31, 245, 0], [1, "de", 30, 12, 240, 0], [1, "de", 30, 28, 235, 0], [1, "de", 30, 13, 226, 0], [1, "de", 30, 39, 231, 0], [1, "de", 30, 61, 226, 0], [1, "r", 96, 262, 0], [1, "r", 97, 262, 0], [1, "r", 98, 262, 0], [1, "r", 97, 270, 0], [1, "r", 97, 271, 0], [1, "r", 97, 272, 0], [1, "r", 97, 273, 0], [1, "r", 97, 274, 0], [1, "r", 97, 275, 0], [1, "r", 97, 276, 0], [1, "r", 97, 277, 0], [1, "r", 97, 278, 0], [1, "r", 98, 270, 0], [1, "r", 98, 271, 0], [1, "r", 98, 272, 0], [1, "r", 98, 273, 0], [1, "r", 98, 274, 0], [1, "r", 98, 275, 0], [1, "r", 98, 276, 0], [1, "r", 98, 277, 0], [1, "r", 98, 278, 0], [1, "r", 96, 283, 0], [1, "r", 97, 283, 0], [1, "r", 97, 284, 0], [1, "r", 97, 285, 0], [1, "r", 98, 283, 0], [1, "r", 98, 284, 0], [1, "r", 98, 285, 0], [1, "r", 96, 270, 0], [1, "r", 96, 271, 0], [1, "r", 96, 272, 0], [1, "r", 96, 273, 0], [1, "r", 96, 274, 0], [1, "r", 96, 275, 0], [1, "r", 96, 276, 0], [1, "r", 96, 277, 0], [1, "r", 96, 278, 0], [1, "r", 44, 248, 0], [1, "de", 16, 94, 290, 0], [1, "de", 16, 94, 252, 0], [1, "de", 16, 94, 228, 0], [1, "de", 17, 94, 200, 0], [1, "r", 95, 282, 1], [1, "r", 95, 281, 1], [1, "r", 94, 281, 1], [1, "r", 90, 281, 1], [1, "r", 91, 282, 1], [1, "r", 89, 281, 1], [1, "r", 85, 276, 1], [1, "r", 85, 277, 1], [1, "r", 86, 278, 1], [1, "p", 0, 85, 279, 1], [1, "r", 86, 279, 1], [1, "r", 87, 280, 1], [1, "r", 96, 281, 0], [1, "r", 97, 281, 0], [1, "r", 98, 281, 0], [1, "r", 98, 282, 0], [1, "r", 97, 282, 0], [1, "r", 96, 282, 0], [1, "r", 68, 261, 1], [1, "fo", 1, 94, 168, 0], [1, "fo", 2, 94, 151, 0], [1, "fo", 1, 94, 138, 0], [1, "fo", 1, 93, 124, 0], [1, "fo", 1, 94, 129, 0], [1, "fo", 1, 93, 113, 0], [1, "fo", 1, 94, 102, 0], [1, "fo", 1, 94, 93, 0], [1, "fo", 1, 93, 90, 0], [1, "fo", 1, 94, 79, 0], [1, "fo", 1, 94, 76, 0], [1, "fo", 1, 93, 70, 0], [1, "fo", 1, 93, 63, 0], [1, "fo", 1, 94, 53, 0], [1, "fo", 1, 93, 10, 0], [1, "fo", 1, 85, 8, 0], [1, "fo", 1, 94, 12, 0], [1, "fo", 1, 66, 13, 0], [1, "fo", 1, 69, 9, 0], [1, "fo", 2, 68, 14, 0], [1, "fo", 2, 66, 25, 0], [1, "fo", 2, 92, 9, 0], [1, "fo", 2, 94, 14, 0], [1, "fo", 2, 87, 9, 0], [1, "fo", 2, 71, 9, 0], [1, "fo", 2, 90, 12, 0], [1, "fo", 2, 91, 13, 0], [1, "fo", 1, 74, 12, 0], [1, "fo", 2, 72, 12, 0], [1, "fo", 2, 75, 13, 0], [1, "fo", 2, 74, 15, 0], [1, "fo", 2, 84, 12, 0], [1, "fo", 2, 81, 14, 0], [1, "fo", 1, 84, 13, 0], [1, "fo", 1, 84, 19, 0], [1, "fo", 1, 11, 9, 0], [1, "fo", 1, 7, 14, 0], [1, "fo", 1, 8, 22, 0], [1, "fo", 1, 7, 34, 0], [1, "fo", 1, 12, 24, 0], [1, "fo", 2, 8, 24, 0], [1, "fo", 2, 9, 21, 0], [1, "fo", 2, 31, 10, 0], [1, "fo", 2, 33, 27, 0], [1, "fo", 2, 9, 34, 0], [1, "fo", 2, 8, 19, 0], [1, "fo", 1, 14, 10, 0], [1, "fo", 2, 13, 9, 0], [1, "fo", 2, 15, 11, 0], [1, "fo", 2, 9, 9, 0], [1, "fo", 2, 9, 10, 0], [1, "fo", 2, 9, 15, 0], [1, "fo", 2, 10, 23, 0], [1, "fo", 2, 34, 29, 0], [1, "fo", 2, 27, 18, 0], [1, "fo", 2, 25, 21, 0], [1, "fo", 2, 20, 18, 0], [1, "fo", 2, 18, 21, 0], [1, "fo", 2, 29, 9, 0], [1, "fo", 2, 13, 14, 0], [1, "fo", 2, 9, 38, 0], [1, "fo", 2, 21, 39, 0], [1, "fo", 2, 84, 26, 0], [1, "fo", 2, 77, 25, 0], [1, "fo", 2, 86, 35, 0], [1, "fo", 1, 70, 35, 0], [1, "fo", 2, 72, 36, 0], [1, "fo", 2, 73, 31, 0], [1, "fo", 2, 89, 39, 0], [1, "fo", 2, 65, 40, 0], [1, "fo", 2, 92, 32, 0], [1, "fo", 2, 90, 28, 0], [1, "de", 22, 25, 266, 0], [1, "de", 22, 17, 206, 0], [1, "de", 19, 8, 184, 0], [1, "de", 19, 22, 183, 0], [1, "de", 19, 35, 188, 0], [1, "de", 19, 36, 192, 0], [1, "de", 19, 50, 277, 0], [1, "de", 19, 35, 279, 0], [1, "t", 4, 7, 178, 0], [1, "t", 1, 7, 179, 0], [1, "t", 3, 7, 180, 0], [1, "t", 2, 7, 181, 0], [1, "t", 5, 7, 182, 0], [1, "t", 4, 7, 183, 0], [1, "t", 3, 7, 184, 0], [1, "t", 4, 7, 185, 0], [1, "t", 2, 7, 186, 0], [1, "t", 1, 7, 187, 0], [1, "t", 4, 7, 188, 0], [1, "t", 3, 7, 189, 0], [1, "t", 5, 7, 190, 0], [1, "t", 1, 7, 191, 0], [1, "t", 3, 7, 192, 0], [1, "t", 4, 7, 193, 0], [1, "t", 3, 7, 194, 0], [1, "t", 5, 7, 195, 0], [1, "t", 2, 7, 196, 0], [1, "t", 4, 7, 197, 0], [1, "b", 2, 7, 198, 0], [1, "t", 4, 7, 199, 0], [1, "t", 2, 7, 200, 0], [1, "t", 5, 7, 201, 0], [1, "t", 2, 7, 202, 0], [1, "t", 4, 7, 203, 0], [1, "t", 2, 7, 204, 0], [1, "t", 5, 7, 205, 0], [1, "t", 2, 7, 206, 0], [1, "t", 1, 7, 207, 0], [1, "t", 4, 7, 208, 0], [1, "t", 3, 7, 209, 0], [1, "t", 1, 7, 210, 0], [1, "b", 0, 7, 211, 0], [1, "t", 3, 7, 212, 0], [1, "t", 4, 7, 213, 0], [1, "t", 3, 7, 214, 0], [1, "t", 5, 7, 215, 0], [1, "t", 5, 7, 216, 0], [1, "t", 3, 7, 217, 0], [1, "t", 1, 7, 218, 0], [1, "t", 4, 7, 219, 0], [1, "b", 2, 7, 220, 0], [1, "t", 1, 7, 221, 0], [1, "t", 2, 7, 222, 0], [1, "t", 4, 7, 223, 0], [1, "t", 3, 7, 224, 0], [1, "t", 1, 7, 225, 0], [1, "t", 4, 7, 226, 0], [1, "t", 2, 7, 227, 0], [1, "t", 5, 7, 228, 0], [1, "t", 3, 7, 229, 0], [1, "t", 1, 7, 230, 0], [1, "t", 4, 7, 231, 0], [1, "b", 2, 7, 232, 0], [1, "t", 5, 7, 233, 0], [1, "t", 1, 7, 234, 0], [1, "t", 3, 7, 235, 0], [1, "t", 4, 7, 236, 0], [1, "t", 2, 7, 237, 0], [1, "t", 5, 7, 238, 0], [1, "b", 3, 7, 239, 0], [1, "t", 2, 7, 240, 0], [1, "t", 1, 7, 241, 0], [1, "t", 2, 7, 242, 0], [1, "t", 4, 7, 243, 0], [1, "t", 3, 7, 244, 0], [1, "t", 4, 7, 245, 0], [1, "t", 1, 7, 246, 0], [1, "b", 0, 7, 247, 0], [1, "t", 3, 7, 248, 0], [1, "t", 5, 7, 249, 0], [1, "t", 2, 7, 250, 0], [1, "t", 1, 7, 251, 0], [1, "t", 4, 7, 252, 0], [1, "t", 3, 7, 253, 0], [1, "t", 5, 7, 254, 0], [1, "t", 1, 7, 255, 0], [1, "t", 4, 7, 256, 0], [1, "t", 1, 7, 257, 0], [1, "t", 2, 7, 258, 0], [1, "t", 5, 7, 260, 0], [1, "t", 3, 7, 259, 0], [1, "t", 1, 7, 261, 0], [1, "t", 3, 7, 262, 0], [1, "t", 4, 7, 263, 0], [1, "t", 1, 7, 264, 0], [1, "t", 2, 7, 265, 0], [1, "t", 5, 7, 266, 0], [1, "t", 2, 7, 267, 0], [1, "t", 2, 7, 269, 0], [1, "b", 2, 7, 268, 0], [1, "t", 4, 7, 270, 0], [1, "t", 1, 7, 271, 0], [1, "t", 5, 7, 272, 0], [1, "b", 2, 7, 273, 0], [1, "t", 4, 7, 274, 0], [1, "t", 2, 7, 275, 0], [1, "t", 5, 7, 276, 0], [1, "t", 5, 7, 277, 0], [1, "t", 2, 7, 278, 0], [1, "t", 1, 7, 279, 0], [1, "t", 4, 7, 280, 0], [1, "b", 1, 7, 281, 0], [1, "t", 3, 7, 282, 0], [1, "t", 4, 7, 283, 0], [1, "t", 1, 7, 284, 0], [1, "t", 3, 7, 285, 0], [1, "t", 5, 7, 286, 0], [1, "t", 4, 7, 288, 0], [1, "t", 2, 7, 287, 0], [1, "b", 0, 7, 289, 0], [1, "t", 4, 7, 290, 0], [1, "t", 2, 7, 291, 0], [1, "t", 5, 7, 292, 0], [1, "t", 3, 7, 293, 0], [1, "t", 1, 7, 294, 0], [1, "t", 4, 7, 295, 0], [1, "t", 3, 7, 296, 0], [1, "t", 1, 7, 297, 0], [1, "t", 4, 7, 298, 0], [1, "t", 2, 7, 299, 0], [1, "b", 0, 7, 300, 0], [1, "t", 2, 7, 301, 0], [1, "r", 196, 271, 0], [1, "r", 199, 274, 0], [1, "r", 167, 238, 0], [1, "r", 171, 240, 0], [1, "r", 189, 207, 0], [1, "r", 192, 209, 0], [1, "r", 198, 271, 0], [1, "r", 197, 271, 0], [1, "r", 198, 272, 0], [1, "r", 197, 272, 0], [1, "r", 196, 272, 0], [1, "r", 195, 272, 0], [1, "r", 199, 272, 0], [1, "r", 199, 273, 0], [1, "r", 198, 273, 0], [1, "r", 197, 273, 0], [1, "r", 196, 273, 0], [1, "r", 198, 274, 0], [1, "r", 197, 274, 0], [1, "r", 195, 273, 0], [1, "r", 196, 274, 0], [1, "r", 198, 275, 0], [1, "r", 197, 275, 0], [1, "r", 200, 274, 0], [1, "r", 200, 273, 0], [1, "r", 199, 275, 0], [1, "plm", 2, 200, 272, 0], [1, "plm", 1, 195, 271, 0], [1, "plm", 0, 199, 268, 0], [1, "plm", 0, 193, 277, 0], [1, "plm", 1, 199, 276, 0], [1, "s", 1, 200, 275, 1], [1, "s", 1, 194, 272, 1], [1, "s", 2, 193, 270, 1], [1, "g", 2, 193, 273, 1], [1, "g", 2, 201, 267, 1], [1, "m", 2, 220, 298, 1], [1, "m", 1, 219, 292, 1], [1, "m", 1, 214, 297, 1], [1, "r", 168, 238, 0], [1, "r", 169, 238, 0], [1, "r", 170, 238, 0], [1, "r", 171, 239, 0], [1, "r", 170, 239, 0], [1, "r", 169, 239, 0], [1, "r", 168, 239, 0], [1, "r", 167, 239, 0], [1, "r", 166, 239, 0], [1, "r", 166, 240, 0], [1, "r", 167, 240, 0], [1, "r", 168, 240, 0], [1, "r", 169, 240, 0], [1, "r", 170, 240, 0], [1, "r", 168, 241, 0], [1, "r", 169, 241, 0], [1, "r", 170, 241, 0], [1, "r", 171, 241, 0], [1, "plm", 2, 171, 238, 0], [1, "plm", 1, 166, 238, 0], [1, "plm", 0, 167, 237, 0], [1, "plm", 0, 171, 242, 0], [1, "plm", 0, 165, 243, 0], [1, "plm", 0, 171, 235, 0], [1, "plm", 0, 174, 241, 0], [1, "s", 1, 165, 239, 1], [1, "s", 1, 172, 241, 1], [1, "s", 0, 170, 237, 1], [1, "s", 1, 171, 237, 1], [1, "s", 2, 174, 236, 1], [1, "s", 2, 162, 241, 1], [1, "s", 2, 170, 246, 1], [1, "s", 2, 167, 235, 1], [1, "s", 2, 176, 243, 1], [1, "r", 190, 207, 0], [1, "r", 191, 207, 0], [1, "r", 192, 208, 0], [1, "r", 191, 208, 0], [1, "r", 190, 208, 0], [1, "r", 189, 208, 0], [1, "r", 188, 208, 0], [1, "r", 189, 209, 0], [1, "r", 190, 209, 0], [1, "r", 191, 209, 0], [1, "r", 188, 209, 0], [1, "r", 190, 210, 0], [1, "r", 191, 210, 0], [1, "r", 192, 210, 0], [1, "plm", 2, 189, 210, 0], [1, "plm", 2, 192, 205, 0], [1, "plm", 1, 192, 207, 0], [1, "plm", 0, 193, 210, 0], [1, "plm", 0, 187, 208, 0], [1, "plm", 0, 197, 206, 0], [1, "plm", 0, 191, 213, 0], [1, "plm", 0, 190, 204, 0], [1, "s", 1, 188, 207, 1], [1, "s", 1, 190, 211, 1], [1, "s", 2, 188, 213, 1], [1, "s", 2, 187, 205, 1], [1, "s", 0, 194, 210, 1], [1, "s", 0, 198, 207, 1], [1, "s", 1, 193, 204, 1], [1, "s", 1, 193, 213, 1], [1, "s", 2, 198, 212, 1], [1, "s", 2, 182, 208, 1], [1, "s", 1, 204, 271, 1], [1, "s", 0, 203, 272, 1], [1, "s", 0, 189, 275, 1], [1, "s", 0, 195, 265, 1], [1, "s", 2, 196, 264, 1], [1, "s", 2, 186, 274, 1], [1, "s", 2, 197, 280, 1], [1, "s", 0, 217, 282, 1], [1, "s", 1, 214, 285, 1], [1, "s", 1, 214, 274, 1], [1, "s", 1, 203, 282, 1], [1, "s", 1, 205, 290, 1], [1, "s", 0, 207, 292, 1], [1, "s", 0, 197, 297, 1], [1, "s", 0, 184, 287, 1], [1, "s", 2, 213, 289, 1], [1, "s", 2, 196, 294, 1], [1, "s", 2, 187, 286, 1], [1, "s", 1, 192, 289, 1], [1, "s", 1, 189, 299, 1], [1, "s", 0, 213, 273, 1], [1, "g", 2, 212, 278, 1], [1, "g", 1, 200, 288, 1], [1, "g", 2, 215, 265, 1], [1, "g", 2, 183, 281, 1], [1, "s", 0, 178, 295, 1], [1, "s", 0, 167, 281, 1], [1, "s", 0, 175, 263, 1], [1, "s", 1, 176, 293, 1], [1, "s", 1, 163, 285, 1], [1, "s", 1, 177, 266, 1], [1, "s", 1, 161, 272, 1], [1, "s", 2, 185, 261, 1], [1, "c", 0, 217, 270, 1], [1, "c", 0, 220, 278, 1], [1, "c", 0, 217, 283, 1], [1, "c", 0, 220, 287, 1], [1, "c", 0, 210, 292, 1], [1, "c", 0, 205, 297, 1], [1, "c", 0, 198, 293, 1], [1, "c", 0, 208, 283, 1], [1, "c", 0, 197, 283, 1], [1, "c", 0, 190, 289, 1], [1, "c", 0, 183, 296, 1], [1, "c", 0, 189, 291, 1], [1, "c", 0, 178, 284, 1], [1, "c", 0, 208, 265, 1], [1, "c", 0, 169, 292, 1], [1, "s", 1, 158, 294, 1], [1, "s", 0, 151, 297, 1], [1, "s", 0, 147, 288, 1], [1, "c", 0, 150, 289, 1], [1, "c", 0, 160, 282, 1], [1, "c", 0, 146, 274, 1], [1, "c", 0, 167, 264, 1], [1, "c", 0, 165, 267, 1], [1, "g", 0, 189, 257, 1], [1, "g", 1, 197, 248, 1], [1, "g", 2, 170, 255, 1], [1, "g", 2, 212, 234, 1], [1, "g", 2, 189, 230, 1], [1, "g", 2, 173, 221, 1], [1, "g", 1, 210, 214, 1], [1, "s", 1, 153, 257, 1], [1, "s", 0, 158, 255, 1], [1, "s", 0, 184, 248, 1], [1, "s", 0, 212, 254, 1], [1, "s", 1, 203, 249, 1], [1, "s", 2, 204, 252, 1], [1, "s", 2, 187, 248, 1], [1, "s", 0, 206, 237, 1], [1, "s", 0, 196, 227, 1], [1, "s", 0, 181, 228, 1], [1, "s", 1, 199, 227, 1], [1, "s", 1, 208, 238, 1], [1, "s", 1, 179, 222, 1], [1, "s", 1, 213, 223, 1], [1, "s", 2, 182, 222, 1], [1, "s", 2, 211, 226, 1], [1, "s", 2, 214, 214, 1], [1, "s", 2, 201, 216, 1], [1, "s", 2, 215, 192, 1], [1, "s", 1, 210, 198, 1], [1, "s", 1, 198, 196, 1], [1, "s", 2, 208, 199, 1], [1, "s", 2, 187, 192, 1], [1, "s", 1, 179, 198, 1], [1, "s", 2, 177, 197, 1], [1, "s", 0, 164, 197, 1], [1, "s", 1, 159, 193, 1], [1, "s", 1, 149, 206, 1], [1, "s", 1, 164, 209, 1], [1, "s", 2, 165, 210, 1], [1, "s", 2, 161, 191, 1], [1, "s", 1, 162, 224, 1], [1, "s", 0, 150, 236, 1], [1, "s", 1, 149, 239, 1], [1, "s", 2, 153, 236, 1], [1, "s", 2, 160, 223, 1], [1, "s", 2, 151, 207, 1], [1, "s", 2, 147, 220, 1], [1, "s", 2, 145, 265, 1], [1, "s", 2, 145, 285, 1], [1, "c", 0, 152, 266, 1], [1, "c", 0, 185, 271, 1], [1, "c", 0, 210, 254, 1], [1, "c", 0, 209, 256, 1], [1, "c", 0, 198, 254, 1], [1, "c", 0, 213, 246, 1], [1, "c", 0, 216, 237, 1], [1, "c", 0, 204, 240, 1], [1, "c", 0, 196, 234, 1], [1, "c", 0, 188, 238, 1], [1, "c", 0, 182, 245, 1], [1, "c", 0, 173, 252, 1], [1, "c", 0, 153, 248, 1], [1, "c", 0, 158, 233, 1], [1, "c", 0, 147, 230, 1], [1, "c", 0, 151, 224, 1], [1, "c", 0, 157, 214, 1], [1, "c", 0, 167, 219, 1], [1, "c", 0, 171, 208, 1], [1, "c", 0, 179, 219, 1], [1, "c", 0, 176, 229, 1], [1, "c", 0, 195, 221, 1], [1, "c", 0, 207, 222, 1], [1, "c", 0, 214, 207, 1], [1, "c", 0, 205, 210, 1], [1, "c", 0, 204, 196, 1], [1, "c", 0, 214, 196, 1], [1, "c", 0, 190, 199, 1], [1, "c", 0, 184, 194, 1], [1, "c", 0, 172, 199, 1], [1, "c", 0, 161, 204, 1], [1, "c", 0, 157, 196, 1], [1, "c", 0, 149, 194, 1], [1, "c", 0, 147, 208, 1], [1, "c", 0, 207, 274, 1], [1, "c", 0, 217, 258, 1], [1, "c", 0, 201, 260, 1], [1, "c", 0, 178, 276, 1], [1, "c", 0, 187, 265, 1], [1, "s", 1, 204, 260, 1], [1, "s", 1, 216, 260, 1], [1, "s", 1, 187, 255, 1], [1, "s", 2, 189, 254, 1], [1, "s", 2, 212, 257, 1], [1, "s", 2, 182, 286, 1], [1, "s", 2, 169, 280, 1], [1, "s", 2, 217, 273, 1], [1, "s", 2, 215, 282, 1], [1, "s", 2, 172, 263, 1], [1, "s", 2, 176, 267, 1], [1, "s", 2, 215, 251, 1], [1, "fod", 1, 221, 282, 0], [1, "fod", 1, 222, 284, 0], [1, "fod", 1, 221, 290, 0], [1, "fod", 1, 222, 294, 0], [1, "fod", 1, 221, 297, 0], [1, "fod", 1, 223, 298, 0], [1, "fod", 1, 222, 300, 0], [1, "fod", 1, 218, 301, 0], [1, "fod", 1, 217, 299, 0], [1, "fod", 1, 215, 301, 0], [1, "fod", 1, 212, 300, 0], [1, "fod", 1, 206, 300, 0], [1, "fod", 1, 209, 301, 0], [1, "fod", 1, 204, 299, 0], [1, "fod", 1, 202, 301, 0], [1, "fod", 1, 199, 301, 0], [1, "fod", 1, 222, 282, 0], [1, "fod", 1, 207, 301, 0], [1, "fod", 1, 197, 301, 0], [1, "fod", 1, 215, 291, 0], [1, "fod", 1, 216, 286, 0], [1, "fod", 1, 214, 292, 0], [1, "fod", 1, 210, 289, 0], [1, "fod", 1, 208, 294, 0], [1, "fod", 1, 210, 298, 0], [1, "fod", 1, 212, 281, 0], [1, "fod", 1, 219, 278, 0], [1, "fod", 1, 219, 282, 0], [1, "fod", 1, 205, 286, 0], [1, "fod", 1, 202, 293, 0], [1, "fod", 1, 198, 295, 0], [1, "fod", 2, 213, 282, 0], [1, "fod", 2, 213, 291, 0], [1, "fod", 2, 216, 289, 0], [1, "fod", 2, 219, 289, 0], [1, "fod", 2, 218, 285, 0], [1, "fod", 2, 220, 283, 0], [1, "fod", 2, 211, 283, 0], [1, "fod", 2, 215, 281, 0], [1, "fod", 2, 217, 279, 0], [1, "fod", 2, 208, 290, 0], [1, "fod", 2, 211, 296, 0], [1, "fod", 2, 215, 294, 0], [1, "fod", 2, 212, 298, 0], [1, "fod", 2, 203, 294, 0], [1, "fod", 2, 204, 288, 0], [1, "fod", 2, 200, 294, 0], [1, "fod", 2, 198, 297, 0], [1, "fod", 2, 202, 299, 0], [1, "fod", 2, 200, 299, 0], [1, "fod", 2, 220, 300, 0], [1, "fod", 2, 220, 295, 0], [1, "fod", 2, 220, 292, 0], [1, "fod", 2, 219, 287, 0], [1, "fod", 2, 211, 288, 0], [1, "fod", 2, 213, 287, 0], [1, "fod", 2, 211, 289, 0], [1, "fod", 2, 212, 290, 0], [1, "fod", 2, 195, 296, 0], [1, "fod", 2, 196, 299, 0], [1, "fod", 2, 194, 300, 0], [1, "fod", 2, 195, 300, 0], [1, "fod", 2, 213, 279, 0], [1, "fod", 2, 211, 279, 0], [1, "fod", 0, 218, 290, 0], [1, "fod", 0, 212, 294, 0], [1, "fod", 1, 213, 295, 0], [1, "fod", 1, 217, 292, 0], [1, "fod", 1, 218, 288, 0], [1, "fod", 1, 210, 295, 0], [1, "fod", 1, 213, 292, 0], [1, "fod", 1, 212, 289, 0], [1, "fod", 1, 205, 295, 0], [1, "fod", 2, 206, 296, 0], [1, "fod", 2, 208, 296, 0], [1, "fod", 2, 221, 288, 0], [1, "fod", 2, 209, 299, 0], [1, "fod", 2, 211, 291, 0], [1, "fod", 1, 203, 275, 0], [1, "fod", 1, 204, 272, 0], [1, "fod", 2, 205, 273, 0], [1, "fod", 2, 204, 276, 0], [1, "fod", 2, 202, 276, 0], [1, "fod", 2, 199, 277, 0], [1, "fod", 2, 202, 273, 0], [1, "fod", 2, 199, 270, 0], [1, "fod", 2, 194, 274, 0], [1, "fod", 2, 194, 277, 0], [1, "fod", 1, 192, 274, 0], [1, "fod", 1, 194, 267, 0], [1, "fod", 2, 194, 265, 0], [1, "fod", 2, 190, 272, 0], [1, "fod", 2, 191, 275, 0], [1, "fod", 2, 195, 274, 0], [1, "fod", 2, 200, 271, 0], [1, "fod", 1, 168, 243, 0], [1, "fod", 1, 175, 240, 0], [1, "fod", 1, 169, 234, 0], [1, "fod", 1, 162, 235, 0], [1, "fod", 2, 169, 236, 0], [1, "fod", 2, 171, 234, 0], [1, "fod", 2, 165, 238, 0], [1, "fod", 2, 173, 241, 0], [1, "fod", 2, 174, 238, 0], [1, "fod", 2, 176, 240, 0], [1, "fod", 2, 169, 244, 0], [1, "fod", 2, 166, 243, 0], [1, "fod", 2, 162, 236, 0], [1, "fod", 2, 164, 235, 0], [1, "fod", 2, 162, 233, 0], [1, "fod", 2, 163, 236, 0], [1, "fod", 2, 174, 242, 0], [1, "fod", 2, 171, 243, 0], [1, "fod", 1, 194, 206, 0], [1, "fod", 1, 190, 214, 0], [1, "fod", 1, 186, 206, 0], [1, "fod", 1, 197, 207, 0], [1, "fod", 2, 196, 208, 0], [1, "fod", 2, 198, 206, 0], [1, "fod", 2, 198, 208, 0], [1, "fod", 2, 194, 204, 0], [1, "fod", 2, 187, 206, 0], [1, "fod", 2, 186, 204, 0], [1, "fod", 2, 189, 214, 0], [1, "fod", 2, 189, 213, 0], [1, "fod", 2, 193, 215, 0], [1, "fod", 2, 194, 214, 0], [1, "fod", 2, 187, 215, 0], [1, "fod", 2, 193, 209, 0], [1, "fod", 2, 189, 211, 0], [1, "fod", 2, 187, 209, 0], [1, "fod", 2, 187, 207, 0], [1, "fod", 2, 191, 205, 0], [1, "fod", 2, 189, 203, 0], [1, "cs", 2, 224, 176, 1], [1, "cs", 0, 224, 177, 1], [1, "cs", 3, 224, 178, 1], [1, "cs", 2, 224, 179, 1], [1, "cs", 1, 224, 180, 1], [1, "cs", 2, 224, 181, 1], [1, "cs", 0, 224, 182, 1], [1, "cs", 2, 224, 183, 1], [1, "cs", 0, 224, 184, 1], [1, "cs", 3, 224, 185, 1], [1, "cs", 2, 224, 186, 1], [1, "cs", 0, 224, 187, 1], [1, "cs", 2, 224, 188, 1], [1, "cs", 0, 224, 189, 1], [1, "cs", 1, 224, 190, 1], [1, "cs", 2, 224, 191, 1], [1, "cs", 0, 224, 192, 1], [1, "cs", 2, 224, 193, 1], [1, "cs", 2, 224, 194, 1], [1, "cs", 1, 224, 195, 1], [1, "cs", 2, 224, 196, 1], [1, "cs", 0, 224, 197, 1], [1, "cs", 3, 224, 198, 1], [1, "cs", 2, 224, 199, 1], [1, "cs", 1, 224, 200, 1], [1, "cs", 2, 224, 201, 1], [1, "cs", 3, 224, 202, 1], [1, "cs", 0, 224, 203, 1], [1, "cs", 1, 224, 204, 1], [1, "cs", 2, 224, 205, 1], [1, "cs", 0, 224, 206, 1], [1, "cs", 1, 224, 207, 1], [1, "cs", 3, 224, 208, 1], [1, "cs", 2, 224, 209, 1], [1, "cs", 2, 224, 210, 1], [1, "cs", 0, 223, 211, 1], [1, "cs", 1, 224, 211, 1], [1, "cs", 2, 224, 212, 1], [1, "cs", 2, 224, 213, 1], [1, "cs", 1, 224, 214, 1], [1, "cs", 3, 224, 215, 1], [1, "cs", 0, 224, 216, 1], [1, "cs", 1, 224, 217, 1], [1, "cs", 2, 224, 218, 1], [1, "cs", 3, 224, 219, 1], [1, "cs", 0, 223, 215, 1], [1, "cs", 2, 223, 214, 1], [1, "cs", 2, 223, 212, 1], [1, "cs", 2, 223, 216, 1], [1, "cs", 3, 223, 217, 1], [1, "cs", 0, 223, 218, 1], [1, "cs", 0, 224, 220, 1], [1, "cs", 0, 224, 222, 1], [1, "cs", 0, 223, 209, 1], [1, "cs", 0, 223, 205, 1], [1, "cs", 2, 224, 221, 1], [1, "cs", 2, 223, 219, 1], [1, "cs", 2, 223, 220, 1], [1, "cs", 2, 223, 213, 1], [1, "cs", 2, 223, 210, 1], [1, "cs", 1, 223, 178, 1], [1, "cs", 3, 223, 179, 1], [1, "cs", 3, 223, 181, 1], [1, "cs", 3, 223, 182, 1], [1, "cs", 1, 223, 185, 1], [1, "cs", 2, 223, 184, 1], [1, "cs", 2, 223, 186, 1], [1, "cs", 0, 223, 180, 1], [1, "cs", 0, 223, 183, 1], [1, "cs", 2, 223, 187, 1], [1, "cs", 1, 223, 188, 1], [1, "cs", 2, 223, 189, 1], [1, "cs", 2, 223, 190, 1], [1, "cs", 3, 223, 191, 1], [1, "cs", 1, 223, 192, 1], [1, "cs", 2, 223, 193, 1], [1, "cs", 2, 223, 194, 1], [1, "cs", 3, 223, 195, 1], [1, "cs", 1, 223, 196, 1], [1, "cs", 2, 223, 197, 1], [1, "cs", 2, 223, 199, 1], [1, "cs", 2, 223, 198, 1], [1, "cs", 0, 223, 200, 1], [1, "cs", 2, 223, 201, 1], [1, "cs", 0, 223, 202, 1], [1, "cs", 3, 223, 203, 1], [1, "cs", 3, 223, 204, 1], [1, "cs", 3, 223, 206, 1], [1, "cs", 3, 223, 207, 1], [1, "cs", 3, 223, 208, 1], [1, "cs", 2, 223, 221, 1], [1, "cs", 2, 223, 222, 1], [1, "cs", 0, 223, 224, 1], [1, "cs", 0, 224, 228, 1], [1, "cs", 0, 224, 230, 1], [1, "cs", 0, 223, 234, 1], [1, "cs", 2, 223, 223, 1], [1, "cs", 2, 224, 223, 1], [1, "cs", 2, 224, 224, 1], [1, "cs", 2, 224, 225, 1], [1, "cs", 1, 223, 226, 1], [1, "cs", 1, 224, 231, 1], [1, "cs", 1, 223, 232, 1], [1, "cs", 3, 223, 225, 1], [1, "cs", 3, 224, 226, 1], [1, "cs", 3, 223, 227, 1], [1, "cs", 3, 224, 227, 1], [1, "cs", 3, 223, 229, 1], [1, "cs", 3, 223, 228, 1], [1, "cs", 3, 224, 229, 1], [1, "cs", 3, 223, 230, 1], [1, "cs", 3, 223, 231, 1], [1, "cs", 3, 224, 232, 1], [1, "cs", 3, 224, 233, 1], [1, "cs", 3, 223, 233, 1], [1, "cs", 3, 224, 234, 1], [1, "cs", 3, 224, 235, 1], [1, "cs", 3, 223, 235, 1], [1, "cs", 1, 224, 236, 1], [1, "cs", 2, 223, 236, 1], [1, "cs", 2, 223, 237, 1], [1, "cs", 3, 224, 237, 1], [1, "cs", 3, 224, 238, 1], [1, "cs", 0, 224, 239, 1], [1, "cs", 1, 223, 241, 1], [1, "cs", 0, 224, 243, 1], [1, "cs", 0, 223, 245, 1], [1, "cs", 0, 224, 247, 1], [1, "cs", 2, 223, 240, 1], [1, "cs", 2, 223, 239, 1], [1, "cs", 2, 224, 240, 1], [1, "cs", 2, 224, 241, 1], [1, "cs", 2, 224, 242, 1], [1, "cs", 2, 223, 242, 1], [1, "cs", 2, 223, 243, 1], [1, "cs", 2, 223, 244, 1], [1, "cs", 2, 224, 244, 1], [1, "cs", 2, 224, 245, 1], [1, "cs", 2, 224, 246, 1], [1, "cs", 3, 223, 238, 1], [1, "cs", 3, 223, 246, 1], [1, "cs", 2, 223, 247, 1], [1, "cs", 1, 223, 249, 1], [1, "cs", 1, 224, 253, 1], [1, "cs", 1, 223, 256, 1], [1, "cs", 0, 223, 254, 1], [1, "cs", 0, 224, 250, 1], [1, "cs", 3, 223, 248, 1], [1, "cs", 3, 223, 250, 1], [1, "cs", 3, 223, 252, 1], [1, "cs", 3, 223, 255, 1], [1, "cs", 3, 223, 257, 1], [1, "cs", 2, 224, 248, 1], [1, "cs", 2, 224, 249, 1], [1, "cs", 2, 223, 251, 1], [1, "cs", 2, 224, 251, 1], [1, "cs", 2, 224, 252, 1], [1, "cs", 2, 223, 253, 1], [1, "cs", 2, 224, 254, 1], [1, "cs", 2, 224, 255, 1], [1, "cs", 2, 224, 256, 1], [1, "cs", 2, 224, 257, 1], [1, "cs", 0, 224, 258, 1], [1, "cs", 0, 223, 261, 1], [1, "cs", 0, 224, 263, 1], [1, "cs", 0, 224, 266, 1], [1, "cs", 0, 224, 272, 1], [1, "cs", 0, 223, 270, 1], [1, "cs", 0, 223, 275, 1], [1, "cs", 1, 223, 259, 1], [1, "cs", 1, 223, 264, 1], [1, "cs", 1, 223, 268, 1], [1, "cs", 1, 224, 274, 1], [1, "cs", 2, 223, 258, 1], [1, "cs", 2, 223, 260, 1], [1, "cs", 2, 223, 263, 1], [1, "cs", 2, 223, 265, 1], [1, "cs", 2, 223, 267, 1], [1, "cs", 2, 223, 271, 1], [1, "cs", 2, 223, 273, 1], [1, "cs", 3, 223, 262, 1], [1, "cs", 3, 223, 266, 1], [1, "cs", 3, 223, 269, 1], [1, "cs", 3, 223, 272, 1], [1, "cs", 3, 223, 274, 1], [1, "cs", 3, 224, 275, 1], [1, "cs", 3, 224, 273, 1], [1, "cs", 3, 224, 271, 1], [1, "cs", 3, 224, 270, 1], [1, "cs", 3, 224, 269, 1], [1, "cs", 3, 224, 268, 1], [1, "cs", 3, 224, 267, 1], [1, "cs", 3, 224, 265, 1], [1, "cs", 3, 224, 264, 1], [1, "cs", 3, 224, 262, 1], [1, "cs", 3, 224, 261, 1], [1, "cs", 3, 224, 260, 1], [1, "cs", 3, 224, 259, 1], [1, "cs", 2, 223, 276, 1], [1, "cs", 1, 224, 276, 1], [1, "cs", 1, 224, 280, 1], [1, "cs", 1, 223, 281, 1], [1, "cs", 1, 224, 286, 1], [1, "cs", 0, 223, 280, 1], [1, "cs", 0, 223, 284, 1], [1, "cs", 0, 224, 288, 1], [1, "cs", 0, 224, 279, 1], [1, "cs", 2, 223, 277, 1], [1, "cs", 2, 224, 277, 1], [1, "cs", 2, 224, 278, 1], [1, "cs", 2, 224, 281, 1], [1, "cs", 2, 224, 283, 1], [1, "cs", 2, 224, 282, 1], [1, "cs", 2, 224, 284, 1], [1, "cs", 2, 224, 285, 1], [1, "cs", 2, 224, 287, 1], [1, "cs", 2, 223, 287, 1], [1, "cs", 2, 223, 285, 1], [1, "cs", 2, 223, 283, 1], [1, "cs", 2, 223, 279, 1], [1, "cs", 3, 223, 278, 1], [1, "cs", 3, 223, 282, 1], [1, "cs", 3, 223, 286, 1], [1, "cs", 3, 223, 289, 1], [1, "cs", 3, 224, 289, 1], [1, "cs", 2, 223, 288, 1], [1, "cs", 2, 224, 290, 1], [1, "cs", 1, 223, 290, 1], [1, "cs", 0, 224, 292, 1], [1, "cs", 0, 223, 294, 1], [1, "cs", 0, 224, 297, 1], [1, "cs", 0, 223, 299, 1], [1, "cs", 2, 223, 291, 1], [1, "cs", 2, 224, 291, 1], [1, "cs", 2, 223, 292, 1], [1, "cs", 2, 223, 293, 1], [1, "cs", 2, 224, 293, 1], [1, "cs", 2, 224, 294, 1], [1, "cs", 1, 224, 295, 1], [1, "cs", 2, 223, 295, 1], [1, "cs", 2, 223, 296, 1], [1, "cs", 2, 224, 296, 1], [1, "cs", 2, 223, 297, 1], [1, "cs", 2, 223, 298, 1], [1, "cs", 2, 224, 298, 1], [1, "cs", 2, 224, 299, 1], [1, "cs", 2, 223, 300, 1], [1, "cs", 1, 224, 300, 1], [1, "cs", 0, 223, 301, 1], [1, "cs", 0, 224, 302, 1], [1, "cs", 0, 224, 304, 1], [1, "cs", 3, 224, 301, 1], [1, "cs", 3, 224, 303, 1], [1, "cs", 0, 221, 303, 1], [1, "cs", 0, 219, 304, 1], [1, "cs", 1, 222, 304, 1], [1, "cs", 1, 222, 302, 1], [1, "cs", 2, 223, 302, 1], [1, "cs", 2, 223, 303, 1], [1, "cs", 2, 222, 303, 1], [1, "cs", 2, 223, 304, 1], [1, "cs", 2, 221, 304, 1], [1, "cs", 2, 220, 304, 1], [1, "cs", 2, 220, 303, 1], [1, "cs", 2, 220, 302, 1], [1, "cs", 2, 221, 302, 1], [1, "cs", 2, 219, 303, 1], [1, "cs", 0, 217, 302, 1], [1, "cs", 0, 215, 304, 1], [1, "cs", 0, 214, 302, 1], [1, "cs", 1, 218, 302, 1], [1, "cs", 1, 217, 304, 1], [1, "cs", 1, 215, 302, 1], [1, "cs", 2, 219, 302, 1], [1, "cs", 2, 218, 303, 1], [1, "cs", 2, 218, 304, 1], [1, "cs", 2, 217, 303, 1], [1, "cs", 2, 216, 304, 1], [1, "cs", 2, 215, 303, 1], [1, "cs", 2, 216, 303, 1], [1, "cs", 2, 216, 302, 1], [1, "cs", 2, 214, 303, 1], [1, "cs", 2, 214, 304, 1], [1, "cs", 0, 212, 302, 1], [1, "cs", 0, 210, 303, 1], [1, "cs", 0, 212, 304, 1], [1, "cs", 0, 208, 304, 1], [1, "cs", 1, 210, 302, 1], [1, "cs", 1, 208, 303, 1], [1, "cs", 2, 213, 302, 1], [1, "cs", 2, 213, 303, 1], [1, "cs", 2, 213, 304, 1], [1, "cs", 2, 212, 303, 1], [1, "cs", 2, 211, 304, 1], [1, "cs", 2, 211, 303, 1], [1, "cs", 2, 211, 302, 1], [1, "cs", 2, 209, 302, 1], [1, "cs", 2, 209, 303, 1], [1, "cs", 2, 209, 304, 1], [1, "cs", 2, 210, 304, 1], [1, "cs", 2, 208, 302, 1], [1, "cs", 0, 206, 303, 1], [1, "cs", 0, 203, 304, 1], [1, "cs", 0, 200, 303, 1], [1, "cs", 0, 199, 304, 1], [1, "cs", 0, 195, 304, 1], [1, "cs", 0, 191, 303, 1], [1, "cs", 0, 193, 304, 1], [1, "cs", 0, 189, 304, 1], [1, "cs", 1, 204, 303, 1], [1, "cs", 0, 197, 302, 1], [1, "cs", 0, 202, 302, 1], [1, "cs", 0, 188, 302, 1], [1, "cs", 0, 194, 302, 1], [1, "cs", 1, 197, 303, 1], [1, "cs", 1, 201, 304, 1], [1, "cs", 1, 192, 302, 1], [1, "cs", 1, 189, 303, 1], [1, "cs", 1, 205, 302, 1], [1, "cs", 1, 188, 304, 1], [1, "cs", 2, 207, 302, 1], [1, "cs", 2, 207, 303, 1], [1, "cs", 2, 207, 304, 1], [1, "cs", 2, 206, 304, 1], [1, "cs", 2, 206, 302, 1], [1, "cs", 2, 205, 303, 1], [1, "cs", 2, 204, 304, 1], [1, "cs", 2, 205, 304, 1], [1, "cs", 2, 204, 302, 1], [1, "cs", 2, 203, 302, 1], [1, "cs", 2, 203, 303, 1], [1, "cs", 2, 202, 303, 1], [1, "cs", 2, 201, 303, 1], [1, "cs", 2, 201, 302, 1], [1, "cs", 2, 200, 302, 1], [1, "cs", 2, 199, 302, 1], [1, "cs", 2, 198, 303, 1], [1, "cs", 2, 198, 302, 1], [1, "cs", 2, 199, 303, 1], [1, "cs", 2, 200, 304, 1], [1, "cs", 2, 202, 304, 1], [1, "cs", 2, 197, 304, 1], [1, "cs", 2, 198, 304, 1], [1, "cs", 2, 196, 304, 1], [1, "cs", 2, 196, 303, 1], [1, "cs", 2, 196, 302, 1], [1, "cs", 2, 195, 302, 1], [1, "cs", 2, 195, 303, 1], [1, "cs", 2, 194, 303, 1], [1, "cs", 2, 194, 304, 1], [1, "cs", 2, 193, 303, 1], [1, "cs", 2, 193, 302, 1], [1, "cs", 2, 192, 303, 1], [1, "cs", 2, 192, 304, 1], [1, "cs", 2, 191, 304, 1], [1, "cs", 2, 190, 304, 1], [1, "cs", 2, 190, 303, 1], [1, "cs", 2, 189, 302, 1], [1, "cs", 2, 190, 302, 1], [1, "cs", 2, 191, 302, 1], [1, "cs", 2, 188, 303, 1], [1, "cs", 0, 186, 303, 1], [1, "cs", 0, 183, 304, 1], [1, "cs", 0, 184, 302, 1], [1, "cs", 0, 181, 302, 1], [1, "cs", 0, 176, 302, 1], [1, "cs", 0, 178, 303, 1], [1, "cs", 0, 173, 304, 1], [1, "cs", 0, 170, 303, 1], [1, "cs", 0, 172, 302, 1], [1, "cs", 1, 182, 303, 1], [1, "cs", 1, 178, 304, 1], [1, "cs", 1, 175, 304, 1], [1, "cs", 1, 173, 302, 1], [1, "cs", 1, 185, 304, 1], [1, "cs", 1, 169, 304, 1], [1, "cs", 3, 187, 304, 1], [1, "cs", 3, 186, 304, 1], [1, "cs", 3, 187, 303, 1], [1, "cs", 3, 187, 302, 1], [1, "cs", 3, 186, 302, 1], [1, "cs", 3, 185, 302, 1], [1, "cs", 3, 185, 303, 1], [1, "cs", 3, 184, 303, 1], [1, "cs", 3, 183, 303, 1], [1, "cs", 3, 183, 302, 1], [1, "cs", 3, 182, 302, 1], [1, "cs", 3, 184, 304, 1], [1, "cs", 3, 182, 304, 1], [1, "cs", 3, 181, 304, 1], [1, "cs", 3, 179, 304, 1], [1, "cs", 3, 180, 304, 1], [1, "cs", 3, 181, 303, 1], [1, "cs", 3, 180, 303, 1], [1, "cs", 3, 179, 303, 1], [1, "cs", 3, 180, 302, 1], [1, "cs", 3, 179, 302, 1], [1, "cs", 3, 178, 302, 1], [1, "cs", 3, 177, 302, 1], [1, "cs", 3, 177, 304, 1], [1, "cs", 3, 177, 303, 1], [1, "cs", 3, 176, 303, 1], [1, "cs", 3, 176, 304, 1], [1, "cs", 3, 174, 304, 1], [1, "cs", 3, 175, 303, 1], [1, "cs", 3, 174, 303, 1], [1, "cs", 3, 173, 303, 1], [1, "cs", 3, 172, 303, 1], [1, "cs", 3, 171, 303, 1], [1, "cs", 3, 170, 304, 1], [1, "cs", 3, 171, 304, 1], [1, "cs", 3, 172, 304, 1], [1, "cs", 3, 174, 302, 1], [1, "cs", 3, 175, 302, 1], [1, "cs", 3, 171, 302, 1], [1, "cs", 3, 170, 302, 1], [1, "cs", 3, 169, 302, 1], [1, "cs", 3, 169, 303, 1], [1, "cs", 0, 168, 302, 1], [1, "cs", 0, 166, 303, 1], [1, "cs", 0, 163, 304, 1], [1, "cs", 0, 161, 302, 1], [1, "cs", 0, 159, 303, 1], [1, "cs", 0, 152, 304, 1], [1, "cs", 0, 155, 303, 1], [1, "cs", 1, 164, 303, 1], [1, "cs", 1, 162, 303, 1], [1, "cs", 1, 158, 304, 1], [1, "cs", 1, 156, 302, 1], [1, "cs", 1, 153, 302, 1], [1, "cs", 1, 154, 304, 1], [1, "cs", 2, 168, 304, 1], [1, "cs", 2, 168, 303, 1], [1, "cs", 2, 167, 303, 1], [1, "cs", 2, 167, 304, 1], [1, "cs", 2, 166, 304, 1], [1, "cs", 2, 165, 304, 1], [1, "cs", 2, 164, 304, 1], [1, "cs", 2, 165, 303, 1], [1, "cs", 2, 167, 302, 1], [1, "cs", 2, 166, 302, 1], [1, "cs", 2, 165, 302, 1], [1, "cs", 2, 164, 302, 1], [1, "cs", 2, 163, 302, 1], [1, "cs", 2, 162, 302, 1], [1, "cs", 2, 163, 303, 1], [1, "cs", 2, 162, 304, 1], [1, "cs", 2, 160, 304, 1], [1, "cs", 2, 159, 304, 1], [1, "cs", 2, 161, 304, 1], [1, "cs", 2, 161, 303, 1], [1, "cs", 2, 160, 303, 1], [1, "cs", 2, 160, 302, 1], [1, "cs", 2, 158, 302, 1], [1, "cs", 2, 159, 302, 1], [1, "cs", 2, 157, 302, 1], [1, "cs", 2, 156, 303, 1], [1, "cs", 2, 157, 303, 1], [1, "cs", 2, 158, 303, 1], [1, "cs", 2, 157, 304, 1], [1, "cs", 2, 156, 304, 1], [1, "cs", 2, 155, 304, 1], [1, "cs", 2, 153, 304, 1], [1, "cs", 2, 153, 303, 1], [1, "cs", 2, 154, 303, 1], [1, "cs", 2, 154, 302, 1], [1, "cs", 2, 155, 302, 1], [1, "cs", 2, 152, 303, 1], [1, "cs", 2, 152, 302, 1], [1, "cs", 0, 151, 302, 1], [1, "cs", 0, 149, 303, 1], [1, "cs", 0, 145, 304, 1], [1, "cs", 0, 147, 302, 1], [1, "cs", 0, 143, 303, 1], [1, "cs", 0, 141, 303, 1], [1, "cs", 1, 147, 304, 1], [1, "cs", 1, 145, 302, 1], [1, "cs", 1, 142, 302, 1], [1, "cs", 1, 150, 304, 1], [1, "cs", 2, 151, 304, 1], [1, "cs", 2, 151, 303, 1], [1, "cs", 2, 150, 303, 1], [1, "cs", 2, 150, 302, 1], [1, "cs", 2, 148, 302, 1], [1, "cs", 2, 146, 302, 1], [1, "cs", 2, 144, 302, 1], [1, "cs", 2, 141, 302, 1], [1, "cs", 2, 141, 304, 1], [1, "cs", 2, 142, 304, 1], [1, "cs", 2, 142, 303, 1], [1, "cs", 2, 143, 304, 1], [1, "cs", 2, 144, 304, 1], [1, "cs", 2, 144, 303, 1], [1, "cs", 2, 148, 304, 1], [1, "cs", 2, 148, 303, 1], [1, "cs", 2, 146, 303, 1], [1, "cs", 2, 145, 303, 1], [1, "cs", 2, 147, 303, 1], [1, "cs", 2, 146, 304, 1], [1, "cs", 2, 149, 304, 1], [1, "cs", 3, 149, 302, 1], [1, "cs", 3, 143, 302, 1], [1, "cs", 0, 139, 304, 1], [1, "cs", 0, 138, 302, 1], [1, "cs", 1, 139, 302, 1], [1, "cs", 2, 140, 302, 1], [1, "cs", 2, 140, 303, 1], [1, "cs", 2, 139, 303, 1], [1, "cs", 2, 138, 303, 1], [1, "cs", 2, 138, 304, 1], [1, "cs", 2, 140, 304, 1], [1, "cs", 0, 137, 304, 1], [1, "cs", 0, 135, 303, 1], [1, "cs", 0, 133, 304, 1], [1, "cs", 1, 135, 304, 1], [1, "cs", 1, 136, 302, 1], [1, "cs", 2, 137, 302, 1], [1, "cs", 2, 136, 303, 1], [1, "cs", 2, 137, 303, 1], [1, "cs", 2, 136, 304, 1], [1, "cs", 2, 134, 304, 1], [1, "cs", 2, 134, 303, 1], [1, "cs", 2, 133, 303, 1], [1, "cs", 2, 132, 304, 1], [1, "cs", 0, 131, 302, 1], [1, "cs", 0, 134, 302, 1], [1, "cs", 0, 129, 304, 1], [1, "cs", 1, 130, 303, 1], [1, "cs", 1, 132, 302, 1], [1, "cs", 2, 135, 302, 1], [1, "cs", 2, 133, 302, 1], [1, "cs", 2, 132, 303, 1], [1, "cs", 2, 131, 303, 1], [1, "cs", 2, 130, 304, 1], [1, "cs", 2, 131, 304, 1], [1, "cs", 2, 128, 304, 1], [1, "cs", 2, 129, 303, 1], [1, "cs", 2, 130, 302, 1], [1, "cs", 3, 127, 304, 1], [1, "cs", 2, 132, 301, 1], [1, "cs", 2, 133, 301, 1], [1, "cs", 2, 134, 301, 1], [1, "cs", 2, 135, 301, 1], [1, "cs", 3, 131, 301, 1], [1, "cs", 3, 136, 301, 1], [1, "cs", 3, 136, 178, 1], [1, "cs", 0, 136, 183, 1], [1, "cs", 2, 136, 182, 1], [1, "cs", 1, 136, 181, 1], [1, "cs", 0, 136, 179, 1], [1, "cs", 3, 136, 180, 1], [1, "cs", 2, 135, 183, 1], [1, "cs", 1, 135, 182, 1], [1, "cs", 3, 135, 180, 1], [1, "cs", 0, 134, 183, 1], [1, "cs", 2, 133, 183, 1], [1, "cs", 3, 133, 182, 1], [1, "cs", 1, 132, 183, 1], [1, "cs", 3, 131, 183, 1], [1, "cs", 2, 135, 181, 1], [1, "cs", 2, 134, 182, 1], [1, "cs", 3, 134, 181, 1], [1, "fod", 0, 213, 301, 0], [1, "fod", 0, 204, 301, 0], [1, "fod", 1, 196, 288, 0], [1, "fod", 1, 198, 283, 0], [1, "fod", 1, 190, 288, 0], [1, "fod", 1, 189, 296, 0], [1, "fod", 1, 193, 293, 0], [1, "fod", 1, 183, 292, 0], [1, "fod", 1, 186, 287, 0], [1, "fod", 1, 190, 290, 0], [1, "fod", 1, 218, 271, 0], [1, "fod", 1, 220, 266, 0], [1, "fod", 1, 211, 268, 0], [1, "fod", 1, 210, 274, 0], [1, "fod", 1, 205, 263, 0], [1, "fod", 1, 216, 258, 0], [1, "fod", 2, 201, 294, 0], [1, "fod", 2, 190, 296, 0], [1, "fod", 2, 188, 299, 0], [1, "fod", 2, 186, 297, 0], [1, "fod", 2, 188, 296, 0], [1, "fod", 2, 189, 291, 0], [1, "fod", 2, 189, 286, 0], [1, "fod", 2, 191, 286, 0], [1, "fod", 2, 197, 286, 0], [1, "fod", 2, 195, 290, 0], [1, "fod", 2, 186, 288, 0], [1, "fod", 2, 184, 290, 0], [1, "fod", 2, 183, 293, 0], [1, "fod", 2, 198, 286, 0], [1, "fod", 2, 196, 283, 0], [1, "fod", 2, 196, 281, 0], [1, "fod", 2, 201, 280, 0], [1, "fod", 2, 205, 287, 0], [1, "fod", 2, 209, 283, 0], [1, "fod", 2, 212, 280, 0], [1, "fod", 2, 209, 277, 0], [1, "fod", 2, 217, 278, 0], [1, "fod", 2, 219, 275, 0], [1, "fod", 2, 220, 271, 0], [1, "fod", 2, 220, 267, 0], [1, "fod", 2, 217, 265, 0], [1, "fod", 2, 213, 267, 0], [1, "fod", 2, 208, 264, 0], [1, "fod", 2, 206, 261, 0], [1, "fod", 2, 203, 265, 0], [1, "fod", 2, 204, 270, 0], [1, "fod", 2, 196, 267, 0], [1, "fod", 2, 214, 261, 0], [1, "fod", 2, 211, 260, 0], [1, "fod", 2, 218, 256, 0], [1, "fod", 2, 219, 262, 0], [1, "fod", 2, 220, 253, 0], [1, "fod", 2, 211, 257, 0], [1, "la", 3, 198, 27, 1], [1, "la", 3, 201, 30, 1], [1, "la", 3, 200, 32, 1], [1, "la", 3, 198, 33, 1], [1, "la", 3, 196, 33, 1], [1, "la", 3, 194, 32, 1], [1, "la", 3, 194, 28, 1], [1, "la", 0, 200, 28, 1], [1, "la", 0, 193, 30, 1], [1, "la", 3, 196, 27, 1], [1, "la", 3, 199, 30, 1], [1, "la", 3, 197, 29, 1], [1, "la", 3, 195, 30, 1], [1, "la", 3, 197, 31, 1], [1, "la", 2, 201, 33, 1], [1, "la", 4, 202, 34, 1], [1, "la", 4, 202, 35, 1], [1, "la", 4, 203, 36, 1], [1, "la", 4, 204, 37, 1], [1, "la", 2, 205, 38, 1], [1, "la", 5, 205, 39, 1], [1, "la", 5, 205, 40, 1], [1, "la", 2, 206, 41, 1], [1, "la", 1, 207, 42, 1], [1, "la", 1, 205, 41, 1], [1, "la", 4, 208, 43, 1], [1, "la", 4, 209, 43, 1], [1, "la", 1, 210, 43, 1], [1, "la", 2, 211, 43, 1], [1, "la", 5, 212, 43, 1], [1, "la", 4, 213, 44, 1], [1, "la", 3, 223, 54, 1], [1, "la", 3, 221, 53, 1], [1, "la", 3, 219, 53, 1], [1, "la", 4, 218, 52, 1], [1, "la", 4, 217, 51, 1], [1, "la", 4, 216, 51, 1], [1, "la", 1, 215, 50, 1], [1, "la", 4, 212, 46, 1], [1, "la", 1, 210, 44, 1], [1, "la", 3, 206, 50, 1], [1, "re", 0, 217, 24, 1], [1, "re", 0, 207, 16, 1], [1, "de", 44, 54, 14, 0], [1, "de", 44, 53, 13, 0], [1, "de", 44, 51, 16, 0], [1, "de", 44, 49, 13, 0], [1, "de", 44, 48, 14, 0], [1, "de", 21, 78, 293, 0], [1, "cs", 0, 221, 8, 1], [1, "cs", 0, 224, 9, 1], [1, "cs", 1, 223, 8, 1], [1, "cs", 2, 224, 8, 1], [1, "cs", 2, 222, 8, 1], [1, "cs", 0, 224, 6, 1], [1, "cs", 0, 222, 5, 1], [1, "cs", 0, 219, 7, 1], [1, "cs", 1, 220, 5, 1], [1, "cs", 1, 217, 7, 1], [1, "cs", 2, 224, 5, 1], [1, "cs", 2, 223, 5, 1], [1, "cs", 2, 224, 7, 1], [1, "cs", 2, 223, 7, 1], [1, "cs", 2, 223, 6, 1], [1, "cs", 2, 222, 6, 1], [1, "cs", 2, 222, 7, 1], [1, "cs", 2, 221, 7, 1], [1, "cs", 2, 221, 6, 1], [1, "cs", 2, 221, 5, 1], [1, "cs", 2, 220, 6, 1], [1, "cs", 2, 220, 7, 1], [1, "cs", 2, 220, 8, 1], [1, "cs", 2, 219, 8, 1], [1, "cs", 2, 219, 6, 1], [1, "cs", 2, 219, 5, 1], [1, "cs", 0, 218, 5, 1], [1, "cs", 0, 216, 8, 1], [1, "cs", 2, 218, 8, 1], [1, "cs", 2, 217, 8, 1], [1, "cs", 2, 218, 7, 1], [1, "cs", 2, 218, 6, 1], [1, "cs", 2, 217, 6, 1], [1, "cs", 2, 217, 5, 1], [1, "cs", 1, 215, 6, 1], [1, "cs", 1, 213, 5, 1], [1, "cs", 0, 214, 6, 1], [1, "cs", 0, 216, 5, 1], [1, "cs", 0, 213, 8, 1], [1, "cs", 0, 211, 7, 1], [1, "cs", 0, 209, 5, 1], [1, "cs", 0, 208, 7, 1], [1, "cs", 0, 207, 8, 1], [1, "cs", 2, 216, 6, 1], [1, "cs", 2, 216, 7, 1], [1, "cs", 2, 215, 7, 1], [1, "cs", 2, 215, 8, 1], [1, "cs", 2, 214, 8, 1], [1, "cs", 2, 214, 7, 1], [1, "cs", 2, 215, 5, 1], [1, "cs", 2, 214, 5, 1], [1, "cs", 2, 213, 6, 1], [1, "cs", 2, 213, 7, 1], [1, "cs", 2, 212, 7, 1], [1, "cs", 1, 211, 5, 1], [1, "cs", 1, 209, 8, 1], [1, "cs", 2, 212, 8, 1], [1, "cs", 2, 211, 8, 1], [1, "cs", 2, 210, 8, 1], [1, "cs", 2, 209, 7, 1], [1, "cs", 2, 210, 7, 1], [1, "cs", 2, 210, 6, 1], [1, "cs", 2, 212, 6, 1], [1, "cs", 2, 212, 5, 1], [1, "cs", 2, 211, 6, 1], [1, "cs", 2, 210, 5, 1], [1, "cs", 2, 209, 6, 1], [1, "cs", 2, 208, 6, 1], [1, "cs", 2, 208, 5, 1], [1, "cs", 2, 207, 7, 1], [1, "cs", 2, 207, 6, 1], [1, "cs", 2, 207, 5, 1], [1, "cs", 2, 206, 5, 1], [1, "cs", 2, 208, 8, 1], [1, "cs", 2, 206, 6, 1], [1, "cs", 0, 204, 8, 1], [1, "cs", 0, 205, 6, 1], [1, "cs", 0, 203, 5, 1], [1, "cs", 0, 202, 7, 1], [1, "cs", 0, 199, 8, 1], [1, "cs", 0, 200, 6, 1], [1, "cs", 0, 197, 6, 1], [1, "cs", 0, 195, 8, 1], [1, "cs", 0, 194, 6, 1], [1, "cs", 1, 202, 8, 1], [1, "cs", 1, 206, 7, 1], [1, "cs", 1, 201, 5, 1], [1, "cs", 1, 197, 8, 1], [1, "cs", 1, 192, 7, 1], [1, "cs", 1, 195, 5, 1], [1, "cs", 2, 205, 7, 1], [1, "cs", 2, 205, 8, 1], [1, "cs", 2, 206, 8, 1], [1, "cs", 2, 204, 7, 1], [1, "cs", 2, 204, 6, 1], [1, "cs", 2, 204, 5, 1], [1, "cs", 2, 205, 5, 1], [1, "cs", 2, 203, 6, 1], [1, "cs", 2, 203, 7, 1], [1, "cs", 2, 203, 8, 1], [1, "cs", 2, 201, 8, 1], [1, "cs", 2, 200, 8, 1], [1, "cs", 2, 200, 7, 1], [1, "cs", 2, 201, 7, 1], [1, "cs", 2, 201, 6, 1], [1, "cs", 2, 202, 5, 1], [1, "cs", 2, 202, 6, 1], [1, "cs", 2, 200, 5, 1], [1, "cs", 2, 199, 5, 1], [1, "cs", 2, 197, 5, 1], [1, "cs", 2, 196, 5, 1], [1, "cs", 2, 198, 5, 1], [1, "cs", 2, 198, 6, 1], [1, "cs", 2, 199, 6, 1], [1, "cs", 2, 199, 7, 1], [1, "cs", 2, 198, 7, 1], [1, "cs", 2, 198, 8, 1], [1, "cs", 2, 197, 7, 1], [1, "cs", 2, 196, 7, 1], [1, "cs", 2, 196, 8, 1], [1, "cs", 2, 196, 6, 1], [1, "cs", 2, 195, 6, 1], [1, "cs", 2, 195, 7, 1], [1, "cs", 2, 194, 7, 1], [1, "cs", 2, 193, 8, 1], [1, "cs", 2, 194, 8, 1], [1, "cs", 2, 193, 7, 1], [1, "cs", 2, 193, 6, 1], [1, "cs", 2, 193, 5, 1], [1, "cs", 2, 194, 5, 1], [1, "cs", 0, 192, 5, 1], [1, "cs", 0, 191, 8, 1], [1, "cs", 0, 190, 6, 1], [1, "cs", 0, 188, 7, 1], [1, "cs", 0, 186, 8, 1], [1, "cs", 0, 186, 5, 1], [1, "cs", 0, 184, 7, 1], [1, "cs", 0, 182, 8, 1], [1, "cs", 0, 181, 6, 1], [1, "cs", 1, 189, 8, 1], [1, "cs", 1, 183, 8, 1], [1, "cs", 1, 188, 5, 1], [1, "cs", 1, 185, 6, 1], [1, "cs", 1, 180, 7, 1], [1, "cs", 1, 183, 5, 1], [1, "cs", 1, 178, 8, 1], [1, "cs", 1, 177, 6, 1], [1, "cs", 1, 173, 7, 1], [1, "cs", 1, 171, 7, 1], [1, "cs", 0, 177, 8, 1], [1, "cs", 0, 175, 7, 1], [1, "cs", 0, 179, 5, 1], [1, "cs", 0, 174, 5, 1], [1, "cs", 0, 176, 5, 1], [1, "cs", 0, 172, 8, 1], [1, "cs", 0, 170, 8, 1], [1, "cs", 0, 169, 6, 1], [1, "cs", 2, 192, 6, 1], [1, "cs", 2, 192, 8, 1], [1, "cs", 2, 191, 7, 1], [1, "cs", 2, 191, 6, 1], [1, "cs", 2, 191, 5, 1], [1, "cs", 2, 190, 5, 1], [1, "cs", 2, 189, 5, 1], [1, "cs", 2, 189, 6, 1], [1, "cs", 2, 189, 7, 1], [1, "cs", 2, 190, 7, 1], [1, "cs", 2, 190, 8, 1], [1, "cs", 2, 188, 8, 1], [1, "cs", 2, 187, 8, 1], [1, "cs", 2, 187, 7, 1], [1, "cs", 2, 187, 6, 1], [1, "cs", 2, 188, 6, 1], [1, "cs", 2, 187, 5, 1], [1, "cs", 2, 186, 6, 1], [1, "cs", 2, 186, 7, 1], [1, "cs", 2, 185, 7, 1], [1, "cs", 2, 185, 8, 1], [1, "cs", 2, 184, 8, 1], [1, "cs", 2, 183, 7, 1], [1, "cs", 2, 183, 6, 1], [1, "cs", 2, 184, 6, 1], [1, "cs", 2, 184, 5, 1], [1, "cs", 2, 185, 5, 1], [1, "cs", 2, 182, 6, 1], [1, "cs", 2, 182, 7, 1], [1, "cs", 2, 181, 7, 1], [1, "cs", 2, 181, 8, 1], [1, "cs", 2, 180, 8, 1], [1, "cs", 2, 179, 8, 1], [1, "cs", 2, 182, 5, 1], [1, "cs", 2, 181, 5, 1], [1, "cs", 2, 180, 5, 1], [1, "cs", 2, 180, 6, 1], [1, "cs", 2, 179, 6, 1], [1, "cs", 2, 179, 7, 1], [1, "cs", 2, 178, 7, 1], [1, "cs", 2, 178, 6, 1], [1, "cs", 2, 178, 5, 1], [1, "cs", 2, 177, 5, 1], [1, "cs", 2, 177, 7, 1], [1, "cs", 2, 176, 7, 1], [1, "cs", 2, 176, 6, 1], [1, "cs", 2, 175, 6, 1], [1, "cs", 2, 175, 5, 1], [1, "cs", 2, 176, 8, 1], [1, "cs", 2, 174, 8, 1], [1, "cs", 2, 175, 8, 1], [1, "cs", 2, 173, 8, 1], [1, "cs", 2, 174, 7, 1], [1, "cs", 2, 173, 6, 1], [1, "cs", 2, 174, 6, 1], [1, "cs", 2, 172, 5, 1], [1, "cs", 2, 173, 5, 1], [1, "cs", 2, 172, 6, 1], [1, "cs", 2, 172, 7, 1], [1, "cs", 2, 171, 8, 1], [1, "cs", 2, 170, 7, 1], [1, "cs", 2, 170, 6, 1], [1, "cs", 2, 170, 5, 1], [1, "cs", 2, 171, 5, 1], [1, "cs", 2, 171, 6, 1], [1, "cs", 2, 169, 5, 1], [1, "cs", 2, 169, 7, 1], [1, "cs", 2, 169, 8, 1], [1, "cs", 1, 168, 7, 1], [1, "cs", 1, 166, 5, 1], [1, "cs", 1, 164, 7, 1], [1, "cs", 1, 160, 7, 1], [1, "cs", 1, 156, 8, 1], [1, "cs", 0, 166, 8, 1], [1, "cs", 0, 168, 5, 1], [1, "cs", 0, 164, 6, 1], [1, "cs", 0, 162, 7, 1], [1, "cs", 0, 158, 8, 1], [1, "cs", 0, 157, 6, 1], [1, "cs", 0, 161, 5, 1], [1, "cs", 0, 159, 5, 1], [1, "cs", 0, 155, 7, 1], [1, "cs", 0, 154, 5, 1], [1, "cs", 0, 151, 7, 1], [1, "cs", 1, 153, 8, 1], [1, "cs", 1, 151, 5, 1], [1, "cs", 2, 168, 6, 1], [1, "cs", 2, 168, 8, 1], [1, "cs", 2, 167, 8, 1], [1, "cs", 2, 167, 7, 1], [1, "cs", 2, 167, 6, 1], [1, "cs", 2, 167, 5, 1], [1, "cs", 2, 166, 6, 1], [1, "cs", 2, 166, 7, 1], [1, "cs", 2, 165, 7, 1], [1, "cs", 2, 165, 6, 1], [1, "cs", 2, 165, 5, 1], [1, "cs", 2, 164, 5, 1], [1, "cs", 2, 163, 5, 1], [1, "cs", 2, 162, 5, 1], [1, "cs", 2, 162, 6, 1], [1, "cs", 2, 163, 6, 1], [1, "cs", 2, 163, 7, 1], [1, "cs", 2, 163, 8, 1], [1, "cs", 2, 164, 8, 1], [1, "cs", 2, 165, 8, 1], [1, "cs", 2, 161, 8, 1], [1, "cs", 2, 162, 8, 1], [1, "cs", 2, 160, 8, 1], [1, "cs", 2, 159, 8, 1], [1, "cs", 2, 159, 7, 1], [1, "cs", 2, 159, 6, 1], [1, "cs", 2, 160, 5, 1], [1, "cs", 2, 160, 6, 1], [1, "cs", 2, 161, 6, 1], [1, "cs", 2, 161, 7, 1], [1, "cs", 2, 157, 7, 1], [1, "cs", 2, 158, 7, 1], [1, "cs", 2, 158, 6, 1], [1, "cs", 2, 158, 5, 1], [1, "cs", 2, 155, 5, 1], [1, "cs", 2, 155, 6, 1], [1, "cs", 2, 156, 6, 1], [1, "cs", 2, 156, 7, 1], [1, "cs", 2, 157, 8, 1], [1, "cs", 2, 155, 8, 1], [1, "cs", 2, 154, 8, 1], [1, "cs", 2, 154, 7, 1], [1, "cs", 2, 154, 6, 1], [1, "cs", 2, 152, 8, 1], [1, "cs", 2, 153, 7, 1], [1, "cs", 2, 153, 6, 1], [1, "cs", 2, 153, 5, 1], [1, "cs", 2, 152, 5, 1], [1, "cs", 2, 152, 6, 1], [1, "cs", 2, 152, 7, 1], [1, "cs", 2, 151, 6, 1], [1, "cs", 2, 157, 5, 1], [1, "cs", 1, 156, 5, 1], [1, "cs", 0, 150, 5, 1], [1, "cs", 0, 149, 7, 1], [1, "cs", 0, 147, 8, 1], [1, "cs", 0, 146, 5, 1], [1, "cs", 0, 144, 7, 1], [1, "cs", 0, 142, 5, 1], [1, "cs", 1, 147, 6, 1], [1, "cs", 1, 145, 8, 1], [1, "cs", 1, 144, 5, 1], [1, "cs", 2, 148, 5, 1], [1, "cs", 2, 149, 5, 1], [1, "cs", 2, 150, 6, 1], [1, "cs", 2, 150, 8, 1], [1, "cs", 2, 151, 8, 1], [1, "cs", 2, 150, 7, 1], [1, "cs", 2, 149, 8, 1], [1, "cs", 2, 148, 8, 1], [1, "cs", 2, 149, 6, 1], [1, "cs", 2, 148, 6, 1], [1, "cs", 2, 148, 7, 1], [1, "cs", 2, 147, 7, 1], [1, "cs", 2, 147, 5, 1], [1, "cs", 2, 146, 6, 1], [1, "cs", 2, 146, 7, 1], [1, "cs", 2, 146, 8, 1], [1, "cs", 2, 145, 7, 1], [1, "cs", 2, 145, 6, 1], [1, "cs", 2, 145, 5, 1], [1, "cs", 2, 144, 6, 1], [1, "cs", 2, 143, 5, 1], [1, "cs", 2, 143, 6, 1], [1, "cs", 2, 142, 6, 1], [1, "cs", 2, 141, 5, 1], [1, "cs", 2, 224, 10, 1], [1, "cs", 0, 224, 11, 1], [1, "cs", 0, 224, 13, 1], [1, "cs", 0, 224, 17, 1], [1, "cs", 0, 224, 19, 1], [1, "cs", 0, 224, 22, 1], [1, "cs", 0, 224, 24, 1], [1, "cs", 0, 224, 29, 1], [1, "cs", 0, 224, 33, 1], [1, "cs", 0, 224, 35, 1], [1, "cs", 0, 224, 38, 1], [1, "cs", 1, 224, 14, 1], [1, "cs", 1, 224, 20, 1], [1, "cs", 1, 224, 27, 1], [1, "cs", 1, 224, 31, 1], [1, "cs", 1, 224, 36, 1], [1, "cs", 2, 224, 12, 1], [1, "cs", 2, 224, 15, 1], [1, "cs", 2, 224, 16, 1], [1, "cs", 2, 224, 18, 1], [1, "cs", 2, 224, 21, 1], [1, "cs", 2, 224, 23, 1], [1, "cs", 2, 224, 25, 1], [1, "cs", 2, 224, 26, 1], [1, "cs", 2, 224, 28, 1], [1, "cs", 2, 224, 30, 1], [1, "cs", 2, 224, 32, 1], [1, "cs", 2, 224, 34, 1], [1, "cs", 2, 224, 37, 1], [1, "cs", 2, 224, 39, 1], [1, "cs", 0, 224, 41, 1], [1, "cs", 0, 224, 44, 1], [1, "cs", 0, 224, 46, 1], [1, "cs", 0, 224, 52, 1], [1, "cs", 0, 224, 57, 1], [1, "cs", 1, 224, 47, 1], [1, "cs", 2, 224, 40, 1], [1, "cs", 2, 224, 42, 1], [1, "cs", 2, 224, 43, 1], [1, "cs", 2, 224, 45, 1], [1, "cs", 2, 224, 49, 1], [1, "cs", 1, 224, 50, 1], [1, "cs", 2, 224, 51, 1], [1, "la", 3, 224, 54, 1], [1, "cs", 2, 224, 56, 1], [1, "cs", 2, 224, 58, 1], [1, "cs", 2, 224, 61, 1], [1, "cs", 0, 224, 60, 1], [1, "cs", 0, 224, 64, 1], [1, "cs", 0, 224, 66, 1], [1, "cs", 0, 224, 70, 1], [1, "cs", 0, 224, 74, 1], [1, "cs", 0, 224, 77, 1], [1, "cs", 1, 224, 62, 1], [1, "cs", 1, 224, 68, 1], [1, "cs", 1, 224, 72, 1], [1, "cs", 1, 224, 76, 1], [1, "cs", 1, 224, 80, 1], [1, "cs", 1, 224, 83, 1], [1, "cs", 1, 224, 91, 1], [1, "cs", 1, 224, 95, 1], [1, "cs", 1, 224, 97, 1], [1, "cs", 0, 224, 85, 1], [1, "cs", 0, 224, 88, 1], [1, "cs", 0, 224, 93, 1], [1, "cs", 0, 224, 98, 1], [1, "cs", 2, 224, 59, 1], [1, "cs", 2, 224, 63, 1], [1, "cs", 2, 224, 65, 1], [1, "cs", 2, 224, 67, 1], [1, "cs", 2, 224, 69, 1], [1, "cs", 2, 224, 71, 1], [1, "cs", 2, 224, 73, 1], [1, "cs", 2, 224, 75, 1], [1, "cs", 2, 224, 78, 1], [1, "cs", 2, 224, 79, 1], [1, "cs", 2, 224, 81, 1], [1, "cs", 2, 224, 82, 1], [1, "cs", 2, 224, 84, 1], [1, "cs", 2, 224, 86, 1], [1, "cs", 2, 224, 87, 1], [1, "cs", 2, 224, 89, 1], [1, "cs", 2, 224, 90, 1], [1, "cs", 2, 224, 92, 1], [1, "cs", 2, 224, 94, 1], [1, "cs", 2, 224, 96, 1], [1, "cs", 2, 224, 99, 1], [1, "cs", 2, 224, 100, 1], [1, "cs", 0, 224, 101, 1], [1, "cs", 1, 224, 103, 1], [1, "cs", 2, 224, 102, 1], [1, "cs", 0, 222, 10, 1], [1, "cs", 2, 223, 9, 1], [1, "cs", 2, 222, 9, 1], [1, "cs", 2, 221, 9, 1], [1, "cs", 2, 223, 10, 1], [1, "cs", 2, 223, 11, 1], [1, "cs", 2, 223, 12, 1], [1, "cs", 3, 223, 13, 1], [1, "cs", 3, 222, 11, 1], [1, "cs", 3, 220, 9, 1], [1, "cs", 3, 219, 9, 1], [1, "cs", 3, 221, 10, 1], [1, "re", 2, 219, 13, 1], [1, "re", 1, 218, 18, 1], [1, "re", 1, 214, 13, 1], [1, "cs", 0, 221, 20, 1], [1, "cs", 1, 223, 18, 1], [1, "cs", 2, 222, 19, 1], [1, "cs", 2, 223, 19, 1], [1, "cs", 2, 223, 20, 1], [1, "cs", 2, 222, 20, 1], [1, "cs", 2, 220, 21, 1], [1, "cs", 0, 219, 21, 1], [1, "cs", 3, 221, 21, 1], [1, "cs", 3, 218, 21, 1], [1, "cs", 3, 222, 21, 1], [1, "cs", 3, 220, 22, 1], [1, "cs", 3, 219, 22, 1], [1, "cs", 3, 221, 22, 1], [1, "cs", 0, 211, 9, 1], [1, "cs", 1, 211, 10, 1], [1, "cs", 1, 210, 12, 1], [1, "cs", 0, 211, 13, 1], [1, "cs", 2, 210, 9, 1], [1, "cs", 2, 210, 10, 1], [1, "cs", 2, 210, 11, 1], [1, "cs", 2, 212, 9, 1], [1, "cs", 2, 210, 13, 1], [1, "cs", 2, 211, 12, 1], [1, "cs", 2, 211, 11, 1], [1, "cs", 2, 211, 14, 1], [1, "cs", 2, 212, 15, 1], [1, "cs", 2, 210, 14, 1], [1, "cs", 3, 211, 15, 1], [1, "cs", 3, 213, 9, 1], [1, "cs", 3, 212, 10, 1], [1, "cs", 3, 223, 21, 1], [1, "cs", 3, 209, 9, 1], [1, "la", 3, 223, 22, 1], [1, "la", 3, 221, 23, 1], [1, "la", 3, 207, 9, 1], [1, "la", 3, 209, 10, 1], [1, "la", 0, 209, 12, 1], [1, "la", 4, 209, 14, 1], [1, "la", 4, 219, 23, 1], [1, "la", 3, 210, 15, 1], [1, "la", 3, 217, 22, 1], [1, "la", 4, 212, 16, 1], [1, "la", 2, 214, 19, 1], [1, "la", 4, 213, 20, 1], [1, "la", 1, 212, 21, 1], [1, "la", 4, 215, 18, 1], [1, "la", 2, 216, 17, 1], [1, "la", 5, 216, 16, 1], [1, "la", 5, 216, 15, 1], [1, "la", 1, 217, 16, 1], [1, "la", 2, 218, 16, 1], [1, "la", 2, 216, 14, 1], [1, "la", 2, 219, 16, 1], [1, "la", 5, 220, 16, 1], [1, "la", 5, 216, 13, 1], [1, "la", 4, 217, 15, 1], [1, "cs", 0, 211, 44, 1], [1, "cs", 1, 212, 45, 1], [1, "cs", 2, 213, 45, 1], [1, "cs", 0, 214, 46, 1], [1, "cs", 2, 215, 46, 1], [1, "cs", 3, 213, 46, 1], [1, "cs", 3, 214, 47, 1], [1, "cs", 3, 214, 48, 1], [1, "cs", 3, 216, 46, 1], [1, "cs", 0, 208, 20, 1], [1, "cs", 0, 210, 21, 1], [1, "cs", 0, 212, 23, 1], [1, "cs", 0, 213, 25, 1], [1, "cs", 2, 213, 24, 1], [1, "cs", 2, 211, 22, 1], [1, "cs", 2, 210, 20, 1], [1, "cs", 2, 209, 21, 1], [1, "cs", 2, 209, 20, 1], [1, "cs", 2, 211, 21, 1], [1, "cs", 2, 212, 22, 1], [1, "cs", 2, 213, 23, 1], [1, "cs", 3, 213, 26, 1], [1, "cs", 3, 207, 20, 1], [1, "la", 4, 192, 33, 1], [1, "la", 4, 191, 34, 1], [1, "la", 4, 190, 35, 1], [1, "la", 3, 189, 37, 1], [1, "la", 3, 188, 39, 1], [1, "la", 4, 186, 40, 1], [1, "la", 4, 185, 39, 1], [1, "la", 4, 184, 39, 1], [1, "la", 2, 183, 39, 1], [1, "la", 1, 182, 40, 1], [1, "la", 2, 181, 41, 1], [1, "la", 5, 180, 41, 1], [1, "la", 5, 179, 41, 1], [1, "la", 4, 192, 28, 1], [1, "la", 4, 191, 28, 1], [1, "la", 4, 190, 27, 1], [1, "la", 3, 188, 27, 1], [1, "la", 4, 187, 26, 1], [1, "la", 4, 186, 25, 1], [1, "la", 4, 185, 25, 1], [1, "la", 4, 184, 24, 1], [1, "la", 5, 184, 23, 1], [1, "la", 2, 184, 22, 1], [1, "la", 5, 184, 21, 1], [1, "la", 1, 183, 20, 1], [1, "la", 5, 182, 20, 1], [1, "la", 2, 181, 20, 1], [1, "la", 5, 180, 20, 1], [1, "la", 2, 179, 20, 1], [1, "la", 4, 178, 19, 1], [1, "la", 3, 178, 17, 1], [1, "la", 3, 176, 18, 1], [1, "cs", 0, 177, 15, 1], [1, "cs", 0, 175, 17, 1], [1, "cs", 0, 180, 16, 1], [1, "cs", 0, 174, 19, 1], [1, "cs", 0, 172, 20, 1], [1, "cs", 1, 175, 15, 1], [1, "cs", 1, 172, 18, 1], [1, "cs", 1, 181, 15, 1], [1, "cs", 2, 179, 15, 1], [1, "cs", 2, 177, 16, 1], [1, "cs", 2, 176, 16, 1], [1, "cs", 2, 174, 18, 1], [1, "cs", 2, 173, 19, 1], [1, "cs", 2, 172, 19, 1], [1, "cs", 2, 173, 18, 1], [1, "cs", 2, 173, 17, 1], [1, "cs", 2, 174, 17, 1], [1, "cs", 2, 174, 16, 1], [1, "cs", 2, 175, 16, 1], [1, "cs", 2, 176, 15, 1], [1, "cs", 2, 178, 15, 1], [1, "cs", 2, 178, 16, 1], [1, "cs", 2, 179, 16, 1], [1, "cs", 2, 180, 15, 1], [1, "cs", 2, 181, 16, 1], [1, "cs", 3, 182, 16, 1], [1, "cs", 3, 172, 21, 1], [1, "la", 1, 175, 19, 1], [1, "la", 2, 174, 20, 1], [1, "la", 2, 173, 20, 1], [1, "la", 1, 180, 17, 1], [1, "la", 2, 181, 17, 1], [1, "la", 3, 191, 20, 1], [1, "s", 0, 217, 30, 1], [1, "s", 0, 208, 35, 1], [1, "s", 0, 204, 24, 1], [1, "s", 1, 218, 32, 1], [1, "s", 1, 207, 34, 1], [1, "s", 1, 202, 23, 1], [1, "s", 1, 195, 16, 1], [1, "s", 2, 222, 28, 1], [1, "s", 2, 212, 38, 1], [1, "s", 2, 207, 23, 1], [1, "s", 2, 202, 12, 1], [1, "s", 2, 195, 18, 1], [1, "s", 1, 191, 12, 1], [1, "s", 0, 187, 16, 1], [1, "s", 2, 188, 16, 1], [1, "s", 1, 186, 14, 1], [1, "s", 1, 201, 16, 1], [1, "g", 1, 216, 31, 1], [1, "g", 0, 200, 15, 1], [1, "g", 0, 202, 40, 1], [1, "g", 0, 189, 32, 1], [1, "g", 0, 204, 28, 1], [1, "g", 0, 196, 24, 1], [1, "g", 2, 198, 37, 1], [1, "s", 0, 193, 39, 1], [1, "s", 0, 201, 45, 1], [1, "a", 0, 210, 29, 1], [1, "a", 0, 200, 20, 1], [1, "cs", 0, 200, 34, 1], [1, "cs", 0, 193, 27, 1], [1, "cs", 1, 203, 30, 1], [1, "cs", 1, 191, 31, 1], [1, "cs", 2, 202, 32, 1], [1, "cs", 2, 194, 26, 1], [1, "cs", 2, 192, 27, 1], [1, "cs", 2, 192, 32, 1], [1, "cs", 2, 203, 31, 1], [1, "cs", 2, 202, 31, 1], [1, "cs", 2, 202, 30, 1], [1, "cs", 3, 202, 29, 1], [1, "cs", 3, 201, 32, 1], [1, "cs", 3, 199, 35, 1], [1, "cs", 0, 193, 34, 1], [1, "cs", 2, 194, 34, 1], [1, "cs", 2, 198, 35, 1], [1, "cs", 3, 199, 34, 1], [1, "cs", 3, 191, 29, 1], [1, "cs", 0, 191, 30, 1], [1, "cs", 3, 190, 29, 1], [1, "la", 3, 180, 69, 1], [1, "la", 3, 182, 68, 1], [1, "la", 3, 184, 68, 1], [1, "la", 3, 186, 70, 1], [1, "la", 3, 184, 72, 1], [1, "la", 3, 182, 72, 1], [1, "la", 3, 180, 71, 1], [1, "cs", 0, 186, 68, 1], [1, "cs", 0, 187, 70, 1], [1, "cs", 0, 183, 74, 1], [1, "cs", 0, 178, 70, 1], [1, "cs", 2, 182, 66, 1], [1, "cs", 2, 182, 74, 1], [1, "cs", 2, 181, 73, 1], [1, "cs", 2, 180, 74, 1], [1, "cs", 2, 181, 74, 1], [1, "la", 0, 184, 70, 1], [1, "la", 3, 182, 70, 1], [1, "cs", 2, 181, 67, 1], [1, "cs", 3, 184, 67, 1], [1, "cs", 3, 182, 67, 1], [1, "la", 4, 187, 69, 1], [1, "la", 1, 188, 68, 1], [1, "la", 4, 189, 68, 1], [1, "la", 2, 190, 68, 1], [1, "la", 1, 191, 68, 1], [1, "la", 4, 192, 68, 1], [1, "la", 2, 193, 68, 1], [1, "la", 4, 194, 69, 1], [1, "la", 2, 194, 70, 1], [1, "la", 5, 195, 71, 1], [1, "la", 1, 194, 71, 1], [1, "la", 2, 196, 72, 1], [1, "la", 4, 196, 71, 1], [1, "la", 1, 197, 73, 1], [1, "la", 5, 196, 73, 1], [1, "la", 5, 198, 73, 1], [1, "la", 3, 201, 73, 1], [1, "la", 3, 203, 72, 1], [1, "la", 4, 199, 73, 1], [1, "la", 1, 205, 72, 1], [1, "la", 2, 206, 72, 1], [1, "la", 5, 207, 72, 1], [1, "la", 1, 208, 72, 1], [1, "la", 1, 209, 73, 1], [1, "la", 2, 209, 74, 1], [1, "la", 5, 211, 76, 1], [1, "la", 4, 210, 75, 1], [1, "la", 5, 212, 76, 1], [1, "la", 4, 202, 75, 1], [1, "la", 2, 203, 76, 1], [1, "la", 4, 204, 77, 1], [1, "la", 2, 204, 78, 1], [1, "la", 2, 204, 79, 1], [1, "la", 5, 204, 80, 1], [1, "cs", 0, 202, 74, 1], [1, "cs", 1, 203, 74, 1], [1, "cs", 2, 204, 73, 1], [1, "cs", 2, 203, 75, 1], [1, "cs", 3, 204, 76, 1], [1, "cs", 3, 205, 73, 1], [1, "cs", 0, 205, 74, 1], [1, "cs", 2, 204, 74, 1], [1, "cs", 2, 204, 75, 1], [1, "cs", 2, 206, 73, 1], [1, "cs", 3, 207, 73, 1], [1, "cs", 2, 205, 76, 1], [1, "cs", 3, 205, 77, 1], [1, "la", 3, 183, 66, 1], [1, "la", 4, 183, 65, 1], [1, "la", 4, 184, 64, 1], [1, "la", 4, 185, 63, 1], [1, "la", 1, 185, 62, 1], [1, "la", 2, 185, 61, 1], [1, "la", 2, 185, 60, 1], [1, "la", 4, 186, 59, 1], [1, "la", 1, 187, 58, 1], [1, "la", 2, 187, 57, 1], [1, "la", 2, 187, 56, 1], [1, "s", 0, 191, 60, 1], [1, "s", 1, 195, 58, 1], [1, "s", 1, 199, 46, 1], [1, "s", 2, 202, 49, 1], [1, "g", 2, 197, 55, 1], [1, "g", 1, 213, 55, 1], [1, "g", 0, 192, 45, 1], [1, "g", 0, 210, 61, 1], [1, "g", 0, 182, 52, 1], [1, "g", 0, 180, 35, 1], [1, "g", 0, 175, 25, 1], [1, "g", 0, 168, 32, 1], [1, "g", 1, 179, 28, 1], [1, "g", 1, 161, 16, 1], [1, "g", 2, 172, 12, 1], [1, "g", 2, 160, 25, 1], [1, "g", 2, 157, 39, 1], [1, "g", 2, 170, 43, 1], [1, "g", 2, 202, 67, 1], [1, "g", 2, 217, 72, 1], [1, "g", 2, 214, 82, 1], [1, "g", 2, 193, 86, 1], [1, "g", 2, 168, 60, 1], [1, "g", 2, 165, 78, 1], [1, "g", 2, 173, 88, 1], [1, "s", 0, 185, 51, 1], [1, "s", 0, 175, 44, 1], [1, "s", 0, 165, 50, 1], [1, "s", 0, 160, 32, 1], [1, "s", 1, 162, 30, 1], [1, "s", 1, 176, 28, 1], [1, "s", 1, 154, 17, 1], [1, "s", 1, 184, 49, 1], [1, "s", 1, 192, 62, 1], [1, "s", 1, 216, 62, 1], [1, "s", 1, 204, 65, 1], [1, "s", 1, 217, 79, 1], [1, "s", 1, 206, 86, 1], [1, "la", 3, 211, 69, 1], [1, "la", 4, 215, 69, 1], [1, "la", 5, 201, 81, 1], [1, "la", 1, 207, 83, 1], [1, "la", 3, 173, 32, 1], [1, "la", 2, 181, 45, 1], [1, "la", 1, 178, 38, 1], [1, "la", 1, 213, 69, 1], [1, "la", 5, 214, 69, 1], [1, "la", 4, 216, 68, 1], [1, "la", 0, 191, 78, 1], [1, "la", 3, 191, 80, 1], [1, "la", 3, 189, 79, 1], [1, "g", 2, 150, 29, 1], [1, "g", 2, 154, 67, 1], [1, "g", 2, 202, 94, 1], [1, "g", 2, 155, 90, 1], [1, "s", 2, 215, 80, 1], [1, "s", 2, 204, 62, 1], [1, "s", 2, 218, 60, 1], [1, "s", 2, 194, 62, 1], [1, "s", 0, 216, 86, 1], [1, "s", 0, 211, 93, 1], [1, "la", 0, 216, 92, 1], [1, "la", 0, 151, 96, 1], [1, "la", 1, 155, 95, 1], [1, "la", 4, 214, 88, 1], [1, "s", 0, 205, 99, 1], [1, "s", 1, 217, 88, 1], [1, "s", 1, 213, 94, 1], [1, "s", 1, 202, 97, 1], [1, "s", 0, 199, 85, 1], [1, "s", 0, 190, 93, 1], [1, "s", 1, 199, 87, 1], [1, "s", 1, 192, 97, 1], [1, "la", 3, 196, 92, 1], [1, "la", 1, 199, 91, 1], [1, "la", 1, 220, 91, 1], [1, "la", 0, 219, 77, 1], [1, "la", 0, 200, 59, 1], [1, "la", 3, 188, 87, 1], [1, "la", 0, 183, 94, 1], [1, "la", 1, 187, 83, 1], [1, "la", 1, 175, 82, 1], [1, "la", 1, 172, 94, 1], [1, "la", 2, 179, 78, 1], [1, "la", 0, 166, 87, 1], [1, "la", 3, 159, 80, 1], [1, "la", 3, 167, 15, 1], [1, "la", 1, 164, 17, 1], [1, "la", 1, 172, 28, 1], [1, "la", 3, 153, 24, 1], [1, "la", 4, 164, 91, 1], [1, "la", 4, 156, 82, 1], [1, "la", 4, 149, 90, 1], [1, "s", 0, 178, 85, 1], [1, "s", 1, 180, 85, 1], [1, "s", 0, 163, 96, 1], [1, "s", 0, 159, 86, 1], [1, "s", 0, 185, 78, 1], [1, "s", 1, 194, 75, 1], [1, "s", 2, 195, 76, 1], [1, "s", 2, 181, 78, 1], [1, "s", 2, 161, 87, 1], [1, "s", 2, 166, 97, 1], [1, "s", 2, 177, 97, 1], [1, "s", 0, 149, 85, 1], [1, "s", 1, 151, 83, 1], [1, "s", 1, 175, 74, 1], [1, "s", 0, 174, 72, 1], [1, "la", 3, 168, 71, 1], [1, "la", 3, 180, 60, 1], [1, "s", 0, 156, 63, 1], [1, "s", 0, 151, 47, 1], [1, "s", 1, 158, 64, 1], [1, "s", 1, 161, 75, 1], [1, "s", 1, 162, 51, 1], [1, "s", 1, 175, 45, 1], [1, "s", 1, 152, 47, 1], [1, "s", 1, 159, 33, 1], [1, "s", 1, 152, 18, 1], [1, "s", 0, 151, 13, 1], [1, "s", 0, 166, 22, 1], [1, "s", 0, 170, 63, 1], [1, "s", 2, 172, 62, 1], [1, "s", 2, 155, 61, 1], [1, "s", 2, 167, 51, 1], [1, "s", 2, 150, 52, 1], [1, "la", 4, 178, 69, 1], [1, "la", 4, 177, 68, 1], [1, "la", 3, 176, 67, 1], [1, "la", 0, 174, 67, 1], [1, "la", 1, 172, 67, 1], [1, "la", 4, 171, 67, 1], [1, "la", 4, 170, 66, 1], [1, "la", 4, 169, 66, 1], [1, "la", 1, 168, 66, 1], [1, "la", 4, 167, 67, 1], [1, "la", 1, 166, 67, 1], [1, "la", 4, 165, 68, 1], [1, "la", 5, 164, 68, 1], [1, "la", 2, 163, 68, 1], [1, "la", 5, 162, 68, 1], [1, "la", 2, 161, 68, 1], [1, "la", 3, 153, 72, 1], [1, "la", 3, 163, 60, 1], [1, "la", 3, 164, 42, 1], [1, "la", 0, 155, 51, 1], [1, "la", 1, 168, 42, 1], [1, "la", 4, 158, 48, 1], [1, "la", 4, 178, 57, 1], [1, "la", 4, 151, 69, 1], [1, "la", 2, 170, 74, 1], [1, "la", 2, 160, 84, 1], [1, "la", 2, 174, 92, 1], [1, "la", 2, 188, 90, 1], [1, "la", 2, 209, 84, 1], [1, "la", 2, 206, 93, 1], [1, "la", 5, 156, 70, 1], [1, "la", 5, 165, 57, 1], [1, "la", 5, 182, 58, 1], [1, "la", 5, 166, 44, 1], [1, "la", 1, 163, 39, 1], [1, "la", 1, 152, 53, 1], [1, "la", 1, 152, 37, 1], [1, "la", 2, 163, 13, 1], [1, "de", 12, 219, 12, 0], [1, "de", 14, 203, 13, 0], [1, "de", 15, 220, 19, 0], [1, "de", 12, 223, 15, 0], [1, "de", 12, 213, 10, 0], [1, "de", 37, 217, 19, 0], [1, "de", 38, 220, 14, 0], [1, "de", 38, 215, 10, 0], [1, "de", 40, 214, 14, 0], [1, "de", 40, 222, 16, 0], [1, "de", 40, 209, 18, 0], [1, "de", 37, 212, 18, 0], [1, "de", 38, 215, 26, 0], [1, "de", 37, 222, 25, 0], [1, "de", 40, 221, 29, 0], [1, "de", 12, 220, 27, 0], [1, "de", 13, 213, 27, 0], [1, "de", 14, 215, 30, 0], [1, "de", 15, 219, 33, 0], [1, "de", 38, 220, 31, 0], [1, "de", 38, 217, 35, 0], [1, "de", 40, 221, 34, 0], [1, "de", 39, 215, 32, 0], [1, "de", 37, 211, 35, 0], [1, "de", 12, 223, 38, 0], [1, "de", 13, 213, 38, 0], [1, "de", 14, 222, 44, 0], [1, "de", 15, 208, 33, 0], [1, "de", 15, 206, 23, 0], [1, "de", 13, 205, 28, 0], [1, "de", 14, 211, 23, 0], [1, "de", 14, 201, 20, 0], [1, "de", 15, 198, 9, 0], [1, "de", 15, 199, 16, 0], [1, "de", 12, 194, 15, 0], [1, "de", 12, 197, 23, 0], [1, "de", 37, 205, 13, 0], [1, "de", 39, 204, 9, 0], [1, "de", 40, 196, 12, 0], [1, "de", 40, 198, 18, 0], [1, "de", 37, 192, 11, 0], [1, "de", 37, 199, 24, 0], [1, "de", 37, 209, 24, 0], [1, "de", 39, 209, 30, 0], [1, "de", 39, 204, 31, 0], [1, "de", 39, 192, 24, 0], [1, "de", 40, 187, 23, 0], [1, "de", 38, 187, 18, 0], [1, "de", 39, 192, 18, 0], [1, "de", 37, 185, 15, 0], [1, "de", 12, 188, 15, 0], [1, "de", 13, 185, 13, 0], [1, "de", 14, 189, 9, 0], [1, "de", 15, 187, 22, 0], [1, "de", 15, 180, 9, 0], [1, "de", 12, 177, 14, 0], [1, "de", 14, 173, 9, 0], [1, "de", 14, 171, 15, 0], [1, "de", 40, 182, 9, 0], [1, "de", 39, 179, 13, 0], [1, "de", 39, 175, 9, 0], [1, "de", 40, 173, 14, 0], [1, "de", 37, 169, 11, 0], [1, "de", 37, 163, 10, 0], [1, "de", 38, 164, 15, 0], [1, "de", 39, 170, 20, 0], [1, "de", 40, 160, 17, 0], [1, "de", 40, 154, 10, 0], [1, "de", 40, 165, 23, 0], [1, "de", 40, 150, 19, 0], [1, "de", 37, 155, 16, 0], [1, "de", 39, 146, 10, 0], [1, "de", 12, 159, 12, 0], [1, "de", 13, 151, 9, 0], [1, "de", 14, 150, 14, 0], [1, "de", 15, 153, 19, 0], [1, "de", 13, 161, 25, 0], [1, "de", 14, 169, 25, 0], [1, "de", 15, 176, 25, 0], [1, "de", 12, 180, 29, 0], [1, "de", 12, 188, 31, 0], [1, "de", 14, 181, 36, 0], [1, "de", 37, 186, 33, 0], [1, "de", 38, 183, 26, 0], [1, "de", 39, 177, 21, 0], [1, "de", 40, 175, 31, 0], [1, "de", 37, 176, 39, 0], [1, "de", 37, 168, 34, 0], [1, "de", 38, 162, 32, 0], [1, "de", 38, 168, 45, 0], [1, "de", 38, 173, 45, 0], [1, "de", 39, 160, 35, 0], [1, "de", 40, 161, 42, 0], [1, "de", 40, 170, 39, 0], [1, "de", 40, 181, 43, 0], [1, "de", 40, 156, 26, 0], [1, "de", 40, 150, 32, 0], [1, "de", 37, 159, 26, 0], [1, "de", 37, 155, 40, 0], [1, "de", 37, 154, 45, 0], [1, "de", 39, 149, 45, 0], [1, "de", 40, 150, 50, 0], [1, "de", 40, 160, 52, 0], [1, "de", 37, 164, 52, 0], [1, "de", 38, 168, 50, 0], [1, "de", 12, 176, 45, 0], [1, "de", 12, 167, 32, 0], [1, "de", 13, 158, 32, 0], [1, "de", 14, 149, 28, 0], [1, "de", 15, 163, 30, 0], [1, "de", 14, 158, 39, 0], [1, "de", 12, 171, 43, 0], [1, "de", 12, 174, 36, 0], [1, "de", 12, 151, 43, 0], [1, "de", 13, 152, 48, 0], [1, "de", 14, 164, 49, 0], [1, "de", 15, 149, 52, 0], [1, "de", 12, 174, 49, 0], [1, "de", 13, 183, 51, 0], [1, "de", 14, 186, 48, 0], [1, "de", 37, 182, 48, 0], [1, "de", 38, 187, 52, 0], [1, "de", 39, 188, 43, 0], [1, "de", 37, 200, 38, 0], [1, "de", 40, 194, 37, 0], [1, "de", 39, 199, 44, 0], [1, "de", 38, 200, 49, 0], [1, "de", 37, 196, 54, 0], [1, "de", 12, 194, 40, 0], [1, "de", 13, 202, 45, 0], [1, "de", 14, 198, 47, 0], [1, "de", 15, 198, 55, 0], [1, "de", 15, 212, 54, 0], [1, "de", 15, 216, 63, 0], [1, "de", 14, 209, 62, 0], [1, "de", 12, 219, 60, 0], [1, "de", 12, 206, 56, 0], [1, "de", 12, 218, 72, 0], [1, "de", 12, 223, 67, 0], [1, "de", 12, 205, 64, 0], [1, "de", 12, 193, 63, 0], [1, "de", 14, 216, 80, 0], [1, "de", 14, 222, 87, 0], [1, "de", 38, 210, 53, 0], [1, "de", 37, 210, 47, 0], [1, "de", 37, 200, 63, 0], [1, "de", 37, 218, 62, 0], [1, "de", 37, 222, 60, 0], [1, "de", 37, 207, 70, 0], [1, "de", 38, 203, 68, 0], [1, "de", 38, 195, 66, 0], [1, "de", 38, 218, 55, 0], [1, "de", 38, 212, 61, 0], [1, "de", 38, 222, 70, 0], [1, "de", 38, 218, 70, 0], [1, "de", 40, 222, 81, 0], [1, "de", 38, 214, 79, 0], [1, "de", 39, 213, 83, 0], [1, "de", 39, 207, 76, 0], [1, "de", 39, 208, 86, 0], [1, "de", 39, 218, 87, 0], [1, "de", 39, 222, 93, 0], [1, "de", 39, 216, 96, 0], [1, "de", 39, 209, 94, 0], [1, "de", 39, 201, 87, 0], [1, "de", 39, 198, 82, 0], [1, "de", 39, 207, 99, 0], [1, "de", 39, 200, 97, 0], [1, "de", 39, 202, 92, 0], [1, "de", 37, 194, 97, 0], [1, "de", 39, 204, 88, 0], [1, "de", 39, 189, 90, 0], [1, "de", 39, 194, 81, 0], [1, "de", 39, 188, 98, 0], [1, "de", 37, 183, 91, 0], [1, "de", 37, 186, 80, 0], [1, "de", 37, 191, 72, 0], [1, "de", 38, 184, 77, 0], [1, "de", 38, 180, 80, 0], [1, "de", 39, 173, 75, 0], [1, "de", 40, 178, 87, 0], [1, "de", 40, 174, 94, 0], [1, "de", 40, 192, 93, 0], [1, "de", 40, 165, 92, 0], [1, "de", 37, 160, 89, 0], [1, "de", 38, 161, 85, 0], [1, "de", 38, 164, 98, 0], [1, "de", 38, 151, 99, 0], [1, "de", 38, 151, 85, 0], [1, "de", 40, 148, 83, 0], [1, "de", 40, 160, 77, 0], [1, "de", 40, 167, 77, 0], [1, "de", 40, 153, 69, 0], [1, "de", 40, 149, 74, 0], [1, "de", 37, 161, 64, 0], [1, "de", 37, 154, 61, 0], [1, "de", 39, 157, 55, 0], [1, "de", 39, 174, 64, 0], [1, "de", 39, 175, 56, 0], [1, "de", 39, 149, 67, 0], [1, "de", 12, 218, 96, 0], [1, "de", 13, 212, 95, 0], [1, "de", 14, 204, 85, 0], [1, "de", 15, 215, 85, 0], [1, "de", 15, 197, 97, 0], [1, "de", 12, 198, 87, 0], [1, "de", 14, 196, 77, 0], [1, "de", 13, 194, 86, 0], [1, "de", 15, 181, 84, 0], [1, "de", 14, 184, 79, 0], [1, "de", 14, 188, 93, 0], [1, "de", 13, 180, 87, 0], [1, "de", 13, 178, 96, 0], [1, "de", 13, 163, 95, 0], [1, "de", 15, 172, 88, 0], [1, "de", 15, 176, 75, 0], [1, "de", 14, 172, 72, 0], [1, "de", 14, 169, 82, 0], [1, "de", 13, 164, 78, 0], [1, "de", 13, 158, 87, 0], [1, "de", 13, 149, 86, 0], [1, "de", 15, 154, 91, 0], [1, "de", 15, 160, 74, 0], [1, "de", 14, 152, 76, 0], [1, "de", 14, 158, 63, 0], [1, "de", 14, 150, 60, 0], [1, "de", 12, 169, 59, 0], [1, "de", 13, 173, 61, 0], [1, "cs", 1, 143, 104, 1], [1, "cs", 0, 141, 102, 1], [1, "cs", 3, 138, 102, 1], [1, "cs", 2, 139, 102, 1], [1, "cs", 2, 140, 102, 1], [1, "cs", 3, 143, 107, 1], [1, "cs", 0, 143, 106, 1], [1, "cs", 2, 143, 105, 1], [1, "cs", 2, 142, 103, 1], [1, "cs", 0, 142, 104, 1], [1, "cs", 2, 141, 103, 1], [1, "cs", 3, 142, 105, 1], [1, "cs", 3, 140, 103, 1], [1, "cs", 3, 141, 104, 1], [1, "la", 4, 151, 23, 1], [1, "la", 4, 150, 22, 1], [1, "la", 1, 149, 21, 1], [1, "la", 4, 148, 21, 1], [1, "la", 2, 147, 20, 1], [1, "la", 4, 147, 19, 1], [1, "la", 5, 147, 18, 1], [1, "la", 1, 147, 17, 1], [1, "la", 3, 144, 9, 1], [1, "la", 5, 147, 16, 1], [1, "la", 2, 147, 15, 1], [1, "la", 4, 147, 14, 1], [1, "la", 4, 145, 11, 1], [1, "la", 5, 145, 12, 1], [1, "la", 1, 146, 13, 1], [1, "la", 2, 145, 13, 1], [1, "la", 3, 155, 25, 1], [1, "la", 0, 155, 24, 1], [1, "la", 3, 153, 26, 1], [1, "cs", 0, 151, 24, 1], [1, "cs", 0, 153, 22, 1], [1, "cs", 3, 152, 22, 1], [1, "cs", 3, 154, 22, 1], [1, "cs", 1, 157, 26, 1], [1, "cs", 2, 157, 24, 1], [1, "cs", 2, 156, 26, 1], [1, "cs", 2, 154, 28, 1], [1, "cs", 2, 151, 26, 1], [1, "cs", 2, 152, 25, 1], [1, "cs", 2, 151, 25, 1], [1, "cs", 2, 156, 27, 1], [1, "cs", 2, 157, 23, 1], [1, "cs", 2, 157, 22, 1], [1, "cs", 3, 150, 24, 1], [1, "cs", 3, 150, 23, 1], [1, "de", 38, 155, 29, 0], [1, "de", 12, 157, 27, 0], [1, "de", 14, 153, 29, 0], [1, "de", 15, 158, 23, 0], [1, "de", 13, 156, 21, 0], [1, "de", 13, 147, 36, 0], [1, "de", 13, 161, 56, 0], [1, "de", 13, 147, 79, 0], [1, "de", 12, 157, 99, 0], [1, "de", 12, 172, 99, 0], [1, "la", 3, 143, 102, 1], [1, "la", 4, 149, 96, 1], [1, "la", 4, 145, 102, 1], [1, "la", 1, 148, 97, 1], [1, "la", 5, 148, 98, 1], [1, "cs", 3, 144, 104, 1], [1, "cs", 3, 144, 103, 1], [1, "cs", 3, 145, 103, 1], [1, "cs", 3, 145, 104, 1], [1, "cs", 3, 142, 101, 1], [1, "cs", 3, 143, 100, 1], [1, "cs", 3, 141, 101, 1], [1, "cs", 3, 142, 100, 1], [1, "cs", 0, 141, 100, 1], [1, "cs", 2, 140, 101, 1], [1, "cs", 2, 144, 105, 1], [1, "cs", 3, 146, 103, 1], [1, "cs", 3, 146, 102, 1], [1, "cs", 3, 150, 95, 1], [1, "cs", 0, 150, 97, 1], [1, "cs", 2, 151, 98, 1], [1, "cs", 0, 153, 97, 1], [1, "cs", 3, 153, 96, 1], [1, "cs", 2, 149, 95, 1], [1, "s", 0, 213, 127, 1], [1, "plm", 1, 214, 131, 0], [1, "plm", 1, 207, 128, 0], [1, "plm", 0, 208, 127, 0], [1, "s", 1, 207, 132, 1], [1, "s", 2, 208, 133, 1], [1, "plm", 0, 217, 132, 0], [1, "plm", 2, 186, 158, 0], [1, "plm", 0, 184, 160, 0], [1, "s", 1, 183, 156, 1], [1, "s", 2, 186, 159, 1], [1, "p", 0, 182, 157, 1], [1, "p", 0, 114, 205, 1], [1, "plm", 1, 117, 204, 0], [1, "plm", 0, 117, 205, 0], [1, "plm", 2, 112, 204, 0], [1, "s", 2, 114, 207, 1], [1, "s", 2, 115, 204, 1], [1, "plm", 2, 122, 151, 0], [1, "plm", 1, 123, 150, 0], [1, "plm", 1, 117, 151, 0], [1, "s", 0, 118, 150, 1], [1, "s", 1, 122, 152, 1], [1, "plm", 2, 156, 130, 0], [1, "plm", 1, 154, 127, 0], [1, "s", 0, 153, 128, 1], [1, "s", 2, 152, 130, 1], [1, "p", 0, 123, 65, 1], [1, "plm", 2, 125, 62, 0], [1, "plm", 1, 124, 62, 0], [1, "plm", 0, 120, 65, 0], [1, "s", 1, 125, 63, 1], [1, "s", 1, 121, 64, 1], [1, "s", 2, 122, 62, 1], [1, "cs", 0, 140, 106, 1], [1, "cs", 2, 144, 106, 1], [1, "cs", 2, 145, 105, 1], [1, "cs", 2, 144, 107, 1], [1, "cs", 2, 141, 106, 1], [1, "cs", 2, 141, 105, 1], [1, "cs", 2, 140, 105, 1], [1, "cs", 2, 140, 104, 1], [1, "cs", 1, 138, 103, 1], [1, "cs", 0, 139, 104, 1], [1, "cs", 2, 139, 103, 1], [1, "cs", 2, 139, 105, 1], [1, "cs", 2, 142, 106, 1], [1, "cs", 2, 142, 107, 1], [1, "cs", 2, 139, 101, 1], [1, "de", 19, 27, 264, 0], [1, "la", 4, 147, 99, 1], [1, "la", 1, 146, 100, 1], [1, "la", 4, 145, 101, 1], [1, "cs", 1, 215, 47, 1], [1, "cs", 2, 216, 47, 1], [1, "cs", 2, 215, 48, 1], [1, "la", 4, 214, 45, 1], [1, "la", 4, 215, 45, 1], [1, "la", 0, 216, 46, 1], [1, "la", 4, 216, 48, 1], [1, "la", 4, 216, 49, 1], [1, "la", 4, 217, 50, 1], [1, "la", 3, 214, 49, 1], [1, "la", 4, 211, 45, 1], [1, "la", 3, 213, 47, 1], [1, "cs", 2, 224, 48, 1], [1, "plm", 2, 111, 243, 0], [1, "plm", 1, 108, 246, 0], [1, "s", 1, 110, 243, 1], [1, "s", 0, 108, 245, 1], [1, "s", 0, 121, 276, 1], [1, "plm", 2, 122, 277, 0], [1, "plm", 2, 117, 276, 0], [1, "plm", 1, 118, 277, 0], [1, "s", 1, 118, 278, 1], [1, "cs", 2, 66, 16, 1], [1, "cs", 3, 67, 16, 1], [1, "cs", 0, 67, 17, 1], [1, "cs", 2, 66, 17, 1], [1, "cs", 3, 66, 18, 1], [1, "cs", 3, 68, 17, 1], [1, "cs", 0, 36, 16, 1], [1, "cs", 2, 36, 17, 1], [1, "cs", 2, 36, 18, 1], [1, "cs", 3, 35, 17, 1], [1, "cs", 3, 36, 19, 1], [1, "cs", 3, 35, 18, 1], [1, "cs", 2, 66, 30, 1], [1, "cs", 2, 66, 23, 1], [1, "cs", 3, 66, 22, 1], [1, "cs", 3, 66, 31, 1], [1, "cs", 2, 36, 30, 1], [1, "cs", 2, 36, 23, 1], [1, "cs", 1, 36, 22, 1], [1, "cs", 2, 36, 31, 1], [1, "cs", 3, 42, 13, 1], [1, "cs", 0, 43, 13, 1], [1, "cs", 2, 44, 13, 1], [1, "cs", 3, 42, 16, 1], [1, "cs", 3, 41, 16, 1], [1, "cs", 3, 40, 16, 1], [1, "cs", 0, 42, 19, 1], [1, "cs", 3, 43, 19, 1], [1, "cs", 3, 44, 19, 1], [1, "cs", 3, 45, 19, 1], [1, "cs", 2, 46, 19, 1], [1, "cs", 0, 43, 22, 1], [1, "cs", 2, 42, 22, 1], [1, "cs", 1, 41, 22, 1], [1, "cs", 0, 40, 22, 1], [1, "cs", 3, 39, 17, 1], [1, "cs", 1, 44, 26, 1], [1, "cs", 2, 45, 26, 1], [1, "cs", 3, 46, 26, 1], [1, "cs", 0, 47, 26, 1], [1, "cs", 2, 48, 26, 1], [1, "cs", 3, 47, 25, 1], [1, "cs", 3, 43, 27, 1], [1, "cs", 1, 49, 32, 1], [1, "cs", 2, 50, 32, 1], [1, "cs", 2, 51, 32, 1], [1, "cs", 2, 52, 32, 1], [1, "d", 0, 51, 29, 1], [1, "d", 1, 53, 29, 1], [1, "d", 1, 49, 29, 1], [1, "cs", 3, 55, 31, 1], [1, "cs", 3, 54, 32, 1], [1, "cs", 3, 47, 31, 1], [1, "cs", 3, 48, 32, 1], [1, "cs", 0, 51, 33, 1], [1, "cs", 2, 52, 33, 1], [1, "cs", 2, 50, 33, 1], [1, "cs", 3, 56, 30, 1], [1, "cs", 3, 56, 31, 1], [1, "cs", 3, 46, 30, 1], [1, "cs", 3, 46, 31, 1], [1, "cs", 1, 53, 33, 1], [1, "cs", 2, 49, 33, 1], [1, "cs", 2, 53, 32, 1], [1, "cs", 0, 55, 32, 1], [1, "cs", 0, 47, 32, 1], [1, "d", 1, 54, 35, 1], [1, "fo", 2, 35, 15, 0], [1, "fo", 2, 36, 12, 0], [1, "fo", 2, 67, 15, 0], [1, "cs", 3, 60, 13, 1], [1, "cs", 2, 59, 13, 1], [1, "cs", 1, 58, 13, 1], [1, "cs", 3, 62, 16, 1], [1, "cs", 0, 61, 16, 1], [1, "cs", 3, 60, 16, 1], [1, "cs", 3, 63, 17, 1], [1, "cs", 2, 60, 19, 1], [1, "cs", 1, 59, 19, 1], [1, "cs", 3, 58, 19, 1], [1, "cs", 2, 57, 19, 1], [1, "cs", 2, 56, 19, 1], [1, "cs", 0, 55, 18, 1], [1, "cs", 2, 55, 17, 1], [1, "cs", 2, 63, 23, 1], [1, "cs", 0, 62, 22, 1], [1, "cs", 2, 61, 22, 1], [1, "cs", 1, 60, 22, 1], [1, "cs", 0, 59, 22, 1], [1, "cs", 2, 54, 26, 1], [1, "cs", 2, 55, 26, 1], [1, "cs", 2, 56, 26, 1], [1, "cs", 1, 57, 26, 1], [1, "cs", 2, 58, 26, 1], [1, "cs", 2, 59, 27, 1], [1, "cs", 2, 68, 16, 1], [1, "cs", 2, 68, 15, 1], [1, "cs", 3, 69, 15, 1], [1, "cs", 3, 70, 15, 1], [1, "cs", 3, 70, 14, 1], [1, "cs", 1, 69, 14, 1], [1, "cs", 1, 69, 16, 1], [1, "cs", 2, 71, 13, 1], [1, "cs", 2, 71, 14, 1], [1, "cs", 3, 72, 13, 1], [1, "cs", 3, 70, 8, 1], [1, "cs", 3, 71, 8, 1], [1, "cs", 2, 72, 8, 1], [1, "cs", 0, 73, 8, 1], [1, "cs", 3, 74, 9, 1], [1, "cs", 3, 74, 8, 1], [1, "cs", 0, 75, 8, 1], [1, "cs", 3, 76, 8, 1], [1, "cs", 3, 75, 9, 1], [1, "cs", 3, 75, 10, 1], [1, "cs", 0, 76, 10, 1], [1, "cs", 0, 76, 16, 1], [1, "cs", 3, 76, 15, 1], [1, "cs", 3, 75, 16, 1], [1, "cs", 2, 77, 11, 1], [1, "cs", 2, 77, 14, 1], [1, "cs", 3, 77, 12, 1], [1, "cs", 3, 77, 13, 1], [1, "cs", 3, 77, 15, 1], [1, "cs", 0, 74, 18, 1], [1, "cs", 1, 75, 17, 1], [1, "cs", 2, 74, 17, 1], [1, "cs", 3, 73, 19, 1], [1, "cs", 3, 67, 23, 1], [1, "cs", 0, 68, 23, 1], [1, "cs", 0, 72, 20, 1], [1, "cs", 2, 73, 20, 1], [1, "cs", 2, 74, 19, 1], [1, "cs", 2, 74, 36, 1], [1, "cs", 2, 77, 27, 1], [1, "cs", 2, 76, 26, 1], [1, "cs", 2, 75, 26, 1], [1, "cs", 0, 74, 26, 1], [1, "cs", 2, 75, 25, 1], [1, "cs", 0, 76, 25, 1], [1, "cs", 1, 77, 23, 1], [1, "cs", 2, 77, 16, 1], [1, "cs", 2, 76, 17, 1], [1, "cs", 2, 76, 24, 1], [1, "cs", 2, 77, 24, 1], [1, "cs", 2, 77, 25, 1], [1, "cs", 2, 77, 26, 1], [1, "cs", 1, 75, 27, 1], [1, "cs", 3, 76, 27, 1], [1, "cs", 2, 67, 24, 1], [1, "cs", 2, 66, 24, 1], [1, "cs", 2, 73, 26, 1], [1, "cs", 2, 74, 27, 1], [1, "cs", 2, 74, 25, 1], [1, "cs", 2, 66, 19, 1], [1, "cs", 2, 66, 20, 1], [1, "cs", 2, 66, 21, 1], [1, "cs", 2, 67, 18, 1], [1, "cs", 2, 67, 22, 1], [1, "cs", 0, 77, 36, 1], [1, "cs", 0, 77, 32, 1], [1, "cs", 1, 75, 35, 1], [1, "cs", 2, 75, 36, 1], [1, "cs", 2, 76, 36, 1], [1, "cs", 2, 77, 35, 1], [1, "cs", 2, 77, 34, 1], [1, "cs", 2, 76, 35, 1], [1, "cs", 2, 77, 33, 1], [1, "cs", 2, 77, 31, 1], [1, "cs", 0, 77, 29, 1], [1, "cs", 0, 71, 32, 1], [1, "cs", 0, 76, 34, 1], [1, "cs", 2, 77, 30, 1], [1, "cs", 2, 77, 28, 1], [1, "cs", 2, 76, 28, 1], [1, "cs", 2, 75, 28, 1], [1, "cs", 2, 76, 29, 1], [1, "cs", 2, 76, 33, 1], [1, "cs", 2, 70, 32, 1], [1, "cs", 2, 69, 31, 1], [1, "cs", 0, 68, 31, 1], [1, "cs", 2, 67, 31, 1], [1, "cs", 2, 67, 30, 1], [1, "cs", 2, 69, 32, 1], [1, "cs", 1, 67, 32, 1], [1, "cs", 2, 68, 32, 1], [1, "cs", 2, 66, 32, 1], [1, "cs", 2, 66, 33, 1], [1, "cs", 2, 67, 33, 1], [1, "cs", 2, 70, 33, 1], [1, "cs", 2, 69, 33, 1], [1, "cs", 2, 68, 33, 1], [1, "cs", 0, 68, 34, 1], [1, "cs", 1, 66, 35, 1], [1, "cs", 2, 67, 34, 1], [1, "cs", 2, 66, 34, 1], [1, "cs", 2, 65, 35, 1], [1, "cs", 2, 64, 36, 1], [1, "cs", 2, 65, 36, 1], [1, "cs", 2, 67, 35, 1], [1, "cs", 2, 66, 36, 1], [1, "cs", 2, 69, 34, 1], [1, "cs", 2, 68, 35, 1], [1, "cs", 2, 76, 9, 1], [1, "cs", 2, 77, 9, 1], [1, "cs", 2, 77, 8, 1], [1, "cs", 2, 77, 10, 1], [1, "cs", 2, 78, 8, 1], [1, "cs", 2, 78, 9, 1], [1, "cs", 2, 78, 10, 1], [1, "cs", 2, 78, 11, 1], [1, "cs", 2, 78, 12, 1], [1, "cs", 2, 78, 13, 1], [1, "cs", 0, 79, 9, 1], [1, "cs", 1, 79, 11, 1], [1, "cs", 3, 79, 8, 1], [1, "cs", 3, 79, 10, 1], [1, "cs", 3, 79, 12, 1], [1, "cs", 3, 80, 8, 1], [1, "cs", 1, 80, 10, 1], [1, "cs", 2, 80, 9, 1], [1, "cs", 2, 80, 11, 1], [1, "cs", 2, 81, 8, 1], [1, "cs", 2, 81, 9, 1], [1, "cs", 2, 81, 10, 1], [1, "cs", 2, 78, 14, 1], [1, "cs", 2, 79, 13, 1], [1, "cs", 2, 78, 15, 1], [1, "cs", 2, 80, 12, 1], [1, "cs", 0, 79, 14, 1], [1, "cs", 0, 82, 9, 1], [1, "cs", 2, 82, 8, 1], [1, "cs", 2, 82, 10, 1], [1, "cs", 2, 81, 11, 1], [1, "cs", 3, 80, 13, 1], [1, "cs", 1, 78, 30, 1], [1, "cs", 1, 78, 34, 1], [1, "cs", 1, 78, 27, 1], [1, "cs", 0, 78, 25, 1], [1, "cs", 0, 79, 29, 1], [1, "cs", 0, 79, 32, 1], [1, "cs", 0, 79, 35, 1], [1, "cs", 2, 78, 35, 1], [1, "cs", 2, 78, 36, 1], [1, "cs", 2, 79, 34, 1], [1, "cs", 2, 78, 33, 1], [1, "cs", 2, 79, 33, 1], [1, "cs", 2, 78, 32, 1], [1, "cs", 2, 78, 31, 1], [1, "cs", 2, 79, 31, 1], [1, "cs", 2, 79, 30, 1], [1, "cs", 2, 78, 29, 1], [1, "cs", 2, 78, 28, 1], [1, "cs", 2, 79, 28, 1], [1, "cs", 2, 79, 27, 1], [1, "cs", 2, 78, 26, 1], [1, "cs", 2, 79, 26, 1], [1, "cs", 2, 78, 24, 1], [1, "cs", 2, 80, 34, 1], [1, "cs", 2, 80, 33, 1], [1, "cs", 2, 80, 31, 1], [1, "cs", 2, 80, 30, 1], [1, "cs", 2, 80, 32, 1], [1, "cs", 2, 80, 29, 1], [1, "cs", 2, 80, 28, 1], [1, "cs", 2, 80, 27, 1], [1, "cs", 0, 81, 30, 1], [1, "cs", 1, 81, 32, 1], [1, "cs", 1, 81, 28, 1], [1, "cs", 2, 81, 29, 1], [1, "cs", 2, 81, 31, 1], [1, "cs", 2, 81, 33, 1], [1, "cs", 2, 82, 30, 1], [1, "cs", 2, 82, 31, 1], [1, "cs", 2, 82, 32, 1], [1, "cs", 0, 37, 36, 1], [1, "cs", 2, 38, 36, 1], [1, "cs", 2, 37, 35, 1], [1, "cs", 2, 36, 36, 1], [1, "cs", 2, 34, 35, 1], [1, "cs", 2, 35, 35, 1], [1, "cs", 2, 36, 35, 1], [1, "cs", 0, 33, 34, 1], [1, "cs", 1, 35, 34, 1], [1, "cs", 2, 36, 34, 1], [1, "cs", 2, 34, 34, 1], [1, "cs", 2, 36, 33, 1], [1, "cs", 2, 35, 33, 1], [1, "cs", 2, 34, 33, 1], [1, "cs", 2, 33, 33, 1], [1, "cs", 2, 31, 32, 1], [1, "cs", 1, 36, 32, 1], [1, "cs", 1, 32, 32, 1], [1, "cs", 2, 35, 32, 1], [1, "cs", 2, 33, 32, 1], [1, "cs", 2, 32, 33, 1], [1, "cs", 2, 33, 31, 1], [1, "cs", 2, 34, 31, 1], [1, "cs", 2, 35, 31, 1], [1, "cs", 0, 34, 32, 1], [1, "cs", 2, 35, 30, 1], [1, "cs", 1, 39, 23, 1], [1, "cs", 3, 39, 22, 1], [1, "cs", 3, 36, 24, 1], [1, "cs", 3, 35, 24, 1], [1, "cs", 2, 34, 23, 1], [1, "cs", 2, 35, 23, 1], [1, "cs", 2, 36, 20, 1], [1, "cs", 2, 36, 21, 1], [1, "cs", 2, 35, 22, 1], [1, "cs", 2, 35, 16, 1], [1, "cs", 2, 34, 16, 1], [1, "cs", 2, 33, 16, 1], [1, "cs", 0, 34, 17, 1], [1, "cs", 0, 32, 15, 1], [1, "cs", 2, 31, 14, 1], [1, "cs", 3, 30, 13, 1], [1, "cs", 1, 33, 15, 1], [1, "cs", 1, 31, 13, 1], [1, "cs", 2, 32, 14, 1], [1, "cs", 0, 31, 8, 1], [1, "cs", 2, 32, 8, 1], [1, "cs", 2, 25, 13, 1], [1, "cs", 0, 25, 12, 1], [1, "cs", 2, 25, 11, 1], [1, "cs", 3, 25, 10, 1], [1, "cs", 0, 25, 9, 1], [1, "cs", 2, 25, 8, 1], [1, "cs", 2, 26, 8, 1], [1, "cs", 2, 27, 8, 1], [1, "cs", 2, 28, 8, 1], [1, "cs", 2, 29, 8, 1], [1, "cs", 2, 30, 8, 1], [1, "cs", 2, 26, 9, 1], [1, "cs", 2, 27, 9, 1], [1, "cs", 2, 26, 10, 1], [1, "cs", 1, 27, 10, 1], [1, "cs", 3, 28, 9, 1], [1, "cs", 3, 25, 14, 1], [1, "cs", 0, 25, 15, 1], [1, "cs", 2, 26, 15, 1], [1, "cs", 3, 27, 16, 1], [1, "cs", 0, 28, 17, 1], [1, "cs", 1, 29, 18, 1], [1, "cs", 2, 26, 16, 1], [1, "cs", 2, 25, 16, 1], [1, "cs", 2, 27, 17, 1], [1, "cs", 2, 26, 17, 1], [1, "cs", 1, 27, 18, 1], [1, "cs", 2, 28, 18, 1], [1, "cs", 2, 30, 19, 1], [1, "cs", 2, 29, 19, 1], [1, "cs", 2, 24, 14, 1], [1, "cs", 2, 24, 15, 1], [1, "cs", 0, 23, 14, 1], [1, "cs", 2, 24, 10, 1], [1, "cs", 2, 24, 11, 1], [1, "cs", 2, 24, 12, 1], [1, "cs", 2, 24, 13, 1], [1, "cs", 1, 23, 10, 1], [1, "cs", 0, 22, 8, 1], [1, "cs", 0, 22, 12, 1], [1, "cs", 1, 23, 8, 1], [1, "cs", 2, 24, 8, 1], [1, "cs", 2, 24, 9, 1], [1, "cs", 2, 23, 9, 1], [1, "cs", 2, 22, 9, 1], [1, "cs", 2, 22, 10, 1], [1, "cs", 2, 22, 11, 1], [1, "cs", 2, 23, 11, 1], [1, "cs", 2, 23, 12, 1], [1, "cs", 2, 23, 13, 1], [1, "cs", 2, 22, 13, 1], [1, "cs", 2, 21, 9, 1], [1, "cs", 2, 21, 8, 1], [1, "cs", 2, 29, 25, 1], [1, "cs", 2, 25, 24, 1], [1, "cs", 2, 26, 25, 1], [1, "cs", 2, 27, 25, 1], [1, "cs", 0, 28, 25, 1], [1, "cs", 1, 25, 23, 1], [1, "cs", 2, 26, 24, 1], [1, "cs", 0, 24, 25, 1], [1, "cs", 3, 23, 24, 1], [1, "cs", 3, 24, 24, 1], [1, "cs", 3, 25, 25, 1], [1, "cs", 3, 23, 25, 1], [1, "cs", 1, 22, 26, 1], [1, "cs", 1, 26, 26, 1], [1, "cs", 1, 29, 26, 1], [1, "cs", 2, 23, 26, 1], [1, "cs", 2, 24, 26, 1], [1, "cs", 2, 25, 26, 1], [1, "cs", 2, 27, 26, 1], [1, "cs", 2, 28, 26, 1], [1, "cs", 2, 30, 26, 1], [1, "cs", 2, 29, 27, 1], [1, "cs", 2, 28, 28, 1], [1, "cs", 1, 26, 29, 1], [1, "cs", 0, 28, 27, 1], [1, "cs", 2, 27, 28, 1], [1, "cs", 2, 27, 27, 1], [1, "cs", 2, 26, 28, 1], [1, "cs", 2, 26, 27, 1], [1, "cs", 2, 25, 28, 1], [1, "cs", 2, 25, 27, 1], [1, "cs", 2, 23, 27, 1], [1, "cs", 2, 22, 27, 1], [1, "cs", 2, 24, 27, 1], [1, "cs", 0, 24, 28, 1], [1, "cs", 0, 25, 32, 1], [1, "cs", 1, 24, 30, 1], [1, "cs", 2, 25, 31, 1], [1, "cs", 2, 25, 30, 1], [1, "cs", 2, 25, 29, 1], [1, "cs", 2, 24, 29, 1], [1, "cs", 2, 23, 29, 1], [1, "cs", 2, 26, 33, 1], [1, "cs", 0, 26, 34, 1], [1, "cs", 2, 27, 35, 1], [1, "cs", 2, 22, 28, 1], [1, "cs", 2, 23, 28, 1], [1, "cs", 2, 24, 31, 1], [1, "cs", 2, 24, 32, 1], [1, "cs", 2, 25, 33, 1], [1, "cs", 2, 26, 35, 1], [1, "cs", 2, 24, 33, 1], [1, "cs", 2, 25, 34, 1], [1, "cs", 1, 22, 29, 1], [1, "cs", 1, 24, 34, 1], [1, "cs", 0, 23, 35, 1], [1, "cs", 2, 25, 35, 1], [1, "cs", 2, 24, 35, 1], [1, "cs", 2, 23, 34, 1], [1, "cs", 2, 23, 33, 1], [1, "cs", 0, 22, 33, 1], [1, "cs", 1, 23, 32, 1], [1, "cs", 2, 22, 32, 1], [1, "cs", 2, 23, 31, 1], [1, "cs", 2, 23, 30, 1], [1, "cs", 2, 22, 30, 1], [1, "cs", 2, 22, 31, 1], [1, "cs", 1, 21, 31, 1], [1, "cs", 0, 21, 29, 1], [1, "cs", 2, 21, 30, 1], [1, "cs", 2, 24, 36, 1], [1, "cs", 2, 26, 36, 1], [1, "cs", 2, 25, 36, 1], [1, "cs", 2, 27, 36, 1], [1, "cs", 2, 28, 36, 1], [1, "d", 2, 83, 65, 1], [1, "d", 2, 16, 67, 1], [1, "g", 0, 15, 17, 1], [1, "s", 0, 18, 13, 1], [1, "s", 0, 85, 11, 1], [1, "f", 0, 41, 102, 1], [1, "f", 0, 42, 124, 1], [1, "f", 0, 64, 116, 1], [1, "f", 0, 74, 104, 1], [1, "f", 0, 70, 87, 1], [1, "f", 0, 27, 96, 1], [1, "f", 0, 22, 79, 1], [1, "f", 0, 20, 117, 1], [1, "f", 0, 30, 137, 1], [1, "f", 0, 59, 146, 1], [1, "f", 0, 52, 147, 1], [1, "f", 0, 20, 149, 1], [1, "f", 0, 36, 146, 1], [1, "f", 0, 62, 124, 1], [1, "g", 1, 34, 121, 1], [1, "g", 1, 52, 116, 1], [1, "g", 1, 78, 116, 1], [1, "g", 1, 71, 129, 1], [1, "s", 0, 53, 100, 1], [1, "s", 0, 73, 111, 1], [1, "s", 0, 77, 126, 1], [1, "s", 0, 48, 90, 1], [1, "s", 0, 19, 102, 1], [1, "s", 0, 18, 127, 1], [1, "s", 0, 35, 159, 1], [1, "s", 0, 65, 54, 1], [1, "s", 0, 44, 52, 1], [1, "s", 0, 26, 51, 1], [1, "f", 1, 56, 136, 1], [1, "f", 1, 41, 133, 1], [1, "f", 1, 80, 120, 1], [1, "f", 1, 16, 117, 1], [1, "f", 1, 13, 99, 1], [1, "f", 1, 17, 89, 1], [1, "f", 1, 90, 98, 1], [1, "f", 1, 84, 95, 1], [1, "f", 1, 16, 57, 1], [1, "f", 1, 77, 53, 1], [1, "d", 1, 48, 35, 1], [1, "de", 8, 33, 13, 0], [1, "de", 8, 30, 9, 0], [1, "de", 9, 32, 30, 0], [1, "de", 10, 30, 25, 0], [1, "de", 10, 33, 21, 0], [1, "de", 8, 31, 34, 0], [1, "de", 8, 67, 29, 0], [1, "de", 9, 70, 22, 0], [1, "de", 10, 70, 16, 0], [1, "de", 10, 75, 11, 0], [1, "de", 8, 68, 10, 0], [1, "de", 8, 75, 30, 0], [1, "de", 11, 71, 33, 0], [1, "de", 11, 72, 25, 0], [1, "de", 11, 64, 25, 0], [1, "de", 11, 52, 10, 0], [1, "de", 11, 31, 15, 0], [1, "de", 30, 29, 14, 0], [1, "de", 30, 36, 15, 0], [1, "de", 30, 34, 29, 0], [1, "de", 30, 30, 29, 0], [1, "de", 30, 71, 29, 0], [1, "de", 28, 68, 25, 0], [1, "de", 28, 75, 15, 0], [1, "de", 27, 67, 19, 0], [1, "de", 29, 72, 10, 0], [1, "de", 29, 75, 32, 0], [1, "de", 29, 32, 20, 0], [1, "fo", 1, 39, 12, 0], [1, "fo", 1, 34, 14, 0], [1, "fo", 1, 74, 28, 0], [1, "fo", 2, 74, 29, 0], [1, "fo", 2, 69, 30, 0], [1, "fo", 2, 77, 22, 0], [1, "fo", 2, 74, 21, 0], [1, "fo", 2, 76, 18, 0], [1, "fo", 1, 78, 17, 0], [1, "fo", 1, 28, 19, 0], [1, "fo", 2, 27, 24, 0], [1, "fo", 2, 24, 17, 0], [1, "fo", 2, 29, 21, 0], [1, "fo", 1, 27, 32, 0], [1, "fo", 2, 30, 33, 0], [1, "fo", 1, 29, 28, 0], [1, "fo", 2, 28, 31, 0], [1, "fo", 2, 20, 24, 0], [1, "fo", 2, 20, 26, 0], [1, "fo", 2, 23, 16, 0], [1, "fo", 2, 11, 25, 0], [1, "de", 33, 29, 22, 0], [1, "de", 34, 32, 25, 0], [1, "de", 34, 30, 18, 0], [1, "de", 33, 78, 18, 0], [1, "de", 33, 73, 35, 0], [1, "de", 36, 72, 23, 0], [1, "de", 35, 25, 18, 0], [1, "d", 1, 83, 41, 1], [1, "d", 1, 17, 40, 1], [1, "cs", 2, 224, 104, 1], [1, "cs", 0, 224, 105, 1], [1, "cs", 3, 224, 106, 1], [1, "la", 3, 216, 128, 1], [1, "la", 0, 215, 126, 1], [1, "s", 0, 216, 130, 1], [1, "s", 1, 217, 129, 1], [1, "s", 0, 218, 128, 1], [1, "s", 1, 217, 127, 1], [1, "s", 0, 217, 126, 1], [1, "s", 1, 217, 125, 1], [1, "s", 0, 216, 124, 1], [1, "s", 1, 215, 124, 1], [1, "s", 0, 214, 124, 1], [1, "s", 1, 213, 125, 1], [1, "s", 0, 213, 126, 1], [1, "plm", 2, 217, 130, 0], [1, "plm", 2, 212, 125, 0], [1, "p", 0, 214, 134, 1], [1, "s", 1, 211, 126, 1], [1, "b", 1, 45, 277, 0], [1, "b", 1, 50, 286, 0], [1, "b", 2, 51, 284, 0], [1, "b", 1, 47, 287, 0], [1, "b", 0, 39, 285, 0], [1, "b", 3, 40, 283, 0], [1, "b", 0, 52, 283, 0], [1, "b", 1, 51, 280, 0], [1, "g", 0, 45, 269, 1], [1, "p", 0, 55, 281, 1], [1, "b", 1, 5, 172, 0], [1, "b", 2, 6, 172, 0], [1, "t", 5, 6, 171, 0], [1, "t", 1, 5, 170, 0], [1, "t", 1, 5, 164, 0], [1, "t", 3, 6, 164, 0], [1, "b", 0, 6, 165, 0], [1, "t", 3, 5, 165, 0], [1, "b", 2, 6, 166, 0], [1, "t", 4, 5, 166, 0], [1, "t", 4, 6, 167, 0], [1, "t", 2, 6, 168, 0], [1, "t", 0, 6, 169, 0], [1, "t", 4, 6, 170, 0], [1, "t", 0, 5, 167, 0], [1, "t", 2, 5, 169, 0], [1, "b", 0, 5, 168, 0], [1, "s", 1, 7, 153, 1], [1, "s", 2, 7, 151, 1], [1, "de", 5, 7, 152, 0], [1, "t", 1, 5, 154, 0], [1, "b", 0, 6, 154, 0], [1, "t", 2, 6, 155, 0], [1, "b", 2, 6, 156, 0], [1, "t", 2, 5, 157, 0], [1, "t", 4, 5, 155, 0], [1, "b", 0, 6, 157, 0], [1, "t", 1, 5, 156, 0], [1, "t", 5, 6, 158, 0], [1, "b", 2, 6, 159, 0], [1, "b", 0, 6, 162, 0], [1, "t", 4, 6, 163, 0], [1, "t", 4, 6, 161, 0], [1, "b", 1, 6, 160, 0], [1, "b", 2, 5, 163, 0], [1, "b", 2, 5, 158, 0], [1, "b", 2, 5, 161, 0], [1, "t", 1, 5, 162, 0], [1, "t", 1, 5, 160, 0], [1, "b", 1, 85, 176, 0], [1, "b", 2, 83, 178, 0], [1, "s", 1, 82, 177, 1], [1, "b", 0, 76, 172, 0], [1, "b", 3, 76, 174, 0], [1, "t", 3, 73, 174, 0], [1, "t", 5, 72, 175, 0], [1, "t", 5, 87, 173, 0], [1, "de", 2, 76, 175, 0], [1, "de", 3, 77, 171, 0], [1, "de", 3, 86, 177, 0], [1, "de", 2, 71, 175, 0], [1, "s", 1, 70, 174, 1], [1, "r", 48, 174, 0], [1, "r", 49, 175, 0], [1, "r", 50, 175, 0], [1, "r", 51, 175, 0], [1, "r", 51, 174, 0], [1, "r", 50, 174, 0], [1, "r", 49, 174, 0], [1, "r", 52, 175, 0], [1, "r", 52, 176, 0], [1, "r", 51, 176, 0], [1, "r", 50, 176, 0], [1, "r", 49, 176, 0], [1, "r", 48, 175, 0], [1, "r", 47, 175, 0], [1, "r", 48, 176, 0], [1, "r", 69, 163, 0], [1, "r", 70, 163, 0], [1, "r", 71, 163, 0], [1, "r", 73, 163, 0], [1, "r", 72, 163, 0], [1, "r", 73, 164, 0], [1, "r", 72, 164, 0], [1, "r", 71, 164, 0], [1, "r", 70, 164, 0], [1, "r", 69, 164, 0], [1, "r", 68, 164, 0], [1, "r", 68, 165, 0], [1, "r", 69, 165, 0], [1, "r", 70, 165, 0], [1, "r", 71, 165, 0], [1, "r", 72, 165, 0], [1, "r", 74, 164, 0], [1, "r", 73, 165, 0], [1, "r", 72, 166, 0], [1, "r", 71, 166, 0], [1, "r", 70, 166, 0], [1, "r", 74, 165, 0], [1, "r", 24, 164, 0], [1, "r", 25, 164, 0], [1, "r", 27, 164, 0], [1, "r", 26, 164, 0], [1, "r", 28, 165, 0], [1, "r", 26, 165, 0], [1, "r", 27, 165, 0], [1, "r", 25, 165, 0], [1, "r", 24, 165, 0], [1, "r", 23, 165, 0], [1, "r", 22, 165, 0], [1, "r", 21, 165, 0], [1, "r", 21, 166, 0], [1, "r", 22, 166, 0], [1, "r", 23, 166, 0], [1, "r", 24, 166, 0], [1, "r", 25, 166, 0], [1, "r", 26, 166, 0], [1, "r", 27, 166, 0], [1, "r", 28, 166, 0], [1, "r", 28, 167, 0], [1, "r", 26, 167, 0], [1, "r", 25, 167, 0], [1, "r", 24, 167, 0], [1, "r", 23, 167, 0], [1, "r", 22, 167, 0], [1, "r", 27, 167, 0], [1, "r", 29, 166, 0], [1, "r", 29, 167, 0], [1, "r", 28, 168, 0], [1, "r", 27, 168, 0], [1, "r", 26, 168, 0], [1, "r", 25, 168, 0], [1, "r", 24, 168, 0], [1, "r", 23, 168, 0], [1, "r", 27, 169, 0], [1, "r", 26, 169, 0], [1, "r", 25, 169, 0], [1, "r", 24, 169, 0], [1, "r", 23, 169, 0], [1, "r", 22, 168, 0], [1, "r", 21, 167, 0], [1, "s", 1, 52, 174, 1], [1, "t", 3, 50, 177, 0], [1, "t", 4, 49, 177, 0], [1, "b", 0, 47, 174, 0], [1, "b", 0, 69, 166, 0], [1, "t", 2, 68, 166, 0], [1, "t", 5, 74, 163, 0], [1, "t", 1, 73, 162, 0], [1, "s", 0, 73, 166, 1], [1, "s", 2, 76, 165, 1], [1, "g", 2, 59, 175, 1], [1, "p", 0, 78, 168, 1], [1, "p", 0, 61, 162, 1], [1, "p", 0, 42, 170, 1], [1, "p", 0, 20, 174, 1], [1, "p", 0, 16, 160, 1], [1, "b", 1, 23, 164, 0], [1, "b", 1, 28, 169, 0], [1, "b", 2, 29, 168, 0], [1, "b", 2, 16, 170, 0], [1, "t", 1, 15, 171, 0], [1, "t", 5, 13, 175, 0], [1, "t", 5, 19, 166, 0], [1, "t", 5, 26, 163, 0], [1, "s", 1, 29, 165, 1], [1, "t", 5, 11, 167, 0], [1, "t", 0, 29, 176, 0], [1, "b", 2, 30, 175, 0], [1, "t", 2, 24, 177, 0], [1, "b", 1, 37, 174, 0], [1, "b", 0, 35, 172, 0], [1, "b", 3, 37, 170, 0], [1, "t", 4, 38, 169, 0], [1, "t", 4, 34, 173, 0], [1, "t", 5, 38, 175, 0], [1, "b", 2, 39, 173, 0], [1, "t", 3, 37, 176, 0], [1, "t", 4, 30, 168, 0], [1, "s", 2, 35, 176, 1], [1, "s", 1, 41, 175, 1], [1, "b", 2, 53, 176, 0], [1, "t", 5, 55, 173, 0], [1, "t", 5, 45, 170, 0], [1, "b", 1, 53, 162, 0], [1, "b", 0, 50, 164, 0], [1, "t", 2, 54, 163, 0], [1, "t", 3, 49, 165, 0], [1, "t", 4, 48, 160, 0], [1, "t", 4, 57, 164, 0], [1, "t", 4, 66, 162, 0], [1, "b", 1, 86, 161, 0], [1, "b", 2, 81, 163, 0], [1, "t", 3, 85, 162, 0], [1, "t", 5, 81, 162, 0], [1, "t", 5, 88, 163, 0], [1, "t", 1, 84, 166, 0], [1, "t", 5, 72, 160, 0], [1, "t", 5, 70, 170, 0], [1, "s", 1, 57, 162, 1], [1, "b", 1, 39, 161, 0], [1, "b", 0, 34, 164, 0], [1, "b", 2, 54, 164, 0], [1, "t", 1, 59, 169, 0], [1, "t", 3, 60, 170, 0], [1, "t", 4, 63, 169, 0], [1, "t", 4, 63, 174, 0], [1, "t", 1, 62, 175, 0], [1, "t", 5, 40, 162, 0], [1, "t", 1, 63, 180, 0], [1, "t", 2, 64, 179, 0], [1, "t", 2, 35, 165, 0], [1, "s", 1, 63, 173, 1], [1, "s", 2, 40, 165, 1], [1, "b", 0, 46, 169, 0], [1, "de", 22, 74, 168, 0], [1, "de", 22, 86, 168, 0], [1, "de", 22, 83, 175, 0], [1, "de", 22, 78, 175, 0], [1, "de", 19, 72, 176, 0], [1, "de", 19, 68, 168, 0], [1, "de", 19, 65, 163, 0], [1, "de", 19, 75, 162, 0], [1, "de", 19, 80, 162, 0], [1, "de", 19, 88, 159, 0], [1, "de", 19, 87, 164, 0], [1, "de", 19, 61, 177, 0], [1, "de", 19, 59, 172, 0], [1, "de", 19, 59, 167, 0], [1, "de", 19, 53, 165, 0], [1, "de", 19, 56, 163, 0], [1, "de", 19, 51, 161, 0], [1, "de", 19, 48, 167, 0], [1, "de", 19, 47, 170, 0], [1, "de", 19, 41, 163, 0], [1, "de", 19, 37, 161, 0], [1, "de", 19, 36, 166, 0], [1, "de", 19, 36, 171, 0], [1, "de", 19, 34, 174, 0], [1, "de", 19, 40, 172, 0], [1, "de", 19, 38, 177, 0], [1, "de", 19, 42, 176, 0], [1, "de", 19, 53, 178, 0], [1, "de", 19, 53, 172, 0], [1, "de", 19, 64, 181, 0], [1, "de", 19, 64, 175, 0], [1, "de", 19, 79, 172, 0], [1, "de", 19, 30, 170, 0], [1, "de", 19, 17, 168, 0], [1, "de", 19, 14, 173, 0], [1, "de", 19, 12, 162, 0], [1, "de", 19, 9, 167, 0], [1, "de", 19, 20, 161, 0], [1, "de", 19, 27, 162, 0], [1, "de", 19, 83, 195, 0], [1, "de", 2, 85, 163, 0], [1, "de", 2, 80, 164, 0], [1, "de", 2, 84, 169, 0], [1, "de", 2, 55, 165, 0], [1, "de", 3, 46, 163, 0], [1, "de", 2, 66, 169, 0], [1, "de", 0, 63, 175, 0], [1, "de", 0, 34, 164, 0], [1, "de", 0, 18, 160, 0], [1, "de", 2, 40, 160, 0], [1, "de", 2, 53, 160, 0], [1, "de", 2, 14, 170, 0], [1, "de", 2, 19, 175, 0], [1, "de", 2, 23, 176, 0], [1, "de", 5, 60, 147, 0], [1, "de", 33, 59, 160, 0], [1, "de", 33, 85, 157, 0], [1, "de", 33, 29, 143, 0], [1, "de", 33, 62, 140, 0], [1, "de", 33, 43, 127, 0], [1, "de", 33, 18, 129, 0], [1, "de", 33, 50, 134, 0], [1, "de", 33, 79, 127, 0], [1, "de", 33, 89, 139, 0], [1, "b", 1, 44, 156, 0], [1, "t", 2, 45, 157, 0], [1, "b", 0, 75, 156, 0], [1, "t", 3, 76, 157, 0], [1, "t", 5, 62, 157, 0], [1, "t", 5, 79, 156, 0], [1, "t", 5, 41, 156, 0], [1, "b", 1, 28, 156, 0], [1, "t", 2, 27, 157, 0], [1, "t", 4, 21, 156, 0], [1, "t", 4, 56, 159, 0], [1, "f", 1, 94, 153, 1], [1, "f", 2, 93, 153, 1], [1, "f", 2, 99, 153, 1], [1, "f", 1, 98, 153, 1], [1, "f", 0, 97, 153, 1], [1, "f", 1, 96, 153, 1], [1, "s", 1, 7, 149, 1], [1, "de", 4, 7, 150, 0], [1, "b", 3, 43, 281, 0], [1, "de", 50, 24, 39, 0], [1, "de", 50, 21, 39, 0], [1, "de", 50, 22, 43, 0], [1, "de", 50, 15, 34, 0], [1, "de", 50, 18, 26, 0], [1, "de", 50, 44, 42, 0], [1, "de", 50, 57, 39, 0], [1, "de", 50, 62, 43, 0], [1, "de", 50, 77, 44, 0], [1, "de", 50, 71, 41, 0], [1, "de", 50, 55, 39, 0], [1, "de", 50, 22, 39, 0], [1, "de", 50, 20, 41, 0], [1, "de", 50, 18, 21, 0], [1, "de", 50, 15, 21, 0], [1, "de", 50, 18, 19, 0], [1, "de", 50, 17, 17, 0], [1, "de", 50, 18, 10, 0], [1, "de", 50, 18, 9, 0], [1, "de", 50, 52, 41, 0], [1, "de", 50, 82, 39, 0], [1, "de", 50, 86, 38, 0], [1, "de", 50, 84, 31, 0], [1, "de", 50, 86, 30, 0], [1, "de", 50, 84, 26, 0], [1, "de", 50, 86, 23, 0], [1, "de", 50, 86, 14, 0], [1, "de", 50, 29, 42, 0], [1, "de", 9, 74, 37, 0], [1, "de", 9, 76, 22, 0], [1, "de", 10, 79, 24, 0], [1, "de", 11, 77, 17, 0], [1, "de", 36, 81, 25, 0], [1, "de", 36, 80, 36, 0], [1, "de", 36, 21, 36, 0], [1, "de", 28, 23, 22, 0], [1, "de", 28, 27, 31, 0], [1, "de", 28, 69, 36, 0], [1, "de", 28, 80, 20, 0], [1, "de", 51, 24, 155, 0], [1, "de", 51, 7, 154, 0], [1, "de", 51, 11, 154, 0], [1, "de", 51, 12, 156, 0], [1, "de", 51, 16, 154, 0], [1, "de", 51, 20, 154, 0], [1, "de", 51, 23, 154, 0], [1, "de", 51, 18, 157, 0], [1, "de", 51, 31, 154, 0], [1, "de", 51, 32, 157, 0], [1, "de", 51, 86, 154, 0], [1, "de", 51, 88, 156, 0], [1, "de", 51, 82, 154, 0], [1, "de", 51, 80, 154, 0], [1, "de", 51, 77, 154, 0], [1, "de", 51, 74, 154, 0], [1, "de", 51, 71, 154, 0], [1, "de", 51, 67, 154, 0], [1, "de", 51, 60, 154, 0], [1, "de", 51, 57, 154, 0], [1, "de", 51, 65, 154, 0], [1, "de", 51, 68, 156, 0], [1, "de", 51, 59, 156, 0], [1, "de", 51, 55, 154, 0], [1, "de", 51, 54, 154, 0], [1, "de", 51, 52, 154, 0], [1, "de", 51, 55, 155, 0], [1, "de", 51, 54, 157, 0], [1, "de", 51, 49, 154, 0], [1, "de", 51, 46, 154, 0], [1, "de", 51, 44, 154, 0], [1, "de", 51, 43, 154, 0], [1, "de", 51, 41, 154, 0], [1, "de", 51, 38, 154, 0], [1, "de", 51, 39, 156, 0], [1, "de", 51, 34, 154, 0], [1, "de", 5, 19, 142, 0], [1, "de", 5, 37, 147, 0], [1, "de", 7, 53, 147, 0], [1, "de", 6, 69, 150, 0], [1, "de", 4, 94, 148, 0], [1, "de", 4, 66, 147, 0], [1, "de", 4, 10, 145, 0], [1, "de", 4, 28, 137, 0], [1, "de", 4, 15, 137, 0], [1, "de", 4, 48, 134, 0], [1, "de", 5, 67, 135, 0], [1, "de", 34, 84, 155, 0], [1, "de", 35, 70, 156, 0], [1, "de", 35, 51, 156, 0], [1, "de", 35, 56, 157, 0], [1, "de", 35, 65, 159, 0], [1, "de", 35, 23, 156, 0], [1, "de", 35, 15, 155, 0], [1, "de", 35, 8, 155, 0], [1, "de", 33, 13, 155, 0], [1, "de", 33, 33, 158, 0], [1, "de", 36, 78, 155, 0], [1, "de", 36, 87, 157, 0], [1, "fo", 1, 73, 36, 0], [1, "fo", 1, 80, 24, 0], [1, "fo", 2, 67, 36, 0], [1, "fo", 2, 45, 36, 0], [1, "fo", 2, 53, 34, 0], [1, "fo", 1, 51, 35, 0], [1, "fo", 1, 58, 35, 0], [1, "fo", 1, 33, 35, 0], [1, "fo", 1, 31, 33, 0], [1, "fo", 2, 29, 36, 0], [1, "fo", 2, 56, 36, 0], [1, "fo", 2, 60, 37, 0], [1, "fo", 2, 45, 32, 0], [1, "fo", 2, 22, 25, 0], [1, "fo", 2, 21, 35, 0], [1, "de", 52, 90, 208, 0], [1, "de", 18, 94, 250, 0], [1, "de", 17, 95, 253, 0], [1, "cs", 0, 140, 5, 1], [1, "cs", 2, 139, 5, 1], [1, "cs", 2, 138, 5, 1], [1, "cs", 2, 138, 6, 1], [1, "cs", 2, 139, 6, 1], [1, "cs", 2, 141, 6, 1], [1, "cs", 2, 140, 6, 1], [1, "la", 3, 143, 7, 1], [1, "la", 3, 139, 7, 1], [1, "cs", 0, 137, 7, 1], [1, "cs", 1, 138, 8, 1], [1, "cs", 2, 137, 6, 1], [1, "cs", 2, 137, 8, 1], [1, "cs", 2, 136, 7, 1], [1, "cs", 2, 138, 9, 1], [1, "cs", 3, 139, 9, 1], [1, "cs", 3, 136, 8, 1], [1, "cs", 3, 137, 9, 1], [1, "de", 53, 92, 165, 0], [1, "de", 53, 92, 180, 0], [1, "de", 53, 92, 188, 0], [1, "de", 54, 92, 153, 0], [1, "de", 54, 91, 153, 0], [1, "de", 54, 90, 153, 0], [1, "de", 54, 89, 153, 0], [1, "de", 54, 88, 153, 0], [1, "de", 54, 87, 153, 0], [1, "de", 54, 86, 153, 0], [1, "de", 54, 85, 153, 0], [1, "de", 54, 84, 153, 0], [1, "de", 54, 83, 153, 0], [1, "de", 54, 82, 153, 0], [1, "de", 54, 81, 153, 0], [1, "de", 54, 80, 153, 0], [1, "de", 54, 79, 153, 0], [1, "de", 54, 78, 153, 0], [1, "de", 54, 77, 153, 0], [1, "de", 54, 76, 153, 0], [1, "de", 54, 75, 153, 0], [1, "de", 54, 74, 153, 0], [1, "de", 54, 73, 153, 0], [1, "de", 54, 72, 153, 0], [1, "de", 54, 70, 153, 0], [1, "de", 54, 71, 153, 0], [1, "de", 54, 69, 153, 0], [1, "de", 54, 68, 153, 0], [1, "de", 54, 67, 153, 0], [1, "de", 54, 66, 153, 0], [1, "de", 54, 65, 153, 0], [1, "de", 54, 64, 153, 0], [1, "de", 54, 63, 153, 0], [1, "de", 54, 61, 153, 0], [1, "de", 54, 62, 153, 0], [1, "de", 54, 60, 153, 0], [1, "de", 54, 59, 153, 0], [1, "de", 54, 57, 153, 0], [1, "de", 54, 58, 153, 0], [1, "de", 54, 56, 153, 0], [1, "de", 54, 55, 153, 0], [1, "de", 54, 54, 153, 0], [1, "de", 54, 53, 153, 0], [1, "de", 54, 52, 153, 0], [1, "de", 54, 51, 153, 0], [1, "de", 54, 50, 153, 0], [1, "de", 54, 49, 153, 0], [1, "de", 54, 48, 153, 0], [1, "de", 54, 47, 153, 0], [1, "de", 54, 46, 153, 0], [1, "de", 54, 45, 153, 0], [1, "de", 54, 44, 153, 0], [1, "de", 54, 43, 153, 0], [1, "de", 54, 42, 153, 0], [1, "de", 54, 41, 153, 0], [1, "de", 54, 40, 153, 0], [1, "de", 54, 39, 153, 0], [1, "de", 54, 37, 153, 0], [1, "de", 54, 38, 153, 0], [1, "de", 54, 36, 153, 0], [1, "de", 54, 35, 153, 0], [1, "de", 54, 34, 153, 0], [1, "de", 54, 33, 153, 0], [1, "de", 54, 32, 153, 0], [1, "de", 54, 31, 153, 0], [1, "de", 54, 30, 153, 0], [1, "de", 54, 29, 153, 0], [1, "de", 54, 28, 153, 0], [1, "de", 54, 27, 153, 0], [1, "de", 54, 26, 153, 0], [1, "de", 54, 25, 153, 0], [1, "de", 54, 24, 153, 0], [1, "de", 54, 23, 153, 0], [1, "de", 54, 22, 153, 0], [1, "de", 54, 21, 153, 0], [1, "de", 54, 20, 153, 0], [1, "de", 54, 19, 153, 0], [1, "de", 54, 18, 153, 0], [1, "de", 54, 17, 153, 0], [1, "de", 54, 16, 153, 0], [1, "de", 54, 15, 153, 0], [1, "de", 54, 14, 153, 0], [1, "de", 54, 13, 153, 0], [1, "de", 54, 12, 153, 0], [1, "de", 54, 11, 153, 0], [1, "de", 54, 10, 153, 0], [1, "de", 54, 8, 153, 0], [1, "de", 54, 9, 153, 0], [1, "de", 55, 83, 8, 0], [1, "de", 55, 83, 9, 0], [1, "de", 55, 83, 10, 0], [1, "de", 55, 83, 11, 0], [1, "de", 55, 83, 12, 0], [1, "de", 55, 83, 13, 0], [1, "de", 55, 83, 14, 0], [1, "de", 55, 83, 15, 0], [1, "de", 55, 83, 16, 0], [1, "de", 55, 83, 17, 0], [1, "de", 55, 83, 19, 0], [1, "de", 55, 83, 18, 0], [1, "de", 55, 83, 20, 0], [1, "de", 55, 83, 21, 0], [1, "de", 55, 83, 22, 0], [1, "de", 55, 83, 23, 0], [1, "de", 55, 83, 24, 0], [1, "de", 55, 83, 25, 0], [1, "de", 55, 83, 26, 0], [1, "de", 55, 83, 27, 0], [1, "de", 55, 83, 28, 0], [1, "de", 55, 83, 29, 0], [1, "de", 55, 83, 30, 0], [1, "de", 55, 83, 31, 0], [1, "de", 55, 83, 32, 0], [1, "de", 55, 83, 33, 0], [1, "de", 55, 83, 34, 0], [1, "de", 55, 83, 36, 0], [1, "de", 55, 83, 35, 0], [1, "de", 55, 83, 37, 0], [1, "de", 55, 83, 38, 0], [1, "de", 55, 81, 38, 0], [1, "de", 55, 82, 38, 0], [1, "de", 55, 80, 38, 0], [1, "de", 55, 79, 38, 0], [1, "de", 55, 78, 38, 0], [1, "de", 55, 77, 38, 0], [1, "de", 55, 76, 38, 0], [1, "de", 55, 75, 38, 0], [1, "de", 55, 73, 38, 0], [1, "de", 55, 74, 38, 0], [1, "de", 55, 72, 38, 0], [1, "de", 55, 71, 38, 0], [1, "de", 55, 70, 38, 0], [1, "de", 55, 68, 38, 0], [1, "de", 55, 69, 38, 0], [1, "de", 55, 67, 38, 0], [1, "de", 55, 66, 38, 0], [1, "de", 55, 65, 38, 0], [1, "de", 55, 64, 38, 0], [1, "de", 55, 63, 38, 0], [1, "de", 55, 62, 38, 0], [1, "de", 55, 60, 38, 0], [1, "de", 55, 61, 38, 0], [1, "de", 55, 59, 38, 0], [1, "de", 55, 57, 38, 0], [1, "de", 55, 58, 38, 0], [1, "de", 55, 56, 38, 0], [1, "de", 55, 55, 38, 0], [1, "de", 55, 54, 38, 0], [1, "de", 55, 53, 38, 0], [1, "de", 55, 52, 38, 0], [1, "de", 55, 51, 38, 0], [1, "de", 55, 49, 38, 0], [1, "de", 55, 50, 38, 0], [1, "de", 55, 48, 38, 0], [1, "de", 55, 47, 38, 0], [1, "de", 55, 46, 38, 0], [1, "de", 55, 45, 38, 0], [1, "de", 55, 44, 38, 0], [1, "de", 55, 43, 38, 0], [1, "de", 55, 42, 38, 0], [1, "de", 55, 41, 38, 0], [1, "de", 55, 40, 38, 0], [1, "de", 55, 39, 38, 0], [1, "de", 55, 38, 38, 0], [1, "de", 55, 37, 38, 0], [1, "de", 55, 36, 38, 0], [1, "de", 55, 34, 38, 0], [1, "de", 55, 35, 38, 0], [1, "de", 55, 33, 38, 0], [1, "de", 55, 31, 38, 0], [1, "de", 55, 32, 38, 0], [1, "de", 55, 30, 38, 0], [1, "de", 55, 29, 38, 0], [1, "de", 55, 28, 38, 0], [1, "de", 55, 27, 38, 0], [1, "de", 55, 26, 38, 0], [1, "de", 55, 25, 38, 0], [1, "de", 55, 24, 38, 0], [1, "de", 55, 23, 38, 0], [1, "de", 55, 21, 38, 0], [1, "de", 55, 22, 38, 0], [1, "de", 55, 20, 38, 0], [1, "de", 55, 19, 38, 0], [1, "de", 55, 19, 37, 0], [1, "de", 55, 19, 36, 0], [1, "de", 55, 19, 35, 0], [1, "de", 55, 19, 34, 0], [1, "de", 55, 19, 33, 0], [1, "de", 55, 19, 32, 0], [1, "de", 55, 19, 31, 0], [1, "de", 55, 19, 30, 0], [1, "de", 55, 19, 28, 0], [1, "de", 55, 19, 29, 0], [1, "de", 55, 19, 27, 0], [1, "de", 55, 19, 26, 0], [1, "de", 55, 19, 25, 0], [1, "de", 55, 19, 24, 0], [1, "de", 55, 19, 23, 0], [1, "de", 55, 19, 22, 0], [1, "de", 55, 19, 21, 0], [1, "de", 55, 19, 20, 0], [1, "de", 55, 19, 18, 0], [1, "de", 55, 19, 19, 0], [1, "de", 55, 19, 16, 0], [1, "de", 55, 19, 17, 0], [1, "de", 55, 19, 15, 0], [1, "de", 55, 19, 14, 0], [1, "de", 55, 19, 13, 0], [1, "de", 55, 19, 12, 0], [1, "de", 55, 19, 11, 0], [1, "de", 55, 19, 10, 0], [1, "de", 55, 19, 9, 0], [1, "de", 55, 19, 8, 0], [1, "de", 55, 84, 35, 0], [1, "de", 55, 84, 32, 0], [1, "de", 55, 84, 25, 0], [1, "de", 50, 84, 24, 0], [1, "de", 55, 84, 20, 0], [1, "de", 55, 84, 17, 0], [1, "de", 55, 84, 16, 0], [1, "de", 50, 84, 15, 0], [1, "de", 55, 84, 8, 0], [1, "de", 55, 84, 9, 0], [1, "de", 50, 85, 11, 0], [1, "de", 55, 81, 39, 0], [1, "de", 50, 83, 40, 0], [1, "de", 55, 72, 39, 0], [1, "de", 55, 74, 39, 0], [1, "de", 55, 66, 39, 0], [1, "de", 55, 65, 39, 0], [1, "de", 50, 67, 41, 0], [1, "de", 55, 56, 39, 0], [1, "de", 55, 58, 39, 0], [1, "de", 55, 50, 39, 0], [1, "de", 50, 49, 39, 0], [1, "de", 55, 44, 39, 0], [1, "de", 55, 42, 39, 0], [1, "de", 50, 43, 39, 0], [1, "de", 50, 41, 39, 0], [1, "de", 50, 37, 39, 0], [1, "de", 55, 36, 39, 0], [1, "de", 55, 32, 39, 0], [1, "de", 50, 31, 39, 0], [1, "de", 55, 23, 39, 0], [1, "de", 55, 18, 37, 0], [1, "de", 50, 18, 36, 0], [1, "de", 55, 18, 35, 0], [1, "de", 50, 18, 34, 0], [1, "de", 55, 18, 31, 0], [1, "de", 50, 18, 30, 0], [1, "de", 55, 18, 25, 0], [1, "de", 50, 18, 24, 0], [1, "de", 55, 18, 20, 0], [1, "de", 55, 18, 14, 0], [1, "de", 50, 18, 15, 0], [1, "de", 55, 18, 8, 0], [1, "de", 54, 90, 154, 0], [1, "de", 51, 89, 154, 0], [1, "de", 54, 85, 154, 0], [1, "de", 54, 81, 154, 0], [1, "de", 54, 76, 154, 0], [1, "de", 54, 70, 154, 0], [1, "de", 54, 66, 154, 0], [1, "de", 54, 61, 154, 0], [1, "de", 54, 56, 154, 0], [1, "de", 54, 53, 154, 0], [1, "de", 54, 45, 154, 0], [1, "de", 54, 42, 154, 0], [1, "de", 54, 37, 154, 0], [1, "de", 54, 30, 154, 0], [1, "de", 54, 25, 154, 0], [1, "de", 54, 17, 154, 0], [1, "de", 54, 10, 154, 0], [1, "de", 54, 8, 154, 0], [1, "de", 55, 20, 9, 0], [1, "de", 53, 93, 154, 0], [1, "de", 53, 93, 156, 0], [1, "de", 53, 93, 158, 0], [1, "de", 52, 91, 157, 0], [1, "de", 53, 93, 159, 0], [1, "de", 53, 93, 161, 0], [1, "de", 53, 93, 162, 0], [1, "de", 53, 93, 163, 0], [1, "de", 53, 93, 164, 0], [1, "de", 53, 93, 165, 0], [1, "de", 53, 93, 166, 0], [1, "de", 53, 93, 167, 0], [1, "de", 52, 91, 167, 0], [1, "de", 53, 93, 169, 0], [1, "de", 53, 93, 168, 0], [1, "de", 53, 93, 170, 0], [1, "de", 53, 93, 171, 0], [1, "de", 53, 93, 173, 0], [1, "de", 53, 93, 176, 0], [1, "de", 53, 93, 175, 0], [1, "de", 53, 92, 169, 0], [1, "de", 53, 93, 178, 0], [1, "de", 53, 93, 179, 0], [1, "de", 53, 93, 180, 0], [1, "de", 53, 93, 181, 0], [1, "de", 53, 93, 183, 0], [1, "de", 53, 93, 184, 0], [1, "de", 53, 93, 186, 0], [1, "de", 18, 95, 185, 0], [1, "de", 53, 93, 187, 0], [1, "de", 53, 93, 188, 0], [1, "de", 52, 91, 186, 0], [1, "de", 53, 93, 190, 0], [1, "de", 53, 93, 192, 0], [1, "de", 53, 93, 195, 0], [1, "de", 53, 93, 194, 0], [1, "de", 52, 91, 196, 0], [1, "de", 53, 93, 197, 0], [1, "de", 53, 93, 200, 0], [1, "de", 53, 93, 198, 0], [1, "de", 53, 93, 201, 0], [1, "de", 53, 93, 202, 0], [1, "de", 53, 93, 203, 0], [1, "de", 53, 93, 204, 0], [1, "de", 53, 93, 206, 0], [1, "de", 53, 93, 205, 0], [1, "de", 53, 93, 207, 0], [1, "de", 53, 93, 209, 0], [1, "de", 53, 93, 210, 0], [1, "de", 53, 93, 212, 0], [1, "de", 52, 91, 204, 0], [1, "de", 53, 93, 213, 0], [1, "de", 53, 93, 214, 0], [1, "de", 53, 93, 215, 0], [1, "de", 53, 93, 216, 0], [1, "de", 53, 93, 217, 0], [1, "de", 53, 93, 218, 0], [1, "de", 53, 93, 219, 0], [1, "de", 53, 93, 220, 0], [1, "de", 52, 92, 213, 0], [1, "de", 52, 92, 206, 0], [1, "de", 52, 92, 202, 0], [1, "de", 53, 92, 201, 0], [1, "de", 52, 92, 194, 0], [1, "de", 52, 92, 178, 0], [1, "de", 52, 92, 171, 0], [1, "de", 53, 93, 221, 0], [1, "de", 53, 93, 222, 0], [1, "de", 53, 93, 223, 0], [1, "de", 53, 93, 225, 0], [1, "de", 53, 93, 228, 0], [1, "de", 53, 93, 227, 0], [1, "de", 52, 92, 217, 0], [1, "de", 53, 92, 218, 0], [1, "de", 52, 92, 221, 0], [1, "de", 52, 92, 225, 0], [1, "de", 52, 93, 226, 0], [1, "de", 52, 93, 224, 0], [1, "de", 52, 93, 208, 0], [1, "de", 52, 93, 211, 0], [1, "de", 52, 93, 196, 0], [1, "de", 52, 93, 199, 0], [1, "de", 52, 93, 189, 0], [1, "de", 52, 93, 191, 0], [1, "de", 52, 93, 193, 0], [1, "de", 52, 93, 182, 0], [1, "de", 52, 93, 185, 0], [1, "de", 52, 93, 172, 0], [1, "de", 52, 93, 174, 0], [1, "de", 52, 93, 177, 0], [1, "de", 52, 93, 155, 0], [1, "de", 52, 93, 157, 0], [1, "de", 52, 93, 160, 0], [1, "de", 52, 92, 162, 0], [1, "de", 53, 93, 229, 0], [1, "de", 53, 93, 231, 0], [1, "de", 53, 93, 232, 0], [1, "de", 53, 93, 234, 0], [1, "de", 52, 93, 230, 0], [1, "de", 52, 92, 228, 0], [1, "de", 53, 93, 235, 0], [1, "de", 53, 93, 236, 0], [1, "de", 53, 93, 237, 0], [1, "de", 53, 93, 239, 0], [1, "de", 53, 93, 240, 0], [1, "de", 52, 93, 238, 0], [1, "de", 53, 93, 241, 0], [1, "de", 52, 93, 242, 0], [1, "de", 52, 93, 243, 0], [1, "de", 53, 93, 244, 0], [1, "de", 53, 93, 246, 0], [1, "de", 53, 93, 245, 0], [1, "de", 52, 93, 247, 0], [1, "de", 53, 93, 248, 0], [1, "de", 52, 92, 235, 0], [1, "de", 52, 92, 245, 0], [1, "de", 52, 93, 249, 0], [1, "de", 53, 93, 250, 0], [1, "de", 53, 93, 251, 0], [1, "de", 53, 93, 252, 0], [1, "de", 53, 93, 254, 0], [1, "de", 52, 93, 253, 0], [1, "de", 52, 93, 255, 0], [1, "de", 53, 93, 257, 0], [1, "de", 53, 93, 256, 0], [1, "de", 52, 93, 258, 0], [1, "de", 53, 93, 259, 0], [1, "de", 52, 93, 260, 0], [1, "de", 53, 93, 263, 0], [1, "de", 53, 93, 264, 0], [1, "de", 53, 93, 265, 0], [1, "de", 52, 93, 266, 0], [1, "de", 53, 93, 267, 0], [1, "de", 52, 93, 268, 0], [1, "de", 52, 93, 269, 0], [1, "de", 53, 93, 276, 0], [1, "de", 53, 93, 277, 0], [1, "de", 52, 93, 278, 0], [1, "de", 53, 93, 279, 0], [1, "de", 52, 93, 280, 0], [1, "de", 52, 93, 283, 0], [1, "de", 53, 93, 284, 0], [1, "de", 53, 93, 285, 0], [1, "de", 53, 93, 286, 0], [1, "de", 52, 93, 287, 0], [1, "de", 53, 93, 288, 0], [1, "de", 53, 93, 289, 0], [1, "de", 52, 93, 290, 0], [1, "de", 52, 93, 291, 0], [1, "de", 53, 93, 292, 0], [1, "de", 52, 93, 293, 0], [1, "de", 53, 93, 294, 0], [1, "de", 52, 93, 295, 0], [1, "de", 52, 93, 296, 0], [1, "de", 53, 93, 297, 0], [1, "de", 53, 93, 298, 0], [1, "de", 52, 93, 299, 0], [1, "de", 53, 93, 300, 0], [1, "de", 52, 92, 298, 0], [1, "de", 52, 92, 293, 0], [1, "r", 92, 262, 0], [1, "r", 93, 262, 0], [1, "de", 52, 93, 261, 0], [1, "cs", 0, 223, 104, 1], [1, "cs", 2, 223, 105, 1], [1, "cs", 2, 223, 102, 1], [1, "cs", 2, 223, 103, 1], [1, "la", 3, 141, 8, 1], [1, "cs", 2, 140, 9, 1], [1, "la", 4, 142, 9, 1], [1, "de", 4, 81, 149, 0], [1, "f", 0, 83, 148, 1], [1, "f", 1, 82, 149, 1], [1, "de", 34, 81, 156, 0], [1, "de", 51, 17, 9, 0], [1, "de", 54, 16, 9, 0], [1, "de", 54, 15, 9, 0], [1, "cs", 3, 223, 106, 1], [1, "p", 0, 119, 279, 1], [1, "p", 0, 109, 242, 1], [1, "cs", 1, 29, 9, 1], [1, "cs", 2, 30, 9, 1], [1, "cs", 2, 31, 9, 1], [1, "cs", 2, 32, 9, 1], [1, "cs", 2, 33, 9, 1], [1, "cs", 2, 69, 9, 1], [1, "cs", 2, 71, 9, 1], [1, "cs", 2, 70, 9, 1], [1, "cs", 1, 72, 9, 1], [1, "cs", 2, 73, 9, 1], [1, "de", 10, 31, 10, 0], [1, "de", 10, 29, 10, 0], [1, "de", 10, 44, 10, 0], [1, "de", 4, 87, 10, 0], [1, "de", 4, 86, 10, 0], [1, "de", 5, 87, 9, 0], [1, "de", 5, 13, 10, 0], [1, "de", 4, 14, 11, 0], [1, "de", 4, 16, 10, 0], [1, "de", 4, 17, 10, 0], [1, "cs", 2, 146, 9, 1], [1, "cs", 2, 148, 9, 1], [1, "cs", 2, 150, 9, 1], [1, "cs", 2, 153, 9, 1], [1, "cs", 2, 155, 9, 1], [1, "cs", 1, 149, 9, 1], [1, "cs", 1, 154, 9, 1], [1, "cs", 3, 147, 9, 1], [1, "cs", 3, 151, 9, 1], [1, "cs", 3, 152, 9, 1], [1, "cs", 3, 156, 9, 1], [1, "cs", 3, 157, 9, 1], [1, "cs", 3, 158, 9, 1], [1, "cs", 3, 159, 9, 1], [1, "cs", 3, 160, 9, 1], [1, "cs", 0, 161, 9, 1], [1, "cs", 2, 162, 9, 1], [1, "cs", 2, 163, 9, 1], [1, "cs", 1, 164, 9, 1], [1, "cs", 2, 165, 9, 1], [1, "cs", 3, 166, 9, 1], [1, "cs", 3, 168, 9, 1], [1, "cs", 3, 170, 9, 1], [1, "cs", 1, 169, 9, 1], [1, "cs", 2, 167, 9, 1], [1, "cs", 2, 171, 9, 1], [1, "cs", 2, 173, 9, 1], [1, "cs", 2, 172, 9, 1], [1, "cs", 2, 174, 9, 1], [1, "cs", 1, 175, 9, 1], [1, "cs", 3, 176, 9, 1], [1, "cs", 3, 178, 9, 1], [1, "cs", 3, 179, 9, 1], [1, "cs", 0, 180, 9, 1], [1, "cs", 2, 177, 9, 1], [1, "cs", 2, 182, 9, 1], [1, "cs", 2, 181, 9, 1], [1, "cs", 2, 183, 9, 1], [1, "cs", 2, 184, 9, 1], [1, "cs", 2, 185, 9, 1], [1, "cs", 2, 186, 9, 1], [1, "cs", 1, 187, 9, 1], [1, "cs", 2, 188, 9, 1], [1, "cs", 3, 189, 9, 1], [1, "cs", 3, 190, 9, 1], [1, "cs", 3, 191, 9, 1], [1, "cs", 2, 192, 9, 1], [1, "cs", 0, 193, 9, 1], [1, "cs", 2, 194, 9, 1], [1, "cs", 2, 196, 9, 1], [1, "cs", 2, 198, 9, 1], [1, "cs", 2, 200, 9, 1], [1, "cs", 3, 195, 9, 1], [1, "cs", 3, 197, 9, 1], [1, "cs", 3, 199, 9, 1], [1, "cs", 0, 201, 9, 1], [1, "cs", 2, 202, 9, 1], [1, "cs", 2, 203, 9, 1], [1, "cs", 3, 208, 9, 1], [1, "cs", 3, 207, 9, 1], [1, "cs", 3, 206, 9, 1], [1, "cs", 3, 205, 9, 1], [1, "cs", 3, 204, 9, 1], [1, "cs", 3, 214, 9, 1], [1, "cs", 3, 215, 9, 1], [1, "cs", 3, 216, 9, 1], [1, "cs", 3, 217, 9, 1], [1, "cs", 3, 218, 9, 1], [1, "b", 0, 5, 159, 0], [1, "b", 0, 5, 171, 0], [2, "isl", 1, 122, 63, 0], [2, "isl", 2, 119, 277, 0], [2, "isl", 2, 109, 244, 0], [2, "isl", 2, 114, 205, 0], [2, "isl", 1, 120, 150, 0], [2, "isl", 2, 154, 129, 0], [2, "isl", 0, 184, 158, 0], [2, "isl", 1, 208, 128, 0], [2, "isl", 1, 215, 132, 0], [2, "isl", 1, 214, 128, 0], [2, "isl", 1, 209, 132, 0], [1, "la", 3, 217, 20, 1], [1, "la", 1, 215, 19, 1], [1, "la", 0, 212, 18, 1], [1, "la", 4, 214, 18, 1], [1, "la", 4, 216, 19, 1], [1, "la", 4, 211, 20, 1], [1, "la", 3, 210, 19, 1], [1, "la", 3, 215, 21, 1], [1, "la", 1, 214, 20, 1], [1, "la", 3, 214, 22, 1], [1, "la", 3, 214, 24, 1], [1, "la", 4, 214, 26, 1], [1, "la", 4, 213, 27, 1], [1, "la", 1, 212, 28, 1], [1, "la", 2, 212, 29, 1], [1, "la", 5, 212, 30, 1], [1, "la", 4, 208, 19, 1], [1, "la", 4, 207, 19, 1], [1, "la", 1, 206, 19, 1], [1, "la", 1, 205, 19, 1], [1, "la", 2, 204, 19, 1], [1, "la", 5, 203, 19, 1], [1, "la", 3, 210, 17, 1]];
var Qb = 0;
let Rb = {
  ﱠ︉︋︁: ["#133A2B", "#042b30"],
  ﱟ︉︋︁: ["#EBF2F0", "#136167"],
  ﱡ︉︋︁: ["#4EB687", "#187484"],
  ﱣ︉︋︁: ["#664516", "#13474C"],
  ﱢ︉︋︁: ["#FCEFBB", "#0F4D48"],
  ﱞ︊︋︁: ["#C1AA7E", "#0F423D"],
  ﱠ︊︋︁: ["#594837", "#163A3A"],
  ﱟ︊︋︁: ["#A5D6D6", "#539CA0"],
  ﱡ︊︋︁: ["#0B6A84", "#09373F"],
  ﱣ︊︋︁: ["#2A8B9B", "#0F464C"],
  ﱢ︊︋︁: ["#A9D6D3", "#115E60"],
  ﱞ︋︋︁: ["#ECF7F9", "#539CA0"],
  ﱠ︋︋︁: ["#FFF", "#FFF"],
  ﱟ︋︋︁: ["#FFF", "#FFF"],
  ﱡ︋︋︁: ["#1C9BA4", "#00272F"],
  ﱣ︋︋︁: ["#2D2017", "#031C1E"],
  ﱢ︋︋︁: 0,
  ﱞ︌︋︁: 1,
  ﱠ︌︋︁: 2300,
  ﱟ︌︋︁: 2290,
  ﱡ︌︋︁: 34,
  ﱣ︌︋︁: 5,
  ﱢ︌︋︁: 68,
  ﱞ︍︋︁: 34,
  ﱠ︍︋︁: 5,
  ﱟ︍︋︁: 1,
  ﱡ︍︋︁: 0.6,
  ﱣ︍︋︁: 0.25,
  ﱢ︍︋︁: 50,
  ﱞ︎︋︁: 10,
  ﱠ︎︋︁: 75,
  ﱟ︎︋︁: 20,
  ﱡ︎︋︁: 5,
  ﱣ︎︋︁: 0,
  ﱢ︎︋︁: 1,
  ﱞ️︋︁: 2,
  ﱠ️︋︁: 3,
  ﱟ️︋︁: 4,
  ﱡ️︋︁: 5,
  ﱣ️︋︁: 6,
  ﱢ️︋︁: 7,
  ﱞ︀︌︁: 8,
  ﱠ︀︌︁: 9,
  ﱟ︀︌︁: 10,
  ﱡ︀︌︁: 11,
  ﱣ︀︌︁: 12,
  ﱢ︀︌︁: 13,
  ﱞ︁︌︁: 14,
  ﱠ︁︌︁: 15,
  ﱟ︁︌︁: 16,
  ﱡ︁︌︁: 17,
  ﱣ︁︌︁: 18,
  ﱢ︁︌︁: 19,
  ﱞ︂︌︁: 20,
  ﱠ︂︌︁: 21,
  ﱟ︂︌︁: 22,
  ﱡ︂︌︁: 23,
  ﱣ︂︌︁: 24,
  ﱢ︂︌︁: 25,
  ﱞ︃︌︁: 26,
  ﱠ︃︌︁: 27,
  ﱟ︃︌︁: 28,
  ﱡ︃︌︁: 29,
  ﱣ︃︌︁: 30,
  ﱢ︃︌︁: 31,
  ﱞ︄︌︁: 32,
  ﱠ︄︌︁: 33,
  ﱟ︄︌︁: 34,
  ﱡ︄︌︁: 35,
  ﱣ︄︌︁: 36,
  ﱢ︄︌︁: 37,
  ﱞ︅︌︁: 38,
  ﱠ︅︌︁: 39,
  ﱟ︅︌︁: 40,
  ﱡ︅︌︁: 41,
  ﱣ︅︌︁: 42,
  ﱢ︅︌︁: 43,
  ﱞ︆︌︁: 44,
  ﱠ︆︌︁: 45,
  ﱟ︆︌︁: 46,
  ﱡ︆︌︁: 47,
  ﱣ︆︌︁: 48,
  ﱢ︆︌︁: 49,
  ﱞ︇︌︁: 50,
  ﱠ︇︌︁: 51,
  ﱟ︇︌︁: 52,
  ﱡ︇︌︁: 53,
  ﱣ︇︌︁: 54,
  ﱢ︇︌︁: 55,
  ﱞ︈︌︁: 56,
  ﱠ︈︌︁: 57,
  ﱟ︈︌︁: 58,
  ﱡ︈︌︁: 59,
  ﱣ︈︌︁: 60,
  ﱢ︈︌︁: 61,
  ﱞ︉︌︁: 62,
  ﱠ︉︌︁: 63,
  ﱟ︉︌︁: 64,
  ﱡ︉︌︁: 65,
  ﱣ︉︌︁: 66,
  ﱢ︉︌︁: 67,
  ﱞ︊︌︁: 68,
  ﱠ︊︌︁: 69,
  ﱟ︊︌︁: 70,
  ﱡ︊︌︁: 71,
  ﱣ︊︌︁: 72,
  ﱢ︊︌︁: 73,
  ﱞ︋︌︁: 74,
  ﱠ︋︌︁: 75,
  ﱟ︋︌︁: 76,
  ﱡ︋︌︁: 77,
  ﱣ︋︌︁: 78,
  ﱢ︋︌︁: 79,
  ﱞ︌︌︁: 80,
  ﱠ︌︌︁: 81,
  ﱟ︌︌︁: 82,
  ﱡ︌︌︁: 83,
  ﱣ︌︌︁: 84,
  ﱢ︌︌︁: 85,
  ﱞ︍︌︁: 86,
  ﱠ︍︌︁: 87,
  ﱟ︍︌︁: 88,
  ﱡ︍︌︁: 89,
  ﱣ︍︌︁: 90,
  ﱢ︍︌︁: 91,
  ﱞ︎︌︁: 92,
  ﱠ︎︌︁: 93,
  ﱟ︎︌︁: 94,
  ﱡ︎︌︁: 95,
  ﱣ︎︌︁: 96,
  ﱢ︎︌︁: 97,
  ﱞ️︌︁: 98,
  ﱠ️︌︁: 99,
  ﱟ️︌︁: 100,
  ﱡ️︌︁: 101,
  ﱣ️︌︁: 102,
  ﱢ️︌︁: 103,
  ﱞ︀︍︁: 104,
  ﱠ︀︍︁: 105,
  ﱟ︀︍︁: 106,
  ﱡ︀︍︁: 107,
  ﱣ︀︍︁: 108,
  ﱢ︀︍︁: 109,
  ﱞ︁︍︁: 110,
  ﱠ︁︍︁: 111,
  ﱟ︁︍︁: 112,
  ﱡ︁︍︁: 113,
  ﱣ︁︍︁: 114,
  ﱢ︁︍︁: 115,
  ﱞ︂︍︁: 116,
  ﱠ︂︍︁: 117,
  ﱟ︂︍︁: 118,
  ﱡ︂︍︁: 119,
  ﱣ︂︍︁: 120,
  ﱢ︂︍︁: 121,
  ﱞ︃︍︁: 122,
  ﱠ︃︍︁: 123,
  ﱟ︃︍︁: 124,
  ﱡ︃︍︁: 125,
  ﱣ︃︍︁: 126,
  ﱢ︃︍︁: 127,
  ﱞ︄︍︁: 128,
  ﱠ︄︍︁: 129,
  ﱟ︄︍︁: 130,
  ﱡ︄︍︁: 131,
  ﱣ︄︍︁: 132,
  ﱢ︄︍︁: 133,
  ﱞ︅︍︁: 134,
  ﱠ︅︍︁: 135,
  ﱟ︅︍︁: 136,
  ﱡ︅︍︁: 137,
  ﱣ︅︍︁: 138,
  ﱢ︅︍︁: 139,
  ﱞ︆︍︁: 140,
  ﱠ︆︍︁: 141,
  ﱟ︆︍︁: 142,
  ﱡ︆︍︁: 143,
  ﱣ︆︍︁: 144,
  ﱢ︆︍︁: 145,
  ﱞ︇︍︁: 146,
  ﱠ︇︍︁: 147,
  ﱟ︇︍︁: 148,
  ﱡ︇︍︁: 149,
  ﱣ︇︍︁: 150,
  ﱢ︇︍︁: 151,
  ﱞ︈︍︁: 152,
  ﱠ︈︍︁: 153,
  ﱟ︈︍︁: 154,
  ﱡ︈︍︁: 155,
  ﱣ︈︍︁: 156,
  ﱢ︈︍︁: 157,
  ﱞ︉︍︁: 158,
  ﱠ︉︍︁: 159,
  ﱟ︉︍︁: 160,
  ﱡ︉︍︁: 161,
  ﱣ︉︍︁: 162,
  ﱢ︉︍︁: 163,
  ﱞ︊︍︁: 164,
  ﱠ︊︍︁: 165,
  ﱟ︊︍︁: 166,
  ﱡ︊︍︁: 167,
  ﱣ︊︍︁: 168,
  ﱢ︊︍︁: 169,
  ﱞ︋︍︁: 170,
  ﱠ︋︍︁: 171,
  ﱟ︋︍︁: 172,
  ﱡ︋︍︁: 173,
  ﱣ︋︍︁: 174,
  ﱢ︋︍︁: 175,
  ﱞ︌︍︁: 176,
  ﱠ︌︍︁: 177,
  ﱟ︌︍︁: 178,
  ﱡ︌︍︁: 179,
  ﱣ︌︍︁: 180,
  ﱢ︌︍︁: 181,
  ﱞ︍︍︁: 182,
  ﱠ︍︍︁: 183,
  ﱟ︍︍︁: 184,
  ﱡ︍︍︁: 185,
  ﱣ︍︍︁: 186,
  ﱢ︍︍︁: 187,
  ﱞ︎︍︁: 188,
  ﱠ︎︍︁: 189,
  ﱟ︎︍︁: 190,
  ﱡ︎︍︁: 191,
  ﱣ︎︍︁: 192,
  ﱢ︎︍︁: 193,
  ﱞ️︍︁: 194,
  ﱠ️︍︁: 195,
  ﱟ️︍︁: 196,
  ﱡ️︍︁: 197,
  ﱣ️︍︁: 198,
  ﱢ️︍︁: 199,
  ﱞ︀︎︁: 200,
  ﱠ︀︎︁: 201,
  ﱟ︀︎︁: 202,
  ﱡ︀︎︁: 203,
  ﱣ︀︎︁: 204,
  ﱢ︀︎︁: 205,
  ﱞ︁︎︁: 206,
  ﱠ︁︎︁: 207,
  ﱟ︁︎︁: 208,
  ﱡ︁︎︁: 209,
  ﱣ︁︎︁: 210,
  ﱢ︁︎︁: 211,
  ﱞ︂︎︁: 212,
  ﱠ︂︎︁: 213,
  ﱟ︂︎︁: 214,
  ﱡ︂︎︁: 215,
  ﱣ︂︎︁: 216,
  ﱢ︂︎︁: 217,
  ﱞ︃︎︁: 218,
  ﱠ︃︎︁: 219,
  ﱟ︃︎︁: 220,
  ﱡ︃︎︁: 221,
  ﱣ︃︎︁: 222,
  ﱢ︃︎︁: 223,
  ﱞ︄︎︁: 224,
  ﱠ︄︎︁: 1048,
  ﱟ︄︎︁: 1063,
  ﱡ︄︎︁: 1078,
  ﱣ︄︎︁: 228,
  ﱢ︄︎︁: 1093,
  ﱞ︅︎︁: 230,
  ﱠ︅︎︁: 231,
  ﱟ︅︎︁: 1114,
  ﱡ︅︎︁: 233,
  ﱣ︅︎︁: 234,
  ﱢ︅︎︁: 235,
  ﱞ︆︎︁: 236,
  ﱠ︆︎︁: 237,
  ﱟ︆︎︁: 238,
  ﱡ︆︎︁: 239,
  ﱣ︆︎︁: 240,
  ﱢ︆︎︁: 241,
  ﱞ︇︎︁: 1214,
  ﱠ︇︎︁: 243,
  ﱟ︇︎︁: 244,
  ﱡ︇︎︁: 245,
  ﱣ︇︎︁: 246,
  ﱢ︇︎︁: 247,
  ﱞ︈︎︁: 248,
  ﱠ︈︎︁: 249,
  ﱟ︈︎︁: 250,
  ﱡ︈︎︁: 251,
  ﱣ︈︎︁: 252,
  ﱢ︈︎︁: 253,
  ﱞ︉︎︁: 254,
  ﱠ︉︎︁: 255,
  ﱟ︉︎︁: 256,
  ﱡ︉︎︁: 257,
  ﱣ︉︎︁: 258,
  ﱢ︉︎︁: 259,
  ﱞ︊︎︁: 260,
  ﱠ︊︎︁: 261,
  ﱟ︊︎︁: 262,
  ﱡ︊︎︁: 263,
  ﱣ︊︎︁: 264,
  ﱢ︊︎︁: 265,
  ﱞ︋︎︁: 266,
  ﱠ︋︎︁: 267,
  ﱟ︋︎︁: 268,
  ﱡ︋︎︁: 269,
  ﱣ︋︎︁: 270,
  ﱢ︋︎︁: 271,
  ﱞ︌︎︁: 272,
  ﱠ︌︎︁: 273,
  ﱟ︌︎︁: 274,
  ﱡ︌︎︁: 275,
  ﱣ︌︎︁: 276,
  ﱢ︌︎︁: 277,
  ﱞ︍︎︁: 278,
  ﱠ︍︎︁: 279,
  ﱟ︍︎︁: 280,
  ﱡ︍︎︁: 281,
  ﱣ︍︎︁: 282,
  ﱢ︍︎︁: 283,
  ﱞ︎︎︁: 284,
  ﱠ︎︎︁: 285,
  ﱟ︎︎︁: 286,
  ﱡ︎︎︁: 287,
  ﱣ︎︎︁: 288,
  ﱢ︎︎︁: 289,
  ﱞ️︎︁: 290,
  ﱠ️︎︁: 291,
  ﱟ️︎︁: 292,
  ﱡ️︎︁: 293,
  ﱣ️︎︁: 294,
  ﱢ️︎︁: 295,
  ﱞ︀️︁: 296,
  ﱠ︀️︁: 297,
  ﱟ︀️︁: 298,
  ﱡ︀️︁: 299,
  ﱣ︀️︁: 300,
  ﱢ︀️︁: 301,
  ﱞ︁️︁: 302,
  ﱠ︁️︁: 303,
  ﱟ︁️︁: 304,
  ﱡ︁️︁: 305,
  ﱣ︁️︁: 306,
  ﱢ︁️︁: 307,
  ﱞ︂️︁: 308,
  ﱠ︂️︁: 309,
  ﱟ︂️︁: 310,
  ﱡ︂️︁: 311,
  ﱣ︂️︁: 312,
  ﱢ︂️︁: 313,
  ﱞ︃️︁: 314,
  ﱠ︃️︁: 315,
  ﱟ︃️︁: 316,
  ﱡ︃️︁: 317,
  ﱣ︃️︁: 318,
  ﱢ︃️︁: 319,
  ﱞ︄️︁: 320,
  ﱠ︄️︁: 321,
  ﱟ︄️︁: 322,
  ﱡ︄️︁: 323,
  ﱣ︄️︁: 324,
  ﱢ︄️︁: 325,
  ﱞ︅️︁: 326,
  ﱠ︅️︁: 327,
  ﱟ︅️︁: 328,
  ﱡ︅️︁: 329,
  ﱣ︅️︁: 330,
  ﱢ︅️︁: 331,
  ﱞ︆️︁: 332,
  ﱠ︆️︁: 333,
  ﱟ︆️︁: 334,
  ﱡ︆️︁: 335,
  ﱣ︆️︁: 336,
  ﱢ︆️︁: 337,
  ﱞ︇️︁: 338,
  ﱠ︇️︁: 339,
  ﱟ︇️︁: 340,
  ﱡ︇️︁: 341,
  ﱣ︇️︁: 342,
  ﱢ︇️︁: 343,
  ﱞ︈️︁: 344,
  ﱠ︈️︁: 345,
  ﱟ︈️︁: 346,
  ﱡ︈️︁: 347,
  ﱣ︈️︁: 348,
  ﱢ︈️︁: 349,
  ﱞ︉️︁: 350,
  ﱠ︉️︁: 351,
  ﱟ︉️︁: 352,
  ﱡ︉️︁: 353,
  ﱣ︉️︁: 354,
  ﱢ︉️︁: 355,
  ﱞ︊️︁: 356,
  ﱠ︊️︁: 357,
  ﱟ︊️︁: 358,
  ﱡ︊️︁: 359,
  ﱣ︊️︁: 360,
  ﱢ︊️︁: 361,
  ﱞ︋️︁: 362,
  ﱠ︋️︁: 363,
  ﱟ︋️︁: 364,
  ﱡ︋️︁: 365,
  ﱣ︋️︁: 366,
  ﱢ︋️︁: 367,
  ﱞ︌️︁: 368,
  ﱠ︌️︁: 369,
  ﱟ︌️︁: 370,
  ﱡ︌️︁: 371,
  ﱣ︌️︁: 372,
  ﱢ︌️︁: 373,
  ﱞ︍️︁: 374,
  ﱠ︍️︁: 375,
  ﱟ︍️︁: 376,
  ﱡ︍️︁: 377,
  ﱣ︍️︁: 378,
  ﱢ︍️︁: 379,
  ﱞ︎️︁: 380,
  ﱠ︎️︁: 381,
  ﱟ︎️︁: 382,
  ﱡ︎️︁: 383,
  ﱣ︎️︁: 384,
  ﱢ︎️︁: 385,
  ﱞ️️︁: 386,
  ﱠ️️︁: 387,
  ﱟ️️︁: 388,
  ﱡ️️︁: 389,
  ﱣ️️︁: 390,
  ﱢ️️︁: 391,
  ﱞ︀︀︂: 392,
  ﱠ︀︀︂: 393,
  ﱟ︀︀︂: 394,
  ﱡ︀︀︂: 395,
  ﱣ︀︀︂: 396,
  ﱢ︀︀︂: 397,
  ﱞ︁︀︂: 398,
  ﱠ︁︀︂: 399,
  ﱟ︁︀︂: 400,
  ﱡ︁︀︂: 401,
  ﱣ︁︀︂: 402,
  ﱢ︁︀︂: 403,
  ﱞ︂︀︂: 404,
  ﱠ︂︀︂: 405,
  ﱟ︂︀︂: 406,
  ﱡ︂︀︂: 407,
  ﱣ︂︀︂: 408,
  ﱢ︂︀︂: 409,
  ﱞ︃︀︂: 410,
  ﱠ︃︀︂: 411,
  ﱟ︃︀︂: 412,
  ﱡ︃︀︂: 413,
  ﱣ︃︀︂: 414,
  ﱢ︃︀︂: 415,
  ﱞ︄︀︂: 416,
  ﱠ︄︀︂: 417,
  ﱟ︄︀︂: 418,
  ﱡ︄︀︂: 419,
  ﱣ︄︀︂: 420,
  ﱢ︄︀︂: 421,
  ﱞ︅︀︂: 422,
  ﱠ︅︀︂: 423,
  ﱟ︅︀︂: 424,
  ﱡ︅︀︂: 425,
  ﱣ︅︀︂: 426,
  ﱢ︅︀︂: 427,
  ﱞ︆︀︂: 428,
  ﱠ︆︀︂: 429,
  ﱟ︆︀︂: 430,
  ﱡ︆︀︂: 431,
  ﱣ︆︀︂: 432,
  ﱢ︆︀︂: 433,
  ﱞ︇︀︂: 434,
  ﱠ︇︀︂: 435,
  ﱟ︇︀︂: 436,
  ﱡ︇︀︂: 437,
  ﱣ︇︀︂: 438,
  ﱢ︇︀︂: 439,
  ﱞ︈︀︂: 440,
  ﱠ︈︀︂: 441,
  ﱟ︈︀︂: 442,
  DRAGON: 443,
  ﱡ︈︀︂: 444,
  ﱣ︈︀︂: 445,
  ﱢ︈︀︂: 446,
  ﱞ︉︀︂: 447,
  ﱠ︉︀︂: 448,
  ﱟ︉︀︂: 449,
  ﱡ︉︀︂: 450,
  ﱣ︉︀︂: 451,
  ﱢ︉︀︂: 452,
  ﱞ︊︀︂: 453,
  ﱠ︊︀︂: 454,
  ﱟ︊︀︂: 455,
  ﱡ︊︀︂: 456,
  ﱣ︊︀︂: 457,
  ﱢ︊︀︂: 458,
  ﱞ︋︀︂: 501,
  ﱠ︋︀︂: 460,
  ﱟ︋︀︂: 461,
  ﱡ︋︀︂: 462,
  ﱣ︋︀︂: 463,
  ﱢ︋︀︂: 464,
  DESERT: 465,
  ﱞ︌︀︂: 466,
  ﱠ︌︀︂: 467,
  ﱟ︌︀︂: 468,
  ﱡ︌︀︂: 469,
  ﱣ︌︀︂: 470,
  ﱢ︌︀︂: 471,
  ﱞ︍︀︂: 472,
  ﱠ︍︀︂: 473,
  ﱟ︍︀︂: 474,
  ﱡ︍︀︂: 475,
  ﱣ︍︀︂: 476,
  ﱢ︍︀︂: 477,
  ﱞ︎︀︂: 478,
  ﱠ︎︀︂: 479,
  ﱟ︎︀︂: 480,
  ﱡ︎︀︂: 481,
  ﱣ︎︀︂: 482,
  ﱢ︎︀︂: 483,
  ﱞ️︀︂: 484,
  ﱠ️︀︂: 485,
  ﱟ️︀︂: 486,
  ﱡ️︀︂: 487,
  ﱣ️︀︂: 488,
  ﱢ️︀︂: 489,
  ﱞ︀︁︂: 490,
  ﱠ︀︁︂: 491,
  ﱟ︀︁︂: 492,
  ﱡ︀︁︂: 493,
  ﱣ︀︁︂: 494,
  ﱢ︀︁︂: 495,
  ﱞ︁︁︂: 496,
  ﱠ︁︁︂: 497,
  ﱟ︁︁︂: 498,
  ﱡ︁︁︂: 499,
  ﱣ︁︁︂: 500,
  ﱢ︁︁︂: 502,
  ﱞ︂︁︂: 503,
  ﱠ︂︁︂: 504,
  ﱟ︂︁︂: 505,
  ﱡ︂︁︂: 506,
  ﱣ︂︁︂: 507,
  ﱢ︂︁︂: 508,
  ﱞ︃︁︂: 509,
  ﱠ︃︁︂: 510,
  ﱟ︃︁︂: 511,
  ﱡ︃︁︂: 512,
  ﱣ︃︁︂: 513,
  ﱢ︃︁︂: 514,
  ﱞ︄︁︂: 515,
  ﱠ︄︁︂: 516,
  ﱟ︄︁︂: 517,
  ﱡ︄︁︂: 518,
  ﱣ︄︁︂: 519,
  ﱢ︄︁︂: 520,
  ﱞ︅︁︂: 521,
  ﱠ︅︁︂: 522,
  ﱟ︅︁︂: 523,
  ﱡ︅︁︂: 524,
  ﱣ︅︁︂: 525,
  ﱢ︅︁︂: 526,
  ﱞ︆︁︂: 527,
  ﱠ︆︁︂: 528,
  ﱟ︆︁︂: 529,
  ﱡ︆︁︂: 530,
  ﱣ︆︁︂: 531,
  ﱢ︆︁︂: 532,
  ﱞ︇︁︂: 533,
  ﱠ︇︁︂: 534,
  ﱟ︇︁︂: 535,
  ﱡ︇︁︂: 536,
  ﱣ︇︁︂: 537,
  ﱢ︇︁︂: 538,
  POINTS: 539,
  ﱞ︈︁︂: 540,
  ﱠ︈︁︂: 541,
  ﱟ︈︁︂: 542,
  ﱡ︈︁︂: 543,
  ﱣ︈︁︂: 544,
  ﱢ︈︁︂: 545,
  ﱞ︉︁︂: 546,
  ﱠ︉︁︂: 547,
  ﱟ︉︁︂: 548,
  ﱡ︉︁︂: 549,
  ﱣ︉︁︂: 550,
  ﱢ︉︁︂: 551,
  ﱞ︊︁︂: 552,
  ﱠ︊︁︂: 553,
  ﱟ︊︁︂: 554,
  ﱡ︊︁︂: 555,
  ﱣ︊︁︂: 556,
  ﱢ︊︁︂: 557,
  ﱞ︋︁︂: 558,
  ﱠ︋︁︂: 559,
  ﱟ︋︁︂: 560,
  ﱡ︋︁︂: 561,
  ﱣ︋︁︂: 562,
  ﱢ︋︁︂: 563,
  ﱞ︌︁︂: 564,
  ﱠ︌︁︂: 565,
  ﱟ︌︁︂: 566,
  ﱡ︌︁︂: 567,
  ﱣ︌︁︂: 568,
  ﱢ︌︁︂: 569,
  ﱞ︍︁︂: 570,
  ﱠ︍︁︂: 571,
  ﱟ︍︁︂: 572,
  ﱡ︍︁︂: 573,
  ﱣ︍︁︂: 574,
  ﱢ︍︁︂: 575,
  ﱞ︎︁︂: 576,
  ﱠ︎︁︂: 577,
  ﱟ︎︁︂: 578,
  ﱡ︎︁︂: 579,
  ﱣ︎︁︂: 580,
  ﱢ︎︁︂: 581,
  ﱞ️︁︂: 582,
  ﱠ️︁︂: 583,
  ﱟ️︁︂: 584,
  ﱡ️︁︂: 585,
  ﱣ️︁︂: 586,
  ﱢ️︁︂: 587,
  ﱞ︀︂︂: 588,
  ﱠ︀︂︂: 589,
  ﱟ︀︂︂: 590,
  ﱡ︀︂︂: 591,
  ﱣ︀︂︂: 592,
  ﱢ︀︂︂: 593,
  ﱞ︁︂︂: 594,
  ﱠ︁︂︂: 595,
  ﱟ︁︂︂: 596,
  ﱡ︁︂︂: 597,
  ﱣ︁︂︂: 598,
  ﱢ︁︂︂: 599,
  ﱞ︂︂︂: 600,
  ﱠ︂︂︂: 601,
  ﱟ︂︂︂: 602,
  ﱡ︂︂︂: 603,
  ﱣ︂︂︂: 604,
  ﱢ︂︂︂: 605,
  ﱞ︃︂︂: 606,
  ﱠ︃︂︂: 607,
  ﱟ︃︂︂: 608,
  ﱡ︃︂︂: 609,
  ﱣ︃︂︂: 610,
  ﱢ︃︂︂: 611,
  ﱞ︄︂︂: 612,
  ﱠ︄︂︂: 613,
  ﱟ︄︂︂: 614,
  ﱡ︄︂︂: 615,
  ﱣ︄︂︂: 616,
  ﱢ︄︂︂: 617,
  ﱞ︅︂︂: 618,
  ﱠ︅︂︂: 619,
  ﱟ︅︂︂: 620,
  ﱡ︅︂︂: 621,
  ﱣ︅︂︂: 622,
  ﱢ︅︂︂: 623,
  ﱞ︆︂︂: 624,
  ﱠ︆︂︂: 625,
  ﱟ︆︂︂: 626,
  ﱡ︆︂︂: 627,
  ﱣ︆︂︂: 628,
  ﱢ︆︂︂: 629,
  ﱞ︇︂︂: 630,
  ﱠ︇︂︂: 631,
  ﱟ︇︂︂: 632,
  ﱡ︇︂︂: 633,
  ﱣ︇︂︂: 634,
  ﱢ︇︂︂: 635,
  ﱞ︈︂︂: 636,
  ﱠ︈︂︂: 637,
  ﱟ︈︂︂: 638,
  ﱡ︈︂︂: 639,
  ﱣ︈︂︂: 640,
  ﱢ︈︂︂: 641,
  ﱞ︉︂︂: 642,
  ﱠ︉︂︂: 643,
  ﱟ︉︂︂: 644,
  ﱡ︉︂︂: 645,
  ﱣ︉︂︂: 646,
  ﱢ︉︂︂: 647,
  ﱞ︊︂︂: 648,
  ﱠ︊︂︂: 649,
  ﱟ︊︂︂: 650,
  ﱡ︊︂︂: 651,
  ﱣ︊︂︂: 652,
  ﱢ︊︂︂: 653,
  ﱞ︋︂︂: 654,
  ﱠ︋︂︂: 655,
  ﱟ︋︂︂: 656,
  ﱡ︋︂︂: 657,
  ﱣ︋︂︂: 658,
  ﱢ︋︂︂: 659,
  ﱞ︌︂︂: 660,
  ﱠ︌︂︂: 661,
  ﱟ︌︂︂: 662,
  ﱡ︌︂︂: 663,
  ﱣ︌︂︂: 664,
  ﱢ︌︂︂: 665,
  ﱞ︍︂︂: 666,
  ﱠ︍︂︂: 667,
  ﱟ︍︂︂: 668,
  ﱡ︍︂︂: 669,
  ﱣ︍︂︂: 670,
  ﱢ︍︂︂: 671,
  ﱞ︎︂︂: 672,
  ﱠ︎︂︂: 673,
  ﱟ︎︂︂: 674,
  ﱡ︎︂︂: 675,
  ﱣ︎︂︂: 676,
  ﱢ︎︂︂: 677,
  ﱞ️︂︂: 678,
  ﱠ️︂︂: 679,
  ﱟ️︂︂: 680,
  ﱡ️︂︂: 681,
  ﱣ️︂︂: 682,
  ﱢ️︂︂: 683,
  ﱞ︀︃︂: 684,
  ﱠ︀︃︂: 685,
  ﱟ︀︃︂: 686,
  ﱡ︀︃︂: 687,
  ﱣ︀︃︂: 688,
  ﱢ︀︃︂: 689,
  ﱞ︁︃︂: 690,
  ﱠ︁︃︂: 691,
  ﱟ︁︃︂: 692,
  ﱡ︁︃︂: 693,
  ﱣ︁︃︂: 694,
  ﱢ︁︃︂: 695,
  ﱞ︂︃︂: 696,
  ﱠ︂︃︂: 697,
  ﱟ︂︃︂: 698,
  ﱡ︂︃︂: 699,
  ﱣ︂︃︂: 700,
  ﱢ︂︃︂: 701,
  ﱞ︃︃︂: 702,
  ﱠ︃︃︂: 703,
  ﱟ︃︃︂: 704,
  ﱡ︃︃︂: 705,
  ﱣ︃︃︂: 706,
  ﱢ︃︃︂: 707,
  ﱞ︄︃︂: 708,
  ﱠ︄︃︂: 709,
  ﱟ︄︃︂: 710,
  ﱡ︄︃︂: 711,
  ﱣ︄︃︂: 712,
  ﱢ︄︃︂: 713,
  ﱞ︅︃︂: 714,
  ﱠ︅︃︂: 715,
  ﱟ︅︃︂: 716,
  ﱡ︅︃︂: 717,
  ﱣ︅︃︂: 718,
  ﱢ︅︃︂: 719,
  ﱞ︆︃︂: 720,
  ﱠ︆︃︂: 721,
  ﱟ︆︃︂: 722,
  ﱡ︆︃︂: 723,
  ﱣ︆︃︂: 724,
  ﱢ︆︃︂: 725,
  ﱞ︇︃︂: 726,
  ﱠ︇︃︂: 727,
  ﱟ︇︃︂: 728,
  ﱡ︇︃︂: 729,
  ﱣ︇︃︂: 730,
  ﱢ︇︃︂: 731,
  ﱞ︈︃︂: 732,
  ﱠ︈︃︂: 733,
  ﱟ︈︃︂: 734,
  ﱡ︈︃︂: 735,
  ﱣ︈︃︂: 736,
  ﱢ︈︃︂: 737,
  ﱞ︉︃︂: 738,
  ﱠ︉︃︂: 739,
  ﱟ︉︃︂: 740,
  ﱡ︉︃︂: 741,
  ﱣ︉︃︂: 742,
  ﱢ︉︃︂: 743,
  ﱞ︊︃︂: 744,
  ﱠ︊︃︂: 745,
  ﱟ︊︃︂: 746,
  ﱡ︊︃︂: 747,
  ﱣ︊︃︂: 748,
  ﱢ︊︃︂: 749,
  ﱞ︋︃︂: 750,
  ﱠ︋︃︂: 751,
  ﱟ︋︃︂: 752,
  ﱡ︋︃︂: 753,
  ﱣ︋︃︂: 754,
  ﱢ︋︃︂: 755,
  ﱞ︌︃︂: 756,
  ﱠ︌︃︂: 757,
  ﱟ︌︃︂: 758,
  ﱡ︌︃︂: 759,
  ﱣ︌︃︂: 760,
  ﱢ︌︃︂: 761,
  ﱞ︍︃︂: 762,
  ﱠ︍︃︂: 763,
  ﱟ︍︃︂: 764,
  ﱡ︍︃︂: 765,
  ﱣ︍︃︂: 766,
  ﱢ︍︃︂: 767,
  ﱞ︎︃︂: 768,
  ﱠ︎︃︂: 769,
  ﱟ︎︃︂: 770,
  ﱡ︎︃︂: 771,
  ﱣ︎︃︂: 772,
  ﱢ︎︃︂: 773,
  ﱞ️︃︂: 774,
  ﱠ️︃︂: 775,
  ﱟ️︃︂: 776,
  ﱡ️︃︂: 777,
  ﱣ️︃︂: 778,
  ﱢ️︃︂: 779,
  ﱞ︀︄︂: 780,
  ﱠ︀︄︂: 781,
  ﱟ︀︄︂: 782,
  ﱡ︀︄︂: 783,
  ﱣ︀︄︂: 784,
  ﱢ︀︄︂: 785,
  ﱞ︁︄︂: 786,
  ﱠ︁︄︂: 787,
  ﱟ︁︄︂: 788,
  ﱡ︁︄︂: 789,
  ﱣ︁︄︂: 790,
  ﱢ︁︄︂: 791,
  ﱞ︂︄︂: 792,
  ﱠ︂︄︂: 793,
  ﱟ︂︄︂: 794,
  ﱡ︂︄︂: 795,
  ﱣ︂︄︂: 796,
  ﱢ︂︄︂: 797,
  ﱞ︃︄︂: 798,
  ﱠ︃︄︂: 799,
  ﱟ︃︄︂: 800,
  ﱡ︃︄︂: 801,
  ﱣ︃︄︂: 802,
  ﱢ︃︄︂: 803,
  ﱞ︄︄︂: 804,
  ﱠ︄︄︂: 805,
  ﱟ︄︄︂: 806,
  ﱡ︄︄︂: 807,
  ﱣ︄︄︂: 808,
  ﱢ︄︄︂: 809,
  ﱞ︅︄︂: 810,
  ﱠ︅︄︂: 811,
  ﱟ︅︄︂: 812,
  ﱡ︅︄︂: 813,
  ﱣ︅︄︂: 814,
  ﱢ︅︄︂: 815,
  ﱞ︆︄︂: 816,
  ﱠ︆︄︂: 817,
  ﱟ︆︄︂: 818,
  ﱡ︆︄︂: 819,
  ﱣ︆︄︂: 820,
  ﱢ︆︄︂: 821,
  ﱞ︇︄︂: 822,
  ﱠ︇︄︂: 823,
  ﱟ︇︄︂: 824,
  ﱡ︇︄︂: 825,
  ﱣ︇︄︂: 826,
  ﱢ︇︄︂: 827,
  ﱞ︈︄︂: 828,
  ﱠ︈︄︂: 829,
  ﱟ︈︄︂: 830,
  ﱡ︈︄︂: 831,
  ﱣ︈︄︂: 832,
  ﱢ︈︄︂: 833,
  ﱞ︉︄︂: 834,
  ﱠ︉︄︂: 835,
  ﱟ︉︄︂: 836,
  ﱡ︉︄︂: 837,
  ﱣ︉︄︂: 838,
  ﱢ︉︄︂: 839,
  ﱞ︊︄︂: 840,
  ﱠ︊︄︂: 841,
  ﱟ︊︄︂: 842,
  ﱡ︊︄︂: 843,
  ﱣ︊︄︂: 844,
  ﱢ︊︄︂: 845,
  ﱞ︋︄︂: 846,
  ﱠ︋︄︂: 847,
  ﱟ︋︄︂: 848,
  ﱡ︋︄︂: 849,
  ﱣ︋︄︂: 850,
  ﱢ︋︄︂: 851,
  ﱞ︌︄︂: 852,
  ﱠ︌︄︂: 853,
  ﱟ︌︄︂: 854,
  ﱡ︌︄︂: 855,
  ﱣ︌︄︂: 856,
  ﱢ︌︄︂: 857,
  ﱞ︍︄︂: 858,
  ﱠ︍︄︂: 859,
  ﱟ︍︄︂: 860,
  ﱡ︍︄︂: 861,
  ﱣ︍︄︂: 862,
  ﱢ︍︄︂: 863,
  ﱞ︎︄︂: 864,
  ﱠ︎︄︂: 865,
  ﱟ︎︄︂: 866,
  ﱡ︎︄︂: 867,
  ﱣ︎︄︂: 868,
  ﱢ︎︄︂: 869,
  ﱞ️︄︂: 870,
  ﱠ️︄︂: 871,
  ﱟ️︄︂: 872,
  ﱡ️︄︂: 873,
  ﱣ️︄︂: 874,
  ﱢ️︄︂: 875,
  ﱞ︀︅︂: 876,
  ﱠ︀︅︂: 877,
  ﱟ︀︅︂: 878,
  ﱡ︀︅︂: 879,
  ﱣ︀︅︂: 880,
  ﱢ︀︅︂: 881,
  ﱞ︁︅︂: 882,
  ﱠ︁︅︂: 883,
  ﱟ︁︅︂: 884,
  ﱡ︁︅︂: 885,
  ﱣ︁︅︂: 886,
  ﱢ︁︅︂: 887,
  ﱞ︂︅︂: 888,
  ﱠ︂︅︂: 889,
  ﱟ︂︅︂: 890,
  ﱡ︂︅︂: 891,
  ﱣ︂︅︂: 892,
  ﱢ︂︅︂: 893,
  ﱞ︃︅︂: 894,
  ﱠ︃︅︂: 895,
  ﱟ︃︅︂: 896,
  ﱡ︃︅︂: 897,
  ﱣ︃︅︂: 898,
  ﱢ︃︅︂: 899,
  ﱞ︄︅︂: 900,
  ﱠ︄︅︂: 901,
  ﱟ︄︅︂: 902,
  ﱡ︄︅︂: 903,
  ﱣ︄︅︂: 904,
  ﱢ︄︅︂: 905,
  ﱞ︅︅︂: 906,
  ﱠ︅︅︂: 907,
  ﱟ︅︅︂: 908,
  ﱡ︅︅︂: 909,
  ﱣ︅︅︂: 910,
  ﱢ︅︅︂: 911,
  ﱞ︆︅︂: 912,
  ﱠ︆︅︂: 913,
  ﱟ︆︅︂: 914,
  ﱡ︆︅︂: 915,
  ﱣ︆︅︂: 916,
  ﱢ︆︅︂: 917,
  ﱞ︇︅︂: 918,
  ﱠ︇︅︂: 919,
  ﱟ︇︅︂: 920,
  ﱡ︇︅︂: 921,
  ﱣ︇︅︂: 922,
  ﱢ︇︅︂: 923,
  ﱞ︈︅︂: 924,
  ﱠ︈︅︂: 925,
  ﱟ︈︅︂: 926,
  ﱡ︈︅︂: 927,
  ﱣ︈︅︂: 928,
  ﱢ︈︅︂: 929,
  ﱞ︉︅︂: 930,
  ﱠ︉︅︂: 931,
  ﱟ︉︅︂: 932,
  ﱡ︉︅︂: 933,
  ﱣ︉︅︂: 934,
  ﱢ︉︅︂: 935,
  ﱞ︊︅︂: 936,
  ﱠ︊︅︂: 937,
  ﱟ︊︅︂: 938,
  ﱡ︊︅︂: 939,
  ﱣ︊︅︂: 940,
  ﱢ︊︅︂: 941,
  ﱞ︋︅︂: 942,
  ﱠ︋︅︂: 943,
  ﱟ︋︅︂: 944,
  ﱡ︋︅︂: 945,
  ﱣ︋︅︂: 946,
  ﱢ︋︅︂: 947,
  ﱞ︌︅︂: 948,
  ﱠ︌︅︂: 949,
  ﱟ︌︅︂: 950,
  ﱡ︌︅︂: 951,
  ﱣ︌︅︂: 952,
  ﱢ︌︅︂: 953,
  ﱞ︍︅︂: 954,
  ﱠ︍︅︂: 955,
  ﱟ︍︅︂: 956,
  ﱡ︍︅︂: 957,
  ﱣ︍︅︂: 958,
  ﱢ︍︅︂: 959,
  ﱞ︎︅︂: 960,
  ﱠ︎︅︂: 961,
  ﱟ︎︅︂: 962,
  ﱡ︎︅︂: 963,
  ﱣ︎︅︂: 964,
  ﱢ︎︅︂: 965,
  ﱞ️︅︂: 966,
  ﱠ️︅︂: 967,
  ﱟ️︅︂: 968,
  ﱡ️︅︂: 969,
  ﱣ️︅︂: 970,
  ﱢ️︅︂: 971,
  ﱞ︀︆︂: 972,
  ﱠ︀︆︂: 973,
  ﱟ︀︆︂: 974,
  ﱡ︀︆︂: 975,
  ﱣ︀︆︂: 976,
  ﱢ︀︆︂: 977,
  ﱞ︁︆︂: 978,
  ﱠ︁︆︂: 979,
  ﱟ︁︆︂: 980,
  ﱡ︁︆︂: 981,
  ﱣ︁︆︂: 982,
  ﱢ︁︆︂: 983,
  ﱞ︂︆︂: 984,
  ﱠ︂︆︂: 985,
  ﱟ︂︆︂: 986,
  ﱡ︂︆︂: 987,
  ﱣ︂︆︂: 988,
  ﱢ︂︆︂: 989,
  ﱞ︃︆︂: 990,
  ﱠ︃︆︂: 991,
  ﱟ︃︆︂: 992,
  ﱡ︃︆︂: 993,
  ﱣ︃︆︂: 994,
  ﱢ︃︆︂: 995,
  ﱞ︄︆︂: 996,
  ﱠ︄︆︂: 997,
  ﱟ︄︆︂: 998,
  ﱡ︄︆︂: 999,
  ﱣ︄︆︂: 1000,
  ﱢ︄︆︂: 1001,
  ﱞ︅︆︂: 1002,
  ﱠ︅︆︂: 1003,
  ﱟ︅︆︂: 1004,
  ﱡ︅︆︂: 1005,
  ﱣ︅︆︂: 1006,
  ﱢ︅︆︂: 1007,
  ﱞ︆︆︂: 1008,
  ﱠ︆︆︂: 1009,
  ﱟ︆︆︂: 1010,
  ﱡ︆︆︂: 1011,
  ﱣ︆︆︂: 1012,
  ﱢ︆︆︂: 1013,
  ﱞ︇︆︂: 1014,
  ﱠ︇︆︂: 1015,
  ﱟ︇︆︂: 1016,
  ﱡ︇︆︂: 1017,
  ﱣ︇︆︂: 1018,
  ﱢ︇︆︂: 1019,
  ﱞ︈︆︂: 1020,
  ﱠ︈︆︂: 1021,
  ﱟ︈︆︂: 1022,
  ﱡ︈︆︂: 1023,
  ﱣ︈︆︂: 1024,
  ﱢ︈︆︂: 1025,
  ﱞ︉︆︂: 1026,
  ﱠ︉︆︂: 1027,
  ﱟ︉︆︂: 1028,
  ﱡ︉︆︂: 1029,
  ﱣ︉︆︂: 1030,
  ﱢ︉︆︂: 1031,
  ﱞ︊︆︂: 1032,
  ﱠ︊︆︂: 1033,
  ﱟ︊︆︂: 1034,
  ﱡ︊︆︂: 1035,
  ﱣ︊︆︂: 1036,
  ﱢ︊︆︂: 1037,
  ﱞ︋︆︂: 1038,
  ﱠ︋︆︂: 1039,
  ﱟ︋︆︂: 1040,
  ﱡ︋︆︂: 1041,
  ﱣ︋︆︂: 1042,
  ﱢ︋︆︂: 1043,
  ﱞ︌︆︂: 1044,
  ﱠ︌︆︂: 1045,
  ﱟ︌︆︂: 1046,
  ﱡ︌︆︂: 1047,
  ﱣ︌︆︂: 1049,
  ﱢ︌︆︂: 1050,
  ﱞ︍︆︂: 1051,
  ﱠ︍︆︂: 1052,
  ﱟ︍︆︂: 1053,
  ﱡ︍︆︂: 1054,
  ﱣ︍︆︂: 1055,
  ﱢ︍︆︂: 1056,
  ﱞ︎︆︂: 1057,
  ﱠ︎︆︂: 1058,
  ﱟ︎︆︂: 1059,
  ﱡ︎︆︂: 1060,
  ﱣ︎︆︂: 1061,
  ﱢ︎︆︂: 1062,
  ﱞ️︆︂: 1064,
  ﱠ️︆︂: 1065,
  ﱟ️︆︂: 1066,
  ﱡ️︆︂: 1067,
  ﱣ️︆︂: 1068,
  ﱢ️︆︂: 1069,
  ﱞ︀︇︂: 1070,
  ﱠ︀︇︂: 1071,
  ﱟ︀︇︂: 1072,
  ﱡ︀︇︂: 1073,
  ﱣ︀︇︂: 1074,
  ﱢ︀︇︂: 1075,
  ﱞ︁︇︂: 1076,
  ﱠ︁︇︂: 1077,
  ﱟ︁︇︂: 1079,
  ﱡ︁︇︂: 1080,
  ﱣ︁︇︂: 1081,
  ﱢ︁︇︂: 1082,
  ﱞ︂︇︂: 1083,
  ﱠ︂︇︂: 1084,
  ﱟ︂︇︂: 1085,
  ﱡ︂︇︂: 1086,
  ﱣ︂︇︂: 1087,
  ﱢ︂︇︂: 1088,
  ﱞ︃︇︂: 1089,
  ﱠ︃︇︂: 1090,
  ﱟ︃︇︂: 1091,
  ﱡ︃︇︂: 1092,
  ﱣ︃︇︂: 1094,
  ﱢ︃︇︂: 1095,
  ﱞ︄︇︂: 1096,
  ﱠ︄︇︂: 1097,
  ﱟ︄︇︂: 1098,
  ﱡ︄︇︂: 1099,
  ﱣ︄︇︂: 1100,
  ﱢ︄︇︂: 1101,
  ﱞ︅︇︂: 1102,
  ﱠ︅︇︂: 1103,
  ﱟ︅︇︂: 1104,
  ﱡ︅︇︂: 1105,
  ﱣ︅︇︂: 1106,
  ﱢ︅︇︂: 1107,
  ﱞ︆︇︂: 1108,
  ﱠ︆︇︂: 1109,
  ﱟ︆︇︂: 1110,
  ﱡ︆︇︂: 1111,
  ﱣ︆︇︂: 1112,
  ﱢ︆︇︂: 1113,
  ﱞ︇︇︂: 1115,
  ﱠ︇︇︂: 1116,
  ﱟ︇︇︂: 1117,
  ﱡ︇︇︂: 1118,
  ﱣ︇︇︂: 1119,
  ﱢ︇︇︂: 1120,
  ﱞ︈︇︂: 1121,
  ﱠ︈︇︂: 1122,
  ﱟ︈︇︂: 1123,
  ﱡ︈︇︂: 1124,
  ﱣ︈︇︂: 1125,
  ﱢ︈︇︂: 1126,
  ﱞ︉︇︂: 1127,
  ﱠ︉︇︂: 1128,
  ﱟ︉︇︂: 1129,
  ﱡ︉︇︂: 1130,
  ﱣ︉︇︂: 1131,
  ﱢ︉︇︂: 1132,
  ﱞ︊︇︂: 1133,
  ﱠ︊︇︂: 1134,
  ﱟ︊︇︂: 1135,
  ﱡ︊︇︂: 1136,
  ﱣ︊︇︂: 1137,
  ﱢ︊︇︂: 1138,
  ﱞ︋︇︂: 1139,
  ﱠ︋︇︂: 1140,
  ﱟ︋︇︂: 1141,
  ﱡ︋︇︂: 1142,
  ﱣ︋︇︂: ["#E9CF96", "#144940"],
  ﱢ︋︇︂: 1143,
  ﱞ︌︇︂: 1144,
  ﱠ︌︇︂: 1145,
  ﱟ︌︇︂: 1146,
  ﱡ︌︇︂: 1147,
  ﱣ︌︇︂: 1148,
  ﱢ︌︇︂: 1149,
  ﱞ︍︇︂: 1150,
  ﱠ︍︇︂: 1151,
  ﱟ︍︇︂: 1152,
  ﱡ︍︇︂: 1153,
  ﱣ︍︇︂: 1154,
  ﱢ︍︇︂: 1155,
  ﱞ︎︇︂: 1156,
  ﱠ︎︇︂: 1157,
  ﱟ︎︇︂: 1158,
  ﱡ︎︇︂: 1159,
  ﱣ︎︇︂: 1160,
  ﱢ︎︇︂: 1161,
  ﱞ️︇︂: 1162,
  ﱠ️︇︂: 1163,
  ﱟ️︇︂: 1164,
  ﱡ️︇︂: 1165,
  ﱣ️︇︂: 1166,
  ﱢ️︇︂: 1167,
  ﱞ︀︈︂: 1168,
  ﱠ︀︈︂: 1169,
  ﱟ︀︈︂: 1170,
  ﱡ︀︈︂: 1171,
  ﱣ︀︈︂: 1172,
  ﱢ︀︈︂: 1173,
  ﱞ︁︈︂: 1174,
  ﱠ︁︈︂: 1175,
  ﱟ︁︈︂: 1176,
  ﱡ︁︈︂: 1177,
  ﱣ︁︈︂: 1178,
  ﱢ︁︈︂: 1179,
  ﱞ︂︈︂: 1180,
  ﱠ︂︈︂: 1181,
  ﱟ︂︈︂: 1182,
  ﱡ︂︈︂: 1183,
  ﱣ︂︈︂: 1184,
  ﱢ︂︈︂: 1185,
  ﱞ︃︈︂: 1186,
  ﱠ︃︈︂: 1187,
  ﱟ︃︈︂: 1188,
  ﱡ︃︈︂: 1189,
  ﱣ︃︈︂: 1190,
  ﱢ︃︈︂: 1191,
  ﱞ︄︈︂: 1192,
  ﱠ︄︈︂: 1193,
  ﱟ︄︈︂: 1194,
  ﱡ︄︈︂: 1195,
  ﱣ︄︈︂: 1196,
  ﱢ︄︈︂: 1197,
  ﱞ︅︈︂: 1198,
  ﱠ︅︈︂: 1199,
  ﱟ︅︈︂: 1200,
  ﱡ︅︈︂: 1201,
  ﱣ︅︈︂: 1202,
  ﱢ︅︈︂: 1203,
  ﱞ︆︈︂: 1204,
  ﱠ︆︈︂: 1205,
  ﱟ︆︈︂: 1206,
  ﱡ︆︈︂: 1207,
  ﱣ︆︈︂: 1208,
  ﱢ︆︈︂: 1209,
  ﱞ︇︈︂: 1210,
  ﱠ︇︈︂: 1211,
  ﱟ︇︈︂: 1212,
  ﱡ︇︈︂: 1213,
  ﱣ︇︈︂: 1215,
  ﱢ︇︈︂: 1216,
  ﱞ︈︈︂: 1217,
  ﱠ︈︈︂: 1218,
  ﱟ︈︈︂: 1219,
  ﱡ︈︈︂: 1220,
  ﱣ︈︈︂: 1221,
  ﱢ︈︈︂: 1222,
  ﱞ︉︈︂: 1223,
  ﱠ︉︈︂: 1224,
  ﱟ︉︈︂: 1225,
  ﱡ︉︈︂: 1226,
  ﱣ︉︈︂: 1227,
  ﱢ︉︈︂: 1228,
  ﱞ︊︈︂: 1229,
  ﱠ︊︈︂: 1230,
  ﱟ︊︈︂: 1231,
  ﱡ︊︈︂: 1232,
  ﱣ︊︈︂: 1233,
  ﱢ︊︈︂: 1234,
  ﱞ︋︈︂: 1235,
  ﱠ︋︈︂: 1236,
  ﱟ︋︈︂: 1237,
  ﱡ︋︈︂: 1238,
  ﱣ︋︈︂: 1239,
  ﱢ︋︈︂: 1240,
  ﱞ︌︈︂: 1241,
  ﱠ︌︈︂: 1242,
  ﱟ︌︈︂: 1243,
  ﱡ︌︈︂: 1244,
  ﱣ︌︈︂: 1245,
  ﱢ︌︈︂: 1246,
  ﱞ︍︈︂: 1247,
  ﱠ︍︈︂: 1248,
  ﱟ︍︈︂: 1249
};
Qb = 0;
var Sb = {
  ﱣ︍︎︁: Qb++,
  ﱡ︍︈︂: Qb++,
  ﱣ︍︈︂: Qb++,
  ﱣ︀︍︁: Qb++,
  ﱞ︀︌︁: Qb++,
  ﱢ︎︋︁: Qb++,
  ﱠ️︋︁: Qb++,
  ﱟ️︋︁: Qb++,
  ﱢ︃︌︁: Qb++,
  ﱞ︄︌︁: Qb++,
  ﱡ︄︌︁: Qb++,
  ﱣ︄︌︁: Qb++,
  ﱢ︄︌︁: Qb++,
  ﱞ︅︌︁: Qb++,
  ﱠ︅︌︁: Qb++,
  ﱠ︆︌︁: Qb++,
  ﱟ︆︌︁: Qb++,
  ﱞ︇︌︁: Qb++,
  ﱠ︇︌︁: Qb++,
  ﱟ︇︌︁: Qb++,
  ﱟ︃︍︁: Qb++,
  ﱢ︆︌︁: Qb++,
  ﱡ︇︌︁: Qb++,
  ﱣ︇︌︁: Qb++,
  ﱟ︃︌︁: Qb++,
  ﱣ︀︌︁: Qb++,
  ﱢ︀︌︁: Qb++,
  ﱞ︁︌︁: Qb++,
  ﱠ︁︌︁: Qb++,
  ﱠ︄︌︁: Qb++,
  ﱟ︄︌︁: Qb++,
  ﱟ︁︌︁: Qb++,
  ﱡ︁︌︁: Qb++,
  ﱣ︁︌︁: Qb++,
  ﱠ︈︌︁: Qb++,
  ﱣ︎︋︁: Qb++,
  ﱡ️︋︁: Qb++,
  ﱣ️︋︁: Qb++,
  ﱣ︃︌︁: Qb++,
  ﱢ︁︌︁: Qb++,
  ﱡ︇︎︁: Qb++,
  ﱣ︃︍︁: Qb++,
  ﱢ︍︈︂: Qb++,
  ﱞ︎︈︂: Qb++,
  ﱠ︎︈︂: Qb++,
  ﱟ︎︈︂: Qb++,
  ﱡ︎︈︂: Qb++,
  ﱣ︎︈︂: Qb++,
  ﱢ︎︈︂: Qb++,
  ﱠ︁︍︁: Qb++,
  ﱣ︄︍︁: Qb++,
  ﱞ️︈︂: Qb++,
  ﱢ︃︍︁: Qb++,
  ﱟ︄︍︁: Qb++,
  ﱠ︎︍︁: Qb++,
  ﱣ︈︍︁: Qb++,
  ﱢ︈︍︁: Qb++,
  ﱞ︉︍︁: Qb++,
  ﱠ︉︍︁: Qb++,
  ﱞ︂︍︁: Qb++,
  ﱢ︁︎︁: Qb++,
  ﱠ️︈︂: Qb++,
  ﱟ️︈︂: Qb++,
  ﱡ️︈︂: Qb++,
  ﱣ️︈︂: Qb++,
  ﱢ️︈︂: Qb++,
  ﱞ︂︎︁: Qb++,
  ﱟ︈︍︁: Qb++,
  ﱣ︉︍︁: Qb++,
  ﱢ︉︍︁: Qb++,
  ﱞ︊︍︁: Qb++,
  ﱠ︂︍︁: Qb++,
  ﱠ︂︎︁: Qb++,
  ﱞ︁︎︁: Qb++,
  ﱠ︁︎︁: Qb++,
  ﱟ︁︎︁: Qb++,
  ﱡ︁︎︁: Qb++,
  ﱣ︁︎︁: Qb++,
  ﱟ︂︎︁: Qb++,
  ﱡ︉︍︁: Qb++,
  ﱡ︂︌︁: Qb++,
  ﱣ︂︌︁: Qb++,
  ﱟ︌︌︁: Qb++,
  ﱟ︀︌︁: Qb++,
  ﱡ︀︌︁: Qb++,
  ﱟ︅︌︁: Qb++,
  ﱟ︍︌︁: Qb++,
  ﱟ︈︌︁: Qb++,
  ﱢ︂︌︁: Qb++,
  ﱞ︃︌︁: Qb++,
  ﱠ︃︌︁: Qb++,
  ﱢ︅︌︁: Qb++,
  ﱞ︆︌︁: Qb++,
  ﱣ︆︌︁: Qb++,
  ﱡ︆︌︁: Qb++,
  ﱞ︂︌︁: Qb++,
  ﱠ︂︌︁: Qb++,
  ﱟ︂︌︁: Qb++,
  ﱞ︌︌︁: Qb++,
  ﱠ︌︌︁: Qb++,
  ﱡ︃︌︁: Qb++,
  ﱣ︁︍︁: Qb++,
  ﱠ︆︍︁: Qb++,
  ﱟ︆︍︁: Qb++,
  ﱞ︈︍︁: Qb++,
  ﱠ︈︍︁: Qb++,
  ﱡ︂︍︁: Qb++,
  ﱟ︍︍︁: Qb++,
  ﱡ︂︎︁: Qb++,
  ﱠ︅︍︁: Qb++,
  ﱞ︃︍︁: Qb++,
  ﱢ︂︍︁: Qb++,
  ﱞ︀︉︂: Qb++,
  ﱠ︀︉︂: Qb++,
  ﱠ︄︍︁: Qb++,
  ﱢ︆︍︁: Qb++,
  ﱞ︇︍︁: Qb++,
  ﱠ︇︍︁: Qb++,
  ﱟ︇︍︁: Qb++,
  ﱡ︇︍︁: Qb++,
  ﱣ︇︍︁: Qb++,
  ﱢ︇︍︁: Qb++,
  ﱢ︇︌︁: Qb++,
  ﱞ︈︌︁: Qb++,
  ﱟ︀︉︂: Qb++,
  ﱡ︀︉︂: Qb++,
  ﱡ︈︌︁: Qb++,
  ﱣ︈︌︁: Qb++,
  ﱢ︈︌︁: Qb++,
  ﱞ︉︌︁: Qb++,
  ﱠ︉︌︁: Qb++,
  ﱟ︉︌︁: Qb++,
  ﱡ︎︌︁: Qb++,
  ﱡ︉︌︁: Qb++,
  ﱣ︎︌︁: Qb++,
  ﱣ︉︌︁: Qb++,
  ﱢ︎︌︁: Qb++,
  ﱢ︉︌︁: Qb++,
  ﱞ️︌︁: Qb++,
  ﱞ︊︌︁: Qb++,
  ﱠ️︌︁: Qb++,
  ﱠ︊︌︁: Qb++,
  ﱟ️︌︁: Qb++,
  ﱟ︊︌︁: Qb++,
  ﱡ️︌︁: Qb++,
  ﱡ︊︌︁: Qb++,
  ﱣ︊︌︁: Qb++,
  ﱢ︊︌︁: Qb++,
  ﱞ︋︌︁: Qb++,
  ﱠ︋︌︁: Qb++,
  ﱟ︋︌︁: Qb++,
  ﱡ︋︌︁: Qb++,
  ﱣ︋︌︁: Qb++,
  ﱢ︋︌︁: Qb++,
  ﱡ︌︌︁: Qb++,
  ﱣ︌︌︁: Qb++,
  ﱢ︌︌︁: Qb++,
  ﱞ︍︌︁: Qb++,
  ﱣ︀︉︂: Qb++,
  ﱢ︀︉︂: Qb++,
  ﱞ︁︉︂: Qb++,
  ﱠ︌︍︁: Qb++,
  ﱣ︎︍︁: Qb++,
  ﱢ︂︎︁: Qb++,
  ﱞ︃︎︁: Qb++,
  ﱡ︍︌︁: Qb++,
  ﱞ︅︎︁: Qb++,
  ﱣ︍︌︁: Qb++,
  ﱞ︎︌︁: Qb++,
  ﱠ︎︌︁: Qb++,
  ﱢ︍︌︁: Qb++
};
Qb = 0;
var Tb = {
  ﱣ︎︋︁: Qb++,
  ﱢ︎︋︁: Qb++,
  ﱞ️︋︁: Qb++,
  ﱠ️︋︁: Qb++,
  ﱟ️︋︁: Qb++,
  ﱡ️︋︁: Qb++,
  ﱣ️︋︁: Qb++,
  ﱢ️︋︁: Qb++,
  ﱞ︀︌︁: Qb++,
  ﱠ︀︌︁: Qb++,
  ﱟ︀︌︁: Qb++,
  ﱡ︀︌︁: Qb++,
  ﱣ︀︌︁: Qb++,
  ﱢ︀︌︁: Qb++,
  ﱞ︁︌︁: Qb++,
  ﱠ︁︌︁: Qb++,
  ﱟ︁︌︁: Qb++,
  ﱡ︁︌︁: Qb++,
  ﱣ︁︌︁: Qb++,
  ﱢ︁︌︁: Qb++,
  ﱞ︂︌︁: Qb++,
  ﱠ︂︌︁: Qb++,
  ﱟ︂︌︁: Qb++,
  ﱡ︂︌︁: Qb++,
  ﱣ︂︌︁: Qb++,
  ﱢ︂︌︁: Qb++,
  ﱞ︃︌︁: Qb++,
  ﱠ︃︌︁: Qb++,
  ﱟ︃︌︁: Qb++,
  ﱡ︃︌︁: Qb++,
  ﱣ︃︌︁: Qb++,
  ﱢ︃︌︁: Qb++,
  ﱞ︄︌︁: Qb++,
  ﱠ︄︌︁: Qb++,
  ﱟ︄︌︁: Qb++,
  ﱡ︄︌︁: Qb++,
  ﱣ︄︌︁: Qb++,
  ﱢ︄︌︁: Qb++,
  ﱞ︅︌︁: Qb++,
  ﱠ︅︌︁: Qb++,
  ﱟ︅︌︁: Qb++,
  ﱡ︅︌︁: Qb++,
  ﱣ︅︌︁: Qb++,
  ﱢ︅︌︁: Qb++,
  ﱞ︆︌︁: Qb++,
  ﱠ︆︌︁: Qb++,
  ﱟ︆︌︁: Qb++,
  ﱡ︆︌︁: Qb++,
  ﱣ︆︌︁: Qb++,
  ﱢ︆︌︁: Qb++,
  ﱞ︇︌︁: Qb++,
  ﱠ︇︌︁: Qb++,
  ﱟ︇︌︁: Qb++,
  ﱡ︇︌︁: Qb++,
  ﱣ︇︌︁: Qb++,
  ﱢ︇︌︁: Qb++,
  ﱞ︈︌︁: Qb++,
  ﱠ︈︌︁: Qb++,
  ﱟ︈︌︁: Qb++,
  ﱡ︈︌︁: Qb++,
  ﱣ︈︌︁: Qb++,
  ﱢ︈︌︁: Qb++,
  ﱞ︉︌︁: Qb++,
  ﱠ︉︌︁: Qb++,
  ﱟ︉︌︁: Qb++,
  ﱡ︉︌︁: Qb++,
  ﱣ︉︌︁: Qb++,
  ﱢ︉︌︁: Qb++,
  ﱞ︊︌︁: Qb++,
  ﱠ︊︌︁: Qb++,
  ﱟ︊︌︁: Qb++,
  ﱡ︊︌︁: Qb++,
  ﱣ︊︌︁: Qb++,
  ﱢ︊︌︁: Qb++,
  ﱞ︋︌︁: Qb++,
  ﱠ︋︌︁: Qb++,
  ﱟ︋︌︁: Qb++,
  ﱡ︋︌︁: Qb++,
  ﱣ︋︌︁: Qb++,
  ﱢ︋︌︁: Qb++,
  ﱞ︌︌︁: Qb++,
  ﱠ︌︌︁: Qb++,
  ﱟ︌︌︁: Qb++,
  ﱡ︌︌︁: Qb++,
  ﱣ︌︌︁: Qb++,
  ﱢ︌︌︁: Qb++,
  ﱞ︍︌︁: Qb++,
  ﱠ︍︌︁: Qb++,
  ﱟ︍︌︁: Qb++,
  ﱡ︍︌︁: Qb++,
  ﱣ︍︌︁: Qb++,
  ﱢ︍︌︁: Qb++,
  ﱞ︎︌︁: Qb++,
  ﱠ︎︌︁: Qb++,
  ﱡ︆︎︁: Qb++,
  ﱡ︎︌︁: Qb++,
  ﱣ︎︌︁: Qb++,
  ﱢ︎︌︁: Qb++,
  ﱞ️︌︁: Qb++,
  ﱠ️︌︁: Qb++,
  ﱟ️︌︁: Qb++,
  ﱡ️︌︁: Qb++,
  ﱠ︁︉︂: Qb++,
  ﱟ︁︉︂: Qb++,
  ﱞ︀︍︁: Qb++,
  ﱠ︀︍︁: Qb++,
  ﱟ︀︍︁: Qb++,
  ﱣ︍︎︁: Qb++,
  ﱣ︀︍︁: Qb++,
  ﱡ︇︎︁: Qb++,
  ﱞ︁︍︁: Qb++,
  ﱠ︁︍︁: Qb++,
  ﱡ︍︈︂: Qb++,
  ﱣ︍︈︂: Qb++,
  ﱣ︁︍︁: Qb++,
  ﱢ︁︍︁: Qb++,
  ﱞ︂︍︁: Qb++,
  ﱠ︂︍︁: Qb++,
  ﱢ️︈︂: Qb++,
  ﱡ︂︍︁: Qb++,
  ﱣ︂︍︁: Qb++,
  ﱢ︂︍︁: Qb++,
  ﱞ︃︍︁: Qb++,
  ﱠ︃︍︁: Qb++,
  ﱟ︃︍︁: Qb++,
  ﱡ︃︍︁: Qb++,
  ﱣ︃︍︁: Qb++,
  ﱢ︃︍︁: Qb++,
  ﱞ︄︍︁: Qb++,
  ﱠ︄︍︁: Qb++,
  ﱟ︄︍︁: Qb++,
  ﱡ︄︍︁: Qb++,
  ﱣ︄︍︁: Qb++,
  ﱢ︄︍︁: Qb++,
  ﱠ︉︋︁: Qb++,
  ﱠ︅︍︁: Qb++,
  ﱡ︁︉︂: Qb++,
  ﱞ️︈︂: Qb++,
  ﱟ︀︉︂: Qb++,
  ﱡ︀︉︂: Qb++,
  ﱞ︆︍︁: Qb++,
  ﱠ︆︍︁: Qb++,
  ﱟ︆︍︁: Qb++,
  ﱡ︆︍︁: Qb++,
  ﱣ︆︍︁: Qb++,
  ﱢ︆︍︁: Qb++,
  ﱞ︇︍︁: Qb++,
  ﱠ︇︍︁: Qb++,
  ﱟ︇︍︁: Qb++,
  ﱡ︇︍︁: Qb++,
  ﱣ︇︍︁: Qb++,
  ﱢ︇︍︁: Qb++,
  ﱞ︈︍︁: Qb++,
  ﱠ︈︍︁: Qb++,
  ﱟ︈︍︁: Qb++,
  ﱡ︈︍︁: Qb++,
  ﱣ︈︍︁: Qb++,
  ﱢ︈︍︁: Qb++,
  ﱞ︉︍︁: Qb++,
  ﱠ︉︍︁: Qb++,
  ﱠ️︈︂: Qb++,
  ﱡ︉︍︁: Qb++,
  ﱣ︉︍︁: Qb++,
  ﱢ︉︍︁: Qb++,
  ﱞ︊︍︁: Qb++,
  ﱟ️︈︂: Qb++,
  ﱡ️︈︂: Qb++,
  ﱣ️︈︂: Qb++,
  ﱣ︊︍︁: Qb++,
  ﱣ︁︉︂: Qb++,
  ﱢ︁︉︂: Qb++,
  ﱞ︂︉︂: Qb++,
  ﱠ︂︉︂: Qb++,
  ﱟ︂︉︂: Qb++,
  ﱣ︀︉︂: Qb++,
  ﱢ︀︉︂: Qb++,
  ﱞ︁︉︂: Qb++,
  ﱠ︌︍︁: Qb++,
  ﱟ︌︍︁: Qb++,
  ﱡ︌︍︁: Qb++,
  ﱣ︌︍︁: Qb++,
  ﱢ︌︍︁: Qb++,
  ﱢ︍︈︂: Qb++,
  ﱠ︍︍︁: Qb++,
  ﱟ︍︍︁: Qb++,
  ﱞ︎︈︂: Qb++,
  ﱣ︍︍︁: Qb++,
  ﱠ︎︈︂: Qb++,
  ﱞ︎︍︁: Qb++,
  ﱠ︎︍︁: Qb++,
  ﱢ︃︎︁: Qb++,
  ﱞ︄︎︁: Qb++,
  ﱣ︎︍︁: Qb++,
  ﱢ︎︍︁: Qb++,
  ﱡ︂︉︂: Qb++,
  ﱠ️︍︁: Qb++,
  ﱟ️︍︁: Qb++,
  ﱣ︂︉︂: Qb++,
  ﱟ︎︈︂: Qb++,
  ﱢ️︍︁: Qb++,
  ﱡ︎︈︂: Qb++,
  ﱠ︀︎︁: Qb++,
  ﱣ︎︈︂: Qb++,
  ﱡ︀︎︁: Qb++,
  ﱢ︎︈︂: Qb++,
  ﱡ︅︎︁: Qb++,
  ﱞ︁︎︁: Qb++,
  ﱠ︁︎︁: Qb++,
  ﱟ︁︎︁: Qb++,
  ﱡ︁︎︁: Qb++,
  ﱣ︁︎︁: Qb++,
  ﱢ︁︎︁: Qb++,
  ﱞ︂︎︁: Qb++,
  ﱠ︂︎︁: Qb++,
  ﱟ︂︎︁: Qb++,
  ﱡ︂︎︁: Qb++,
  ﱣ︂︎︁: Qb++,
  ﱢ︂︎︁: Qb++,
  ﱞ︃︎︁: Qb++,
  ﱡ︃︎︁: Qb++,
  ﱠ︄︎︁: Qb++,
  ﱟ︄︎︁: Qb++,
  ﱡ︄︎︁: Qb++,
  ﱢ︄︎︁: Qb++,
  ﱞ︅︎︁: Qb++,
  ﱠ︅︎︁: Qb++,
  ﱣ︅︎︁: Qb++,
  ﱢ︁︆︂: Qb++,
  ﱢ︅︎︁: Qb++,
  ﱢ︂︉︂: Qb++,
  ﱞ︃︉︂: Qb++,
  ﱞ︆︎︁: Qb++,
  ﱠ︃︉︂: Qb++,
  ﱞ︇︎︁: Qb++,
  ﱟ︃︉︂: Qb++
};
var Ub = [];
Ub[103] = {
  name: "Wood",
  ﱡ︃︉︂: 310,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[102] = {
  name: "Stone",
  ﱡ︃︉︂: 309,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[105] = {
  name: "Gold",
  ﱡ︃︉︂: 291,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[106] = {
  name: "Diamond",
  ﱡ︃︉︂: 292,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[115] = {
  name: "Amethyst",
  ﱡ︃︉︂: 412,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[2] = {
  name: "Rabbit fur",
  ﱡ︃︉︂: 362,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[168] = {
  name: "Wolf fur",
  ﱡ︃︉︂: 387,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[231] = {
  name: "Boar fur",
  ﱡ︃︉︂: 1156,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[94] = {
  name: "Firefly",
  ﱡ︃︉︂: 1158,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[95] = {
  name: "Wood arrow",
  ﱡ︃︉︂: 1160,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[96] = {
  name: "Stone arrow",
  ﱡ︃︉︂: 1163,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[97] = {
  name: "Gold arrow",
  ﱡ︃︉︂: 1166,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[98] = {
  name: "Diamond arrow",
  ﱡ︃︉︂: 1169,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[99] = {
  name: "Amethyst arrow",
  ﱡ︃︉︂: 1172,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[100] = {
  name: "Reidite arrow",
  ﱡ︃︉︂: 1175,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[101] = {
  name: "Dragon arrow",
  ﱡ︃︉︂: 1178,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[140] = {
  name: "Winter fur",
  ﱡ︃︉︂: 499,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[234] = {
  name: "Fur mammoth",
  ﱡ︃︉︂: 1227,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[155] = {
  name: "Web",
  ﱡ︃︉︂: 299,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[110] = {
  name: "Meat",
  ﱡ︃︉︂: 294,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[131] = {
  name: "Fish",
  ﱡ︃︉︂: 656,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[123] = {
  name: "Kraken skin",
  ﱡ︃︉︂: 618,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[133] = {
  name: "Piranha scales",
  ﱡ︃︉︂: 668,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[136] = {
  name: "Ice",
  ﱡ︃︉︂: 136,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[120] = {
  name: "Sand",
  ﱡ︃︉︂: 603,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[134] = {
  name: "Dirt",
  ﱡ︃︉︂: 134,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[104] = {
  name: "Berrie",
  ﱡ︃︉︂: 271,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[125] = {
  name: "Flour",
  ﱡ︃︉︂: 623,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[128] = {
  name: "Flour",
  ﱡ︃︉︂: 633,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[172] = {
  name: "Special fur peasant",
  ﱡ︃︉︂: 172,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[173] = {
  name: "Special fur hood",
  ﱡ︃︉︂: 173,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[183] = {
  name: "Pumpkin",
  ﱡ︃︉︂: 808,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[186] = {
  name: "Garlic",
  ﱡ︃︉︂: 834,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[188] = {
  name: "Thornbush",
  ﱡ︃︉︂: 844,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[199] = {
  name: "Carrot",
  ﱡ︃︉︂: 949,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[201] = {
  name: "Tomato",
  ﱡ︃︉︂: 959,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[203] = {
  name: "Watermelon",
  ﱡ︃︉︂: 966,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[205] = {
  name: "Aloe Vera",
  ﱡ︃︉︂: 981,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[216] = {
  name: "Penguin Feather",
  ﱡ︃︉︂: 1029,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[225] = {
  name: "Hawk Feather",
  ﱡ︃︉︂: 1031,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[226] = {
  name: "Vulture Feather",
  ﱡ︃︉︂: 1033,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[227] = {
  name: "Cactus",
  ﱡ︃︉︂: 1148,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[230] = {
  name: "Cactus",
  ﱡ︃︉︂: 1154,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[229] = {
  name: "Pitchfork Part",
  ﱡ︃︉︂: 1152,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[232] = {
  name: "Emerald Machine",
  ﱡ︃︉︂: 1181,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[228] = {
  name: "Emerald",
  ﱡ︃︉︂: 1150,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[41] = {
  name: "Christmas Hat",
  ﱡ︃︉︂: 874,
  ﱣ︃︉︂: 0
};
Ub[42] = {
  name: "Elf Hat",
  ﱡ︃︉︂: 876,
  ﱣ︃︉︂: 0
};
Ub[195] = {
  name: "Garland",
  ﱡ︃︉︂: 864,
  ﱣ︃︉︂: 0,
  grid: 0
};
Ub[194] = {
  name: "Candy",
  ﱡ︃︉︂: 194,
  ﱣ︃︉︂: 0
};
Ub[193] = {
  name: "Sugar Cane",
  ﱡ︃︉︂: 859,
  ﱣ︃︉︂: 0
};
Ub[9] = {
  name: "Pirate Sword",
  ﱡ︃︉︂: 854,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[190] = {
  name: "Crab Stick",
  ﱡ︃︉︂: 190,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[196] = {
  name: "Reidite",
  ﱡ︃︉︂: 932,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[197] = {
  name: "Flame",
  ﱡ︃︉︂: 930,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[107] = {
  name: "Campfire",
  ﱡ︃︉︂: 296,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[192] = {
  name: "Bed",
  ﱡ︃︉︂: 903,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[108] = {
  name: "Workbench",
  ﱡ︃︉︂: 256,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[0] = {
  name: "Stone sword",
  ﱡ︃︉︂: 248,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[1] = {
  name: "Stone pick",
  ﱡ︃︉︂: 250,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[109] = {
  name: "Berries bush",
  ﱡ︃︉︂: 278,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[3] = {
  name: "Gold pick",
  ﱡ︃︉︂: 289,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[4] = {
  name: "Diamond pick",
  ﱡ︃︉︂: 251,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[57] = {
  name: "Wood sword",
  ﱡ︃︉︂: 824,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[5] = {
  name: "Gold sword",
  ﱡ︃︉︂: 284,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[6] = {
  name: "Diamond sword",
  ﱡ︃︉︂: 285,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[8] = {
  name: "Wood pick",
  ﱡ︃︉︂: 308,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[156] = {
  name: "Wood wall",
  ﱡ︃︉︂: 312,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[154] = {
  name: "Wood spike",
  ﱡ︃︉︂: 314,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[111] = {
  name: "Cooked meat",
  ﱡ︃︉︂: 319,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[112] = {
  name: "Big campfire",
  ﱡ︃︉︂: 321,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[189] = {
  name: "Bandage",
  ﱡ︃︉︂: 298,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[157] = {
  name: "Stone wall",
  ﱡ︃︉︂: 257,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[158] = {
  name: "Gold wall",
  ﱡ︃︉︂: 259,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[159] = {
  name: "Diamond wall",
  ﱡ︃︉︂: 326,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[160] = {
  name: "Wood door",
  ﱡ︃︉︂: 262,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[161] = {
  name: "Chest",
  ﱡ︃︉︂: 332,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[162] = {
  name: "Stone spike",
  ﱡ︃︉︂: 354,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[163] = {
  name: "Gold spike",
  ﱡ︃︉︂: 357,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[164] = {
  name: "Diamond spike",
  ﱡ︃︉︂: 359,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[165] = {
  name: "Stone door",
  ﱡ︃︉︂: 365,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[166] = {
  name: "Gold door",
  ﱡ︃︉︂: 368,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[167] = {
  name: "Diamond door",
  ﱡ︃︉︂: 371,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[10] = {
  name: "Chapka",
  ﱡ︃︉︂: 364,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[11] = {
  name: "Big Chapka",
  ﱡ︃︉︂: 374,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[12] = {
  name: "Wood spear",
  ﱡ︃︉︂: 396,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[13] = {
  name: "Stone spear",
  ﱡ︃︉︂: 390,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[14] = {
  name: "Gold spear",
  ﱡ︃︉︂: 393,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[15] = {
  name: "Diamond spear",
  ﱡ︃︉︂: 399,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[16] = {
  name: "Dragon spear",
  ﱡ︃︉︂: 870,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[17] = {
  name: "Dragon spear",
  ﱡ︃︉︂: 873,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[18] = {
  name: "Crab spear",
  ﱡ︃︉︂: 894,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[191] = {
  name: "Crab loot",
  ﱡ︃︉︂: 191,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[113] = {
  name: "Furnace",
  ﱡ︃︉︂: 403,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[23] = {
  name: "Explorer hat",
  ﱡ︃︉︂: 415,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[24] = {
  name: "Pirate hat",
  ﱡ︃︉︂: 418,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[87] = {
  name: "Flower hat",
  ﱡ︃︉︂: 1222,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[88] = {
  name: "Fur hat",
  ﱡ︃︉︂: 1225,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[58] = {
  name: "Wood helmet",
  ﱡ︃︉︂: 821,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[25] = {
  name: "Stone helmet",
  ﱡ︃︉︂: 424,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[26] = {
  name: "Gold helmet",
  ﱡ︃︉︂: 427,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[27] = {
  name: "Diamond helmet",
  ﱡ︃︉︂: 430,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[28] = {
  name: "Book",
  ﱡ︃︉︂: 433,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[114] = {
  name: "Paper",
  ﱡ︃︉︂: 436,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[29] = {
  name: "Bag",
  ﱡ︃︉︂: 361,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[30] = {
  name: "Amethyst sword",
  ﱡ︃︉︂: 450,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[31] = {
  name: "Amethyst pick",
  ﱡ︃︉︂: 454,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[33] = {
  name: "Amethyst spear",
  ﱡ︃︉︂: 467,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[35] = {
  name: "Stone hammer",
  ﱡ︃︉︂: 472,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[36] = {
  name: "Gold hammer",
  ﱡ︃︉︂: 475,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[37] = {
  name: "Diamond hammer",
  ﱡ︃︉︂: 478,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[38] = {
  name: "Amethyst hammer",
  ﱡ︃︉︂: 481,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[39] = {
  name: "Reidite hammer",
  ﱡ︃︉︂: 484,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[116] = {
  name: "Amethyst wall",
  ﱡ︃︉︂: 487,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[117] = {
  name: "Amethyst spike",
  ﱡ︃︉︂: 490,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[118] = {
  name: "Amethyst door",
  ﱡ︃︉︂: 492,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[40] = {
  name: "Cap & scarf",
  ﱡ︃︉︂: 497,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[141] = {
  name: "Blue cord",
  ﱡ︃︉︂: 509,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[142] = {
  name: "Lock",
  ﱡ︃︉︂: 513,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[145] = {
  name: "Resurrection",
  ﱡ︃︉︂: 524,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[152] = {
  name: "Lockpick",
  ﱡ︃︉︂: 527,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[153] = {
  name: "Totem",
  ﱡ︃︉︂: 549,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[43] = {
  name: "Amethyst helmet",
  ﱡ︃︉︂: 536,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[45] = {
  name: "Super hammer",
  ﱡ︃︉︂: 545,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[119] = {
  name: "Bridge",
  ﱡ︃︉︂: 598,
  grid: 1,
  ﱣ︃︉︂: 1
};
Ub[215] = {
  name: "Wood Tower",
  ﱡ︃︉︂: 1229,
  grid: 1,
  ﱣ︃︉︂: 1
};
Ub[121] = {
  name: "Bottle full",
  ﱡ︃︉︂: 709,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[122] = {
  name: "Bottle empty",
  ﱡ︃︉︂: 605,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[46] = {
  name: "Stone shovel",
  ﱡ︃︉︂: 612,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[124] = {
  name: "Watering can",
  ﱡ︃︉︂: 621,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[126] = {
  name: "Wheat",
  ﱡ︃︉︂: 626,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[127] = {
  name: "Cookie",
  ﱡ︃︉︂: 629,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[129] = {
  name: "Windmill",
  ﱡ︃︉︂: 637,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[47] = {
  name: "Super diving suit",
  ﱡ︃︉︂: 641,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[48] = {
  name: "Diving mask",
  ﱡ︃︉︂: 644,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[49] = {
  name: "Watering can full",
  ﱡ︃︉︂: 648,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[130] = {
  name: "Cake",
  ﱡ︃︉︂: 654,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[132] = {
  name: "Foodfish cooked",
  ﱡ︃︉︂: 660,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[135] = {
  name: "Plot",
  ﱡ︃︉︂: 678,
  grid: 1,
  ﱣ︃︉︂: 1
};
Ub[137] = {
  name: "Bread",
  ﱡ︃︉︂: 684,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[Tb.ﱞ︀︉︂] = {
  name: "Bottle full (with ice)",
  ﱡ︃︉︂: Rb.ﱢ︃︉︂,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[Tb.ﱠ︀︉︂] = {
  name: "Bottle full (with well)",
  ﱡ︃︉︂: Rb.ﱞ︄︉︂,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[50] = {
  name: "Gold shovel",
  ﱡ︃︉︂: 694,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[51] = {
  name: "Diamond shovel",
  ﱡ︃︉︂: 698,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[52] = {
  name: "Amethyst shovel",
  ﱡ︃︉︂: 700,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[55] = {
  name: "Spanner",
  ﱡ︃︉︂: 705,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[56] = {
  name: "Machete",
  ﱡ︃︉︂: 708,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[138] = {
  name: "Bread oven",
  ﱡ︃︉︂: 712,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[139] = {
  name: "Sandwich",
  ﱡ︃︉︂: 724,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[59] = {
  name: "Dragon helmet",
  ﱡ︃︉︂: 728,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[60] = {
  name: "Dragon helmet",
  ﱡ︃︉︂: 731,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[90] = {
  name: "Witch",
  ﱡ︃︉︂: 734,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[91] = {
  name: "Nimbus",
  ﱡ︃︉︂: 737,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[92] = {
  name: "Wand1",
  ﱡ︃︉︂: 740,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[93] = {
  name: "Wand2",
  ﱡ︃︉︂: 743,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[62] = {
  name: "Dragon sword",
  ﱡ︃︉︂: 558,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[63] = {
  name: "Dragon sword",
  ﱡ︃︉︂: 561,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[71] = {
  name: "Wood shield",
  ﱡ︃︉︂: 1232,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[72] = {
  name: "Stone shield",
  ﱡ︃︉︂: 1235,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[73] = {
  name: "Gold shield",
  ﱡ︃︉︂: 1238,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[74] = {
  name: "Diamond shield",
  ﱡ︃︉︂: 1241,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[75] = {
  name: "Amethyst shield",
  ﱡ︃︉︂: 1244,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[76] = {
  name: "Reidite shield",
  ﱡ︃︉︂: 1247,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[64] = {
  name: "Wood bow",
  ﱡ︃︉︂: 564,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[65] = {
  name: "Stone bow",
  ﱡ︃︉︂: 567,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[66] = {
  name: "Gold bow",
  ﱡ︃︉︂: 570,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[67] = {
  name: "Diamond bow",
  ﱡ︃︉︂: 573,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[68] = {
  name: "Amethyst bow",
  ﱡ︃︉︂: 576,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[69] = {
  name: "Reidite bow",
  ﱡ︃︉︂: 579,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[70] = {
  name: "Dragon bow",
  ﱡ︃︉︂: 582,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[77] = {
  name: "Crown of life",
  ﱡ︃︉︂: 752,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[169] = {
  name: "Gem of life",
  ﱡ︃︉︂: 170,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[179] = {
  name: "Orb of the dragon",
  ﱡ︃︉︂: 246,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[181] = {
  name: "Orb of the dragon",
  ﱡ︃︉︂: 247,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[178] = {
  name: "Cube of the dragon",
  ﱡ︃︉︂: 745,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[180] = {
  name: "Cube of the dragon",
  ﱡ︃︉︂: 747,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[78] = {
  name: "Crown of luck",
  ﱡ︃︉︂: 756,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[170] = {
  name: "Gem of luck",
  ﱡ︃︉︂: 171,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[79] = {
  name: "Crown of the angel",
  ﱡ︃︉︂: 764,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[171] = {
  name: "Gem of the angel",
  ﱡ︃︉︂: 169,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[143] = {
  name: "Dragon heart",
  ﱡ︃︉︂: 515,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[144] = {
  name: "Lava heart",
  ﱡ︃︉︂: 517,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[83] = {
  name: "Hood",
  ﱡ︃︉︂: 762,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[84] = {
  name: "Peasant",
  ﱡ︃︉︂: 766,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[86] = {
  name: "Winter peasant",
  ﱡ︃︉︂: 771,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[85] = {
  name: "Winter hood",
  ﱡ︃︉︂: 774,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[174] = {
  name: "Bucket full",
  ﱡ︃︉︂: 778,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[175] = {
  name: "Bucket empty",
  ﱡ︃︉︂: 779,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[176] = {
  name: "Well",
  ﱡ︃︉︂: 785,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[177] = {
  name: "Sign",
  ﱡ︃︉︂: 793,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[182] = {
  name: "Pumpkin Seed",
  ﱡ︃︉︂: 803,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[185] = {
  name: "Garlic Seed",
  ﱡ︃︉︂: 829,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[187] = {
  name: "Thorbushes Seed",
  ﱡ︃︉︂: 840,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[184] = {
  name: "Roof",
  ﱡ︃︉︂: 837,
  grid: 1,
  ﱣ︃︉︂: 1
};
Ub[61] = {
  name: "Crab Crown",
  ﱡ︃︉︂: 906,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[198] = {
  name: "Carrot Seed",
  ﱡ︃︉︂: 944,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[200] = {
  name: "Tomato Seed",
  ﱡ︃︉︂: 954,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[202] = {
  name: "Watermelon Seed",
  ﱡ︃︉︂: 961,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[204] = {
  name: "Aloe Vera Seed",
  ﱡ︃︉︂: 976,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[80] = {
  name: "Cap",
  ﱡ︃︉︂: 1132,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[81] = {
  name: "Turban",
  ﱡ︃︉︂: 1135,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[82] = {
  name: "Pilot Helmet",
  ﱡ︃︉︂: 421,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[146] = {
  name: "Emerald Machine",
  ﱡ︃︉︂: 1190,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[147] = {
  name: "Emerald Machine",
  ﱡ︃︉︂: 1194,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[148] = {
  name: "Emerald Machine",
  ﱡ︃︉︂: 1198,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[149] = {
  name: "Emerald Machine",
  ﱡ︃︉︂: 1202,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[150] = {
  name: "Emerald Machine",
  ﱡ︃︉︂: 1206,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[151] = {
  name: "Emerald Machine",
  ﱡ︃︉︂: 1210,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[53] = {
  name: "Pitchfork",
  ﱡ︃︉︂: 971,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[206] = {
  name: "Wood Door Spike",
  ﱡ︃︉︂: 984,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[207] = {
  name: "Stone Door Spike",
  ﱡ︃︉︂: 987,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[208] = {
  name: "Gold Door Spike",
  ﱡ︃︉︂: 990,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[209] = {
  name: "Diamond Door Spike",
  ﱡ︃︉︂: 993,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[210] = {
  name: "Amethyst Door Spike",
  ﱡ︃︉︂: 996,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[20] = {
  name: "Diamond Fire Protection ",
  ﱡ︃︉︂: 916,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[21] = {
  name: "Amethyst Fire Protection ",
  ﱡ︃︉︂: 920,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[22] = {
  name: "Amethyst Fire Protection ",
  ﱡ︃︉︂: 924,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[19] = {
  name: "Reidite Sword",
  ﱡ︃︉︂: 927,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[34] = {
  name: "Reidite Spear",
  ﱡ︃︉︂: 938,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[44] = {
  name: "Reidite Helmet",
  ﱡ︃︉︂: 941,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[214] = {
  name: "Reidite Door Spike",
  ﱡ︃︉︂: 999,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[212] = {
  name: "Reidite Door",
  ﱡ︃︉︂: 1002,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[213] = {
  name: "Reidite Spike",
  ﱡ︃︉︂: 1005,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[211] = {
  name: "Reidite Wall",
  ﱡ︃︉︂: 1008,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[32] = {
  name: "Reidite pick",
  ﱡ︃︉︂: 1013,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[217] = {
  name: "Boat",
  ﱡ︃︉︂: 1021,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[218] = {
  name: "Sled",
  ﱡ︃︉︂: 1024,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[89] = {
  name: "Saddle",
  ﱡ︃︉︂: 1042,
  grid: 0,
  ﱣ︃︉︂: 1
};
Ub[219] = {
  name: "Mount Boar",
  ﱡ︃︉︂: 1045,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[220] = {
  name: "Mount King Crab",
  ﱡ︃︉︂: 1185,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[221] = {
  name: "Mount Baby Dragon",
  ﱡ︃︉︂: 1076,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[222] = {
  name: "Mount Baby Lava",
  ﱡ︃︉︂: 1091,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[223] = {
  name: "Mount Hawk",
  ﱡ︃︉︂: 1106,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[224] = {
  name: "Plane",
  ﱡ︃︉︂: 1110,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[54] = {
  name: "Pitchfork 2",
  ﱡ︃︉︂: 974,
  grid: 0,
  ﱣ︃︉︂: 0
};
Ub[233] = {
  name: "Baby Mammoth",
  ﱡ︃︉︂: 1220,
  grid: 0,
  ﱣ︃︉︂: 0
};
var Vb = undefined;
var Wb = [{
  r: [[103, 25], [102, 5]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 0,
  ﱠ︄︉︂: 107,
  time: 0.2,
  t: 4
}, {
  r: [[107, 1], [103, 35], [102, 10]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 1,
  ﱠ︄︉︂: 112,
  time: 0.2,
  t: 4
}, {
  r: [[103, 150], [102, 50], [105, 15]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 2,
  ﱠ︄︉︂: 113,
  time: 0.05,
  t: 4
}, {
  r: [[103, 20], [102, 10]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 3,
  ﱠ︄︉︂: 108,
  time: 1 / 6,
  t: 4
}, {
  r: [[103, 10]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 4,
  ﱠ︄︉︂: 8,
  time: 1 / 3,
  t: 0
}, {
  r: [[8, 1], [103, 50], [102, 15]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 5,
  ﱠ︄︉︂: 1,
  time: 1 / 8,
  t: 0
}, {
  r: [[103, 40], [105, 20], [102, 30], [1, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 6,
  ﱠ︄︉︂: 3,
  time: 1 / 12,
  t: 0
}, {
  r: [[106, 20], [105, 50], [102, 80], [3, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 7,
  ﱠ︄︉︂: 4,
  time: 0.05,
  t: 0
}, {
  r: [[106, 40], [105, 60], [115, 30], [4, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 8,
  ﱠ︄︉︂: 31,
  time: 1 / 60,
  t: 0
}, {
  r: [[115, 30], [106, 40], [196, 30], [31, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 9,
  ﱠ︄︉︂: 32,
  time: 1 / 90,
  t: 0
}, {
  r: [[103, 90], [102, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 10,
  ﱠ︄︉︂: 35,
  time: 0.1,
  t: 0
}, {
  r: [[103, 160], [102, 120], [105, 80], [35, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 11,
  ﱠ︄︉︂: 36,
  time: 1 / 15,
  t: 0
}, {
  r: [[106, 80], [102, 200], [105, 150], [36, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 12,
  ﱠ︄︉︂: 37,
  time: 0.05,
  t: 0
}, {
  r: [[106, 160], [115, 60], [105, 250], [37, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 13,
  ﱠ︄︉︂: 38,
  time: 1 / 60,
  t: 0
}, {
  r: [[115, 160], [196, 60], [106, 250], [38, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 14,
  ﱠ︄︉︂: 39,
  time: 1 / 90,
  t: 0
}, {
  r: [[39, 1], [121, 1], [123, 1], [133, 10], [115, 20]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 15,
  ﱠ︄︉︂: 45,
  time: 1 / 120,
  t: 0
}, {
  r: [[103, 30], [102, 15]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 16,
  ﱠ︄︉︂: 46,
  time: 0.2,
  t: 0
}, {
  r: [[46, 1], [105, 20], [102, 30], [103, 40]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 17,
  ﱠ︄︉︂: 50,
  time: 0.1,
  t: 0
}, {
  r: [[50, 1], [106, 20], [105, 50], [102, 80]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 18,
  ﱠ︄︉︂: 51,
  time: 0.05,
  t: 0
}, {
  r: [[51, 1], [105, 60], [115, 30], [106, 40]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 19,
  ﱠ︄︉︂: 52,
  time: 1 / 40,
  t: 0
}, {
  r: [[103, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 20,
  ﱠ︄︉︂: 124,
  time: 0.2,
  t: 0
}, {
  r: [[124, 1]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 21,
  ﱠ︄︉︂: 49,
  time: 0.2,
  t: 0
}, {
  r: [[103, 100], [102, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 22,
  ﱠ︄︉︂: 53,
  time: 0.1,
  t: 0
}, {
  r: [[53, 1], [229, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 23,
  ﱠ︄︉︂: 54,
  time: 1 / 60,
  t: 0
}, {
  r: [[114, 4], [155, 4], [168, 4]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 24,
  ﱠ︄︉︂: 28,
  time: 1 / 15,
  t: 0
}, {
  r: [[103, 40]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 25,
  ﱠ︄︉︂: 12,
  time: 0.2,
  t: 1
}, {
  r: [[12, 1], [103, 60], [102, 10]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 26,
  ﱠ︄︉︂: 13,
  time: 0.1,
  t: 1
}, {
  r: [[103, 80], [105, 30], [102, 30], [13, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 27,
  ﱠ︄︉︂: 14,
  t: 1,
  time: 0.05
}, {
  r: [[103, 200], [106, 40], [105, 60], [14, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 28,
  ﱠ︄︉︂: 15,
  time: 1 / 30,
  t: 1
}, {
  r: [[115, 40], [106, 80], [105, 90], [15, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 29,
  ﱠ︄︉︂: 33,
  time: 1 / 60,
  t: 1
}, {
  r: [[196, 40], [115, 80], [106, 90], [33, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 30,
  ﱠ︄︉︂: 34,
  time: 1 / 90,
  t: 1
}, {
  r: [[141, 20], [179, 1], [115, 100], [143, 3]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 31,
  ﱠ︄︉︂: 16,
  time: 1 / 120,
  t: 1
}, {
  r: [[16, 1], [181, 1], [196, 100], [144, 2]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 32,
  ﱠ︄︉︂: 17,
  time: 0.005,
  t: 1
}, {
  r: [[12, 1], [191, 5], [155, 6]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 33,
  ﱠ︄︉︂: 18,
  time: 1 / 30,
  t: 1
}, {
  r: [[103, 30]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 34,
  ﱠ︄︉︂: 57,
  time: 0.2,
  t: 1
}, {
  r: [[103, 50], [102, 25], [57, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 35,
  ﱠ︄︉︂: 0,
  time: 0.1,
  t: 1
}, {
  r: [[103, 60], [105, 40], [102, 50], [0, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 36,
  ﱠ︄︉︂: 5,
  time: 0.05,
  t: 1
}, {
  r: [[106, 40], [105, 60], [102, 80], [5, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 37,
  ﱠ︄︉︂: 6,
  time: 1 / 30,
  t: 1
}, {
  r: [[106, 60], [105, 100], [115, 40], [6, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 38,
  ﱠ︄︉︂: 30,
  time: 1 / 60,
  t: 1
}, {
  r: [[106, 100], [115, 80], [196, 40], [30, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 39,
  ﱠ︄︉︂: 19,
  time: 1 / 90,
  t: 1
}, {
  r: [[104, 3]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 40,
  ﱠ︄︉︂: 109,
  time: 0.2,
  t: 3
}, {
  r: [[128, 3]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 41,
  ﱠ︄︉︂: 126,
  time: 0.2,
  t: 3
}, {
  r: [[183, 8]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 42,
  ﱠ︄︉︂: 182,
  time: 0.2,
  t: 3
}, {
  r: [[186, 8]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 43,
  ﱠ︄︉︂: 185,
  time: 0.2,
  t: 3
}, {
  r: [[188, 8]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 44,
  ﱠ︄︉︂: 187,
  time: 0.2,
  t: 3
}, {
  r: [[199, 8]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 45,
  ﱠ︄︉︂: 198,
  time: 0.2,
  t: 3
}, {
  r: [[201, 8]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 46,
  ﱠ︄︉︂: 200,
  time: 0.2,
  t: 3
}, {
  r: [[203, 16]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 47,
  ﱠ︄︉︂: 202,
  time: 0.2,
  t: 3
}, {
  r: [[205, 16]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 48,
  ﱠ︄︉︂: 204,
  time: 0.2,
  t: 3
}, {
  r: [[110, 1]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 49,
  ﱠ︄︉︂: 111,
  time: 0.2,
  t: 3
}, {
  r: [[131, 1]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 50,
  ﱠ︄︉︂: 132,
  time: 1 / 3,
  t: 3
}, {
  r: [[125, 3]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 51,
  ﱠ︄︉︂: 137,
  time: 1 / 3,
  t: 3
}, {
  r: [[125, 3], [104, 1]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 52,
  ﱠ︄︉︂: 127,
  time: 1 / 3,
  t: 3
}, {
  r: [[125, 5], [104, 2], [136, 2]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 53,
  ﱠ︄︉︂: 130,
  time: 0.2,
  t: 3
}, {
  r: [[155, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 54,
  ﱠ︄︉︂: 189,
  time: 0.2,
  t: 4
}, {
  r: [[103, 20]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 55,
  ﱠ︄︉︂: 156,
  time: 0.2,
  t: 5
}, {
  r: [[156, 1], [102, 17]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 56,
  ﱠ︄︉︂: 157,
  time: 0.2,
  t: 5
}, {
  r: [[157, 1], [105, 14]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 57,
  ﱠ︄︉︂: 158,
  time: 0.2,
  t: 5
}, {
  r: [[158, 1], [106, 11]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 58,
  ﱠ︄︉︂: 159,
  time: 0.2,
  t: 5
}, {
  r: [[159, 1], [115, 8]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 59,
  ﱠ︄︉︂: 116,
  time: 0.2,
  t: 5
}, {
  r: [[116, 1], [196, 5]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 60,
  ﱠ︄︉︂: 211,
  time: 0.2,
  t: 5
}, {
  r: [[103, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 61,
  ﱠ︄︉︂: 160,
  time: 1 / 8,
  t: 5
}, {
  r: [[160, 1], [102, 27]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 62,
  ﱠ︄︉︂: 165,
  time: 1 / 8,
  t: 5
}, {
  r: [[165, 1], [105, 24]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 63,
  ﱠ︄︉︂: 166,
  time: 1 / 8,
  t: 5
}, {
  r: [[166, 1], [106, 21]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 64,
  ﱠ︄︉︂: 167,
  time: 1 / 8,
  t: 5
}, {
  r: [[167, 1], [115, 18]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 65,
  ﱠ︄︉︂: 118,
  time: 1 / 8,
  t: 5
}, {
  r: [[118, 1], [196, 15]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 66,
  ﱠ︄︉︂: 212,
  time: 1 / 8,
  t: 5
}, {
  r: [[156, 1], [103, 40], [102, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 67,
  ﱠ︄︉︂: 154,
  time: 0.05,
  t: 5
}, {
  r: [[157, 1], [102, 70]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 68,
  ﱠ︄︉︂: 162,
  time: 0.05,
  t: 5
}, {
  r: [[158, 1], [105, 40], [102, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 69,
  ﱠ︄︉︂: 163,
  time: 0.05,
  t: 5
}, {
  r: [[159, 1], [106, 40], [102, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 70,
  ﱠ︄︉︂: 164,
  time: 0.05,
  t: 5
}, {
  r: [[116, 1], [115, 40], [102, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 71,
  ﱠ︄︉︂: 117,
  time: 0.05,
  t: 5
}, {
  r: [[211, 1], [196, 40], [105, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 72,
  ﱠ︄︉︂: 213,
  time: 0.05,
  t: 5
}, {
  r: [[160, 1], [103, 80], [102, 60]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 73,
  ﱠ︄︉︂: 206,
  time: 0.05,
  t: 5
}, {
  r: [[165, 1], [102, 140]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 74,
  ﱠ︄︉︂: 207,
  time: 0.05,
  t: 5
}, {
  r: [[166, 1], [105, 80], [102, 60]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 75,
  ﱠ︄︉︂: 208,
  time: 0.05,
  t: 5
}, {
  r: [[167, 1], [106, 80], [102, 60]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 76,
  ﱠ︄︉︂: 209,
  time: 0.05,
  t: 5
}, {
  r: [[118, 1], [115, 80], [102, 60]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 77,
  ﱠ︄︉︂: 210,
  time: 0.05,
  t: 5
}, {
  r: [[212, 1], [196, 80], [105, 60]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 78,
  ﱠ︄︉︂: 214,
  time: 0.05,
  t: 5
}, {
  r: [[103, 25], [105, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 79,
  ﱠ︄︉︂: 161,
  time: 0.2,
  t: 4
}, {
  r: [[114, 1], [2, 1], [155, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 80,
  ﱠ︄︉︂: 23,
  time: 0.2,
  t: 2
}, {
  r: [[114, 5], [216, 20], [141, 5], [2, 5]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 81,
  ﱠ︄︉︂: 24,
  time: 1 / 30,
  t: 2
}, {
  r: [[230, 1], [225, 8], [226, 8], [216, 8], [155, 6]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 82,
  ﱠ︄︉︂: 82,
  time: 1 / 60,
  t: 2
}, {
  r: [[2, 1], [155, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 83,
  ﱠ︄︉︂: 10,
  time: 0.2,
  t: 2
}, {
  r: [[10, 1], [168, 5], [155, 4]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 84,
  ﱠ︄︉︂: 11,
  time: 1 / 12,
  t: 2
}, {
  r: [[11, 1], [140, 5], [141, 4]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 85,
  ﱠ︄︉︂: 40,
  time: 1 / 30,
  t: 2
}, {
  r: [[40, 1], [140, 5], [234, 10], [141, 4]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 86,
  ﱠ︄︉︂: 88,
  time: 0.02,
  t: 2
}, {
  r: [[103, 50]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 87,
  ﱠ︄︉︂: 58,
  time: 0.2,
  t: 2
}, {
  r: [[102, 75], [103, 75], [58, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 88,
  ﱠ︄︉︂: 25,
  time: 0.1,
  t: 2
}, {
  r: [[102, 90], [103, 90], [105, 90], [25, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 89,
  ﱠ︄︉︂: 26,
  time: 0.05,
  t: 2
}, {
  r: [[102, 100], [105, 100], [106, 100], [26, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 90,
  ﱠ︄︉︂: 27,
  time: 1 / 30,
  t: 2
}, {
  r: [[115, 80], [105, 150], [106, 120], [27, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 91,
  ﱠ︄︉︂: 43,
  time: 1 / 60,
  t: 2
}, {
  r: [[196, 80], [106, 150], [115, 120], [43, 1]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 92,
  ﱠ︄︉︂: 44,
  time: 1 / 90,
  t: 2
}, {
  r: [[133, 2], [106, 40], [155, 4]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 93,
  ﱠ︄︉︂: 48,
  time: 0.05,
  t: 2
}, {
  r: [[48, 1], [105, 80], [123, 1], [115, 20]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 94,
  ﱠ︄︉︂: 47,
  time: 1 / 90,
  t: 2
}, {
  r: [[197, 5], [106, 50], [141, 5]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 95,
  ﱠ︄︉︂: 20,
  time: 0.05,
  t: 2
}, {
  r: [[20, 1], [197, 10], [115, 50]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 96,
  ﱠ︄︉︂: 21,
  time: 1 / 60,
  t: 2
}, {
  r: [[21, 1], [197, 15], [115, 50], [196, 50]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 97,
  ﱠ︄︉︂: 22,
  time: 1 / 90,
  t: 2
}, {
  r: [[155, 4], [231, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 98,
  ﱠ︄︉︂: 80,
  time: 1 / 15,
  t: 2
}, {
  r: [[80, 1], [155, 6], [231, 4], [226, 12], [216, 4]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 99,
  ﱠ︄︉︂: 81,
  time: 1 / 150,
  t: 2
}, {
  r: [[155, 6], [168, 5]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 100,
  ﱠ︄︉︂: 29,
  time: 1 / 15,
  t: 2
}, {
  r: [[103, 20]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 101,
  ﱠ︄︉︂: 114,
  time: 1 / 3,
  t: 4
}, {
  r: [[106, 1], [155, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 102,
  ﱠ︄︉︂: 141,
  time: 1 / 3,
  t: 4
}, {
  r: [[105, 10]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 103,
  ﱠ︄︉︂: 142,
  time: 0.2,
  t: 4
}, {
  r: [[105, 250]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 104,
  ﱠ︄︉︂: 152,
  time: 1 / 60,
  t: 4
}, {
  r: [[103, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 105,
  ﱠ︄︉︂: 153,
  time: 0.1,
  t: 4
}, {
  r: [[103, 15]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 106,
  ﱠ︄︉︂: 119,
  time: 0.2,
  t: 4
}, {
  r: [[103, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 107,
  ﱠ︄︉︂: 184,
  time: 0.2,
  t: 4
}, {
  r: [[103, 120]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 108,
  ﱠ︄︉︂: 215,
  time: 1 / 15,
  t: 4
}, {
  r: [[103, 20], [134, 15]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 109,
  ﱠ︄︉︂: 135,
  time: 0.2,
  t: 4
}, {
  r: [[120, 25]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 110,
  ﱠ︄︉︂: 122,
  time: 0.2,
  t: 3
}, {
  r: [[122, 1]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 111,
  ﱠ︄︉︂: 121,
  time: 0.2,
  t: 3
}, {
  r: [[136, 20], [122, 1]],
  w: 0,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 112,
  ﱠ︄︉︂: 121,
  time: 0.1,
  t: 3
}, {
  r: [[122, 1]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 1,
  id: 113,
  ﱠ︄︉︂: 121,
  time: 1 / 3,
  t: 3
}, {
  r: [[103, 60], [102, 20], [155, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 114,
  ﱠ︄︉︂: 129,
  time: 0.1,
  t: 4
}, {
  r: [[106, 40], [102, 45]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 115,
  ﱠ︄︉︂: 145,
  time: 0.05,
  t: 4
}, {
  r: [[145, 1], [228, 40], [232, 1]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 116,
  ﱠ︄︉︂: 146,
  time: 0.005,
  t: 4
}, {
  r: [[103, 50], [102, 100]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 117,
  ﱠ︄︉︂: 147,
  time: 1 / 90,
  t: 4
}, {
  r: [[102, 60], [105, 120]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 118,
  ﱠ︄︉︂: 148,
  time: 1 / 90,
  t: 4
}, {
  r: [[105, 70], [106, 140]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 119,
  ﱠ︄︉︂: 149,
  time: 1 / 90,
  t: 4
}, {
  r: [[106, 80], [115, 160]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 120,
  ﱠ︄︉︂: 150,
  time: 1 / 90,
  t: 4
}, {
  r: [[115, 90], [196, 180]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 121,
  ﱠ︄︉︂: 151,
  time: 1 / 90,
  t: 4
}, {
  r: [[102, 70]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 122,
  ﱠ︄︉︂: 55,
  time: 0.1,
  t: 0
}, {
  r: [[102, 70], [103, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 123,
  ﱠ︄︉︂: 56,
  time: 0.1,
  t: 0
}, {
  r: [[103, 40], [102, 40]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 124,
  ﱠ︄︉︂: 138,
  time: 0.1,
  t: 4
}, {
  r: [[137, 1], [111, 1]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 125,
  ﱠ︄︉︂: 139,
  time: 1 / 3,
  t: 3
}, {
  r: [[141, 30], [178, 1], [115, 150], [143, 3]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 126,
  ﱠ︄︉︂: 59,
  time: 1 / 120,
  t: 2
}, {
  r: [[59, 1], [180, 1], [196, 150], [144, 2]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 127,
  ﱠ︄︉︂: 60,
  time: 1 / 180,
  t: 2
}, {
  r: [[26, 1], [191, 10], [190, 10], [155, 10]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 128,
  ﱠ︄︉︂: 61,
  time: 1 / 60,
  t: 2
}, {
  r: [[141, 20], [179, 1], [115, 150], [143, 3]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 129,
  ﱠ︄︉︂: 62,
  time: 1 / 120,
  t: 1
}, {
  r: [[62, 1], [181, 1], [196, 150], [144, 2]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 130,
  ﱠ︄︉︂: 63,
  time: 1 / 180,
  t: 1
}, {
  r: [[103, 100], [155, 4]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 131,
  ﱠ︄︉︂: 64,
  time: 0.05,
  t: 1
}, {
  r: [[103, 30]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 132,
  ﱠ︄︉︂: 95,
  time: 0.2,
  t: 1
}, {
  r: [[102, 200], [155, 8], [216, 4], [64, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 133,
  ﱠ︄︉︂: 65,
  time: 0.04,
  t: 1
}, {
  r: [[102, 20], [225, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 134,
  ﱠ︄︉︂: 96,
  time: 0.2,
  t: 1
}, {
  r: [[105, 200], [155, 12], [225, 4], [216, 4], [65, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 135,
  ﱠ︄︉︂: 66,
  time: 1 / 30,
  t: 1
}, {
  r: [[105, 20], [216, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 136,
  ﱠ︄︉︂: 97,
  time: 0.1,
  t: 1
}, {
  r: [[106, 200], [141, 10], [225, 8], [216, 8], [66, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 137,
  ﱠ︄︉︂: 67,
  time: 1 / 35,
  t: 1
}, {
  r: [[106, 10], [216, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 138,
  ﱠ︄︉︂: 98,
  time: 0.1,
  t: 1
}, {
  r: [[115, 200], [141, 10], [216, 8], [226, 8], [67, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 139,
  ﱠ︄︉︂: 68,
  time: 1 / 40,
  t: 1
}, {
  r: [[115, 10], [226, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 140,
  ﱠ︄︉︂: 99,
  time: 1 / 15,
  t: 1
}, {
  r: [[196, 200], [141, 10], [123, 1], [68, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 141,
  ﱠ︄︉︂: 69,
  time: 1 / 45,
  t: 1
}, {
  r: [[196, 10], [226, 1], [197, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 142,
  ﱠ︄︉︂: 100,
  time: 1 / 15,
  t: 1
}, {
  r: [[228, 200], [141, 10], [179, 1], [69, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 143,
  ﱠ︄︉︂: 70,
  time: 0.02,
  t: 1
}, {
  r: [[228, 10], [232, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 144,
  ﱠ︄︉︂: 101,
  time: 0.05,
  t: 1
}, {
  r: [[103, 100]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 145,
  ﱠ︄︉︂: 71,
  time: 0.04,
  t: 1
}, {
  r: [[71, 1], [102, 100], [103, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 146,
  ﱠ︄︉︂: 72,
  time: 1 / 40,
  t: 1
}, {
  r: [[72, 1], [105, 50], [102, 50], [103, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 147,
  ﱠ︄︉︂: 73,
  time: 0.02,
  t: 1
}, {
  r: [[73, 1], [106, 50], [105, 50], [102, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 148,
  ﱠ︄︉︂: 74,
  time: 1 / 70,
  t: 1
}, {
  r: [[74, 1], [115, 50], [106, 50], [105, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 149,
  ﱠ︄︉︂: 75,
  time: 1 / 90,
  t: 1
}, {
  r: [[75, 1], [196, 50], [115, 50], [106, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 150,
  ﱠ︄︉︂: 76,
  time: 1 / 120,
  t: 1
}, {
  r: [[169, 1], [105, 200]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 151,
  ﱠ︄︉︂: 77,
  time: 1 / 60,
  t: 2
}, {
  r: [[170, 1], [105, 200]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 152,
  ﱠ︄︉︂: 78,
  time: 1 / 60,
  t: 2
}, {
  r: [[171, 1], [105, 200], [143, 1]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 153,
  ﱠ︄︉︂: 79,
  time: 1 / 60,
  t: 2
}, {
  r: [[168, 10], [2, 5], [155, 6]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 154,
  ﱠ︄︉︂: 83,
  time: 0.1,
  t: 2
}, {
  r: [[2, 3], [155, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 155,
  ﱠ︄︉︂: 84,
  time: 0.1,
  t: 2
}, {
  r: [[83, 1], [173, 1], [140, 15], [141, 5], [216, 8]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 156,
  ﱠ︄︉︂: 85,
  time: 1 / 60,
  t: 2
}, {
  r: [[84, 1], [172, 1], [140, 10], [141, 5], [216, 8]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 157,
  ﱠ︄︉︂: 86,
  time: 1 / 60,
  t: 2
}, {
  r: [[175, 1]],
  w: 0,
  f: 0,
  ﱟ︃︋︁: 1,
  e: 0,
  id: 158,
  ﱠ︄︉︂: 174,
  time: 0.2,
  t: 0
}, {
  r: [[103, 20], [155, 1]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 159,
  ﱠ︄︉︂: 175,
  time: 0.2,
  t: 0
}, {
  r: [[102, 100], [134, 30]],
  w: 1,
  f: 1,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 160,
  ﱠ︄︉︂: 176,
  time: 0.1,
  t: 4
}, {
  r: [[103, 20]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 161,
  ﱠ︄︉︂: 177,
  time: 0.2,
  t: 4
}, {
  r: [[103, 100], [102, 50], [2, 5], [168, 5], [155, 6]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 162,
  ﱠ︄︉︂: 192,
  time: 0.05,
  t: 4
}, {
  r: [[103, 250], [141, 10], [140, 2], [133, 2]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 163,
  ﱠ︄︉︂: 217,
  time: 0.02,
  t: 4
}, {
  r: [[103, 250], [155, 10], [140, 2], [216, 8]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 164,
  ﱠ︄︉︂: 218,
  time: 0.02,
  t: 4
}, {
  r: [[155, 10], [168, 6], [2, 4], [120, 50]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 165,
  ﱠ︄︉︂: 89,
  time: 0.05,
  t: 4
}, {
  r: [[103, 250], [155, 10], [114, 10], [225, 8]],
  w: 1,
  f: 0,
  ﱟ︃︋︁: 0,
  e: 0,
  id: 166,
  ﱠ︄︉︂: 224,
  time: 0.02,
  t: 4
}];
Qb = 300;
TEXT = {
  ﱟ︄︉︂: Qb++,
  ﱡ︄︉︂: Qb++,
  ﱣ︄︉︂: Qb++,
  ﱢ︄︉︂: Qb++,
  ﱞ︅︉︂: Qb++,
  ﱠ︅︉︂: Qb++,
  ﱟ︅︉︂: Qb++,
  ﱡ︅︉︂: Qb++,
  ﱣ︅︉︂: Qb++,
  ﱢ︅︉︂: Qb++,
  ﱞ︆︉︂: Qb++,
  ﱠ︆︉︂: Qb++,
  EMPTY: Qb++,
  ﱟ︆︉︂: Qb++,
  ﱡ︆︉︂: Qb++,
  ﱣ︆︉︂: Qb++,
  ﱢ︆︉︂: Qb++,
  ﱞ︇︉︂: Qb++,
  ﱠ︇︉︂: Qb++,
  ﱟ︇︉︂: Qb++,
  ﱡ︇︉︂: Qb++,
  ﱣ︇︉︂: Qb++,
  ﱢ︇︉︂: Qb++,
  ﱞ︈︉︂: Qb++,
  ﱠ︈︉︂: Qb++,
  ﱟ︈︉︂: Qb++,
  ﱡ︈︉︂: Qb++,
  ﱣ︈︉︂: Qb++,
  ﱢ︈︉︂: Qb++,
  ﱞ︉︉︂: Qb++,
  ﱠ︉︉︂: Qb++,
  ﱟ︉︉︂: Qb++,
  POINTS: Qb++,
  ﱡ︉︉︂: Qb++,
  ﱣ︉︉︂: Qb++,
  ﱢ︉︉︂: Qb++,
  ﱞ︊︉︂: Qb++,
  ﱠ︊︉︂: Qb++,
  ﱟ︊︉︂: Qb++,
  ﱡ︊︉︂: Qb++,
  ﱣ︊︉︂: Qb++,
  ﱢ︊︉︂: Qb++,
  ﱞ︋︉︂: Qb++,
  ﱠ︋︉︂: Qb++
};
for (var Xb = function () {
    cc[147] = ["Stone Extractor", "Can produce stone with wood", "It takes 10 seconds to drill Stone", "Durability: 2000"];
    cc[148] = ["Gold Extractor", "Can produce gold with wood", "It takes 10 seconds to drill Gold", "Durability: 2000"];
    cc[149] = ["Diamond Extractor", "Can produce diamond with wood", "It takes 10 seconds to drill Diamond", "Durability: 2000"];
    cc[150] = ["Amethyst Extractor", "Can produce amethyst with wood", "It takes 10 seconds to drill Amethyst", "Durability: 2000"];
    cc[151] = ["Reidite Extractor", "Can produce reidite with wood", "It takes 10 seconds to drill Reidite", "Durability: 2000"];
    cc[76] = ["Reidite Shield", "A must for the pros of the getaway", "You can not attack when you use it", "Damage: 6", "Players Defense: 6"];
    cc[75] = ["Amethyst Shield", "Because you know how to run away in style", "You can not attack when you use it", "Damage: 5", "Players Defense: 5"];
    cc[74] = ["Diamond Shield", "Run or attack, you've obviously made your choice.", "You can not attack when you use it", "Damage: 4", "Players Defense: 4"];
    cc[73] = ["Gold Shield", "When it's golden, it's always better.", "You can not attack when you use it", "Damage: 3", "Players Defense: 3"];
    cc[72] = ["Stone Shield", "Protects you a bit more", "You can not attack when you use it", "Damage: 2", "Players Defense: 2"];
    cc[71] = ["Wood Shield", "Protects you a bit", "You can not attack when you use it", "Damage: 1", "Players Defense: 1"];
    cc[56] = ["Machete", "You gather more from mob boxes", "Useless to attack mobs", "Damage against Players: 5"];
    cc[215] = ["Tower", "Allows you to shoot over walls with a bow", "Does not allow to pass through roofs"];
    cc[101] = ["Dragon Arrow", "Must be used with a Dragon Bow", "Damage: 45", "Mobs Damage: 1200", "Building Damage: 45"];
    cc[70] = ["Dragon Bow", "Also called the One-Shot-Monster", "Requiers arrows to be used"];
    cc[100] = ["Reidite Arrow", "Must be used with a Reidite or a Dragon Bow", "Damage: 40", "Mobs Damage: 900", "Building Damage: 40"];
    cc[69] = ["Reidite Bow", "Makes the most terrifying monster cry.", "Requiers any arrows, except dragon arrows, to be used"];
    cc[99] = ["Amethyst Arrow", "Must be used with Amethyst, Reidite or Dragon Bow", "Damage: 35", "Mobs Damage: 600", "Building Damage: 35"];
    cc[68] = ["Amethyst Bow", "It's super efficient!", "Requiers any arrows, except dragon and reidite arrows, to be used"];
    cc[98] = ["Diamond Arrow", "Must be used with Diamond, Amethyst, Reidite or Dragon Bow", "Damage: 30", "Mobs Damage: 300", "Building Damage: 30"];
    cc[67] = ["Diamond Bow", "Like a Robin Wood who would keep the diamonds", "Requiers wood, stone, gold or diamond arrows to be used"];
    cc[97] = ["Gold Arrow", "Must be used with a Bow, except a wooden and stone one", "Damage: 25", "Mobs Damage: 200", "Building Damage: 25"];
    cc[66] = ["Gold Bow", "When it's golden, it's better.", "Requiers wood, stone or gold arrows to be used"];
    cc[96] = ["Stone Arrow", "Must be used with a Bow, except a wooden one", "Damage: 20", "Mobs Damage: 100", "Building Damage: 20"];
    cc[65] = ["Stone Bow", "Like Robin Wood", "Requiers wood and stone arrows to be used"];
    cc[95] = ["Wood Arrow", "Must be used with any bow", "Damage: 15", "Mobs Damage: 20", "Building Damage: 15"];
    cc[64] = ["Wood Bow", "A little bow that does not do many damages.", "Requiers wood arrows to be used"];
    cc[146] = ["Emerald Machine", "Allows to automatically generate score points.", "Be careful, you can only build one.", "Once placed your soul is connected to the machine, if the machine is destroyed, you will die.", "The machine can't be build in the sea", "You earn more points in the desert, than in the lava, than in winter, than in the forest."];
    cc[231] = ["Boar fur", "Hakuna Matata, well, he can no longer say it"];
    cc[234] = ["Mammoth fur", "Soft and warm. Perfect for a hat."];
    cc[226] = ["Vulture Feather", "From a deadly vulture"];
    cc[228] = ["Emerald", "How many golden breads can you get from it?"];
    cc[232] = ["Sand Worm Juice", "I don't want to know how you got this."];
    cc[80] = ["Turban", "Useful to survive in the desert."];
    cc[81] = ["Ninja outfit", "Essential to survive in the desert"];
    cc[82] = ["Pilot Hat", "Take off and land with flying objects much faster."];
    cc[230] = ["Pilot Glasses"];
    cc[219] = ["Tamed Boar", "Fast on lands and slow on water."];
    cc[233] = ["Tamed Baby Mammoth", "Fast on lands and slow on water."];
    cc[220] = ["Tamed Crab Boss", "Fast on lands and water, and slow on winter.", "Gives a +10 damage bonus of the Crab Spear", "when holding a Crab Helmet"];
    cc[221] = ["Tamed Baby Dragon", "You can fly with it.", "Faster than a hawk", "When you are flying,", " you can only hit people who are flying too"];
    cc[222] = ["Tamed Baby Lava Dragon", "You can fly with it.", "Faster than a baby dragon", "When you are flying,", " you can only hit people who are flying too"];
    cc[223] = ["Tamed Hawk", "You can fly with it.", "When you are flying,", " you can only hit people who are flying too"];
    cc[89] = ["Saddle", "Hit a boar with it to tame it."];
    cc[90] = ["Witch Hat", "You're a wizard Starvy!"];
    cc[91] = ["Nimbus 2000", "That's not just a broomstick, Starvy, it's a Nimbus 2000!", "Only works with the witch hat."];
    cc[92] = ["Wand of life", "Soon we must all choose between what is right and what is easy.", "You need the witch hat and firefly to cast spell"];
    cc[93] = ["Death Wand", "The wand of He-Who-Must-Not-Be-Named... Lapa...", "You need the witch hat and firefly to cast spell"];
    cc[94] = ["Firefly", "They make a cute little squeak.", "However, you must tear off his wings to make magical projectiles for use with magic wands."];
    cc[24] = ["Pirate hat", "You are faster with it in a boat", "Warm outside water and in winter"];
    cc[218] = ["Sled", "You are faster with it in the snow"];
    cc[217] = ["Boat", "You are faster with it in the water"];
    cc[224] = ["Plane", "Fly in the forest, ocean and winter", "Can't fly in desert or lava biome", "When you are flying,", " you can only hit people who are flying too"];
    cc[39] = ["Reidite Hammer", "Useful to destroy buildings", "Damage: 6", "Building Damage: 60"];
    cc[216] = ["Penguin Feather", "From a deadly cute penguin."];
    cc[225] = ["Hawk Feather", "From a deadly hawk."];
    cc[227] = ["Cactus", "Food : 20", "Water : 10"];
    cc[205] = ["Aloe Vera", "Allows you to heal a little", "Heal : 30"];
    cc[204] = ["Aloe Vera Seed", "Grows into Aloe Vera"];
    cc[203] = ["Watermelon", "Like a melon, but with water", "Food : 15", "Water : 8"];
    cc[202] = ["Watermelon Seed", "Grows into Watermelon", "Birth: 4min", "Growth: 180s", "Need water: 3min 20s", "Durability: 400", "Lifetime: 8 days"];
    cc[212] = ["Reidite Door", "Noboby can destroy it. Except very reckless", "Damage: 5", "On-Hit Damage: 1", "Durability: 4000"];
    cc[211] = ["Reidite Wall", "Better wall in StarveLand", "Durability: 4000"];
    cc[213] = ["Reidite Spike", "It hurts", "Damage: 60", "On-Hit Damage: 5", "Durability: 3000"];
    cc[214] = ["Reidite Door Spike", "Painful and useful at the same time", "Damage: 35", "On-Hit Damage: 4", "Durability: 2000"];
    cc[32] = ["Reidite Pickaxe", "Can also harvest reidite, better look!", "Damage: 6", "Building Damage: 1"];
    cc[206] = ["Wood Door Spike", "Can be opened or closed by you or your friends", "Damage: 5", "On-Hit Damage: 1", "Durability: 100"];
    cc[207] = ["Stone Door Spike", "A stronger door is more serious", "Damage: 10", "On-Hit Damage: 2", "Durability: 200"];
    cc[208] = ["Gold Door Spike", "Are you rebuilding the \"el dorado?\"", "Damage: 15", "On-Hit Damage: 2", "Durability: 400"];
    cc[209] = ["Diamond Door Spike", "For a shining house", "Damage: 25", "On-Hit Damage: 3", "Durability: 800"];
    cc[210] = ["Amethyst Door Spike", "Is your house a locked safe?", "Damage: 30", "On-Hit Damage: 3", "Durability: 1600"];
    cc[199] = ["Carrot", "Eat it or sell it in exchange for Tomato Seed or Diamond", "Food : 20"];
    cc[201] = ["Tomato", "Eat it or sell it in exchange for Thornbush Seed or Amethyst", "Food : 16"];
    cc[198] = ["Carrot Seed", "Grows into Carrot", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    cc[200] = ["Tomato Seed", "Grows into Tomato", "Birth: 4min", "Growth: 30s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    cc[53] = ["Pitchfork", "Perfect for gathering"];
    cc[54] = ["Golden Pitchfork", "Essential for a real farmer."];
    cc[229] = ["Pitchfork Part", "Shaped by the gods. You'll never be hungry again."];
    cc[Tb.ﱟ︋︉︂] = ["Easter Egg", "Eat it or sell it in exchange for wood or stone", "Food : 12"];
    cc[Tb.ﱡ︋︉︂] = ["Easter Egg", "Eat it or sell it in exchange for gold", "Food : 25"];
    cc[Tb.ﱣ︋︉︂] = ["Easter Egg", "Eat it or sell it in exchange for diamond", "Food : 50"];
    cc[Tb.ﱢ︋︉︂] = ["Easter Egg", "Eat it or sell it in exchange for amethyst", "Food : 75"];
    cc[Tb.ﱞ︌︉︂] = ["Easter Egg", "Eat it or sell it in exchange for reidite", "Food : 100"];
    cc[180] = ["Lava Cube", "You feel an immense power emanating from this cube"];
    cc[181] = ["Lava Orb", "You feel an immense power emanating from this orb"];
    cc[63] = ["Lava Sword", "Don't be too mean with that.", "Damage: 33", "Building Damage: 11"];
    cc[17] = ["Lava Spear", "Doing good or doing evil", "Damage: 24", "Building Damage: 8"];
    cc[144] = ["Lava Heart", "You can feel a strange force.", "A huge power emanates from it.", "We must not find the secret."];
    cc[60] = ["Lava Helmet", "You will conquer the world", "Players Defense: 9", "Animals Defense: 30"];
    cc[34] = ["Reidite Spear", "Really useful against Lava Monsters", "Damage: 22", "Building Damage: 7"];
    cc[19] = ["Reidite Sword", "Really useful against Lava Monsters", "Damage: 30", "Building Damage: 10"];
    cc[197] = ["Flame", "It's hot!"];
    cc[20] = ["Diamond Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 2, Animals Defense: 8"];
    cc[21] = ["Amethyst Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 5, Animals Defense: 13"];
    cc[22] = ["Reidite Protection", "You can survive longer in lava", "Cools down in lava biome", "Players Defense: 6, Animals Defense: 19"];
    cc[196] = ["Reidite", "The ultimate ore"];
    cc[178] = ["Dragon Cube", "You feel a great power emanating from this cube"];
    ec[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    ec[23] = ["The heat makes you suffocate, you can see your skin fall apart. You're charred. The grilled marshmallow has never been so tasty."];
    ec[24] = ["Your vital organs melt inside, fortunately the toxic gases that escape from the lava make you faint and you do not feel the excruciating pain of death."];
    ec[25] = ["The Will-O'-The-Wisp devoured you from the inside with its fiery flames."];
    ec[26] = ["Oh my God, you died in indescribable pain. Even Lapa turned his head not to see this massacre."];
    ec[27] = ["You were trampled by that boar. From now on, your new nickname is \"the doormat\"."];
    ec[28] = ["With a force of 3300 newtons, the shock wave from the closing of the crab king's claw made you explode your heart from the inside. In addition, the crab has eaten you by sharing your remains with its other small crabs. All dance in joy around your corpse by performing a singular dance called the \"crab rave\""];
    ec[29] = ["Even if it is a baby, under the heat of the flames of this cute dragon, you become a delicious dish."];
    ec[30] = ["Under its cute fake looks, the lava baby dismembers you so quickly that you don't have your life flashes before your eyes."];
    ec[31] = ["The hawk slashed both your eyes out. Terrified, you try to escape by crawling and screaming in pain. Unfortunately the hawk catches you and takes you to distant skies that we already know will never see you again."];
    ec[32] = ["Believing you saw an oasis, you dived into this tree that seemed to you to be full of juicy fruit. Unfortunately, these shiny fruits were in fact horribly painful thorns. Now stuck to the cactus, exhausted by the desert, you have fainted forever."];
    ec[33] = ["That vulture had been spying on you for a long time. He was waiting for a moment of fragility from you. Once cornered by this harassing desert, barely able to breathe, the vulture twisted on you and in a flash ripped out your last hope. At your last breath, you could still see the vulture plunge his head into what was left of your body to enjoy your entrails."];
    ec[34] = ["Out of nowhere, the sand worm devours you in a terrifying howl. But why did Lapa bring such a despicable monster to life?"];
    ec[35] = ["Exhausted by so much heat. You would like to cry, but the sand quickly dries your tears. You suffocate, sand enters your mouth, the thumping sound of the sandstorm will be the last thing you will hear... Next time, use a turban or protect yourself under a roof"];
    ec[36] = ["You feel weak, your vision becomes blurry, you can feel the darkness invading your body. Your soul flies away and leaves behind a lifeless body. Your emerald machine has been destroyed."];
    ec[37] = ["You hear \"Avada Kedavra!\" before you turn to ashes."];
    ec[38] = ["You died crushed by an angry baby mammoth."];
    ec[39] = ["You were skewered by a mammoth. In the violence of the animal's charge, your heart was left hanging on the tip of the tusk. You could still see your heart beating in the open air before losing your life crushed by the mammoth's feet for good. Notice that under the pressure of the crushing your eyes have been exorbed and that the penguins use the frozen eyes of the starvers as a balloon to distract themselves."];
    ec[40] = ["The blizzard storm is so intense that your frostbite causes necrosis of all your limbs. Next time protect yourself with a roof or with warmer clothes."];
    cc[190] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    cc[341] = "A sandstorm is approaching in a few seconds.";
    cc[340] = "The sandstorm will soon stop.";
    cc[343] = "A blizzard is approaching in a few seconds.";
    cc[342] = "The blizzard will soon stop.";
    cc[328] = " BACK TO THE GAME";
    cc[329] = " Share on Twitter";
    cc[330] = " Share on Facebook";
    cc[331] = "You can buy items on the shop in the next game with your points";
    cc[332] = "points";
    cc[333] = "Score";
    cc[334] = "Kill";
    cc[335] = "Days survived";
    cc[336] = "Building method: Free. Press G to change";
    cc[337] = "Building method: Grid. Press G to change";
    cc[191] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    cc[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Gives a +10 damages bonus when holding it with", "a Crab Helmet on a Crab King", "Damage: 14", "Building Damage: 4"];
    cc[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 5", "Animals Defense: 19"];
    cc[192] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document[fa]("typequest").innerHTML = "Chrono Quests";
    document[fa]("timeremainingquest").innerHTML = "Time Remaining";
    document[fa]("constraintquest").innerHTML = " Constraints";
    document[fa]("claim_rewards").innerHTML = " Claim rewards";
    document[fa]("rewardquest").innerHTML = " Reward";
    document[fa]("killdragon_1").innerHTML = " Collect 1 dragon heart inside the cave";
    document[fa]("amethyst_2").innerHTML = " Gather 1 amethyst";
    document[fa]("survive20min_3").innerHTML = "Survive without losing life";
    document[fa]("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document[fa]("dont_hit_5").innerHTML = " Be peaceful";
    document[fa]("bread_6").innerHTML = "100 bread in winter, alone, without come back";
    document[fa]("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var c = 0; c < 7; c++) {
      document[fa]("claim_reward_" + c).innerHTML = "CLAIM REWARD!";
    }
    document[fa]("quit_chronoquest").innerHTML = " QUIT";
    cc[7] = ["Hand"];
    cc[134] = ["Dirt", "Dirty!"];
    cc[120] = ["Sand", "I got it in my eyes!"];
    cc[103] = ["Wood", "You can't get enough of it!"];
    cc[102] = ["Stone", "Also called a rock"];
    cc[105] = ["Gold", "Be generous, give it to others"];
    cc[106] = ["Diamond", "What will you make with it?"];
    cc[115] = ["Amethyst", "It's Mauve like Lapa"];
    cc[125] = ["Flour", "Used in cooking"];
    cc[127] = ["Cookie", "A sumptuous grandmother's cookie", "Food: 50"];
    cc[130] = ["A cake", "Dream cake for the gourmets", "Food: 100"];
    cc[110] = ["Raw meat", "You can cook it with a fire", "Causes food poisoning: 10", "Food: 15"];
    cc[111] = ["Cooked meat", "A rare steak, please", "Food: 35"];
    cc[131] = ["Raw fish", "I think it's still alive", "Causes food poisoning: 10", "Food: 18"];
    cc[132] = ["Cooked fish", "With lemon it's perfect", "Food: 35"];
    cc[137] = ["Bread", "An excellent French bread", "It's the currency used in the market", "Food: 15"];
    cc[139] = ["Sandwich", "Tastes like Krabby Patty", "Food: 100"];
    cc[194] = ["Candies", "Only for children!", "Food: 20"];
    cc[193] = ["Sugar cane", "Taste it, it's delicious", "Food: 100"];
    cc[195] = ["Garland", "Perfect decoration for roofs"];
    cc[109] = ["Berries Seed", "Grows into Berry", "Birth: 2min", "Growth: 55s", "Need water: 3min 20s", "Durability: 700", "Lifetime: 8 days"];
    cc[104] = ["Berry", "Berry tasty!", "Food: 10"];
    cc[126] = ["Wheat Seed", "Grows into Wheat", "Birth: 2min", "Growth: 16s", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    cc[128] = ["Wild Wheat", "Turns into Flour when placed in Windmill"];
    cc[182] = ["Pumpkin Seed", "Grows into pumpkin", "Birth: 2min 40s", "Growth: 2min", "Need water: 2min", "Durability: 700", "Lifetime: 8 days"];
    cc[183] = ["Pumpkin", "It reminds me of Halloween", "Food: 30"];
    cc[185] = ["Garlic Seed", "Very dangerous for vampires", "Damage: 20", "Birth: 4min", "Growth: 1min 10s", "Need water: 1min 40s", "Durability: 700", "Lifetime: 8 days"];
    cc[186] = ["Garlic", "Reduces cold", "Food: 14", "Effect: 1"];
    cc[187] = ["Thorn bush Seed", "Can damage your enemies", "Damage: 20", "Birth: 4min", "Growth: 15s", "Need water: 3min", "Durability: 1000", "Lifetime: 8 days"];
    cc[188] = ["Thorn bush", "It stings!"];
    cc[135] = ["Plot", "Seriously, use it", "With this GMO fertilizer your plants", "will growth really faster and need less water", "Durability: 2000"];
    cc[136] = ["Ice", "Useful for making cakes and water"];
    cc[55] = ["Wrench", "To repair doors, walls and spike", "Damage: 2"];
    cc[168] = ["Wolf Fur", "Puppy? But where is Puppy?!"];
    cc[2] = ["Rabbit Fur", "That rabbit was so cute..."];
    cc[172] = ["Pure Fur", "You're a bread factory"];
    cc[173] = ["Dark Fur", "You get ready to do something wrong"];
    cc[140] = ["Winter Fur", "These animals just wanted a hug..."];
    cc[133] = ["Scales", "It smells like fish!"];
    cc[123] = ["Kraken Skin", "Weren't you too scared?"];
    cc[107] = ["Firecamp", "Warm you up!", "Durability: 150", "Lifetime: 2min"];
    cc[112] = ["Big Firecamp", "Warm you up more time!", "Durability: 400", "Lifetime: 6min"];
    cc[108] = ["Workbench", "Very useful to craft all kinds of objects"];
    cc[155] = ["Cord", "Used in crafting Hats and Bag"];
    cc[141] = ["Diamond Cord", "Used in crafting Special Hats"];
    cc[161] = ["Chest", "Allows you to store items", "Durability: 500"];
    cc[57] = ["Wood Sword", "Does that work?", "Damage: 12", "Building Damage: 4"];
    cc[0] = ["Stone Sword", "Be nice to others", "Damage: 19", "Building Damage: 6"];
    cc[5] = ["Gold Sword", "King of the forest", "Damage: 22", "Building Damage: 7"];
    cc[6] = ["Diamond Sword", "You can feel the power", "Damage: 24", "Building Damage: 8"];
    cc[9] = ["Pirate Sword", "Ayyyyy!", "Better range than a normal sword", "Damage: 24", "Building Damage: 8"];
    cc[30] = ["Amethyst Sword", "Mauve is the most beautiful color of the world", "Damage: 27", "Building Damage: 9"];
    cc[62] = ["Dragon Sword", "No mercy!", "Damage: 30", "Building Damage: 10"];
    cc[16] = ["Dragon Spear", "Kill them all!", "Damage: 22", "Building Damage: 7"];
    cc[8] = ["Wood Pickaxe", "Can harvest only stone and wood", "Damage: 1"];
    cc[1] = ["Stone Pickaxe", "Can harvest wood, stone and gold", "Damage: 2"];
    cc[3] = ["Gold Pickaxe", "Can also harvest diamond", "Damage: 3", "Building Damage: 1"];
    cc[4] = ["Diamond Pickaxe", "Can also harvest amethyst", "Damage: 4", "Building Damage: 1"];
    cc[31] = ["Amethyst Pickaxe", "Can also harvest reidite, looks fancy!", "Damage: 5", "Building Damage: 1"];
    cc[35] = ["Stone Hammer", "Useful to destroy buildings", "Doesn't work well on diamond or amethyst", "Damage: 2", "Building Damage: 20"];
    cc[36] = ["Gold Hammer", "Useful to destroy buildings", "Doesn't work well on amethyst", "Damage: 3", "Building Damage: 30"];
    cc[37] = ["Diamond Hammer", "Useful to destroy buildings", "Damage: 4", "Building Damage: 40"];
    cc[38] = ["Amethyst Hammer", "Useful to destroy buildings", "Damage: 5", "Building Damage: 50"];
    cc[45] = ["Super Hammer", "Have you planned to destroy the world?", "Damage: 12", "Building Damage: 70"];
    cc[12] = ["Wood Spear", "Like a wooden stick, but it stings.", "Damage: 10", "Building Damage: 3"];
    cc[13] = ["Stone Spear", "The beginning of evolution!", "Damage: 14", "Building Damage: 4"];
    cc[14] = ["Gold Spear", "Careful, it stings!", "Damage: 15", "Buildings Damage: 5"];
    cc[15] = ["Diamond Spear", "You're ready to kill a dragon", "Damage: 17", "Buildings Damage: 5"];
    cc[33] = ["Amethyst Spear", "Dragons no longer frighten you", "Damage: 18", "Buildings Damage: 6"];
    cc[46] = ["Stone Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 2"];
    cc[50] = ["Gold Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 3", "Buildings Damage: 1"];
    cc[51] = ["Diamond Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 4", "Buildings Damage: 1"];
    cc[52] = ["Amethyst Shovel", "Dig the ground to gather dirt, ice, and sand", "You can also gather minerals", "Damage: 5", "Buildings Damage: 1"];
    cc[58] = ["Wood Helmet", "Better than nothing", "Players Defense: 1", "Animals Defense: 4"];
    cc[25] = ["Stone Helmet", "You're ready for battle!", "Players Defense: 2", "Animals Defense: 8"];
    cc[26] = ["Gold Helmet", "AKA the helmet of the savages", "Players Defense: 4", "Animals Defense: 13"];
    cc[27] = ["Diamond Helmet", "Don't brag too much", "Players Defense: 5", "Animals Defense: 19"];
    cc[43] = ["Amethyst Helmet", "You're no longer afraid of anything", "Players Defense: 6", "Animals Defense: 23"];
    cc[44] = ["Reidite Helmet", "You no longer feel pain", "Players Defense: 7", "Animals Defense: 25"];
    cc[59] = ["Dragon Helmet", "You will conquer the world", "Players Defense: 8", "Animals Defense: 27"];
    cc[23] = ["Explorer hat", "Animals won't pay attention to you", "but don't make noises!", "Warm outside water and in winter", "You also calm down aggressive monsters twice as fast"];
    cc[41] = ["Christmas Hat", "Oh, oh, oh, Merry Christmas", "Warm outside water and in winter"];
    cc[42] = ["Elf Hat", "Don't let yourself be exploited, you little snow elf!", "Warm outside water and in winter"];
    cc[83] = ["Hood", "You're a rogue", "You can steal someone only if", "1) It's night", "2) You're not wearing anything", "3) If you haven't been touched for eight seconds", "4) You are not close a fire", "5) Your target doesn't wear a peasant outfit", "Warm outside water and in winter"];
    cc[10] = ["Earmuffs", "Some kind of little chapka.", "Warm outside water and in winter"];
    cc[11] = ["Chapka", "Also called a coat.", "Warmer outside water and in winter"];
    cc[40] = ["Winter Scarf and Cap", "Very comfortable", "Very Warm"];
    cc[88] = ["Mammoth fur hat", "The best blizzard protection", "Very Warm"];
    cc[84] = ["Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    cc[85] = ["Winter Hood", "You can steal someone only if", "- It's night", "- You're not wearing anything", "- If you haven't been touched for four seconds", "- You are not close a fire", "- Your target doesn't wear a winter peasant outfit", "Warm outside water and in winter"];
    cc[86] = ["Winter Peasant", "Your plants grow faster", "Warm outside water and in winter"];
    cc[48] = ["Diving Mask", "You are fast in the water", "Warm in water", "Players Defense: 2, Animals Defense: 8"];
    cc[47] = ["Super Diving Mask", "You are very fast in the water", "Warm in water", "Players Defense: 4, Animals Defense: 16"];
    cc[179] = ["Dragon Orb", "You feel a great power emanating from this orb"];
    cc[143] = ["Dragon Heart", "Turns you into a Ghost on Death!", "You are a ghost for 60 seconds", "Find a resurrection stone"];
    cc[169] = ["Green Gemstone", "You didn't cheat, promise?"];
    cc[170] = ["Orange Gemstone", "Only a real pirate can find it!"];
    cc[171] = ["Blue Gemstone", "For too kind people"];
    cc[77] = ["Green Crown", "You heal yourself very quickly", "Heal over time: 40", "Players Defense: 4, Animals Defense: 16"];
    cc[78] = ["Orange Crown", "You suddenly feel very lucky", "Players Defense: 4, Animals Defense: 16"];
    cc[79] = ["Blue Crown", "Once you're dead, you'll become a ghost", "Though you will lose your weapon", "Players Defense: 4, Animals Defense: 16"];
    cc[174] = ["Bucket", "Useful to fill a well", "One bucket is equivalent to twelve bottles"];
    cc[175] = ["Empty Bucket", "You need to fill this bucket near a water source"];
    cc[121] = ["Bottle", "Allows you to drink water anywhere", "Water: 50"];
    cc[122] = ["Empty Bottle", "You can fill this bottle near a water source"];
    cc[124] = ["Empty Watering Can", "You must fill it with a water source to use it"];
    cc[49] = ["Watering Can", "Allows watering of plants", "Damage: 1"];
    cc[29] = ["Bag", "More space for your items!"];
    cc[114] = ["Paper", "Used in book-crafting"];
    cc[28] = ["Book", "Allows to considerably reduce the time of crafting", "Must be wearing to work", "Damage: 1"];
    cc[189] = ["Bandage", "Recover more quickly your life", "Heal over time: 30", "Effect: 5"];
    cc[142] = ["Lock", "Allow you to lock your chest"];
    cc[152] = ["Lock-pick", "Allows you to unlock one chest"];
    cc[153] = ["Totem", "Allow you to create a team", "Share doors and chests", "Harmful building won't hurt your friend"];
    cc[119] = ["Bridge", "Very useful on water", "It allows you to drink without drowning", "Walk faster in water"];
    cc[177] = ["Sign", "Leave a message to others", "Durability: 200"];
    cc[184] = ["Roof", "Hides you a little and warms you!", "Also protects you against sand storm"];
    cc[176] = ["Well", "Allows bottle filling", "Durability: 1000"];
    cc[156] = ["Wood Wall", "It's just a wall", "Durability: 1000"];
    cc[157] = ["Stone Wall", "It's a little more serious.", "Durability: 1500"];
    cc[158] = ["Gold Wall", "Gold on your walls? It's kind of flashy.", "Durability: 2000"];
    cc[159] = ["Diamond Wall", "So shiny, watch your eyes", "Durability: 2500"];
    cc[116] = ["Amethyst Wall", "You must be very scared to go out!", "Durability: 3500"];
    cc[154] = ["Wood Spike", "Can damage your enemies", "Damage: 10, On-Hit Damage: 2", "Durability: 150"];
    cc[162] = ["Stone Spike", "I wouldn't want to be your enemy.", "Damage: 20", "On-Hit Damage: 3", "Durability: 300"];
    cc[163] = ["Gold Spike", "You're so cruel.", "Damage: 30", "On-Hit Damage: 3", "Durability: 600"];
    cc[164] = ["Diamond Spike", "You don't like to have company.", "Damage: 40", "On-Hit Damage: 4", "Durability: 1200"];
    cc[117] = ["Amethyst Spike", "What the hell did your neighbors do to you?", "Damage: 50", "On-Hit Damage: 4", "Durability: 2400"];
    cc[160] = ["Wood Door", "Can be opened or closed by you or your friends", "Durability: 1000"];
    cc[165] = ["Stone Door", "A stronger door is more serious", "Durability: 1500"];
    cc[166] = ["Gold Door", "Are you rebuilding the \"el dorado?\"", "Durability: 2000"];
    cc[167] = ["Diamond Door", "For a shining house", "Durability: 2500"];
    cc[118] = ["Amethyst Door", "Is your house a locked safe?", "Durability: 3500"];
    cc[113] = ["Furnace", "Warms you up", "It consumes wood all 5 seconds", "Durability: 1000"];
    cc[129] = ["Windmill", "Can produce flour from wheat", "It takes 5 seconds to make Flour", "Returns points when working", "Durability: 2000"];
    cc[138] = ["Bread Oven", "Allows bread to be made from flour", "It takes 10 seconds to make bread", "Returns points when working", "Durability: 2000"];
    cc[145] = ["Resurrection stone", "It's magic", "Resurrect you if you're a ghost", "You will lose your weapon", "Durability: 200"];
    cc[300] = "You cannot join this server";
    cc[301] = "Kicked: ";
    cc[302] = "Your key is already used by someone else";
    cc[303] = "Your key is wrong";
    cc[304] = "You have an old version, you need to clear your cache";
    cc[338] = "Your client version is too recent for this server. The server is being updated";
    cc[339] = "Wrong password! To enter a password: https://starve.io/?password=...";
    cc[305] = "There are no more new resources";
    cc[306] = "You survived 1 day";
    cc[307] = "You survived ";
    cc[308] = " days";
    cc[309] = "You are dead ;-;";
    cc[310] = "Server cannot find spawn location! Spam the play button!";
    cc[311] = "Server is full! Spam the play button!";
    cc[312] = "Resource is empty";
    cc[313] = "Inventory is full (right-click to empty items)";
    cc[314] = " is dead";
    cc[315] = "This is not the right tool";
    cc[316] = "You joined a team";
    cc[317] = "You are dead";
    cc[318] = " joined the team";
    cc[319] = "Your team was destroyed";
    cc[320] = "You left the team";
    cc[321] = " left the team";
    cc[322] = "Someone stole your token :>";
    cc[323] = "Choose a server";
    cc[324] = "players";
    cc[325] = "total players";
    cc[326] = "players on this mode";
    cc[327] = "Coming soon...";
    document[fa]("nickname_input").placeholder = "Nickname";
    ec[0] = ["You were killed for no reason"];
    ec[1] = ["You starved to death, as the name of the game implies"];
    ec[2] = ["You froze to death. So sad", "You got hypothermia. Next time, try sitting by a fire instead."];
    ec[3] = ["A player killed you whilst telling you to 'git gud.'", "You got murdered by a player. Don't worry, that player will die too, eventually."];
    ec[4] = ["You stayed too close to the fire and burnt to death. Bad idea.", "You died to a fire. Fires hurt you. Go write a story about it."];
    ec[5] = ["Your body will become a nest for spider eggs", "A spider killed you. At least it wasn't a rabbit."];
    ec[6] = ["The wolf won't starve anymore after eating you", "They aren't dogs. Wolves don't like being pet."];
    ec[7] = ["The fox was too quick for you", "The fox turned you into a box. Since when do animals have magic powers?"];
    ec[8] = ["The bear only wanted a hug.", "The bear was too much to bare. I'm not sorry."];
    ec[9] = ["You were burnt to a crisp by a dragon. So sad.", "You got flattened by a dragon. Getting squished is a horrible way to die."];
    ec[10] = ["You jumped into a spike wall. Not a good idea...", "You got killed by a spike wall. Most people are sensible enough not to touch pointy things."];
    ec[11] = ["Even the ghost can die.", "You failed to be resurrected. This is a game, so you go to life after you die, so..."];
    ec[12] = ["A bacterium from your raw food killed you. This game is definitely too hard.", "You killed the raw food. It killed you too."];
    ec[13] = ["You died of thirst. Better drink your own piss."];
    ec[14] = ["Did you know starver's mouths are always below water when swimming? Now you know."];
    ec[15] = ["Do not worry, the piranha finds you tasty.", "Fun fact: Pirahnas eat people. Including you."];
    ec[16] = ["LapaMauve does not plan that you can kill the kraken", "A kraken krak-ed your skull."];
    ec[17] = ["Your skin's falling apart, the sun killed you."];
    ec[18] = ["Garlic stored in your pockets boiled your brain."];
    ec[19] = ["As a vampire, don't stand near the garlic cloves."];
    ec[20] = ["You ate garlic as a vampire, what did you expect?"];
    ec[21] = ["Your body wraps itself in thornbushes. As you try to escape, your skin comes off and your heart stops beating."];
    ZOMBIE_GRUMBLE = "Uuunnnggg";
    ZOMBIE_GRUMBLES = ["Uuunnnggg... I'm starving", "Need your brain Uuunnnggg...", "Fresh meat here... Uuunnnggg", "Uuunnnggg... You are tasty", "Uuunnnggg...", "Eat... uuunnnggg...", "I can smell blood... Uuunnnggg"];
  }, Yb = function () {
    cc[178] = ["You feel a great power emanating from this orb"];
    ec[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    cc[190] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    cc[328] = " BACK TO THE GAME";
    cc[329] = " Share on Twitter";
    cc[330] = " Share on Facebook";
    cc[331] = "You can buy items on the shop in the next game with your points";
    cc[332] = "points";
    cc[333] = "Score";
    cc[334] = "Kill";
    cc[335] = "Days survived";
    cc[336] = "Building method: Free. Press G to change";
    cc[337] = "Building method: Grid. Press G to change";
    cc[191] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    cc[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    cc[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    cc[192] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document[fa]("typequest").innerHTML = "Chrono Quests";
    document[fa]("timeremainingquest").innerHTML = "Time Remaining";
    document[fa]("constraintquest").innerHTML = " Constraints";
    document[fa]("claim_rewards").innerHTML = " Claim rewards";
    document[fa]("rewardquest").innerHTML = " Reward";
    document[fa]("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document[fa]("amethyst_2").innerHTML = " Gather 1 amethyst";
    document[fa]("survive20min_3").innerHTML = "Survive without losing life";
    document[fa]("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document[fa]("dont_hit_5").innerHTML = " Be peaceful";
    document[fa]("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document[fa]("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var c = 0; c < 7; c++) {
      document[fa]("claim_reward_" + c).innerHTML = "CLAIM REWARD!";
    }
    document[fa]("quit_chronoquest").innerHTML = " QUIT";
    cc[7] = ["Рука"];
    cc[134] = ["Земля", "Грязно!"];
    cc[120] = ["Песок", "Он в моих глазах!"];
    cc[103] = ["Дерево", "Постоянно нужно больше!"];
    cc[102] = ["Камень", "Твердый"];
    cc[105] = ["Золото", "Будьте щедры, давайте его другим"];
    cc[106] = ["Алмаз", "Что вы создадите с помощью него?"];
    cc[115] = ["Аметист", "Он сиреневый, как Lapa"];
    cc[125] = ["Мука", "Используется в готовке"];
    cc[127] = ["Печенье", "Превосходное бабушкино печенье", "Еда: 50"];
    cc[130] = ["Торт", "Торт мечты для гурманов", "Еда: 100"];
    cc[110] = ["Сырое Мясо", "Ты можешь пожарить его с помощью огня", "Вызывает отравление: 10", "Еда: 15"];
    cc[111] = ["Жареное Мясо", "Превосходный стейк, пожалуйста", "Еда: 35"];
    cc[131] = ["Сырая Рыба", "Я думаю она всё ещё жива", "Вызывает отравление: 10", "Еда: 18"];
    cc[132] = ["Жареная рыба", "С лимоном она прекрасна", "Еда: 35"];
    cc[137] = ["Хлеб", "Прекрасный французский хлеб", "Это валюта, используемая на рынке", "Еда: 15"];
    cc[139] = ["Бутерброд", "На вкус как Крабсбургер", "Еда: 100"];
    cc[194] = ["Конфеты", "Только для детей!", "Еда: 20"];
    cc[193] = ["Сахарная Трость", "Попробуйте это, это вкусно", "Еда: 100"];
    cc[195] = ["Гирлянда", "Прекрасная декорация для крыши"];
    cc[109] = ["Семя Ягоды", "Вырастает в ягоды", "Рождение: 2мин", "Рост: 55сек", "Нужна вода: 3мин 20сек", "Прочность: 700", "Продолжительность: 8 дней"];
    cc[104] = ["Ягода", "Ягода вкусная!", "Еда: 10"];
    cc[126] = ["Пшеничное Семя", "Вырастает в пшеницу", "Рождение: 2мин", "Рост: 16сек", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    cc[128] = ["Дикая Пшеница", "Перемалывается в муку, когда помещается в мельницу"];
    cc[182] = ["Семена Тыквы", "Вырастает в тыкву", "Рождение: 2мин 40сек", "Рост: 2мин", "Нужна вода: 2мин", "Прочность: 700", "Продолжительность: 8 дней"];
    cc[183] = ["Тыква", "Это напоминает мне Хеллоуин", "Еда: 30"];
    cc[185] = ["Семена Чеснока", "Очень опасно для вампиров", "Урон: 20", "Рождение: 4мин", "Рост: 4 мин", "Нужна вода: 1мин 40сек", "Прочность: 700", "Продолжительность: 8 дней"];
    cc[186] = ["Чеснок", "Лечит и снижает получаемый холод", "Еда: 14", "Лечит: 30", "Эффект: 1"];
    cc[187] = ["Семена Колючего Куста", "Может нанести урон врагам", "Урон: 20", "Рождение: 4мин", "Рост: 15сек", "Нужна вода: 3мин", "Прочность: 1000", "Продолжительность: 8 дней"];
    cc[188] = ["Колючий Куст", "Это больно!"];
    cc[135] = ["Грядка", "Серьезно, используйте это.", "С этим ГМО удобрением ваши растения", "будут расти быстрее и потребуют меньше воды", "Прочность: 2000"];
    cc[136] = ["Лёд", "Используется для изготовления тортов и воды"];
    cc[55] = ["Гаечный Ключ", "Для починки дверей, стен, колючек", "Урон: 2"];
    cc[168] = ["Шкура Волка", "Щенок? Но где же Щенок?!"];
    cc[2] = ["Шкура Зайца", "Этот кролик был таким милым..."];
    cc[172] = ["Чистая Шкура", "Вы - фабрика хлеба"];
    cc[173] = ["Чёрная Шкура", "Вы готовы делать зло."];
    cc[140] = ["Зимняя Шкура", "Эти животные просто хотели обнять тебя..."];
    cc[133] = ["Чешуя", "Она пахнет рыбой!"];
    cc[123] = ["Шкура Кракена", "Вы не испугались?"];
    cc[107] = ["Костёр", "Согрейтесь!", "Прочность: 150", "Продолжительность: 2мин"];
    cc[112] = ["Большой Костёр", "Согрейтесь больше!", "Прочность: 400", "Продолжительность: 6мин"];
    cc[108] = ["Верстак", "Необходим для создания многих предметов"];
    cc[155] = ["Нить", "Используется в изготовлении Шапок и Рюкзака"];
    cc[141] = ["Алмазная Нить", "Используется в изготовлении специальных шапок"];
    cc[161] = ["Сундук", "Позволяет хранить предметы", "Прочность: 500"];
    cc[57] = ["Деревянный Меч", "Это работает?", "Урон: 12", "Урон по строениям: 4"];
    cc[0] = ["Каменный Меч", "Будьте добры к другим", "Урон: 19", "Урон по строениям: 6"];
    cc[5] = ["Золотой Меч", "Король леса", "Урон: 22", "Урон по строениям: 7"];
    cc[6] = ["Алмазный Меч", "Ты можешь почувствовать силу", "Урон: 24", "Урон по строениям: 8"];
    cc[9] = ["Пиратский Меч", "Aррррр!", "Дальность атаки больше чем у нормального меча", "Урон: 24", "Урон по строениям: 8"];
    cc[30] = ["Аметистовый Меч", "Сиреневый - самый красивый цвет в мире", "Урон: 27", "Урон по строениям: 9"];
    cc[62] = ["Меч Дракона", "Без пощады!", "Урон: 30", "Урон по строениям: 10"];
    cc[16] = ["Копьё Дракона", "Убивай всех!", "Урон: 22", "Урон по строениям: 6"];
    cc[8] = ["Деревянная Кирка", "Может добывать только дерево и камень", "Урон: 1"];
    cc[1] = ["Каменная Кирка", "Может добывать дерево, камень и золото", "Урон: 2"];
    cc[3] = ["Золотая Кирка", "Также может добывать алмазы", "Урон: 3", "Урон по строениям: 1"];
    cc[4] = ["Алмазная Кирка", "Можно добывать всё", "Урон: 4", "Урон по строениям: 1"];
    cc[31] = ["Аметистовая Кирка", "Можно добывать всё, ещё и выглядит красиво!", "Урон: 5", "Урон по строениям: 1"];
    cc[35] = ["Каменный молот", "Используется для разрушения зданий", "Плохо разрушает алмазные и аметистовые здания", "Урон: 2", "Урон по строениям: 20"];
    cc[36] = ["Золотой Молот", "Используется для разрушения зданий", "Плохо разрушает аметистовые здания", "Урон: 3", "Урон по строениям: 30"];
    cc[37] = ["Алмазный Молот", "Используется для разрушения зданий", "Урон: 4", "Урон по строениям: 40"];
    cc[38] = ["Аметистовый Молот", "Используется для разрушения зданий", "Урон: 5", "Урон по строениям: 50"];
    cc[45] = ["Супер Молот", "У вас есть планы разрушить мир?", "Урон: 12", "Урон по строениям: 70"];
    cc[12] = ["Деревянное Копьё", "Выглядит как деревянная палочка, но делает больно.", "Урон: 10", "Урон по строениям: 2"];
    cc[13] = ["Каменное Копьё", "Начало эволюции!", "Урон: 14", "Урон по строениям: 4"];
    cc[14] = ["Золотое Копьё", "Осторожно, это больно!", "Урон: 15", "Урон по строениям: 5"];
    cc[15] = ["Алмазное Копьё", "Вы готовы убивать дракона.", "Урон: 17", "Урон по строениям: 5"];
    cc[33] = ["Аметистовое Копьё", "Драконы больше не пугают вас", "Урон: 18", "Урон по строениям: 6"];
    cc[46] = ["Каменная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 2"];
    cc[50] = ["Золотая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 3", "Урон по строениям: 1"];
    cc[51] = ["Алмазная Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 4", "Урон по строениям: 1"];
    cc[52] = ["Аметистовая Лопата", "Копайте землю, чтобы получить грязь, лед и песок", "Так же вы можете получить ресурсы", "Урон: 5", "Урон по стреониям: 1"];
    cc[58] = ["Деревянный Шлем", "Лучше чем ничего", "Защита от игроков: 1", "Защита от животных: 4"];
    cc[25] = ["Каменный Шлем", "Вы готовы к битве!", "Защита от игроков: 2", "Защита от животных: 8"];
    cc[26] = ["Золотой Шлем", "Также известен как шлем жестоких людей", "Защита от игроков: 4", "Защита от животных: 13"];
    cc[27] = ["Алмазный Шлем", "Не слишком хвастайтесь", "Защита от игроков: 5", "Защита от животных: 19"];
    cc[43] = ["Аметистовый Шлем", "Ты больше ничего не боишься", "Защита от игроков: 6", "Защита от животных: 23"];
    cc[59] = ["Шлем Дракона", "Ты покоришь мир", "Защита от игроков: 8", "Защита от животных: 27"];
    cc[23] = ["Шапка Исследователя", "Животные не обращают на вас внимания", "но не шумите!", "Защищает от холода вне воды."];
    cc[41] = ["Рождественская Шапка", "Ох-хо-хо, Счастливого Рождества", "Защищает от холода вне воды."];
    cc[42] = ["Шапка Эльфа", "Не позволяйте себе эксплуатироваться, ведь вы маленький снежный эльф!", "Защищает от холода вне воды."];
    cc[83] = ["Капюшон", "Вы разбойник", "Вы можете украсть что-то, если", "1) Ночь", "2) Вы ничего не носите", "3)Если вас не тронули в течение восьми секунд", "4) Вы не рядом с огнём", "5) Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    cc[10] = ["Теплые Наушники", "Какая-то маленькая шапка.", "Защищает от холода вне воды."];
    cc[11] = ["Шапка", "Так же называется пальтом.", "Защищает от холода вне воды."];
    cc[40] = ["Зимний Шарф и Шапка", "Очень комфортно", "Очень тепло"];
    cc[84] = ["Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    cc[85] = ["Зимний Капюшон", "Вы можете украсть что-то, если", "- Ночь", "- Вы ничего не носите", "- Если вас не тронули в течение четырёх секунд", "- Вы не рядом с огнём", "- Вы не можете ничего украсть у крестьянской туники", "Защищает от холода вне воды."];
    cc[86] = ["Зимняя Крестьянская Туника", "Ваши растения растут быстрее", "Защищает от холода вне воды."];
    cc[48] = ["Акваланг", "Вы быстрее передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 2, Защита от животных: 8"];
    cc[47] = ["Супер Акваланг", "Вы очень быстро передвигаетесь по воде", "Тепло в воде", "Защита от игроков: 4, Защита от животных: 16"];
    cc[179] = ["Шар Дракона", "Даётся за квест"];
    cc[143] = ["Сердце Дракона", "Превращает вас в призрака после смерти!", "Вы призрак на 60 секунд", "Найдите камень воскрешения"];
    cc[169] = ["Зелёный Драгоценный Камень", "Вы без читов, правильно?"];
    cc[170] = ["Оранжевый Драгоценный Камень", "Только настоящий пират найдёт это!"];
    cc[171] = ["Синий Драгоценный Камень", "Для очень добрых людей"];
    cc[77] = ["Зеленая корона", "Вы лечите себя очень быстро", "Лечит: 40", "Защита от игроков: 4, Защита от животных: 16"];
    cc[78] = ["Оранжевая Корона", "Вам очень повезло", "Защита от игроков: 4, Защита от животных: 16"];
    cc[79] = ["Синяя Корона", "Как только вы умрёте, вы станете призраком", "Но вы потеряете своё оружие", "Защита от игроков: 4, Защита от животных: 16"];
    cc[174] = ["Ведро", "Используется для заполнения колодца", "Одно ведро равняется двенадцати бутылкам"];
    cc[175] = ["Пустое ведро", "Вам надо заполнить это ведро возле воды"];
    cc[121] = ["Бутылка", "Позволяет пить воду в любом месте", "Вода: 50"];
    cc[122] = ["Пустая бутылка", "Вы можете заполнить бутылку возле воды"];
    cc[124] = ["Пустая Лейка", "Вы можете заполнить лейку возле воды"];
    cc[49] = ["Лейка", "Позволяет поливать растения", "Урон: 1"];
    cc[29] = ["Рюкзак", "Больше места для ваших предметов!"];
    cc[114] = ["Бумага", "Используется при создании книги"];
    cc[28] = ["Книга", "Сокращает время изготовления предметов", "Должно быть одето для работы", "Урон: 1"];
    cc[189] = ["Бинт", "Восстанавливает ваше здоровье быстрее", "Лечит: 30", "Эффект: 5"];
    cc[142] = ["Замок", "Позволяет вам закрыть ваш сундук"];
    cc[152] = ["Ключ", "Даёт вам открыть один запертый сундук"];
    cc[153] = ["Тотем", "Позволяет вам создать команду", "Совместное использование дверей и сундуков", "Вредное здание не повредит вашего друга"];
    cc[119] = ["Мост", "Очень полезно на воде", "Позволяет вам пить без потери воздуха", "Передвигаетесь быстрее по воде"];
    cc[177] = ["Табличка", "Оставьте сообщение другим", "Прочность: 200"];
    cc[184] = ["Крыша", "Немного скрывает вас и согревает!"];
    cc[176] = ["Колодец", "Позволяет заполнить бутылку", "Прочность: 1000"];
    cc[156] = ["Деревянная Стена", "Это просто стена", "Прочность: 1000"];
    cc[157] = ["Каменная Стена", "Это немного посерьезнее.", "Прочность: 1500"];
    cc[158] = ["Золотая Стена", "Золото на ваших стенах? Она ослепляет.", "Прочность: 2000"];
    cc[159] = ["Алмазная Стена", "Очень блестит, следите за вашими глазами", "Прочность: 2500"];
    cc[116] = ["Аметистовая стена", "Вы должны быть слишком напуганы, чтобы уйти!", "Прочность: 3500"];
    cc[154] = ["Деревянная Стена с Шипами", "Может наносить урон врагам", "Урон: 10, Урон за один удар: 2", "Прочность: 150"];
    cc[162] = ["Каменная Стена с Шипами", "Я не хотел бы быть вашим врагом", "Урон: 20", "Урон за один удар: 3", "Прочность: 300"];
    cc[163] = ["Золотая Стена с Шипами", "Вы очень жестоки.", "Урон: 30", "Урон за один удар: 3", "Прочность: 600"];
    cc[164] = ["Алмазная Стена с Шипами", "Вам не нравится иметь компанию.", "Урон: 40", "Урон за один удар: 4", "Прочность: 1200"];
    cc[117] = ["Аметистовая Стена с Шипами", "Какого черта, что ваши соседи сделали с вами?", "Урон: 50", "Урон за один удар: 4", "Прочность: 2400"];
    cc[160] = ["Деревянная Дверь", "Может быть открыта и закрыта вами или друзьями", "Прочность: 1000"];
    cc[165] = ["Каменная Дверь", "Более серьезная и сильная дверь", "Прочность: 1500"];
    cc[166] = ["Золотая Дверь", "Вы перестраиваете \"Эль Дорадо?\"", "Прочность: 2000"];
    cc[167] = ["Алмазная Дверь", "Для роскошного дома", "Прочность: 2500"];
    cc[118] = ["Аметистовая Дверь", "Ваш дом в безопасности?", "Прочность: 3000"];
    cc[113] = ["Печь", "Согревает", "Тратит дерево каждые 5 секунд", "Прочность: 1000"];
    cc[129] = ["Мельница", "Может сделать муку из пшеницы", "Требует 5 секунд для получения муки", "Даёт очки при работе", "Прочность: 2000"];
    cc[138] = ["Хлебная Печь", "Позволяет готовить хлеб из муки", "Требует 10 секунд для получения хлеба", "Даёт очки при работе", "Прочность: 2000"];
    cc[145] = ["Камень Воскрешения", "Это магия", "Воскрешает вас, если вы призрак", "Вы потеряете своё оружие", "Прочность: 200"];
    cc[300] = "Вы не можете зайти на этот сервер";
    cc[301] = "Выгнаны: ";
    cc[302] = "Ваш ключ уже используется кем-то";
    cc[303] = "Ваш ключ неправильный";
    cc[304] = "У вас старая версия, вам нужно очистить кеш";
    cc[305] = "Ресурсов больше нет";
    cc[306] = "Вы выжили 1 день";
    cc[307] = "Вы выжили ";
    cc[308] = " дней";
    cc[309] = "Вы умерли ;-;";
    cc[310] = "Сервер не может найти точку спавна! Спамьте кнопку играть!";
    cc[311] = "Сервер заполнен! Спамьте кнопку играть!";
    cc[312] = "Ресурсы закончились";
    cc[313] = "Инвентарь заполнен (правая кнопка мыши для удаления предметов)";
    cc[314] = " умер";
    cc[315] = "Это не тот инструмент";
    cc[316] = "Вы вошли в команду";
    cc[317] = "Вы умерли";
    cc[318] = " вошёл в команду";
    cc[319] = "Ваша команда была разрушена";
    cc[320] = "Вы покинули команду";
    cc[321] = " покинул команду";
    cc[322] = "Кто-то использует ваш токен :>";
    cc[323] = "Выберите сервер";
    cc[324] = "игроков";
    cc[325] = "игроков всего";
    cc[326] = "игроков в этом режиме";
    cc[327] = "Скоро...";
    document[fa]("nickname_input").placeholder = "Имя";
    ec[0] = ["Вы были убиты без причины"];
    ec[1] = ["Вы умерли от голода, как название игры подразумевает это"];
    ec[2] = ["Вы замерзли до смерти. Так грустно", "У вас гипотермия. В следующий раз, постарайтесь быть рядом с огнём."];
    ec[3] = ["Игрок убил тебя и сказал 'стань лучше.'", "Ты был убит игроком. Не волнуйся, этот игрок тоже умрёт, в конце концов."];
    ec[4] = ["Вы стояли слишком близко к огню и сгорели. Плохая идея.", "Ты умер от огня, он причинил вам боль. Напишите историю насчёт этого."];
    ec[5] = ["Ваше тело станет гнездом для яиц паука", "Паук убил вас. По крайней мере это был не кролик."];
    ec[6] = ["Волк больше не будет голодать после того, как наелся вами", "Они не собаки. Волки не любят ласкаться."];
    ec[7] = ["Лиса была слишком быстрой для вас", "Лиса превратила тебя в ящик. С каких пор животные обладают магическими способностями?"];
    ec[8] = ["Медведь просто хотел обнять тебя.", "Медведь был слишком грустным. Мне не жаль."];
    ec[9] = ["Вы были сожжены драконом. Так грустно.", "Вы были сплющены драконом. Быть раздавленным - это ужасный способ умереть."];
    ec[10] = ["Вы прыгнули в стену с шипами. Плохая идея...", "Вы были убиты стеной с шипами. Большинство людей достаточно разумны, чтобы не касаться острых вещей."];
    ec[11] = ["Даже призрак может умереть.", "Вы не смогли воскреснуть. Это игра, и вы можете возвращаться к жизни после смерти, так что..."];
    ec[12] = ["Бактерия из вашей сырой пищи убила вас. Эта игра безусловно сложна.", "Вы убили сырую пищу. Она тоже тебя убила."];
    ec[13] = ["Вы умерли от жажды. Лучше пить собственную мочу."];
    ec[14] = ["Знаешь ли ты, что у голодающих рот всегда под водой, когда они плавают? Теперь ты знаешь."];
    ec[15] = ["Не волнуйся, пиранья сочла тебя вкусным.", "Веселый факт: Пираньи едят людей. В том числе тебя."];
    ec[16] = ["LapaMauve не планировал, что ты убьёшь кракена", "Крак! Кракен сломал твой череп."];
    ec[17] = ["Твоя кожа разваливается, солнце убило тебя"];
    ec[18] = ["Чеснок, хранящийся в твоих карманах сварил твой мозг."];
    ec[19] = ["Не стоит стоять рядом с чесночным зубком, когда вы вампир."];
    ec[20] = ["Вы вампир, Вы ели чеснок, чего вы ожидали?"];
    ec[21] = ["Ваше тело застревает в шипах, когда вы пытаетесь убежать, ваша кожа отрывается, и ваше сердце перестает биться."];
    ZOMBIE_GRUMBLE = "Uuunnnggg";
    ZOMBIE_GRUMBLES = ["Uuunnnggg... Я голоден", "Нужны твои мозги Uuunnnggg...", "Свежее мясо здесь... Uuunnnggg", "Uuunnnggg... Ты вкусный", "Uuunnnggg...", "Еда… Uuunnnggg...", "Я чувствую запах крови... Uuunnnggg"];
  }, Zb = function () {
    cc[178] = ["You feel a great power emanating from this orb"];
    ec[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    cc[190] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    cc[328] = " BACK TO THE GAME";
    cc[329] = " Share on Twitter";
    cc[330] = " Share on Facebook";
    cc[331] = "You can buy items on the shop in the next game with your points";
    cc[332] = "points";
    cc[333] = "Score";
    cc[334] = "Kill";
    cc[335] = "Days survived";
    cc[336] = "Building method: Free. Press G to change";
    cc[337] = "Building method: Grid. Press G to change";
    cc[191] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    cc[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    cc[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    cc[192] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document[fa]("typequest").innerHTML = "Chrono Quests";
    document[fa]("timeremainingquest").innerHTML = "Time Remaining";
    document[fa]("constraintquest").innerHTML = " Constraints";
    document[fa]("claim_rewards").innerHTML = " Claim rewards";
    document[fa]("rewardquest").innerHTML = " Reward";
    document[fa]("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document[fa]("amethyst_2").innerHTML = " Gather 1 amethyst";
    document[fa]("survive20min_3").innerHTML = "Survive without losing life";
    document[fa]("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document[fa]("dont_hit_5").innerHTML = " Be peaceful";
    document[fa]("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document[fa]("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var c = 0; c < 7; c++) {
      document[fa]("claim_reward_" + c).innerHTML = "CLAIM REWARD!";
    }
    document[fa]("quit_chronoquest").innerHTML = " QUIT";
    cc[7] = ["mão"];
    cc[134] = ["terra", "está sujo!"];
    cc[120] = ["areia", "entrou nos meus olhos!"];
    cc[103] = ["madeira", "você não pode pegar o suficiente disso!"];
    cc[102] = ["pedra", "também chamado rocha"];
    cc[105] = ["ouro", "seja generoso, dê para outros"];
    cc[106] = ["diamante", "o que você irá fazer com isso?"];
    cc[115] = ["ametista", "é mauve como lapa"];
    cc[125] = ["farinha", "usada na cozinha"];
    cc[127] = ["biscoito", "biscoito da vovó", "comida: 50"];
    cc[130] = ["bolo", "bolo dos sonhos para gourmets", "comida: 100"];
    cc[110] = ["carne crua", "você pode cozinhar na fogueira", "envenenamento por comida: 10", "comida: 15"];
    cc[111] = ["carne assada", "um mal passado, por favor", "comida: 35"];
    cc[131] = ["peixe cru", "eu acho que ainda está vivo", "causa envenenamento por comida: 10", "comida: 18"];
    cc[132] = ["peixe assado", "com limão é perfeito", "comida: 35"];
    cc[137] = ["pão", "um excelente pão francês", "é a moeda do mercado", "comida: 15"];
    cc[139] = ["sanduíche", "saboroso com rissol de krabby", "comida: 100"];
    cc[194] = ["doces", "apenas para crianças!", "comida: 100"];
    cc[193] = ["cana-de-açúcar", "prove, é delicioso!", "comida: 100"];
    cc[195] = ["pisca-pisca", "decoração perfeita de telhado"];
    cc[109] = ["sementes de berries", "cresce como berrie", "nasce em: 2min", "cresce em: 55s", "precisa de água em: 3min 20s", "durabilidade: 700", "tempo de vida: 8 dias"];
    cc[104] = ["berry", "Berry saborosa!", "comida: 10"];
    cc[126] = ["semente de trigo", "cresce como trigo", "nasce em: 2min", "cresce em: 16s", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 days"];
    cc[128] = ["planta selvagem", "vira farinha quando coloca em um moinho de vento"];
    cc[182] = ["semente de abóbora", "cresce como abóbora", "nasce em: 2min 40s", "cresce em: 2min", "precisa de água em: 2min", "durabilidade: 700", "tempo de vida: 8 dias"];
    cc[183] = ["abóbora", "é a lembrança do halloween", "comida: 30"];
    cc[185] = ["semente de alho", "muito perigoso para vampiros", "dano: 20", "nassce: 4min", "cresce em: 1min 10s", "precisa de água em: 1min 40s", "durabilidade: 700", "tempo de vida: 8 dias"];
    cc[186] = ["alho", "cura você e reduz o frio", "comida: 14", "cura ao longo do tempo: 30", "efeito: 1"];
    cc[187] = ["semente de mato de espinhos", "pode dar dano nos seus inimigos", "dano: 20", "nasce em: 4min", "cresce em: 15s", "precisa de água em: 3min", "durabilidade: 1000", "tempo de vida: 8 days"];
    cc[188] = ["mato de espinhos", "pica!"];
    cc[135] = ["pote", "sério, use isso", "com esse GMO fertilize suas plantas", "vai crescer mais rápido e com menos água", "durabilidade: 2000"];
    cc[136] = ["gelo", "útil para fazer bolo e água"];
    cc[55] = ["chave inglesa", "para reparar portas, muros e muros com espinho", "dano: 2"];
    cc[168] = ["pele de lobo", "cachorro? mas onde está o cachorro?!"];
    cc[2] = ["pele de coelho", "o coelho era tão fofo..."];
    cc[172] = ["pele pura", "você é uma fábrica de pão"];
    cc[173] = ["pele negra", "você está pronto para fazer algo errado"];
    cc[140] = ["pele de inverno", "ele só queria um abraço"];
    cc[133] = ["escala", "é pequeno como peixe!"];
    cc[123] = ["pele do kraken", "você não está com medo?"];
    cc[107] = ["fogueira", "esquenta você!", "durabilidade: 150", "tempo de vida: 2min"];
    cc[112] = ["fogueira grande", "te esquenta por mais tempo!", "durabilidade: 400", "tempo de vida: 6min"];
    cc[108] = ["mesa de trabalho", "muito útil para fazer todos os objetos"];
    cc[155] = ["linha", "usada para fazer chapéus e mochila"];
    cc[141] = ["linha de diamante", "usada para fazer chapéus especiais"];
    cc[161] = ["baú", "permite que você guarde itens", "durabilidade: 500"];
    cc[57] = ["espada de madeira", "isso funciona?", "dano: 12", "dano em construções: 4"];
    cc[0] = ["espada de pedra", "seja legal com outros", "dano: 19", "dano em construções: 6"];
    cc[5] = ["espada de ouro", "rei da floresta", "dano: 22", "dano em construções: 7"];
    cc[6] = ["espada de diamante", "você pode sentir o poder", "dano: 24", "dano em construções: 8"];
    cc[9] = ["espada de pirata", "AYYYYY!", "alcança mais distância que a espada normal", "dano: 24", "dano em construções: 8"];
    cc[30] = ["espada de ametista", "mauve é a cor mais bonita do mundo", "dano: 27", "dano em construções: 9"];
    cc[62] = ["espada do dragão", "sem piedade!", "dano: 30", "dano em construções: 10"];
    cc[16] = ["lança do dragão", "mate todos eles!", "dano: 22", "dano em construções: 6"];
    cc[8] = ["picareta de madeira", "pode coletar apenas madeira e pedra", "dano: 1"];
    cc[Tb.ﱠ︌︉︂] = ["picareta de pedra", "pode coletar madeira, pedra e ouro", "dano: 2"];
    cc[3] = ["picareta de ouro", "pode coletar diamante", "dano: 3", "dano em construções: 1"];
    cc[4] = ["picareta de diamante", "pode coletar tudo", "dano: 4", "dano em construções: 1"];
    cc[31] = ["picareta de ametista", "pode coletar tudo, parece fantastico!", "dano: 5", "dano em construções: 1"];
    cc[35] = ["martelo de pedra", "útil para destruir construções", "não funciona bem no diamante e na ametista", "dano: 2", "dano em construções: 20"];
    cc[36] = ["martelo de ouro", "útil para destruir construções", "não funciona bem na ametista", "dano: 3", "dano em construções: 30"];
    cc[37] = ["martelo de diamante", "útil para destruir construções", "dano: 4", "dano em construções: 40"];
    cc[38] = ["martelo de ametista", "útil para destruir construções", "dano: 5", "dano em construções: 50"];
    cc[45] = ["super martelo", "você planeja destruir o mundo?", "dano: 12", "dano em construções: 70"];
    cc[12] = ["lança de madeira", "parece um graveto de madeira mas pica.", "dano: 10", "dano em construções: 2"];
    cc[13] = ["lança de pedra", "o começo da evolução!", "dano: 14", "dano em construções: 4"];
    cc[14] = ["lança de ouro", "cuidado, pica!", "dano: 15", "dano em construções: 5"];
    cc[15] = ["lança de diamante", "você está pronto para matar um dragão", "Dano: 17", "dano em construções: 5"];
    cc[33] = ["lança de ametista", "dragões não te amedrontam", "Dano: 18", "dano em construções: 6"];
    cc[46] = ["pá de pedral", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 2"];
    cc[50] = ["pá de ouro", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 3", "dano em construções: 1"];
    cc[51] = ["pá de diamante", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 4", "dano em construções: 1"];
    cc[52] = ["pá de ametista", "cave o chão para pegar terra, areia e gelo", "você também pode pegar minerais", "dano: 5", "dano em construções: 1"];
    cc[58] = ["capacete de madeira", "melhor que nada", "defesa de jogadores: 1", "defesa de animais: 4"];
    cc[25] = ["capacete de pedra", "você está pronto para a batalha!", "defesa de jogadores: 2", "Animals Defense: 8"];
    cc[26] = ["capacete de ouro", "AKA o capacete dos selvagens", "defesa de jogadores: 4", "defesa de animais: 13"];
    cc[27] = ["capacete de diamante", "não se precipite tanto", "defesa de jogadores: 5", "defesa de animais: 19"];
    cc[43] = ["capacete de ametista", "você não tem medo de mais nada", "defesa de jogadores: 6", "defesa de animais: 23"];
    cc[59] = ["capacete do dragão", "você vai conquistar o mundo", "defesa de jogadores: 8", "defesa de animais: 27"];
    cc[23] = ["chapéu de explorador", "animais não vão te atacar", "mas não faça barulho!", "quente fora da água"];
    cc[41] = ["gorro de natal", "Oh, oh, oh, feliz natal", "quente fora da água e neve"];
    cc[42] = ["chapéu de elfo", "não deixe-se ser explorado, seu pequeno elfo de neve!", "quente fora da água e neve"];
    cc[83] = ["capuz", "você é um trapaceiro", "você pode roubar alguém apenas se", "1) é de noite", "2)você não está segurando nada", "3) se você n foi tocado por 5 segundos", "4) você não está perto de uma fogueira", "5) seu alvo não está com equipamento camponês", "quente fora da água e na neve"];
    cc[10] = ["protetor de orelhas", "algum tipo de chapka pequena.", "quente fora da água e neve"];
    cc[11] = ["Chapka", "também chamado de casaco.", "esquenta fora da água e na neve", "muito quente"];
    cc[40] = ["Chapéu de inverno", "Muito confortável", "Muito quente"];
    cc[84] = ["túnica", "suas plantas crescem rápido", "quente fora da água e na neve"];
    cc[85] = ["capuz de inferno", "você só pode roubar alguém se", "é de noite", "-você não está segurando nada", "- se você não foi tocado por 4 segundos", "- você não está perto de uma fogueira", "-seu alvo não está com equipamento de camponês de inverno", "esquenta fora da água e na neve"];
    cc[86] = ["camponês de inverno", "suas plantas crescem rápido", "quente fora da água e na neve"];
    cc[48] = ["máscara de mergulho", "você é rápido na água", "quente na água", "defesa de jogadores: 2, defesa de animais: 8"];
    cc[47] = ["super máscara de mergulho", "você é muito rápido na água", "quente na água", "defesa de jogadores: 4, defesa de animais: 16"];
    cc[179] = ["esfera do dragão", "dado na questt"];
    cc[143] = ["coração de dragão", "torna você num fantasmas na morte!", "você é um fantasma por 60 segundos", "ache uma pedra da ressurreição"];
    cc[169] = ["pedra verde", "você não vai trapacear, promete?"];
    cc[170] = ["pedra laranja", "apenas um pirata de verdade pode achar-lo!"];
    cc[171] = ["pedra azul", "para pessoas muito gentis"];
    cc[77] = ["coroa verde", "você se regenera muito rápido", "regenera ao longo do tempo: 40", "defesa de jogadores: 4, defesa de animais: 16"];
    cc[78] = ["coroa laranja", "de repente você se sente muito sortudo", "defesa de jogadores: 4, defesa de animais: 16"];
    cc[79] = ["coroa azul", "quando você morrer, você vira um fantasma", "você perderá sua arma", "defesa de jogadores: 4, defesa de animais: 16"];
    cc[174] = ["balde", "útil para encher um poço", "um balde equivale a doze garrafas"];
    cc[175] = ["balde vazio", "você precisa encher esse balde perto de uma fonte de água"];
    cc[121] = ["garrafa", "permite que você beba água em qualquer lugar", "água: 50"];
    cc[122] = ["garrafa vazia", "você pode encher essa garrafa perto de uma fonte de água"];
    cc[124] = ["regador vazio", "você deve enche-lo com uma fonte de água para usa-lo"];
    cc[49] = ["regador", "permite regar as plantas", "dano: 1"];
    cc[29] = ["mochila", "mais espaço para seus itens!"];
    cc[114] = ["papel", "usado para fazer o livro"];
    cc[28] = ["livro", "permite reduzir consideradamente o tempo de construções", "mas precisa está equipado para fucionar", "dano: 1"];
    cc[189] = ["bandagem", "recupera sua vida mais rapidamente", "Heal over time: 30", "Effect: 5"];
    cc[142] = ["fechadura", "permite você trancar seu baú"];
    cc[152] = ["chave", "permite destrancar um baú"];
    cc[153] = ["Totem", "permite você criar um time", "compartilha portas e baús", "edifício prejudicial não quer machucar seu amigo"];
    cc[119] = ["ponte", "muito útil na água", "permite você beber sem se afogar", "anda rápido na água"];
    cc[177] = ["placa", "deixe uma mensagem para outros", "durabilidade: 200"];
    cc[184] = ["telhado", "esconde você um pouco e te esquenta!"];
    cc[176] = ["poço", "permite encher garrafas", "durabilidade: 1000"];
    cc[156] = ["muro de madeira", "você sabia que o muro dança?", "durabilidade: 1000"];
    cc[157] = ["muro de pedra", "é um pocu mais sério.", "durabilidade: 1500"];
    cc[158] = ["muro de ouro", "ouro nos seus muros? é muito chamativo.", "durabilidade: 2000"];
    cc[159] = ["muro de diamante", "tão brilhoso, veja seus olhos", "durabilidade: 2500"];
    cc[116] = ["muro de ametista", "você está muito assustado de sair!", "durabilidade: 3000"];
    cc[154] = ["espiga de madeira", "pode dar dano nos seus inimigos", "dano: 10, dano no acerto: 2", "durabilidade: 150"];
    cc[162] = ["espiga de pedra", "eu não quero ser seu inimigo.", "dano: 20", "dano no acerto: 3", "durabilidade: 300"];
    cc[163] = ["espiga de ouro", "você é tão cruel.", "dano: 30", "dano no acerto: 3", "durabilidade: 600"];
    cc[164] = ["espiga de diamante", "você não gosta de ter companhia.", "dano: 40", "dano no acerto: 4", "durabilidade: 1200"];
    cc[117] = ["espiga de ametista", "o que diabos seu vizinhos fizeram para você?", "dano: 50", "dano no acerto: 4", "durabilidade: 2400"];
    cc[160] = ["porta de madeira", "pode ser aberta ou fechada por você ou seus amigos", "durabilidade: 1000"];
    cc[165] = ["porta de pedra", "uma porta mais forte é mais sério", "durabilidade: 1500"];
    cc[166] = ["porta de ouro", "você está re-construindo o el dorado?", "durabilidade: 2000"];
    cc[167] = ["porta de diamante", "para uma casa brilhante", "durabilidade: 2500"];
    cc[118] = ["porta de ametista", "é a sua casa um lugar trancado seguro?", "durabilidade: 3500"];
    cc[113] = ["fornalha", "esquenta você", "consumi madeira em todo 5 segundos", "durabilidade: 1000"];
    cc[129] = ["moinho de vento", "pode produzir farinha do trigo", "demora 5 segundos para fazer farinha", "dá pontos ao trabalhar", "durabilidade: 2000"];
    cc[138] = ["forno de pão", "permite fazer pão feito de farinha", "demora 10 segundos para fazer pão", "dá pontos ao trabalhar", "durabilidade: 2000"];
    cc[145] = ["pedra da ressurreição", "é mágico", "te ressuscita se você for um fantasmas", "você vai perder sua arma", "durabilidade 200: 200"];
    cc[300] = "você não pode entrar no servidor";
    cc[301] = "kickado: ";
    cc[302] = "sua chave está em uso por outra pessoa";
    cc[303] = "sua chave está errada";
    cc[304] = "você tem uma versão velha, limpe seu cache";
    cc[305] = "não tem mais recursos";
    cc[306] = "você sobreviveu 1 dia";
    cc[307] = "você sobreviveu ";
    cc[308] = " dias";
    cc[309] = "você está morto ;-;";
    cc[310] = "servidor não pôde achar um local de spawn! spam o botão de play!";
    cc[311] = "servidor está cheio! spam o botão de play!";
    cc[312] = "não tem recursos";
    cc[313] = "inventário está cheio (botão direito para deletar itens)";
    cc[314] = " está morto";
    cc[315] = "essa não é a ferramenta certa";
    cc[316] = "você entrou no time";
    cc[317] = "você está morto";
    cc[318] = "entrou no time";
    cc[319] = "seu time foi destruido";
    cc[320] = "você saiu do time";
    cc[321] = " saiu do time";
    cc[322] = "alguém roubou sua ficha :>";
    cc[323] = "escolha um servidor";
    cc[324] = "jogadores";
    cc[325] = "jogadores totais";
    cc[326] = "jogadores nesse modo";
    cc[327] = "Coming soon...";
    document[fa]("nickname_input").placeholder = "Apelido";
    ec[0] = ["você morreu sem motivo"];
    ec[1] = ["você morreu de fome, como o jogo diz"];
    ec[2] = ["você morreu de frio. tão triste", "você pegou hipotermia na próxima vez, tente sentar numa fogueira em vez disso."];
    ec[3] = ["um jogador te matou dizendo a você para matar..'", "você foi morto por um jogador. não se preocupe, aquele jogador morrerá também, eventualmente."];
    ec[4] = ["você ficou muito perto de uma fogueira e queimou até a morte. má ideia.", "você morreu por um incêndio. fogueira te machuca. vá escrever uma história sobre isso."];
    ec[5] = ["seu corpo vai virar um ninho para ovos de aranhas", "uma aranha te matou. pelo menos não era um coelho."];
    ec[6] = ["o lobo não vão morrer de fome depois te te comer", "eles não são cachorros. lobos não gostam de ser que nem animais de estimação."];
    ec[7] = ["a raposa era muito rápida para você", "a raposa te tornou uma caixa. desde quando os animais tem poderes mágicos?"];
    ec[8] = ["o urso só queria um abraço.", " o urso era muito nu. eu não sinto muito."];
    ec[9] = ["você foi queimado por um dragão. tão triste..", "você foi esmagado por um dragão.. ser esmagado é uma maneira horrível de morrer."];
    ec[10] = ["você pulou em um muro com espinhos. não é uma boa ideia...", "você foi morto por um muro com espinhos. muitas pessoas são sensíveis o bastante para não tocar em coisas pontudas."];
    ec[11] = ["até fantasmas podem morrer.", "você falhou para ser ressuscitado. This is a game, so you go to life after you die, so..."];
    ec[12] = ["uma bactéria da sua comida crua te matou esse jogo é definitivamente muito díficil.", "você matou a carne crua. a carne crua te matou também."];
    ec[13] = ["você morreu de sede. melhor beber sua própria urina."];
    ec[14] = ["você sabia que você morre afogado? agora você sabe."];
    ec[15] = ["não se preocupe, as piranhas acham você saboroso.", "fato engraçado: Piranhas comem pessoas. incluindo você."];
    ec[16] = ["LapaMauve não planeja você matar o kraken", "um kraken comeu seu esqueleto."];
    ec[17] = ["sua pele caindo aos pedaços, o sol te matou."];
    ec[18] = ["o alho amarzenado em seus bolsos ferveu seu cérebro."];
    ec[19] = ["como vampiro, não chegue perto do alho."];
    ec[20] = ["você comeu alho como vampiro, o que você esperava?"];
    ec[21] = ["seu corpo se enroscou nos espinhos. quando você tenta escapar, sua pele sai e seu coração para de bater."];
    ZOMBIE_GRUMBLE = "Uuunnnggg";
    ZOMBIE_GRUMBLES = ["Uuunnnggg... estou morrendo de fome", "preciso do seu cerébro Uuunnnggg...", "carne fresca aqui... Uuunnnggg", "Uuunnnggg... você parece saboroso", "Uuunnnggg...", "Eat... uuunnnggg...", "consigo sentir o cheiro de sangue... Uuunnnggg"];
  }, $b = function () {
    cc[178] = ["You feel a great power emanating from this orb"];
    ec[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    cc[190] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    cc[328] = " BACK TO THE GAME";
    cc[329] = " Share on Twitter";
    cc[330] = " Share on Facebook";
    cc[331] = "You can buy items on the shop in the next game with your points";
    cc[332] = "points";
    cc[333] = "Score";
    cc[334] = "Kill";
    cc[335] = "Days survived";
    cc[336] = "Building method: Free. Press G to change";
    cc[337] = "Building method: Grid. Press G to change";
    cc[191] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    cc[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    cc[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    cc[192] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document[fa]("typequest").innerHTML = "Chrono Quests";
    document[fa]("timeremainingquest").innerHTML = "Time Remaining";
    document[fa]("constraintquest").innerHTML = " Constraints";
    document[fa]("claim_rewards").innerHTML = " Claim rewards";
    document[fa]("rewardquest").innerHTML = " Reward";
    document[fa]("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document[fa]("amethyst_2").innerHTML = " Gather 1 amethyst";
    document[fa]("survive20min_3").innerHTML = "Survive without losing life";
    document[fa]("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document[fa]("dont_hit_5").innerHTML = " Be peaceful";
    document[fa]("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document[fa]("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var c = 0; c < 7; c++) {
      document[fa]("claim_reward_" + c).innerHTML = "CLAIM REWARD!";
    }
    document[fa]("quit_chronoquest").innerHTML = " QUIT";
    cc[7] = ["Mano"];
    cc[134] = ["Tierra", "¡Tan limpia como mis manos!"];
    cc[120] = ["Arena", "¡Tengo arena en mis ojos!"];
    cc[103] = ["Madera", "¡Nunca hay suficiente!"];
    cc[102] = ["Piedra", "También llamada roca."];
    cc[105] = ["Oro", "Sé generoso, compártelo con los otros"];
    cc[106] = ["Diamante", "¿Que vas a hacer con él?"];
    cc[115] = ["Amatista", "Es Mauve como Lapa"];
    cc[125] = ["Harina", "Usada para cocinar."];
    cc[127] = ["Galleta", "Una galleta de la abuelita", "Comida: 50"];
    cc[130] = ["Tarta", "¡Cumpleaños Feliz!", "Comida: 100"];
    cc[110] = ["Carne Cruda", "Se cocina con fuego", "Causa veneno. 10", "Comida: 15"];
    cc[111] = ["Carne Cocinada", "es la supervivencia del más fuerte :'(", "Comida: 35"];
    cc[131] = ["Pescado Crudo", "Creo que sigue vivo", "Causa veneno de comida: 10", "Comida: 18"];
    cc[132] = ["Pescado Cocinado", "Con limón sería perfecto", "Comida: 35"];
    cc[137] = ["Pan", "¡Caliente, desde Francia!", "Es dinero usado en la tienda", "Comida: 15"];
    cc[139] = ["Bocadillo", "Sabe como un Krabby Patty", "Comida: 100"];
    cc[194] = ["Caramelos", "¡Solo para niños/as!", "Comida: 100"];
    cc[193] = ["Caña de Azúcar", "Pruébala, es deliciosa", "Comida: 100"];
    cc[195] = ["Guirnalda", "Perfecta para decorar el techo"];
    cc[109] = ["Semillas de Bayas", "Se convierte en bayas", "Nacimiento: 2 Minutos", "Crecimiento: 55 Segundos", "Necesita agua: 3 Minutos 20 Segundos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    cc[104] = ["Baya", "No es venenosa.", "Comida: 10"];
    cc[126] = ["Semilla de Trigo", "Se convierte en Trigo ", "Nacimiento: 2 Minutos", "Crecimiento: 16 Segundos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    cc[128] = ["Trigo Silvestre", "Se convierte en harina cuando se coloca en un molino"];
    cc[182] = ["Semilla de Calabaza", "Crece a Calabazas", "Nacimiento: 2 Minutos 40 Segundos", "Crecimiento: 2 Minutos", "Necesita agua: 2 Minutos", "Durabilidad: 700", "Tiempo de vida: 8 Días"];
    cc[183] = ["Calabaza", "Me recuerda a Halloween", "Comida: 30"];
    cc[185] = ["Semilla de Ajo", "Muy peligroso para vampiros", "Daño: 20", "Nacimiento: 4 Minutos", "Crecimiento: 1 Minutos 10 Segundos", "Necesita Agua: 1 Minutos 40 Segundos", "Durabilidad: 700", "Tiempo de Vida: 8 Días"];
    cc[186] = ["Ajo", "Te sana y reduce el frio", "Comida: 14", "sanación con eliempo: 30", "Efecto: 1"];
    cc[187] = ["Semilla de Planta de Espinas", "Puede dañar a tus enemigos", "Daño por contacto: 20", "Nacimiento: 4 Minutos", "Crecimiento: 15 Segundos", "Necesita Agua: 3 Minutos", "Durabilidad: 1000", "Tiempo de Vida: 8 Días"];
    cc[188] = ["Planta de Espinas", "¡Te daña!"];
    cc[135] = ["Parcela", "En serio, úsala", "Se usa para plantar plantas en invierno o sobre puentes", "Tus plantas crecerán muy rápido y necesitarán menos agua", "Durabilidad: 2000"];
    cc[136] = ["Hielo", "Bueno para hacer tartas y agua"];
    cc[55] = ["Llave de Reparación", "Puede reparar paredes, puertas y pinchos", "Daño: 2"];
    cc[168] = ["Pelaje de Lobo", "¿Perrito? ¡¿Donde esta el perrito?!"];
    cc[2] = ["Pelaje de Conejo", "El Conejo era muy lindo..."];
    cc[172] = ["Pelaje Puro", "¡Eres una maquina de pan!"];
    cc[173] = ["Pelaje Oscuro", "¿Estás listo para hacer algo malo?"];
    cc[140] = ["Pelaje de Invierno", "Esos animales solo querían un abrazo..."];
    cc[133] = ["Escamas", "¡Huele a pescado!"];
    cc[123] = ["Piel del Kraken", "¡¿No tienes mucho miedo?!"];
    cc[107] = ["Fogata", "¡Te calienta!", "Durabilidad: 150", "Tiempo de vida: 2 Minutos"];
    cc[112] = ["Fogata Grande", "¡Te calienta por más tiempo!", "Durabilidad: 400", "Tiempo de Vida: 6 Minutos"];
    cc[108] = ["Mesa de Trabajo", "¡Te sirve mucho para crear cosas de todos tipos!"];
    cc[155] = ["Hilo", "Usado para craftear ropa y mochila"];
    cc[141] = ["Hilo de Diamante", "Usado para craftear ropa especial"];
    cc[161] = ["Cofre", "Te permite guardar cosas, o compartirlas", "Durabilidad: 500"];
    cc[57] = ["Espada de Madera", "¿Eso funciona?", "Daño: 12", "Daño para estructuras: 4"];
    cc[0] = ["Espada de Piedra", "Sé bueno con los otros", "Daño: 19", "Daño para estructuras: 6"];
    cc[5] = ["Espada de Oro", "¡Rey de la selva!", "Daño: 22", "Daño para estructuras: 7"];
    cc[6] = ["Espada de Diamante", "Puedes sentir el poder", "Daño: 24", "Daño para estructuras: 8"];
    cc[9] = ["Espada de Pirata", "Arrrrr!", "¡Mejor distancia que una espada normal", "Daño: 24", "Daño para estructuras: 8"];
    cc[30] = ["Espada de Amatista", "Mauve es el mejor color del mundo :3", "Daño: 27", "Daño para estructuras: 9"];
    cc[62] = ["Espada del Dragón", "¡Tienes el poder de un Dragón!", "Daño: 30", "Daño para estructuras: 10"];
    cc[16] = ["Lanza del Dragón", "¡Mátalos a todos!", "Daño: 22", "Daño para estructuras: 6"];
    cc[8] = ["Pico de Madera", "Solo puede minar madera y piedra", "Daño: 1"];
    cc[1] = ["Pico de Piedra", "Puede minar hasta oro", "Daño: 2"];
    cc[3] = ["Pico de Oro", "Puede minar hasta Diamante", "Daño: 3", "Daño para estructuras: 1"];
    cc[4] = ["Pico de Diamante", "¡Puede minarlo todo!", "Daño: 4", "Daño para estructuras: 1"];
    cc[31] = ["Pico de Amatista", "¡Puede minarlo todo, parece fantastico!", "Daño: 5", "Daño para estructuras: 1"];
    cc[35] = ["Martillo de Piedra", "Bueno para destruir estructuras", "No funciona bien con diamante y amatista", "Daño: 2", "Daño para estructuras: 20"];
    cc[36] = ["Martillo de Oro", "Bueno para destruir estructuras", "No funciona bien con amatista ", "Daño: 3", "Daño para estructuras: 30"];
    cc[37] = ["Martillo de Diamante", "Bueno para destruir estructuras", "Daño: 4", "Daño para estructuras: 40"];
    cc[38] = ["Martillo de Amatista", "Bueno para destruir estructuras", "Daño: 5", "Daño para estructuras: 50"];
    cc[45] = ["Super Martillo", "¿Has planeado destruir el mundo?", "Daño: 12", "Daño para estructuras: 70"];
    cc[12] = ["Lanza de Madera", "Como un palo de madera, pero mata.", "Daño: 10", "Daño para estructuras: 2"];
    cc[13] = ["Lanza de Piedra", "¡El comienzo de la evolución!", "Daño: 14", "Daño para estructuras: 4"];
    cc[14] = ["Lanza de Oro", "¡Cuidado, te hace mucho daño!", "Daño: 15", "Daño para estructuras: 5"];
    cc[15] = ["Lanza de Diamante", "¡Estas preparado para matar al Dragon!", "Daño: 17", "Daño para estructuras: 5"];
    cc[33] = ["Lanza de Amatista", "Los dragones te tienen miedo", "Daño: 18", "Daño para estructuras: 6"];
    cc[46] = ["Pala de Piedra", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 2"];
    cc[50] = ["Pala de Oro", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 3", "Daño para estructuras: 1"];
    cc[51] = ["Pala de Diamante", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 4", "Daño para estructuras: 1"];
    cc[52] = ["Pala de Amatista", "Cava para conseguir tierra, arena y hielo", "También puedes conseguir minerales", "Daño: 5", "Daño para estructuras: 1"];
    cc[58] = ["Casco de Madera", "¡Mejor que nada!", "Protección contra jugadores: 1", "Protección contra animales: 4"];
    cc[25] = ["Casco de Piedra", "¡Estas listo para la batalla!", "Protección contra jugadores: 2", "Protección contra animales: 8"];
    cc[26] = ["Casco de Oro", "AKA el casco de los salvajes", "Protección contra jugadores: 4", "Protección contra animales: 13"];
    cc[27] = ["Casco de Diamante", "No ataques tanto", "Protección de jugadores: 5", "Protección contra animales: 19"];
    cc[43] = ["Casco de Amatista", "¡No tienes miedo de nada!", "Protección contra jugadores: 6", "Protección contra animales: 23"];
    cc[59] = ["Casco del Dragón", "¡Vas a dominar el mundo!", "Protección contra jugadores: 8", "Protección contra animales: 27"];
    cc[23] = ["Gorro del Explorador", "Los animales no te atacarán", "¡Pero no ataques!", " Te calienta en el invierno y fuera del agua"];
    cc[41] = ["Gorro de Navidad", "¡Ho, ho, ho, feliz Navidad!", "Te calienta en el invierno y fuera del  agua"];
    cc[42] = ["Gorro del Duende", "¡No dejes que te descubren que eres, duende del hielo!", "Te calienta en el invierno y fuera del agua"];
    cc[83] = ["Capucha", "¡Eres un ladron!", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado en los  8 segundos anteriores", "4) No estas cerca de una fogata", "5) Si tu objetivo no lleva puesto una gorra de campesino", "Te calienta en invierno y fuera del agua"];
    cc[10] = ["Orejeras", "Como un abrigo pequeño.", "Te calienta en invierno y fuera del agua"];
    cc[11] = ["Chapka", "También llamado abrigo.", "Te calienta en el invierno y fuera del agua"];
    cc[40] = ["Gorro y Bufanda ", "Muy cómodo, muy caliente"];
    cc[84] = ["Gorra de Campesino", "Tus plantas crecen mas rápido", "Te Calienta en el invierno y fuera del agua"];
    cc[85] = ["Capucha de Invierno", "Puedes robar de alguien solo si", "1) Es de noche", "2) No tienes nada en tu mano", "3) Si no te han tocado antes de 8 segundos", "4) No estas cerca de un fuego", "5) Si tu objetivo no lleva puesto una Gorra de Campesino", "Te calienta en invierno y fuera del agua"];
    cc[86] = ["Gorra de Invierno del Campesino", "Tus plantas crecen aún más rápido", "Te calienta en invierno y fuera del agua"];
    cc[48] = ["Máscara de Buceo", "Eres un tiburón en el agua", "Calienta en el agua", "Protección contra jugadores: 2, Protección contra animales: 8"];
    cc[47] = ["Súper Máscara de Buceo", "Eres muy rápido en agua", "Calienta en el agua", "Defensa del Jugador: 4, Defensa de los animales: 16"];
    cc[179] = ["Esfera del Dragón", "Dada en la misión"];
    cc[143] = ["Corazón del Dragón", "¡Te convierte en un fantasma cuando mueres!", "Eres un fantasma por 60 segundos", "Encuentra una Piedra de resurreción"];
    cc[169] = ["Gema Verde", "¿¿No has hecho trampas, verdad??"];
    cc[170] = ["Gema Naranja", "¡Solo un pirata verdadero lo puede encontrar!"];
    cc[171] = ["Gema Azul", "Para gente muy amable"];
    cc[77] = ["Corona Verde", "Te sanas muy rápido", "Sanación con el tiempo: 40", "Protección contra jugadores: 4, Protección contra animales: 16"];
    cc[78] = ["Corona Naranja", "Ahora tienes much suerte", "Protección contra jugadores: 4, Protección contra animales: 16"];
    cc[79] = ["Corona Azul", "Cuando mueres, te conviertes en un fantasma", "Pero perderás tu alma", "Protección contra jugador: 4, Protección contra animales: 16"];
    cc[174] = ["Cubo", "Bueno para rellenar botellas", "Un cubo es equivalente a 12 botellas"];
    cc[175] = ["Cubo Vacío", "Tienes que llenar este cubo con agua"];
    cc[121] = ["Botella", "Te permite beber agua donde quieras", "Agua: 50"];
    cc[122] = ["Botella Vacia", "La puedes llenar de agua"];
    cc[124] = ["Regadera Vacía", "La tienes que llenar de agua"];
    cc[49] = ["Regadera", "Te permite regar las plantas", "Daño: 1"];
    cc[29] = ["Mochila", "¡Mas espacio para tus cosas!"];
    cc[114] = ["Hoja", "Usada para hacer un libro"];
    cc[28] = ["Libro", "Reduce el tiempo de elaboración", "Lo tienes que tener en la mano para que funcione", "Daño: 1"];
    cc[189] = ["Vendaje", "Recuperas vida mas rapido", "Sanación tiempo: 30", "Efecto: 5"];
    cc[142] = ["Cerradura", "Te permite cerrar tu cofre"];
    cc[152] = ["Llave", "Te permite abrir un cofre cerrado"];
    cc[153] = ["Tótem", "Te permite crear un equipo", "Compartir puertas y cofres cerrados", "Tus pinchos no dañan al resto tu equipo"];
    cc[119] = ["Puente", "Muy útil en el agua", "Te permite beber agua sin tener que ahogarse", "Puedes nadar más rápido encima del agua"];
    cc[177] = ["Cartel", "Sirve para dejar un mensage para otros", "Durabilidad: 200"];
    cc[184] = ["Techo", "Te esconde un poco y te protege del frío"];
    cc[176] = ["Fuente", "Permite rellenar botellas", "Durabilidad: 1000"];
    cc[156] = ["Pared de Madera", "Es solo una pared.", "Durabilidad: 1000"];
    cc[157] = ["Pared de Piedra", "Es un poco más serio", "Durabilidad: 1500"];
    cc[158] = ["Pared de Oro", "¿Oro en de tus paredes? Eres rico", "Durabilidad: 2000"];
    cc[159] = ["Pared de Diamante", "Muy brillante, cuidado con tus ojos", "Durabilidad: 2500"];
    cc[116] = ["Pared de Amatista", "¡Debes tener mucho miedo de lo que hay fuera!", "Durabilidad: 3500"];
    cc[154] = ["Pincho de Madera", "Puede dañar a tus enemigos", "Daño: 10, Daño por golpe: 2", "Durabilidad: 150"];
    cc[162] = ["Pincho de Piedra", "No querría ser tu enemigo.", "Daño: 20", "Daño por contacto: 3", "Durabilidad: 300"];
    cc[163] = ["Pincho de Oro", "¡Eres tan cruel!", "Daño: 30", "Daño por golpe: 3", "Durabilidad: 600"];
    cc[164] = ["Pincho de Diamante", "No te gusta tener compañía.", "Daño: 40", "Daño por contacto: 4", "Durabilidad: 1200"];
    cc[117] = ["Pincho de Amatista", "¡¿Que demonios te hicieron tus vecinos?!", "Daño: 50", "Daño por contacto: 4", "Durabilidad: 2400"];
    cc[160] = ["Puerta de Madera", "Puedes abrir y cerrarla ", "Durabilidad: 1000"];
    cc[165] = ["Puerta de Piedra", "Una puerta más buena es más seria", "Durabilidad: 1500"];
    cc[166] = ["Puerta de Oro", "¿Estas reconstruyendo El Dorado?", "Durabilidad: 2000"];
    cc[167] = ["Puerta de Diamante", "Para una casa brillante", "Durabilidad: 2500"];
    cc[118] = ["Puerta de Amatista", "¿Tu casa es una caja fuerte?", "Durabilidad: 3500"];
    cc[113] = ["Caldera", "Te calienta", "Consume 1 Madera cada 5 segundos", "Durabilidad: 1000"];
    cc[129] = ["Molino", "Puede producir harina a partir del trigo", "Necesita 5 segundos para producir harina", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    cc[138] = ["Horno de Pan", "Produce pan de harina", "Necesita 10 segundos para producir Pan", "Devuelve los puntos que trabaja", "Durabilidad: 2000"];
    cc[145] = ["Piedra de Resurreción", "¡Es magia!", "Te resucitacuando eres una fantasma", "Perderás tu arma", "Durabilidad: 200"];
    cc[300] = "No puedes unirte a este servidor";
    cc[301] = "Expulsado: ";
    cc[302] = "Tu llave ya está usada";
    cc[303] = "Tu llave está mal";
    cc[304] = "Tienes una versión antigua, limpia tu cache";
    cc[305] = "No hay mas recursos";
    cc[306] = "Has sobrevivido 1 día";
    cc[307] = "Has sobrevivido ";
    cc[308] = " días";
    cc[309] = "Estás muerto ;-;";
    cc[310] = "No se encuentra un lugar para unirse, ¡spamea el botón de jugar!";
    cc[311] = "El servidor esta lleno, ¡spamea el botón de jugar!";
    cc[312] = "Recurso vacio";
    cc[313] = "¡Inventario lleno!(Haz click derecho para borrar cosas) ";
    cc[314] = " está muerto";
    cc[315] = "Esta no es la herramienta correcta";
    cc[316] = "Te has unido a un equipo";
    cc[317] = "Estás muerto";
    cc[318] = " se unió al equipo";
    cc[319] = "Tu equipo ha sido destruido";
    cc[320] = "Has dejado el equipo";
    cc[321] = " dejo el equipo ";
    cc[322] = "Alguien te robó tu token :>";
    cc[323] = "Elige un servidor";
    cc[324] = "jugadores";
    cc[325] = "total de jugadores";
    cc[326] = "Jugadores en este modo de juego";
    cc[327] = "Próximamente...";
    document[fa]("nickname_input").placeholder = "Apodo";
    ec[0] = ["Has muerto por ninguna razón"];
    ec[1] = ["Has muerto de hambre, como implica el nombre del juego dice"];
    ec[2] = ["Te has congelado hasta morir, qué triste", "Moriste por hipotermia. La próxima quédate cerca de  una fogata."];
    ec[3] = ["Un jugador te ha matado diciendo que mejores.", "Fuiste asesinado por un jugador, pero no te preocupes, ese jugador también morirá, eventualmente."];
    ec[4] = ["Te has acercado demasiado al fuego, y te has quemado vivo, mala idea.", "Has muerto por el fuego, el fuego te quema, ve y escribe una historia sobre eso."];
    ec[5] = ["Tu cuerpo será un buen nido para los huevos de la arañas", "Una araña te ha matado, al menos no fué un conejo."];
    ec[6] = ["El lobo no tendrá hambre después de comerte.", "No son perros, no les gusta ser acariciados."];
    ec[7] = ["El zorro era demasiado rápido para ti.", "El zorro te convirtió en una caja. ¿Desde cuándo los animales tienen poderes mágicos?"];
    ec[8] = ["El oso solo quería un abrazo", "El oso era demasiado para ti. Lo siento."];
    ec[9] = ["El dragón te quemó vivo.", "El dragón te ha aplastado, todos tus huesos ahora son vapor... otro cadaver mas."];
    ec[10] = ["Has saltado a una pared de pinchos, mala idea", "Has muerto por una pared de pinchos. La gente suele ser lo suficientemente sensible para no tocar cosas puntiagudas.."];
    ec[11] = ["Un fantasma también puede morir.", "No has revivido a tiempo, asi que eres un fantasma de un fantasma."];
    ec[12] = ["Una bacteria te ha matado por comer carne cruda. Este juego es muy difícil.", "Has matado a la carne cruda. Ella también te ha matado a ti.."];
    ec[13] = ["Has muerto de sed, mejor bebe tu propia orina."];
    ec[14] = ["¿Sabiás que los jugadores tienen su boca debajo del agua? Ahora lo sabes."];
    ec[15] = ["No te preocupes, a la piraña le pareciste delicioso.", "Las pirañas comen a personas, incluyendote a ti también."];
    ec[16] = ["LapaMauve no planea que puedas matar al kraken", "Un Kraken te partió el kra-neo."];
    ec[17] = ["Tu piel se cayó, el sol te quemó."];
    ec[18] = ["El ajo guardado en tu bolsillo te quemó el cerebro."];
    ec[19] = ["Eres un vampiro, no te quedes cerca del ajo."];
    ec[20] = ["Has comido un ajo siendo  vampiro,¿que esperabas?"];
    ec[21] = ["Te has quedado atrapado en una planta de espinas. Al intentar escapar, tu piel se cae y entra un pincho en tu corazón."];
    ZOMBIE_GRUMBLE = "Uuunnnggg";
    ZOMBIE_GRUMBLES = ["Uuunnnggg... Tengo hambre", "Necesito tu cerebro uuunnnggg...", "Carne fresca... Uuunnnggg", "Uuunnnggg... Pareces delicioso", "Uuunnnggg...", "Comida... uuunnnggg...", "Puedo oler sangre... Uuunnnggg"];
  }, _b = function () {
    cc[178] = ["You feel a great power emanating from this orb"];
    ec[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    cc[190] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    cc[328] = " BACK TO THE GAME";
    cc[329] = " Share on Twitter";
    cc[330] = " Share on Facebook";
    cc[331] = "You can buy items on the shop in the next game with your points";
    cc[332] = "points";
    cc[333] = "Score";
    cc[334] = "Kill";
    cc[335] = "Days survived";
    cc[336] = "Building method: Free. Press G to change";
    cc[337] = "Building method: Grid. Press G to change";
    cc[191] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    cc[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    cc[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    cc[192] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document[fa]("typequest").innerHTML = "Chrono Quests";
    document[fa]("timeremainingquest").innerHTML = "Time Remaining";
    document[fa]("constraintquest").innerHTML = " Constraints";
    document[fa]("claim_rewards").innerHTML = " Claim rewards";
    document[fa]("rewardquest").innerHTML = " Reward";
    document[fa]("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document[fa]("amethyst_2").innerHTML = " Gather 1 amethyst";
    document[fa]("survive20min_3").innerHTML = "Survive without losing life";
    document[fa]("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document[fa]("dont_hit_5").innerHTML = " Be peaceful";
    document[fa]("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document[fa]("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var c = 0; c < 7; c++) {
      document[fa]("claim_reward_" + c).innerHTML = "CLAIM REWARD!";
    }
    document[fa]("quit_chronoquest").innerHTML = " QUIT";
    cc[7] = ["Hand"];
    cc[134] = ["Boden", "Dreckig!"];
    cc[120] = ["Sand", "Ich habe es in meine Augen bekommen!"];
    cc[103] = ["Holz", "Du kannst niemals zu viel haben!"];
    cc[102] = ["Stein", "Auch Fels gennant"];
    cc[105] = ["Gold", "Sei großzügig, gib anderen etwas ab "];
    cc[106] = ["Diamant", "Was wirst du daraus machen?"];
    cc[115] = ["Amethyst", "Es ist Mauve farbend, genauso wie Lapa"];
    cc[125] = ["Mehl", "wird fürs Backen gebraucht"];
    cc[127] = ["Keks", "Ein prächtiger Keks von Großmutter", "Essen: 50"];
    cc[130] = ["Ein Kuchen", "Perfekter Kuchen für Gourmets", "Essen: 100"];
    cc[110] = ["rohes Fleisch", "Du kannst es mit einem Feuer braten", "verursacht Lebensmittelvergiftung: 10", "Essen: 15"];
    cc[111] = ["gebratenes Fleisch", "Einmal blutiges Steak, bitte", "Essen: 35"];
    cc[131] = ["roher Fisch", "Ich glaube es lebt noch", "verursacht Lebensmittelvergiftung: 10", "Essen: 18"];
    cc[132] = ["gebratener Fisch", "Mit einer Zitrone ist es perfekt", "Essen: 35"];
    cc[137] = ["Brot", "Ein vorzügliches französiches Brot", "Es wird als Währung im Markt benutzt", "Essen: 15"];
    cc[139] = ["Sandwich", "Schmeckt wie Krabbenburger", "Essen: 100"];
    cc[194] = ["Süßigkeiten", "Nur für Kinder!", "Essen: 100"];
    cc[193] = ["Zuckerstange", "Probier mal, es schmeckt hervorragend", "Essen: 100"];
    cc[195] = ["Girlande", "perfekter Schmuck für Dächer"];
    cc[109] = ["Beeren Saatgut", "Wird eine Beere", "Entstehung: 2min", "Wachstum: 55s", "Wasserbedarf: 3min 20s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    cc[104] = ["Beere", "Beeren lecker!", "Essen: 10"];
    cc[126] = ["Weizen Saatgut", "Wird zu Weizen", "Entstehung: 2min", "Wachstum: 16s", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    cc[128] = ["Wildes Weizen", "Wenn es in eine Windmühle platziert wird, wird es zu Mehl"];
    cc[182] = ["Kürbis Saatgut", "Wird zu Kürbis", "Entstehung: 2min 40s", "Wachstum: 2min", "Wasserbedarf: 2min", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    cc[183] = ["Kürbis", "Es erinnert mich an Halloween", "Essen: 30"];
    cc[185] = ["Knoblauch Saatgut", "Sehr gefährlich für Vampire", "Schaden: 20", "Entstehung: 4min", "Wachstum: 1min 10s", "Wasserbedarf: 1min 40s", "Haltbarkeit: 700", "Lebenszeit: 8 Tage"];
    cc[186] = ["Knoblauch", "Heilt dich und hält die Kälte fern", "Essen: 14", "Heilung über Zeit: 30", "Effekt: 1"];
    cc[187] = ["Dornenbusch Saatgut", "Kann deinen Gegnern Schaden zufügen", "Schaden: 20", "Entstehung: 4min", "Wachstum: 15s", "Wasserbedarf: 3min", "Haltbarkeit: 1000", "Lebenszeit: 8 Tage"];
    cc[188] = ["Dornenbusch", "Es sticht!"];
    cc[135] = ["Topf", "Ernsthaft, benutz es", "Mit diesem GMO dünger deine Pflanzen", "lässt sie schneller wachsen und reduziert den Wasserverbrauch", "Haltbarkeit: 2000"];
    cc[136] = ["Eis", "Nützlich um Kuchen und Wasser herzustellen"];
    cc[55] = ["Schraubenschlüssel", "Es kann Wände, Türen und Stacheln reparieren", "Schaden: 2"];
    cc[168] = ["Wolfsfell", "Welpe? Aber wo ist der Welpe?!"];
    cc[2] = ["Hasenfell", "Der Hase war so süß..."];
    cc[172] = ["Klares Fell", "Du bist eine Brotfabrik"];
    cc[173] = ["Dunkles Fell", "Du machst dich bereit etwas falsches zu vollführen"];
    cc[140] = ["Winter Fell", "Diese Tiere wollten nur eine Umarmung..."];
    cc[133] = ["Schuppen", "Es riecht wie Fisch!"];
    cc[123] = ["Kraken Haut", "Warst du nicht zu ängstlich?"];
    cc[107] = ["Lagerfeuer", "Wärmt dich!", "Haltbarkeit: 150", "Lebensdauer: 2min"];
    cc[112] = ["Großes Lagerfeuer", "Wärmt dich länger!", "Haltbarkeit: 400", "Lebensdauer: 6min"];
    cc[108] = ["Werkbank", "Sehr nützlich um allerlei Sachen herzustellen"];
    cc[155] = ["Faden", "Wird benötigt um Mützen und Rucksäcke herzustellen  "];
    cc[141] = ["Diamant Faden", "Wird für spezielle Mützen gebraucht"];
    cc[161] = ["Truhe", "Damit kannst du Gegenstände lagern", "Haltbarkeit: 500"];
    cc[57] = ["Holzschwert", "Funktioniert das?", "Schaden: 12", "Schaden an Gebäuden: 4"];
    cc[0] = ["Steinschwert", "Sei nett zu Anderen", "Schaden: 19", "Schaden an Gebäuden: 6"];
    cc[5] = ["Goldschwert", "König des Waldes", "Schaden: 22", "Schaden an Gebäuden: 7"];
    cc[6] = ["Diamantschwert", "Du kannst die Kraft spüren", "Schaden: 24", "Schaden an Gebäuden: 8"];
    cc[9] = ["Piratenschwert", "Ayyyyy!", "Hat eine höhere Reichweite als ein normales Schwert", "Schaden: 24", "Schaden an Gebäuden: 8"];
    cc[30] = ["Amethystschwert", "Mauve ist die schönste Farbe der Welt", "Schaden: 27", "Schaden an Gebäuden: 9"];
    cc[62] = ["Drachenschwert", "Keine Gnade!", "Schaden: 30", "Schaden an Gebäuden: 10"];
    cc[16] = ["Drachenspeer", "Töte sie alle!", "Schaden: 22", "Schaden an Gebäuden: 6"];
    cc[8] = ["Holzspitzhacke", "Kann nur Holz und Stein abbauen", "Schaden: 1"];
    cc[1] = ["Steinspitzhacke", "Kann Holz, Stein und Gold abbauen", "Schaden: 2"];
    cc[3] = ["Goldspitzhacke", "Kann auch Diamanten abbauen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    cc[4] = ["Diamantspitzhacke", "Kann alles abbauen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    cc[31] = ["Amethystspitzhacke", "Kann alles abbauen, sieht außerdem gut aus!", "Schaden: 5", "Schaden an Gebäuden: 1"];
    cc[35] = ["Steinhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Diamant oder Amethyst", "Schaden: 2", "Schaden an Gebäuden: 20"];
    cc[36] = ["Goldhammer", "Nützlich um Gebäude zu zerstören", "Funktioniert nicht gut gegen Amethyst", "Schaden: 3", "Schaden an Gebäuden: 30"];
    cc[37] = ["Diamanthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 4", "Schaden an Gebäuden: 40"];
    cc[38] = ["Amethysthammer", "Nützlich um Gebäude zu zerstören", "Schaden: 5", "Schaden an Gebäuden: 50"];
    cc[45] = ["Superhammer", "Willst du die Welt zerstören?", "Schaden: 12", "Schaden an Gebäuden: 70"];
    cc[12] = ["Holzspeer", "Wie ein Stock, nur mit dem Unterschied, dass es sticht.", "Schaden: 10", "Schaden an Gebäuden: 2"];
    cc[13] = ["Steinspeer", "Der Anfang der Evolution!", "Schaden: 14", "Schaden an Gebäuden: 4"];
    cc[14] = ["Goldspeer", "Pass auf, es sticht!", "Schaden: 15", "Schaden an Gebäuden: 5"];
    cc[15] = ["Diamantspeer", "Du bist bereit einen Drachen zu töten", "Schaden: 17", "Schaden an Gebäuden: 5"];
    cc[33] = ["AmethystSpeer", "Drachen jagen dir keine Angst mehr ein", "Schaden: 18", "Schaden an Gebäuden: 6"];
    cc[46] = ["Steinschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 2"];
    cc[50] = ["Goldschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 3", "Schaden an Gebäuden: 1"];
    cc[51] = ["Diamantschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 4", "Schaden an Gebäuden: 1"];
    cc[52] = ["Amethystschaufel", "Grab herum um Dreck, Eis und Sand zu bekommen", "Du kannst auch Mineralien bekommen", "Schaden: 5", "Schaden an Gebäuden: 1"];
    cc[58] = ["Holzhelm", "Besser als nichts", "Verteidigung gegen Spieler: 1", "Verteidigung gegen Tiere: 4"];
    cc[25] = ["Steinhelm", "Du bist bereit zu kämpfen!", "Verteidigung gegen Spieler: 2", "Verteidigung gegen Tiere: 8"];
    cc[26] = ["Goldhelm", "AKA Der Helm der Unbarmherzigen", "Verteidigung gegen Spieler: 4", "Verteidigung gegen Tiere: 13"];
    cc[27] = ["Diamanthelm", "Gib nicht zu viel an", "Verteidigung gegen Spieler: 5", "Verteidigung gegen Tiere: 19"];
    cc[43] = ["Amethysthelm", "Du musst vor nichts mehr angst haben", "Verteidigung gegen Spieler: 6", "Verteidigung gegen Tiere: 23"];
    cc[59] = ["Drachenhelm", "Du wirst die Welt erobern", "Verteidigung gegen Spieler: 8", "Verteidigung gegen Tiere: 27"];
    cc[23] = ["Erkunderhut", "Tiere beachten dich nicht mehr", "mach aber keine Geräusche!", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[41] = ["Weihnachtshut", "Oh, oh, oh, fröhliche Weihnachten", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[42] = ["Elfenhut", "Lass dich nicht ausnutzen, du kleiner Schneeelf!", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[83] = ["Kapuze", "Du bist ein Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für acht Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Bauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[10] = ["Ohrwärmer", "Eine Art kleiner chapka.", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[11] = ["Chapka", "Auch Mantel genannt.", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[40] = ["Winterschaal und Kappe", "Sehr angenehm", "Sehr Warm"];
    cc[84] = ["Bauer", "Deine Pflanzen wachsen schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[85] = ["Winterkapuze", "Du bist ein Wilder Schurke", "Du kannst jemand bestehlen solange:", "1) Es nacht ist", "2) Du nichts trägst", "3) dich niemand für vier Sekunden berührt hat", "4) Du nicht in der Nähe eines Feuers bist", "5) Dein Ziel keine Winterbauernkleidung trägt", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[86] = ["Winterbauern", "Deine Pflanzen wachsen deutlich schneller", "Hält dich warm außerhalb von Wasser und Winter"];
    cc[48] = ["Tauchermaske", "Du bist schneller im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 2, Verteidigung gegen Tiere: 8"];
    cc[47] = ["Supertauchermaske", "Du bist sehr schnell im Wasser", "Hält dich warm im Wasser", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    cc[179] = ["Drachenkugel", "Erhalten bei abschließung der Quest"];
    cc[143] = ["Drachenherz", "Verwandelt dich in einen Geist, sobald du stirbst!", "Du bist für 60 Sekunden ein Geist", "Finde ein Wiederbelebungsstein."];
    cc[169] = ["Grüner Edelstein", "Du hast nicht gemogelt, versprochen?"];
    cc[170] = ["Orangener Edelstein", "Nur ein echter Pirat findet ihn!"];
    cc[171] = ["Blauer Edelstein", "Für sehr nette Leute"];
    cc[77] = ["Grüne Krone", "Du heilst dich selbst sehr schnell", "Heilung über Zeit: 40", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    cc[78] = ["Orangene Krone", "Du fühlst dich plötzlich als hättest du mehr Glück", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    cc[79] = ["Blaue Krone", "Sobald du stirbst wirst du ein Geist", "Du wirst allerdings dein Schwert und deine Spitzhacke verlieren", "Verteidigung gegen Spieler: 4, Verteidigung gegen Tiere: 16"];
    cc[174] = ["Eimer", "Nützlich um einen Brunnen zu füllen", "Ein Eimer ist vergleichbar mit zwölf Flaschen"];
    cc[175] = ["Leerer Eimer", "Du musst den Eimer in der Nähe einer Wasserquelle füllen"];
    cc[121] = ["Flasche", "Erlaubt dir überall Wasser zu trinken", "Wasser: 50"];
    cc[122] = ["Leere Flasche", "Du musst die Flasche in der Nähe einer Wasserquelle füllen"];
    cc[124] = ["Leere Gießkanne", "Du musst es mit einer Wasserquelle füllen"];
    cc[49] = ["Gießkanne", "Erlaubt das wässern von Pflanzen", "Schaden: 1"];
    cc[29] = ["Rucksack", "Mehr Platz im Inventar!"];
    cc[114] = ["Papier", "Wird fürs Büchermachen verwendet"];
    cc[28] = ["Buch", "Reduziert die benötigte Zeit beim herstellen von Gegenständen", "Muss in der Hand gehalten werden um den Effekt zu nutzen", "Schaden: 1"];
    cc[189] = ["Verband", "Heile dich schneller", "Heilung über Zeit: 30", "Effekt: 5"];
    cc[142] = ["Schloss", "Erlaubt dir deine Truhe zu verschließen"];
    cc[152] = ["Dietrich", "Erlaubt dir eine verschlossene Truhe zu öffnen"];
    cc[153] = ["Totem", "Erlaubt dir ein Team zu gründen", "Teile Türen und Truhen", "verletzende Strukturen schaden deinen Freunden nicht mehr"];
    cc[119] = ["Brücke", "Sehr nützlich über Wasser", "Es erlaubt dir zu trinken ohne zu ertrinken", "lässt dich schneller auf dem Wasser laufen"];
    cc[177] = ["Schild", "Hinterlasse eine Nachricht für andere hier", "Haltbarkeit: 200"];
    cc[184] = ["Dach", "Versteckt dich ein wenig und hält warm dabei!"];
    cc[176] = ["Brunnen", "Erlaubt dir deine Flasche zu füllen, eine mobile Wasserquelle", "Haltbarkeit: 1000"];
    cc[156] = ["Holzwand", "Kennst du den Wandtanz?", "Haltbarkeit: 1000"];
    cc[157] = ["Steinwand", "Es sieht ein wenig Ernsthafter aus.", "Haltbarkeit: 1500"];
    cc[158] = ["Goldwand", "Gold an deiner Wand? Es leuchtet ein wenig.", "Haltbarkeit: 2000"];
    cc[159] = ["Diamantwand", "So leuchtend, pass auf deine Augen auf", "Haltbarkeit: 2500"];
    cc[116] = ["Amethystwand", "Du musst dich wirklich fürchten raus zu gehen!", "Haltbarkeit: 3000"];
    cc[154] = ["Holzstacheln", "Kann deine Gegner verletzen", "Schaden: 10, Schaden beim Angreifen: 2", "Haltbarkeit: 150"];
    cc[162] = ["Steinstacheln", "Ich würde lieber nicht dein Gegner sein.", "Schaden: 20", "Schaden beim Angreifen: 3", "Haltbarkeit: 300"];
    cc[163] = ["Goldstacheln", "Du bist grausam.", "Schaden: 30", "Schaden beim Angreifen: 3", "Haltbarkeit: 600"];
    cc[164] = ["Diamantstacheln", "Du magst Gesellschaft nicht.", "Schaden: 40", "Schaden beim Angreifen: 4", "Haltbarkeit: 1200"];
    cc[117] = ["Amethyststacheln", "Was zur Hölle haben deine Nachbarn dir angetan?", "Schaden: 50", "Schaden beim Angreifen: 4", "Haltbarkeit: 2400"];
    cc[160] = ["Holztür", "Kann von dir oder deinen Freunden geöffnet werden", "Haltbarkeit: 1000"];
    cc[165] = ["Steintür", "Eine stärkere Tür ist ernsthafter", "Haltbarkeit: 1500"];
    cc[166] = ["Goldtür", "Baust du el dorado?", "Haltbarkeit: 2000"];
    cc[167] = ["Diamanttür", "Für ein scheinendes Haus", "Haltbarkeit: 2500"];
    cc[118] = ["Amethysttür", "Ist dein Haus ein verschlossener Safe?", "Haltbarkeit: 3500"];
    cc[113] = ["Ofen", "Wärmt dich", "Es verbraucht alle 5 Sekunden eine Einheit Holz", "Haltbarkeit: 1000"];
    cc[129] = ["Windmühle", "Kann mit Weizen, Mehl herstellen", "Es braucht 5 Sekunden um Mehl herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    cc[138] = ["Brotofen", "Erlaubt dir mit Mehl, Brot herzustellen", "Es braucht 5 Sekunden um Brot herzustellen", "Gibt dir Punkte während es arbeitet", "Haltbarkeit: 2000"];
    cc[145] = ["Wiederbelebungsstein", "Es ist Magie", "Wiederbelebt dich, wenn du ein Geist bist", "Du wirst deine Waffe und Spitzhacke verlieren", "Haltbarkeit: 200"];
    cc[300] = "Du kannst diesem Server nicht beitreten";
    cc[301] = "Gekickt: ";
    cc[302] = "Dein Schlüssel wurde bereits von jemand anderem benutzt";
    cc[303] = "Dein Schlüssel ist falsch";
    cc[304] = "Deine Version ist veraltet, säubere dein Cache";
    cc[305] = "Es gibt keine neuen Ressourcen";
    cc[306] = "Du hast einen Tag überlebt";
    cc[307] = "Du hast überlebt ";
    cc[308] = " Tage";
    cc[309] = "Du bist gestorben ;-;";
    cc[310] = "Server kann kein Spawnplatz finden! Drücke immer wieder auf spielen!";
    cc[311] = "Server ist voll! Drücke immer wieder auf spielen!";
    cc[312] = "Ressource ist leer";
    cc[313] = "Dein Inventar ist voll (rechts-klick um Gegenstände zu entfernen)";
    cc[314] = " ist gestorben";
    cc[315] = "Das ist nicht das richtige Werkzeug";
    cc[316] = "Du bist einem Team beigetreten";
    cc[317] = "Du bist gestorben";
    cc[318] = " ist dem Team beigetreten";
    cc[319] = "Dein Team wurde zerstört";
    cc[320] = "Du hast das Team verlassen";
    cc[321] = " hat das Team verlassen";
    cc[322] = "Jemand hat dein Token gestohlen :>";
    cc[323] = "Suche dir ein Server aus";
    cc[324] = "Spieler";
    cc[325] = "alle Spieler";
    cc[326] = "Spieler in diesem Modus";
    cc[327] = "Bald verfügbar...";
    document[fa]("nickname_input").placeholder = "Spitzname";
    ec[0] = ["Du wurdest ohne Grund getötet"];
    ec[1] = ["Du bist verhungert, wie der Name des Spiels andeutet"];
    ec[2] = ["Du bist erfroren. Zu schade", "Du bist an Unterkühlung gestorben. Versuche nächstes Mal zu einem Feuer zu gehen ."];
    ec[3] = ["Ein Spieler hat dich getötet, während er dir gesagt hat 'git gud.'", "Du wurdest von einem Spieler ermordet, mach dir keine Sorgen, er wird wahrscheinlich auch sterben ."];
    ec[4] = ["Du bist zu nah ans Feuer gegangen und zu tode gebrannt. Schlechte Idee.", "Du wurdest von einem Feuer umgebracht. Feuer tut weh. Schreib eine Geschichte darüber."];
    ec[5] = ["Dein Körper wird zu einem Spinnennest", "Eine Spinne hat dich getötet. Zumindest war es kein Hase."];
    ec[6] = ["Dieser Wolf wird nicht mehr verhungern", "Sie sind keine Hunde. Wölfe mögen es nicht gestreichelt zu werden."];
    ec[7] = ["Der Fuchs war zu schnell für dich", "Der Fuchs hat dich in eine Box verwandelt. Seit wann haben Tiere magische Kräfte?"];
    ec[8] = ["Der Bär wollte nur eine Umarmung.", "Der Bär war zu viel zu ertragen. Es tut mir nicht leid."];
    ec[9] = ["Du wurdest von einem Drachen knusprig gebraten. Zu schade.", "Du wurdest von einem Drachen erdrückt. Zerquetscht zu werden ist ein schrecklicher Weg zu sterben."];
    ec[10] = ["Du bist in eine Stachelwand gesprungen. Keine gute Idee...", "Du wurdest von einer Stachelwand getötet. Die meisten Leute sind sensibel genug keine spitzen Sachen anzufassen."];
    ec[11] = ["Sogar Geister können sterben.", "Du hast es nicht geschafft wiederbelebt zu werden. Das ist ein Spiel, also lebst du nachdem du stirbst..."];
    ec[12] = ["Ein Bakterium von deinem rohen Fleisch hat dich getötet. Das Spiel ist definitiv zu schwierig.", "Du hast das rohe Fleisch getötet. Es hat dich ebenfalls getötet."];
    ec[13] = ["Du bist verdurstet. Solltest lieber deinen eigenen Urin trinken."];
    ec[14] = ["Wusstest du, dass dein Mund beim Schwimmen immer unterm Wasser ist? Jetzt weißt du es."];
    ec[15] = ["Mach dir keine Sorge, der Piranha findet dich lecker.", "Nebenbei: Piranhas essen Menschen. Dich mit eingeschlossen."];
    ec[16] = ["LapaMauve plant nicht, dass du den Kraken töten kannst", "Ein Kraken hat deinen Schädel zertrümmert."];
    ec[17] = ["Deine Haut fällt auseinander, die Sonne hat dich umgebracht."];
    ec[18] = ["Knoblauch in deiner Tasche hat dein Gehirn gebraten "];
    ec[19] = ["Stehe als ein Vampir nicht neben den Knoblauchnelken."];
    ec[20] = ["Du hast als ein Vampir Knoblauch gegessen, was hast du erwartet?"];
    ec[21] = ["Dein Körper ist von einem Dornenbusch umgeben.Während du versuchst zu entkommen löst sich deine Haut von deinem Körper und dein Herz hört auf zu schlagen."];
    ZOMBIE_GRUMBLE = "Uuunnnggg";
    ZOMBIE_GRUMBLES = ["Uuunnnggg...Ich verhungere...", "Brauche dein Gehirn... Uuunnnggg...", "Hier gibt es frisches Fleisch... Uuunnnggg", "Uuunnnggg...Du bist lecker", "Uuunnnggg...", "Essen... uuunnnggg...", "Ich rieche Blut... Uuunnnggg"];
  }, ac = function () {
    cc[178] = ["You feel a great power emanating from this orb"];
    ec[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    cc[190] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    cc[328] = " BACK TO THE GAME";
    cc[329] = " Share on Twitter";
    cc[330] = " Share on Facebook";
    cc[331] = "You can buy items on the shop in the next game with your points";
    cc[332] = "points";
    cc[333] = "Score";
    cc[334] = "Kill";
    cc[335] = "Days survived";
    cc[336] = "Building method: Free. Press G to change";
    cc[337] = "Building method: Grid. Press G to change";
    cc[191] = ["Crab Claw", "Crab claws can also be eaten", "Food: 10"];
    cc[18] = ["Crab Spear", "Allow you to calm crabs, and heal them", "Damage: 14", "Building Damage: 4"];
    cc[61] = ["Crab Helmet", "You are the king of crabs!", "Crabs follow you", "They can't hit you and you can't hit them", "Players Defense: 4", "Animals Defense: 13"];
    cc[192] = ["Bed", "Relax in this confortable bed", "You are less cold, less thirsty, and less hungry", "You will be cured faster", "Durability: 400"];
    document[fa]("typequest").innerHTML = "Chrono Quests";
    document[fa]("timeremainingquest").innerHTML = "Time Remaining";
    document[fa]("constraintquest").innerHTML = " Constraints";
    document[fa]("claim_rewards").innerHTML = " Claim rewards";
    document[fa]("rewardquest").innerHTML = " Reward";
    document[fa]("killdragon_1").innerHTML = " Collect 1 dragon heart";
    document[fa]("amethyst_2").innerHTML = " Gather 1 amethyst";
    document[fa]("survive20min_3").innerHTML = "Survive without losing life";
    document[fa]("treasure_chest_4").innerHTML = " Open 5 treasure chests";
    document[fa]("dont_hit_5").innerHTML = " Be peaceful";
    document[fa]("bread_6").innerHTML = " Collect 100 bread in deep winter";
    document[fa]("winter_7").innerHTML = " After 1 day, survive in winter";
    for (var c = 0; c < 7; c++) {
      document[fa]("claim_reward_" + c).innerHTML = "CLAIM REWARD!";
    }
    document[fa]("quit_chronoquest").innerHTML = " QUIT";
    cc[7] = ["Ręka"];
    cc[134] = ["Ziemia", "Brudna!"];
    cc[120] = ["Piasek", "Mam go w oczach!"];
    cc[103] = ["Drewno", "Nie możesz mieć go wystarczająco!"];
    cc[102] = ["Kamień", "Także nazywany skałą"];
    cc[105] = ["Złoto", "Bądź hojny, daj trochę innym"];
    cc[106] = ["Diament", "Co z nim zrobisz?"];
    cc[115] = ["Ametyst", "Jest Fiołkowy jak Lapa"];
    cc[125] = ["Mąka", "Używana w gotowaniu"];
    cc[127] = ["Ciastko", "Przepyszne ciasteczko od babci", "Jedzenie: 50"];
    cc[130] = ["Ciasto", "Raj dla smakoszy", "Jedzenie: 100"];
    cc[110] = ["Surowe mięso", "Możesz je upiec w ogniu", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 15"];
    cc[111] = ["Pieczone mięso", "Krwisty stek, proszę", "Jedzenie: 35"];
    cc[131] = ["Surowa ryba", "Myślę, że nadal jest żywa", "Powoduje zatrucie pokarmowe: 10", "Jedzenie: 18"];
    cc[132] = ["Pieczona ryba", "Z cytryną jest idealna", " Jedzenie: 35"];
    cc[137] = ["Chleb", "Świetny Francuski chleb", "Jest walutą używaną w markecie", "Jedzenie: 15"];
    cc[139] = ["Kanapka", "Smakuje jak kraboburger", "Jedzenie: 100"];
    cc[194] = ["Cukierki", "Tylko dla dzieci!", "Jedzenie: 100"];
    cc[193] = ["Laska cukrowa", "Spróbuj, jest przepyszna", "Jedzenie: 100"];
    cc[195] = ["Girlanda", "Idealna do dekorowania dachów"];
    cc[109] = ["Nasionko jagody", "Wyrośnie w jagody", "Narodziny: 2min", "Rośnięcie: 55s", "Podlewanie: 3min 20s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    cc[104] = ["Jagody", "Jagody są pyszne!", "Jedzenie: 10"];
    cc[126] = ["Nasiono pszenicy", "Wyrośnie w pszenicę", "Narodziny: 2min", "Rośnięcie: 16s", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    cc[128] = ["Pszenica", "Zamienia się w mąkę jeżeli wrzucisz ją do wiatraka"];
    cc[182] = ["Nasiono dyni", "Wyrośnie w dynię", "Narodziny: 2min 40s", "Rośnięcie: 2min", "Podlewanie: 2min", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    cc[183] = ["Dynia", "Przypomina mi o Halloween", "Jedzenie: 30"];
    cc[185] = ["Nasionko czosnku", "Bardzo niebezpieczne dla wampirów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 1min 10s", "Podlewanie: 1min 40s", "Wytrzymałość: 700", "Czas życia: 8 dni"];
    cc[186] = ["Czosnek", "Leczy cię i redukuje zimno", "Jedzenie: 14", "Uzdrawia z biegiem czasu: 30", "Efekt: 1"];
    cc[187] = ["Nasiono kolczastego krzewu", "Może zranić twoich wrogów", "Obrażenia: 20", "Narodziny: 4min", "Rośnięcie: 15s", "Podlewanie: 3min", "Wytrzymałość: 1000", "Czas życia: 8 dni"];
    cc[188] = ["Kolczasty krzew", "Kłuje!"];
    cc[135] = ["Donica", "Naprawdę, użyj jej", "Z tym genetycznie modyfikowanym nawozem, twoje rośliny", "będą rosły znacznie szybciej i będą potrzebować mniej wody", "Wytrzymałość: 2000"];
    cc[136] = ["Lód", "Użyteczny do robienia ciast i wody"];
    cc[55] = ["Klucz mechaniczny", "Do naprawiania drzwi i kolców", "Uszkodzenie: 2"];
    cc[168] = ["Wilcza skóra", "Szczeniaczek? Ale gdzie jest szczeniaczek?!"];
    cc[2] = ["Skóra królika", "Ten królik był taki słodziutki..."];
    cc[172] = ["Skóra", "Jesteś fabryką chleba"];
    cc[173] = ["Ciemna skóra", "Byłeś gotowy zrobić coś złego"];
    cc[140] = ["Zimowa skóra", "Te zwierzęta chciały się tylko przytulić..."];
    cc[133] = ["Łuski", "Pachnie jak ryba!"];
    cc[123] = ["Skóra krakena", "Nie byłeś zbyt przestraszony?"];
    cc[107] = ["Ognisko", "Ociepli cię!", "Wytrzymałość: 150", "Czas życia: 2min"];
    cc[112] = ["Duże ognisko", "Ociepli cię na dłużej!", "Wytrzymałość: 400", "Czas życia: 6min"];
    cc[108] = ["Stół rzemieślniczy", "Użyteczny do stwarzania przedmiotów"];
    cc[155] = ["Nić", "Używany w tworzeniu czapek i plecaków"];
    cc[141] = ["Diamentowa nić", "Używana w tworzeniu specjalnych czapek"];
    cc[161] = ["Skrzynia", "Pozwala ci na przechowywanie przedmiotów", "Wytrzymałość: 500"];
    cc[57] = ["Drewniany miecz", "To coś działa?", "Obrażenia: 12", "Obrażenia do budowli: 4"];
    cc[0] = ["Kamienny miecz", "Bądź miły dla innych", "Obrażenia: 19", "Obrażenia do budowli: 6"];
    cc[5] = ["Złoty miecz", "Król lasu", "Obrażenia: 22", "Obrażenia do budowli: 7"];
    cc[6] = ["Diamentowy miecz", "Możesz poczuć moc", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    cc[9] = ["Piracki miecz", "Ayyyyy!", "Dłuższy niż zwykły miecz", "Obrażenia: 24", "Obrażenia do budowli: 8"];
    cc[30] = ["Ametystowy miecz", "fiołkowy to najpiękniejszy kolor na świecie", "Damage: 27", "Obrażenia do budowli: 9"];
    cc[62] = ["Smoczy miecz", "Bez litości!", "Obrażenia: 30", "Obrażenia do budowli: 10"];
    cc[16] = ["Smocza włócznia", "Zabij ich wszystkich!", "Obrażenia: 22", "Obrażenia do budowli: 6"];
    cc[8] = ["Drewniany kilof", "Może wydobywać tylko kamienie i drewno", "Obrażenia: 1"];
    cc[1] = ["Kamienny kilof", "Może wydobywać drewno, kamienie i złoto", "Obrażenia: 2"];
    cc[3] = ["Złoty kilof", "Może także wydobywać diamenty", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    cc[4] = ["Diamentowy kilof", "Może wydobywać wszystko", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    cc[31] = ["Ametystowy kilof", "Może wydobywać wszystko. Wygląda fantastycznie!", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    cc[35] = ["Kamienny młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 2", "Obrażenia do budowli: 20"];
    cc[36] = ["Złoty młot", "Pomocny w niszczeniu budowli", "Nie działa najlepiej na ametyście", "Obrażenia: 3", "Obrażenia do budowli: 30"];
    cc[37] = ["Diamentowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 4", "Obrażenia do budowli: 40"];
    cc[38] = ["Ametystowy młot", "Pomocny w niszczeniu budowli", "Obrażenia: 5", "Obrażenia do budowli: 50"];
    cc[45] = ["Super młot", "Miałeś kiedyś plan zniszczenia świata?", "Obrażenia: 12", "Obrażenia do budowli: 70"];
    cc[12] = ["Drewniana włócznia", "Jak patyk, ale kłuje.", "Obrażenia: 10", "Obrażenia do budowli: 2"];
    cc[13] = ["Kamienna włócznia", "Początek ewolucji!", "Obrażenia: 14", "Obrażenia do budowli: 4"];
    cc[14] = ["Złota włócznia", "Uważaj, kłuje!", "Obrażenia: 15", "Obrażenia do budowli: 5"];
    cc[15] = ["Diamentowa włócznia", "Jesteś gotowy, aby zabić smoka", "Obrażenia: 17", "Obrażenia do budowli: 5"];
    cc[33] = ["Ametystowa włócznia", "Smoki już nie są dla ciebie zagrożeniem", "Obrażenia: 18", "Obrażenia do budowli: 6"];
    cc[46] = ["Kamienna łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 2"];
    cc[50] = ["Złota łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 3", "Obrażenia do budowli: 1"];
    cc[51] = ["Diamentowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 4", "Obrażenia do budowli: 1"];
    cc[52] = ["Ametystowa łopata", "Kop w ziemi aby zdobyć ziemię, lód i piasek", "Możesz także zdobyć minerały", "Obrażenia: 5", "Obrażenia do budowli: 1"];
    cc[58] = ["Drewniany hełm", "Lepsze niż nic", "Obrona przed graczami: 1", "Obrona przed zwierzętami: 4"];
    cc[25] = ["Kamienny hełm", "Jesteś gotowy do bitwy!", "Obrona przed graczami: 2", "Obrona przed zwierzętami: 8"];
    cc[26] = ["Złoty hełm", "Zwany także hełmem barbarzyńców", "Obrona przed graczami: 4", "Obrona przed zwierzętami: 13"];
    cc[27] = ["Diamentowy hełm", "Nie przechwalaj się za bardzo", "Obrona przed graczami: 5", "Obrona przed zwierzętami: 19"];
    cc[43] = ["Ametystowy hełm", "Nie boisz się już niczego", "Obrona przed graczami: 6", "Obrona przed zwierzętami: 23"];
    cc[59] = ["Smoczy hełm", "Zmierzysz się z całym światem", "Obrona przed graczami: 8", "Obrona przed zwierzętami: 27"];
    cc[23] = ["Czapka odkrywcy", "Zwierzęta nie będą zwracały na ciebie uwagi", "ale nie rób hałasu!", "Ciepło w i poza zimą"];
    cc[41] = ["świąteczna czapka", "Oh, oh, oh, Wesołych Świąt", "Ciepło w i poza zimą"];
    cc[42] = ["Czapka elfa", "Nie pozwól się być wykorzystywanym, mały śnieżny elfie!", "Ciepło w i poza zimą"];
    cc[83] = ["Kaptur", "Jesteś łobuzem", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w chłopską tunikę", "Jest ciepło w i poza zimą"];
    cc[10] = ["Nauszniki", "Jakiś inny rodzaj małej czapki.", "Ciepło w i poza zimą"];
    cc[11] = ["Czapka", "Także nazywana płaszczem.", "Ciepła w i poza zimą"];
    cc[40] = ["Szal i czapka", "Bardzo wygodna, bardzo ciepła"];
    cc[84] = ["Chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepła w i poza zimą"];
    cc[85] = ["Zimowy kaptur", "Możesz coś komuś ukraść jeśli", "- Jest noc", "- Nic przy sobie nie masz", "- Jeżeli nic przez chwilę nie dotykałeś", "- Nie jesteś blisko ognia", "- Twój cel nie jest ubrany w tunikę zimowego chłopa", "Jest ciepło w i poza zimą"];
    cc[86] = ["Zimowa chłopska tunika", "Twoje rośliny rosną szybciej", "Ciepło w i poza zimą"];
    cc[48] = ["Maska do nurkowania", "Jesteś szybki w wodzie", "Ciepło", "Obrona przed graczami: 2, Obrona przed zwierzętami: 8"];
    cc[47] = ["Strój głębinowy", "Jesteś bardzo szybki w wodzie", "Ciepło ci w wodzie", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    cc[179] = ["Smocza kula", "Zdobyta podczas zadania"];
    cc[143] = ["Smocze serce", "Zamienia cię w ducha po śmierci!", "Jesteś duchem na 60 sekund", "Znajdź kamień rezurekcyjny"];
    cc[169] = ["Zielony kryształ", "Nie oszukiwałeś, przysięgasz?"];
    cc[170] = ["Pomarańczowy kryształ", "Tylko prawdziwy pirat może go znaleźć!"];
    cc[171] = ["Niebieski kryształ", "Dla zbyt miłych ludzi"];
    cc[77] = ["Zielona korona", "Szybko się leczysz", "Uzdrawia z biegiem czasu: 40", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    cc[78] = ["Pomarańczowa korona", "Nagle poczułeś smak szczęścia", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    cc[79] = ["Niebieska korona", "Gdy już będziesz martwy, zamienisz się w ducha", "Przy okazji stracisz swoją broń i kilof", "Obrona przed graczami: 4, Obrona przed zwierzętami: 16"];
    cc[174] = ["Wiadro", "Również przydatne do napełnienia studni", "Jedno wiadro jest jak dwanaście butelek"];
    cc[175] = ["Puste wiadro", "Musisz napełnić to wiadro wodą"];
    cc[121] = ["Butelka", "Pozwala pić wodę wszędzie", "Woda: 50"];
    cc[122] = ["Pusta butelka", "Możesz napełnić tą butelkę blisko źródła wody"];
    cc[124] = ["Pusta konewka", "Musisz ją napełnić w źródle wody, aby ją użyć"];
    cc[49] = ["Konewka", "Pozwala podlewać rośliny", "Obrażenia: 1"];
    cc[29] = ["Plecak", "Więcej miejsca na twoje przedmioty!"];
    cc[114] = ["Papier", "Używany w tworzeniu książki"];
    cc[28] = ["Książka", "Pozwala znacznie skrócić wytwarzanie", "Musisz ją nosić by zadziałała", "Uszkodzenie 1"];
    cc[189] = ["Bandaż", "Szybciej zregeneruj życie", "Uzdrawia z biegiem czasu: 30", "Efekt: 5"];
    cc[142] = ["Zamek", "Pozwala ci zamknąć skrzynię"];
    cc[152] = ["Wytrych", "Pozwala ci odblokować jedną skrzynię"];
    cc[153] = ["Totem", "Pozwala ci stworzyć drużynę", "Dziel się drzwiami i zamkniętymi skrzyniami", "Szkodliwe budynki nie zranią twoich przyjaciół"];
    cc[119] = ["Most", "Bardzo przydatny w wodzie", "Pozwala ci pić bez utonięcia", "Chodzisz szybciej w wodzie"];
    cc[177] = ["Tabliczka", "Zostaw wiadomość dla innych", "Wytrzymałość: 200"];
    cc[184] = ["Dach", "Trochę cie ogrzewa i chowa!"];
    cc[176] = ["Studnia", "Umożliwia napełnienie butelki", "Wytrzymałość: 1000"];
    cc[156] = ["Drewniany mur", "Znasz taniec ścian?", "Wytrzymałość: 1000"];
    cc[157] = ["Kamienny mur", "Jest to trochę bardziej poważniejsze.", "Wytrzymałość: 1500"];
    cc[158] = [" Złoty mur", "Złoto na twoich murach? To trochę krzykliwe.", "Wytrzymałość: 2000"];
    cc[159] = ["Diamentowy mur", "Jaki błyszczący, uważaj na oczy", "Wytrzymałość: 2500"];
    cc[116] = ["Ametystowy mur", "Musisz bardzo się bać, aby wyjść!", "Wytrzymałość: 3000"];
    cc[154] = ["Drewniany kolczasty mur", "Może uszkodzić wrogów", "Obrażenia: 10, Obrażenia po uszkodzeniu: 2", "Wytrzymałość: 150"];
    cc[162] = ["Kamienny kolczasty mur", "Nie chciałbym być twoim wrogiem.", "Obrażenia: 20", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 300"];
    cc[163] = ["Złoty kolczasty mur", "Jesteśtaki okrutny.", "Obrażenia: 30", " Obrażenia po uszkodzeniu: 3", "Wytrzymałość: 600"];
    cc[164] = ["Diamentowy kolczasty mur", "Raczej nie lubisz towarzystwa.", "Obrażenia: 40", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 1200"];
    cc[117] = ["Ametystowy kolczasty mur", "Co ci sąsiedzi ci zrobili?", "Obrażenia: 50", "Obrażenia po uszkodzeniu: 4", "Wytrzymałość: 2400"];
    cc[160] = ["Drewniane drzwi", "Może być otwarte przez ciebie lub przyjaciół", "Wytrzymałość: 1000"];
    cc[165] = ["Kamienne drzwi", "Solidne drzwi są bardziej poważne ", "Wytrzymałość: 1500"];
    cc[166] = ["Złote drzwi", "Czy odbudowujesz El Dorado?", "Wytrzymałość: 2000"];
    cc[167] = ["Diamentowe drzwi", "Dla błyszczącego domu", "Wytrzymałość: 2500"];
    cc[118] = ["Ametystowe drzwi", "Czy twój dom to zamknięty sejf?", "Wytrzymałość: 3000"];
    cc[113] = ["Piec", "Ogrzewa cię", "Zużywa drewno co 5 sekund", "Wytrzymałość: 1000"];
    cc[129] = ["Młyn", "Może produkować mąkę z pszenicy", "Przygotowanie mąki zajmuje 5 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    cc[138] = ["Piec do chleba", "Pozwala na wypiek chleba z mąki", "Przygotowanie chleba zajmuje 10 sekund", "Zwraca punkty podczas pracy", "Wytrzymałość: 2000"];
    cc[145] = ["Kamień rezurekcyjny", "To magia", "Wskrzesi cię jeśli jesteś duchem", "Stracisz swoja broń i kilof", "Wytrzymałość: 200"];
    cc[300] = "Nie możesz dołączyć do tego serwera";
    cc[301] = "Wyrzucony: ";
    cc[302] = "Twój klucz jest aktualnie używany przez innego gracza";
    cc[303] = "Twój klucz jest nieprawidłowy";
    cc[304] = "Posiadasz starszą wersję, musisz wyczyścić swoją pamięć";
    cc[305] = "Nie ma nowych minerałów, zwierząt, i jedzenia";
    cc[306] = "Przeżyłeś 1 dzień";
    cc[307] = "Przeżyłeś ";
    cc[308] = " dni";
    cc[309] = "Jesteś martwy ;-;";
    cc[310] = "Serwer nie może znaleźć miejsca na spawn! Spamuj przycisk zagraj! Lub wybierz inny serwer...";
    cc[311] = "Serwer jest pełny! Spamuj przycisk zagraj!";
    cc[312] = "Źródło jest puste";
    cc[313] = "Ekwipunek jest pełny (użyj prawego przycisku myszy, żeby wyrzucić przedmiot)";
    cc[314] = " jest martwy";
    cc[315] = "To nie jest właściwe narzędzie";
    cc[316] = "Dołączyłeś do drużyny";
    cc[317] = "Jesteś martwy";
    cc[318] = " dołączył do drużyny";
    cc[319] = "Twoja drużyna została zniszczona";
    cc[320] = " Opuściłeś drużynę";
    cc[321] = " opuścił drużynę";
    cc[322] = "Ktoś ukradł twój żeton :>";
    cc[323] = "Wybierz serwer";
    cc[324] = "graczy";
    cc[325] = "wszystkich graczy";
    cc[326] = "graczy w tym trybie";
    cc[327] = "Już wkrótce...";
    document[fa]("nickname_input").placeholder = "Przydomek";
    ec[0] = ["Zostałeś zabity bez powodu"];
    ec[1] = ["Umarłeś z głodu, jak nazwa gry wskazuje"];
    ec[2] = ["Zamarzłeś na śmierć. Ale smutne", "Masz hipotermię. Następnym razem, zamiast tego spróbuj siedzieć obok ogniska."];
    ec[3] = ["Gracz zabił cię, mówiąc ci 'git gud.' ", "Zostałeś zamordowany przez gracza. Nie martw się, ten gracz też zginie, ewentualnie."];
    ec[4] = ["Byłeś za blisko ogniska i spłonąłeś. Zły pomysł.", "Zginąłeś od ognia. Ogień cię rani. Idź i napisz o tym historię."];
    ec[5] = ["Twoje ciało stało się gniazdem dla pajęczych jaj", "Pająk cię zabił. Przynajmniej to nie był królik."];
    ec[6] = ["Wilk już nie będzie głodował po zjedzeniu cię", "To nie są pieski.Wilki nie lubią jak się je głaszcze."];
    ec[7] = ["Lis był dla ciebie za szybki", "Lis zmienił cię w pudło.Od kiedy zwierzęta mają magiczne zdolności?"];
    ec[8] = ["Niedźwiedź chciał się tylko przytulić.", "Niedźwiedź był biedny. Nie jest mi przykro."];
    ec[9] = ["Zostałeś spalony na popiół przez smoka. Jakie to smutne.", "Zostałeś spłaszczony przez smoka. Być zmiażdżonym to okropny sposób na śmierć."];
    ec[10] = ["Wskoczyłeś na kolczasty mur. Niezbyt dobry pomysł...", "Zostałeś zabity przez kolczasty mur. Większość ludzi ludzi jest wystarczająco rozsądna, aby nie dotykać spiczastych rzeczy."];
    ec[11] = ["Nawet duch potrafi umrzeć.", "Nie udało ci się dokonać rezurekcji. To jest gra, więc żyjesz po śmierci, więc..."];
    ec[12] = ["Bakterie z twojego surowego mięsa zabiły cię. Ta gra jest zdecydowanie za trudna.", "Ty zabiłeś surowe mięso. Ono zabiło ciebię."];
    ec[13] = ["Zginąłeś z pragnienia. Lepiej pić własny mocz."];
    ec[14] = ["Czy wiedziałeś, że usta głodomorka są zawsze pod wodą podczas pływania? Teraz wiesz."];
    ec[15] = ["Nie martw się, zasmakowałeś pirani.", "Zabawny fakt: Piranie jedzą ludzi, włączając ciebie."];
    ec[16] = ["LapaMauve nie planuje abyś mógł zabić krakena", "Kraken rozwalił twoją czaszkę."];
    ec[17] = ["Twoja skóra odpada, słońce cię zabija."];
    ec[18] = ["Czosnek w twoich kieszeniach  ugotował ci mózg."];
    ec[19] = ["Jako wampir, nie stałbym blisko ząbków czosnku."];
    ec[20] = ["Zjadłeś czosnek jako wampir, czego oczekiwałeś?"];
    ec[21] = ["Twoje ciało owija się w cierniste krzaki.Kiedy próbujesz uciec,twoja skóra odpada i twoje serce przestaje bić."];
    ZOMBIE_GRUMBLE = "Uuunnnggg";
    ZOMBIE_GRUMBLES = ["Uuunnnggg... Głoduję", "Potrzebuję twojego mózgu Uuunnnggg...", "Świeże mięso tutaj.. Uuunnnggg", "Uuunnnggg... Jesteś pyszny", "Uuunnnggg...", "Jeść... uuunnnggg...", "Czuję krew... Uuunnnggg"];
  }, bc = function () {
    cc[178] = ["You feel a great power emanating from this orb"];
    ec[22] = ["This crab, though frightening in nature, pinched your fingertips so hard that you had a heart attack."];
    cc[190] = ["Crab sticks", "Oh, yeah? Is there crab in the crab sticks?", "Food: 20"];
    cc[328] = " RETOUR AU JEU";
    cc[329] = " Partage sur Twitter";
    cc[330] = " Partage sur Facebook";
    cc[331] = "Tu peux acheter des objets dans le magasin à ta prochaine partie avec tes points";
    cc[332] = "points";
    cc[333] = "Score";
    cc[334] = "Tués";
    cc[335] = "Jours survécus";
    cc[336] = "Mode de construction: Libre. Appuie sur G pour changer";
    cc[337] = "Mode de construction: Grille. Appuie sur G pour changer";
    cc[191] = ["Pince de crabe", "Les pinces de crabes peuvent aussi être mangées", "Food: 10"];
    cc[18] = ["Lance en crabe", "Te permet de soigner les crabes et de les calmer", "Donne un bonus de +10 degats quand elle est portée", "avec un casque un crabe sur un Crab King", "Damage: 14", "Building Damage: 4"];
    cc[61] = ["Casque en crabe", "Tu es le Roi des Crabes!", "Les crabes te suivent", "Ils ne peuvent pas te frapper et toi non plus", "Players Defense: 4", "Animals Defense: 13"];
    cc[192] = ["Lit", "Repose-toi dans ce lit douillet", "Tu as moins froid, moins faim et moins soif", "Tu te régénères plus vite", "Durability: 400"];
    document[fa]("typequest").innerHTML = "Chrono Quêtes";
    document[fa]("timeremainingquest").innerHTML = "Temps Restant";
    document[fa]("constraintquest").innerHTML = " Contraintes";
    document[fa]("claim_rewards").innerHTML = " Résultat";
    document[fa]("rewardquest").innerHTML = " Récompenses";
    document[fa]("killdragon_1").innerHTML = " Collecte 1 Cœur de dragon dans la cave";
    document[fa]("amethyst_2").innerHTML = " Récolte 1 améthyste";
    document[fa]("survive20min_3").innerHTML = "Survis sans perdre de vie";
    document[fa]("treasure_chest_4").innerHTML = " Ouvre 5 coffres au trésor";
    document[fa]("dont_hit_5").innerHTML = " Sois pacifique";
    document[fa]("bread_6").innerHTML = " Cuisine 100 pains en hiver, seul et sans retour en arrière";
    document[fa]("winter_7").innerHTML = " Après 1 jour, survis en hiver";
    for (var c = 0; c < 7; c++) {
      document[fa]("claim_reward_" + c).innerHTML = "RÉCOMPENSE!";
    }
    document[fa]("quit_chronoquest").innerHTML = " QUITTER";
    cc[7] = ["Main"];
    cc[134] = ["Terre", "C'est sale!"];
    cc[120] = ["Sable", "J'en ai dans les yeux"];
    cc[103] = ["Bois", "Tu n'en auras jamais trop!"];
    cc[102] = ["Pierre", "Aussi appelée roche"];
    cc[105] = ["Or", "Sois généreux, donne en aux autres"];
    cc[106] = ["Diamant", "Comme tes yeux! wesh"];
    cc[115] = ["Améthyste", "C'est Mauve comme Lapa"];
    cc[125] = ["Farine", "Utile pour la cuisine"];
    cc[127] = ["Cookie", "Un somptueux cookie de Grand-Mère", "Nourriture: 50"];
    cc[130] = ["Gâteau", "Pour les fins gourmets", "Nourriture: 100"];
    cc[110] = ["Viande crue", "Tu peux la cuisiner avec du feu", "Intoxication: 10", "Nourriture: 15"];
    cc[111] = ["Viande cuite", "Un steak saignant, s'il vous plait", "Nourriture: 35"];
    cc[131] = ["Poisson cru", "Je crois que c'est encore vivant", "Intoxication: 10", "Nourriture: 18"];
    cc[132] = ["Poisson cuit", "Avec du citron, c'est parfait", "Nourriture: 35"];
    cc[137] = ["Baguette", "Une tradition s'il vous plait", "C'est la monnaie du marché", "Nourriture: 15"];
    cc[139] = ["Sandwich", "Le Jambon Beurre vaincra", "Nourriture: 100"];
    cc[194] = ["Bonbons", "Il n'y a pas de dentiste ici", "Nourriture: 100"];
    cc[193] = ["Canne à sucre", "Sans sucre de canne", "Nourriture: 20"];
    cc[195] = ["Guirlandes", "Utilisable sur les toits"];
    cc[109] = ["Graines de baies", "Deviennent des baies", "Naissance: 2min", "Croissance: 55s", "Arrosage: 3min 20s", "Durabilité: 700", "Durée de vie: 8 jours"];
    cc[104] = ["Baies", "Peu nourrissant", "Nourriture: 10"];
    cc[126] = ["Graines de blé", "Deviennent du blé", "Naissance: 2min", "Croissance: 16s", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    cc[128] = ["Blé", "Peut être transformé en farine dans les moulins"];
    cc[182] = ["Graines de citrouille", "Deviennent des citrouilles", "Naissance: 2min 40s", "Croissance: 2min", "Arrosage: 2min", "Durabilité: 700", "Durée de vie: 8 jours"];
    cc[183] = ["Citrouille", "Ça me rappelle Halloween", "Nourriture: 30"];
    cc[185] = ["Graines d'ail", "Très dangereux pour les vampires", "Dégâts: 20", "Naissance: 4min", "Croissance: 1min 10s", "Arrosage: 1min 40s", "Durabilité: 700", "Durée de vie: 8 jours"];
    cc[186] = ["Ail", "Soigne et réduit le froid", "Nourriture: 14", "Soigne sur le temps: 30", "Effet: 1 fois"];
    cc[187] = ["Graines de ronces", "Peuvent blesser vos ennemis", "Dégâts: 20", "Naissance: 4min", "Croissance: 15s", "Arrosage: 3min", "Durabilité: 1000", "Durée de vie: 8 jours"];
    cc[188] = ["Ronces", "Ça pique!"];
    cc[135] = ["Terreau", "Indispensable", "Vos plantes grandiront plus vite", "et auront besoin de moins d'eau", "Durabilité: 2000"];
    cc[136] = ["Glace", "Pratique pour faire de l'eau et des gâteaux"];
    cc[55] = ["Clé à molette", "Pour réparer les portes, les murs et les piques", "Dégâts: 2"];
    cc[168] = ["Peau de loup", "Il était où le gentil ti Youki?"];
    cc[2] = ["Peau de lapin", "Vous êtes un monstre"];
    cc[172] = ["Fourrure blanche", "Tu es une usine à pain"];
    cc[173] = ["Fourrure noire", "Tu te sens prêt à faire quelque chose de mal"];
    cc[140] = ["Fourrure d'hiver", "Il voulait juste un calin"];
    cc[133] = ["Écailles", "Ça sent le poisson!"];
    cc[123] = ["Peau du kraken", "Tu n'as pas eu trop peur?"];
    cc[107] = ["Feu de camp", "Réchauffe", "Durabilité: 150", "Durée de vie: 2min"];
    cc[112] = ["Grand feu de camp", "Réchauffe plus longtemps", "Durabilité: 400", "Durée de vie: 6min"];
    cc[108] = ["Établi", "Utile pour fabriquer toute sorte d'objets"];
    cc[155] = ["Fil", "Utile pour faire des chapeaux et un sac"];
    cc[141] = ["Fil de diamant", "Utile pour faire des chapeaux"];
    cc[161] = ["Coffre", "Permet de ranger des objets", "Durabilité: 500"];
    cc[57] = ["Épée en bois", "C'est pour les enfants", "Dégâts: 12", "Démolition: 4"];
    cc[0] = ["Épée en pierre", "Sois gentil avec les autres", "Dégâts: 19", "Démolition: 6"];
    cc[5] = ["Épée en or", "Roi de la forêt", "Dégâts: 22", "Démolition: 7"];
    cc[6] = ["Épée en diamant", "Tu te sens puissant", "Dégâts: 24", "Démolition: 8"];
    cc[9] = ["Épée de pirate", "Marin d'eau douce!", "Meilleure portée qu'une épée normale", "Dégâts: 24", "Démolition: 8"];
    cc[30] = ["Épée en améthyste", "Mauve est la plus belle couleur du monde", "Dégâts: 27", "Démolition: 9"];
    cc[62] = ["Épée du Dragon", "Pas de pitié!", "Dégâts: 30", "Démolition: 10"];
    cc[16] = ["Lance du Dragon", "Tuez-les tous!", "Dégâts: 22", "Démolition: 6"];
    cc[8] = ["Pioche en bois", "Peut récolter du bois et de la pierre", "Dégâts: 1"];
    cc[1] = ["Pioche en pierre", "Peut aussi récolter de l'or", "Dégâts: 2"];
    cc[3] = ["Pioche en or", "Peut aussi récolter du diamant", "Dégâts: 3", "Démolition: 1"];
    cc[4] = ["Pioche en diamant", "Peut tout récolter", "Dégâts: 4", "Démolition: 1"];
    cc[31] = ["Pioche en améthyste", "Peut tout récolter", "Dégâts: 5", "Démolition: 1"];
    cc[35] = ["Marteau en pierre", "Utile pour détruire les bâtiments", "Ne marche pas bien sur du diamant et améthyste", "Dégâts: 2", "Démolition: 20"];
    cc[36] = ["Marteau en or", "Utile pour détruire les bâtiments", "Ne marche pas bien sur l'améthyste", "Dégâts: 3", "Démolition: 30"];
    cc[37] = ["Marteau en diamant", "Utile pour détruire les bâtiments", "Dégâts: 4", "Démolition: 40"];
    cc[38] = ["Marteau en améthyste", "Utile pour détruire les bâtiments", "Dégâts: 5", "Démolition: 50"];
    cc[45] = ["Super Marteau", "As-tu prévu de détruire le monde?", "Dégâts: 12", "Démolition: 70"];
    cc[12] = ["Lance en bois", "Plus de peur que de mal", "Dégâts: 10", "Démolition: 2"];
    cc[13] = ["Lance en pierre", "C'est le début de l'évolution", "Dégâts: 14", "Démolition: 4"];
    cc[14] = ["Lance en or", "Attention, ça pique!", "Dégâts: 15", "Buildings Dégâts: 5"];
    cc[15] = ["Lance en diamant", "Tu es prêt à tuer les dragons", "Dégâts: 17", "Buildings Dégâts: 5"];
    cc[33] = ["Lance en améthyste", "Les dragons ne te font plus peur", "Dégâts: 18", "Buildings Dégâts: 6"];
    cc[46] = ["Pelle en pierre", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 2"];
    cc[50] = ["Pelle en or", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 3", "Buildings Dégâts: 1"];
    cc[51] = ["Pelle en diamant", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 4", "Buildings Dégâts: 1"];
    cc[52] = ["Pelle en améthyste", "Creuse la terre, le sable et la neige", "Peut aussi récupérer des minéraux", "Dégâts: 5", "Buildings Dégâts: 1"];
    cc[58] = ["Casque en bois", "Mieux que rien", "Défense: 1", "Défense contre animaux: 4"];
    cc[25] = ["Casque en pierre", "Prêt pour la bataille", "Défense: 2", "Défense contre animaux: 8"];
    cc[26] = ["Casque en or", "Alias le casque des sauvages", "Défense: 4", "Défense contre animaux: 13"];
    cc[27] = ["Casque en diamant", "Ne te vante pas trop", "Défense: 5", "Défense contre animaux: 19"];
    cc[43] = ["Casque en améthyste", "Tu n'as plus peur de rien", "Défense: 6", "Défense contre animaux: 23"];
    cc[59] = ["Casque du Dragon", "Tu vas conquérir le monde", "Défense: 8", "Défense contre animaux: 27"];
    cc[23] = ["Chapeau d'explorateur", "Les animaux t'ignorent", "Mais ne faites pas de bruit!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[41] = ["Chapeau du Père Noël", "Oh, oh, oh, Joyeux Nöel!", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[42] = ["Chapeau du lutin de Nöel", "Tu as vu le nouveau chef d'oeuvre d'Alain Chabat?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[83] = ["Capuche", "Voyou!", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 8 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[10] = ["Cache-oreilles", "Une sorte de petite chapka.", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[11] = ["Chapka", "Comment ça va, camarade?", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[40] = ["Bonnet d'hiver", "Très confortable", "Très chaud"];
    cc[84] = ["Tunique", "Les plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[85] = ["Capuche d'hiver", "Tu peux voler seulement si", "1) Il fait nuit", "2) Tu as les mains libres", "3) Tu n'as pas été touché depuis 4 secondes", "4) Tu es loin d'un feu", "5) Ta cible n'est pas un paysan d'hiver", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[86] = ["Tunique d'hiver", "Tes plantes poussent plus vite", "Réchauffe en dehors de l'eau et dans l'hiver"];
    cc[48] = ["Masque de plongée", "Tu es rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 2, Défense contre animaux: 8"];
    cc[47] = ["Scaphandre", "Tu es très rapide dans l'eau", "Réchauffe dans l'eau", "Défense: 4, Défense contre animaux: 16"];
    cc[179] = ["Orbe du Dragon", "Donné en Quête"];
    cc[143] = ["Coeur de Dragon", "Te change en fantôme!", "Tu es un fantôme pendant 1 min", "Trouve une pierre de résurrection"];
    cc[169] = ["Gemme verte", "Tu n'as pas triché, promis?"];
    cc[170] = ["Gemme orange", "Seul un vrai pirate peut l'obtenir!"];
    cc[171] = ["Gemme bleue", "Pour les gens trop gentils"];
    cc[77] = ["Couronne verte", "Te soigne très rapidement", "Soigne sur le temps: 40", "Défense: 4, Défense contre animaux: 16"];
    cc[78] = ["Couronne orange", "Tu te sens soudainement très chanceux", "Défense: 4, Défense contre animaux: 16"];
    cc[79] = ["Couronne bleue", "Une fois mort, tu deviens un fantôme", "Tu perdras toutes tes arguments", "Défense: 4, Défense contre animaux: 16"];
    cc[174] = ["Seau", "Utile pour remplir un puit", "Un sceau est équivalent à 20 bouteilles"];
    cc[175] = ["Seau vide", "Pour remplir ce seau, approche-toi d'une source d'eau"];
    cc[121] = ["Bouteille", "Te permet de boire n'importe où", "Eau: 50"];
    cc[122] = ["Bouteille vide", "Tu peux remplir cette bouteille près d'une source d'eau"];
    cc[124] = ["Arrosoir vide", "Doit être rempli près d'une source d'eau"];
    cc[49] = ["Arrosoir", "Permet d'arroser les plantes", "Dégâts: 1"];
    cc[29] = ["Sac", "Plus de place dans ton inventaire!"];
    cc[114] = ["Papier", "Pour fabriquer toute sorte d'objets"];
    cc[28] = ["Livre", "Réduit considérablement le temps de fabrication", "Doit être porté pour fonctionner", "Dégâts: 1"];
    cc[189] = ["Bandage", "Soigne plus rapidement", "Soigne sur le temps: 30", "Effet: 5"];
    cc[142] = ["Cadenas", "Pour verrouiller un coffre"];
    cc[152] = ["Clé", "Pour déverrouiller un coffre"];
    cc[153] = ["Totem", "Te permet de créer une équipe", "Partage les portes et les coffres", "Les piques ne toucheront pas tes amis"];
    cc[119] = ["Pont", "Très utile sur l'eau", "Te permet de boire sans te noyer", "Marche plus vite sur l'eau"];
    cc[177] = ["Pancarte", "Laisse un message aux autres", "Durabilité: 200"];
    cc[184] = ["Toit", "Te cache un peu et te réchauffe"];
    cc[176] = ["Puit", "Permet de remplir des bouteilles", "Durabilité: 1000"];
    cc[156] = ["Mur en bois", "Tu connais la danse des murs?", "Durabilité: 1000"];
    cc[157] = ["Mur en pierre", "Ça fait un peu plus sérieux", "Durabilité: 1500"];
    cc[158] = ["Mur en or", "De l'or sur tes murs? C'est un peu voyant", "Durabilité: 2000"];
    cc[159] = ["Mur en diamant", "Très brillant, cache tes yeux", "Durabilité: 2500"];
    cc[116] = ["Mur en améthyste", "Tu dois avoir très peur de sortir dehors!", "Durabilité: 3500"];
    cc[154] = ["Piques en bois", "Peut blesser tes ennemis", "Dégâts: 10, Dégâts par coup: 2", "Durabilité: 150"];
    cc[162] = ["Pique en pierre", "Je ne voudrais pas être ton ennemi", "Dégâts: 20", "Dégâts par coup: 3", "Durabilité: 300"];
    cc[163] = ["Pique en or", "Tu es si cruel", "Dégâts: 30", "Dégâts par coup: 3", "Durabilité: 600"];
    cc[164] = ["Pique en diamant", "Tu n'as pas l'air d'aimer la compagnie", "Dégâts: 40", "Dégâts par coup: 4", "Durabilité: 1200"];
    cc[117] = ["Pique en améthyste", "Mais qu'est ce que ton voisin t'a fait?", "Dégâts: 50", "Dégâts par coup: 4", "Durabilité: 2400"];
    cc[160] = ["Porte en bois", "Peut être ouvert ou fermé par toi ou tes amis", "Durabilité: 1000"];
    cc[165] = ["Porte en pierre", "Tu connais les trois petits cochons?", "Durabilité: 1500"];
    cc[166] = ["Porte en or", "Tu reconstruis l'el dorado?", "Durabilité: 2000"];
    cc[167] = ["Porte en diamant", "Pour une maison éclatante", "Durabilité: 2500"];
    cc[118] = ["Porte en améthyste", "Est-ce que ta maison est un coffre-fort?", "Durabilité: 3000"];
    cc[113] = ["Chaudière", "Réchauffe", "Consume du bois toutes les 5 sec", "Durabilité: 1000"];
    cc[129] = ["Moulin", "Peut produire de la farine à partir du blé", "Prends 5 sec pour faire de la farine", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    cc[138] = ["Four à pain", "Produit du pain avec de la farine et du bois", "Prends 10 sec pour faire du pain", "Tu obtiens des points quand c'est en marche", "Durabilité: 2000"];
    cc[145] = ["Pierre de résurrection", "Magie magie!", "Te ressuscite si tu es un fantôme", "Tu perds toutes tes armes", "Durabilité: 200"];
    cc[300] = "Tu ne peux pas rejoindre le serveur";
    cc[301] = "Expulsé: ";
    cc[302] = "Ta clé est déjà utilisée par quelqu'un d'autre";
    cc[303] = "Ta clé est fausse";
    cc[304] = "Tu as une vieille version, rafraichis tes caches";
    cc[305] = "Il n'y a plus de nouvelles ressources";
    cc[306] = "Tu as survécu 1 jour";
    cc[307] = "Tu as survécu ";
    cc[308] = " jours";
    cc[309] = "Tu es mort ;-;";
    cc[310] = "Le serveur ne trouve pas de points d'apparitions! Spam le bouton jouer!";
    cc[311] = "Le serveur est complet! Spam le bouton jouer";
    cc[312] = "Cette ressource est vide";
    cc[313] = "Ton inventaire est rempli (Clic droit pour supprimer un objet)";
    cc[314] = " est mort";
    cc[315] = "Ce n'est pas le bon outil";
    cc[316] = "Tu as rejoins une équipe";
    cc[317] = "Tu es mort";
    cc[318] = " a rejoint l'équipe";
    cc[319] = "Ton équipe a été détruite";
    cc[320] = "Tu as quitté l'équipe";
    cc[321] = " a quitté l'équipe";
    cc[322] = "Quelqu'un a volé ton token :>";
    cc[323] = "Choisis un serveur";
    cc[324] = "joueurs";
    cc[325] = "joueurs";
    cc[326] = "joueurs dans ce mode";
    cc[327] = "Bientôt...";
    document[fa]("nickname_input").placeholder = "Surnom";
    ec[0] = ["Tu as été tué sans raison particulière, juste comme ça"];
    ec[1] = ["Tu es mort de faim, c'est plutôt ironique, non?"];
    ec[2] = ["Tu es mort de froid. Dommage", "Tu as fait une hypothermie, la prochaine fois reste près d'un feu"];
    ec[3] = ["Un joueur t'a tué, avant de mourir tu pouvais l'entendre rire", "Un joueur t'a tué, avec un peu de chance il mourra aussi"];
    ec[4] = ["Tu es resté sur un feu trop longtemps et tu es mort suite aux brûlures", "Tu es mort en restant trop longtemps sur un feu, tu voulais finir comme Jeanne d'Arc?"];
    ec[5] = ["Ton corps deviendra un nid pour les oeufs d'araignées."];
    ec[6] = ["Ce loup n'aura plus faim après t'avoir mangé", "Ce ne sont pas des chiens. Les loups n'aiment pas être domestiqués."];
    ec[7] = ["Ce renard était trop rapide pour toi", "Ce renard t'a transformé en boîte"];
    ec[8] = ["Cet ours voulait juste un câlin."];
    ec[9] = ["Tu as été brûlé par un dragon. Quel gâchis", "Tu t'es fait écraser par un dragon. Une bien terrible façon de mourir..."];
    ec[10] = ["Tu as sauté sur des piques, c'était pas une bonne idée...", "Tu es mort sur des piques. La plupart des gens sont assez sensés pour ne pas toucher les choses pointues"];
    ec[11] = ["Même les fantômes peuvent mourir", "Tu n'as pas réussi à te ressusciter. Mais c'est un jeu, tu reviens à la vie après être mort, donc..."];
    ec[12] = ["Une bactérie logée dans la viande crue t'a tué. Ce jeu est vraiment trop dur.", "Tu as tué l'animal, sa viande t'a tué."];
    ec[13] = ["Tu es mort de soif. La prochaine fois, vas dans un lac, dans la mer ou fais-toi une bouteille"];
    ec[14] = ["Tu t'es noyé. Essaye de construire un pont la prochaine fois"];
    ec[15] = ["Ne t'inquiète pas, le piranha t'a trouvé appétissant."];
    ec[16] = ["Un kraken a 'kraké' tes os."];
    ec[17] = ["Ta peau tombe en lambeau, le soleil t'a brûlé."];
    ec[18] = ["L'ail dans ta poche a fait bouillir ton cerveau."];
    ec[19] = ["En tant que vampire, ne reste pas à côté des gousses d'ail."];
    ec[20] = ["Tu as mangé de l'ail en tant que vampire, tu t'attendais à quoi?"];
    ec[21] = ["Ton corps est tombé dans les ronces. En essayant de t'échapper, ta peau s'est arrachée et la douleur a fait arrêter de battre ton coeur. lol ça rime."];
    ZOMBIE_GRUMBLE = "Uuunnnggg";
    ZOMBIE_GRUMBLES = ["Uuunnnggg... J'ai faim", "Manger cerveau, Uuunnnggg...", "Viande fraîche ici... Uuunnnggg", "Uuunnnggg... Tu as l'air bon", "Uuunnnggg...", "Manger... uuunnnggg...", "Je peux sentir ton sang... Uuunnnggg"];
  }, cc = [], dc = 0; dc < 344; dc++) {
  cc[dc] = "";
}
var ec = [];
$(".md-languages").on("click", function () {
  $(this).toggleClass("active");
});
$(".md-languages ul li").on("click", function () {
  var c = $(this).text();
  if (c === "English") {
    Xb();
  } else if (c === "Français") {
    bc();
  } else if (c === "Deutsch") {
    _b();
  } else if (c === "Español") {
    $b();
  } else if (c === "Português") {
    Zb();
  } else if (c === "Русский") {
    Yb();
  } else if (c === "Polski") {
    ac();
  }
  INFO_BOX = [];
  hj.ﱟ︌︉︂.ﱟ︌︎︄ = [];
  $(".md-languages ul li").removeClass("active");
  $(this).addClass("active");
  $(".md-languages label button").text(c);
});
var fc;
Kb = "EN";
switch (navigator.language || navigator.userLanguage) {
  case "ru":
    Kb = "RU";
    break;
  case "en":
    Kb = "EN";
    break;
  case "es":
    Kb = "SP";
    break;
  case "fr":
    Kb = "FR";
    break;
  case "pl":
    Kb = "PL";
    break;
  case "de":
    Kb = "DE";
    break;
  case "pt":
    Kb = "PT";
}
if (Kb === "FR") {
  $(".md-languages label button").text("Français");
  fc = bc;
} else if (Kb === "PL") {
  $(".md-languages label button").text("Polski");
  fc = ac;
} else if (Kb === "PT") {
  $(".md-languages label button").text("Português");
  fc = Zb;
} else if (Kb === "SP") {
  $(".md-languages label button").text("Español");
  fc = $b;
} else if (Kb === "RU") {
  $(".md-languages label button").text("Русский");
  fc = Yb;
} else if (Kb === "DE") {
  $(".md-languages label button").text("Deutsch");
  fc = _b;
} else {
  $(".md-languages label button").text("English");
  fc = Xb;
}
IMAGES = {
  ﱡ︌︉︂: "img/logo.png",
  ﱣ︌︉︂: "img/mapday.png",
  ﱢ︌︉︂: "img/mapnight.png",
  ﱞ︍︉︂: "img/bigzday.png",
  ﱠ︍︉︂: "img/bigznight.png",
  ﱟ︍︉︂: "img/bigday-river1.png",
  ﱡ︍︉︂: "img/bigday-lake.png",
  ﱣ︍︉︂: "img/bigday-berry.png",
  ﱢ︍︉︂: "img/bigday-stone1.png",
  ﱞ︎︉︂: "img/bigday-stone2.png",
  ﱠ︎︉︂: "img/bigday-gold1.png",
  ﱟ︎︉︂: "img/bigday-gold2.png",
  ﱡ︎︉︂: "img/bigday-emerald1.png",
  ﱣ︎︉︂: "img/bigday-emerald2.png",
  ﱢ︎︉︂: "img/bigday-amethyst.png",
  ﱞ️︉︂: "img/bigday-bear.png",
  ﱠ️︉︂: "img/bigday-cave.png",
  ﱟ️︉︂: "img/bigday-diamond.png",
  ﱡ️︉︂: "img/bigday-island.png",
  ﱣ️︉︂: "img/bigday-reidite.png",
  ﱢ️︉︂: "img/bigday-spider.png",
  ﱞ︀︊︂: "img/bigday-wolf.png",
  ﱠ︀︊︂: "img/bigday-fir-tree.png",
  ﱟ︀︊︂: "img/bigday-fox.png",
  ﱡ︀︊︂: "img/bigday-kraken.png",
  ﱣ︀︊︂: "img/bigday-piranha.png",
  ﱢ︀︊︂: "img/bigday-cactus.png",
  ﱞ︁︊︂: "img/bigday-magma.png",
  ﱠ︁︊︂: "img/bigday-river1.png",
  ﱟ︁︊︂: "img/bignight-lake.png",
  ﱡ︁︊︂: "img/bignight-berry.png",
  ﱣ︁︊︂: "img/bignight-stone1.png",
  ﱢ︁︊︂: "img/bignight-stone2.png",
  ﱞ︂︊︂: "img/bignight-gold1.png",
  ﱠ︂︊︂: "img/bignight-gold2.png",
  ﱟ︂︊︂: "img/bignight-emerald1.png",
  ﱡ︂︊︂: "img/bignight-emerald2.png",
  ﱣ︂︊︂: "img/bignight-amethyst.png",
  ﱢ︂︊︂: "img/bignight-bear.png",
  ﱞ︃︊︂: "img/bignight-cave.png",
  ﱠ︃︊︂: "img/bignight-diamond.png",
  ﱟ︃︊︂: "img/bignight-island.png",
  ﱡ︃︊︂: "img/bignight-reidite.png",
  ﱣ︃︊︂: "img/bignight-spider.png",
  ﱢ︃︊︂: "img/bignight-wolf.png",
  ﱞ︄︊︂: "img/bignight-fir-tree.png",
  ﱠ︄︊︂: "img/bignight-fox.png",
  ﱟ︄︊︂: "img/bignight-kraken.png",
  ﱡ︄︊︂: "img/bignight-piranha.png",
  ﱣ︄︊︂: "img/bignight-cactus.png",
  ﱢ︄︊︂: "img/bignight-magma.png",
  ﱞ︅︊︂: "img/bigday-desert.png",
  ﱠ︅︊︂: "img/bigday-winter.png",
  ﱟ︅︊︂: "img/bigday-lava.png",
  ﱡ︅︊︂: "img/bigday-forest.png",
  ﱣ︅︊︂: "img/bignight-desert.png",
  ﱢ︅︊︂: "img/bignight-winter.png",
  ﱞ︆︊︂: "img/bignight-lava.png",
  ﱠ︆︊︂: "img/bignight-forest.png",
  ﱟ︆︊︂: "img/day-river-wave.png",
  ﱡ︆︊︂: "img/night-river-wave.png",
  ﱣ︆︊︂: "img/day-fog0.png",
  ﱢ︆︊︂: "img/day-fog1.png",
  ﱞ︇︊︂: "img/day-fog2.png",
  ﱠ︇︊︂: "img/night-fog0.png",
  ﱟ︇︊︂: "img/night-fog1.png",
  ﱡ︇︊︂: "img/night-fog2.png",
  ﱣ︇︊︂: "img/day-fogdesert0.png",
  ﱢ︇︊︂: "img/day-fogdesert1.png",
  ﱞ︈︊︂: "img/day-fogdesert2.png",
  ﱠ︈︊︂: "img/night-fogdesert0.png",
  ﱟ︈︊︂: "img/night-fogdesert1.png",
  ﱡ︈︊︂: "img/night-fogdesert2.png",
  ﱣ︈︊︂: "img/day-cross-server.png",
  ﱢ︈︊︂: "img/day-here-server.png",
  ﱞ︉︊︂: "img/day-finish-server.png",
  ﱠ︉︊︂: "img/day-item-server.png",
  ﱟ︉︊︂: "img/night-cross-server.png",
  ﱡ︉︊︂: "img/night-here-server.png",
  ﱣ︉︊︂: "img/night-finish-server.png",
  ﱢ︉︊︂: "img/night-item-server.png",
  ﱞ︊︊︂: "img/day-reidite0.png",
  ﱠ︊︊︂: "img/night-reidite0.png",
  ﱟ︊︊︂: "img/day-reidite1.png",
  ﱡ︊︊︂: "img/night-reidite1.png",
  ﱣ︊︊︂: "img/day-reidite2.png",
  ﱢ︊︊︂: "img/night-reidite2.png",
  ﱞ︋︊︂: "img/day-lava1.png",
  ﱠ︋︊︂: "img/night-lava1.png",
  ﱟ︋︊︂: "img/day-lava2.png",
  ﱡ︋︊︂: "img/night-lava2.png",
  ﱣ︋︊︂: "img/day-lava3.png",
  ﱢ︋︊︂: "img/night-lava3.png",
  ﱞ︌︊︂: "img/day-lava4.png",
  ﱠ︌︊︂: "img/night-lava4.png",
  ﱟ︌︊︂: "img/day-lava5.png",
  ﱡ︌︊︂: "img/night-lava5.png",
  ﱣ︌︊︂: "img/day-lava6.png",
  ﱢ︌︊︂: "img/night-lava6.png",
  ﱞ︍︊︂: "img/day-lava-ground1.png",
  ﱠ︍︊︂: "img/night-lava-ground1.png",
  ﱟ︍︊︂: "img/day-lava-ground2.png",
  ﱡ︍︊︂: "img/night-lava-ground2.png",
  ﱣ︍︊︂: "img/day-lava-ground3.png",
  ﱢ︍︊︂: "img/night-lava-ground3.png",
  ﱞ︎︊︂: "img/day-lava-ground4.png",
  ﱠ︎︊︂: "img/night-lava-ground4.png",
  ﱟ︎︊︂: "img/day-lava-ground5.png",
  ﱡ︎︊︂: "img/night-lava-ground5.png",
  ﱣ︎︊︂: "img/day-lava-ground6.png",
  ﱢ︎︊︂: "img/night-lava-ground6.png",
  ﱞ️︊︂: "img/day-fire-mob.png",
  ﱠ️︊︂: "img/night-fire-mob.png",
  ﱟ️︊︂: "img/hurt-fire-mob.png",
  ﱡ️︊︂: "img/day-diamond-protection.png",
  ﱣ️︊︂: "img/night-diamond-protection.png",
  ﱢ️︊︂: "img/day-hand-diamond-protection.png",
  ﱞ︀︋︂: "img/night-hand-diamond-protection.png",
  ﱠ︀︋︂: "img/inv-diamond-protection-out.png",
  ﱟ︀︋︂: "img/inv-diamond-protection-in.png",
  ﱡ︀︋︂: "img/inv-diamond-protection-click.png",
  ﱣ︀︋︂: "img/day-amethyst-protection.png",
  ﱢ︀︋︂: "img/night-amethyst-protection.png",
  ﱞ︁︋︂: "img/day-hand-amethyst-protection.png",
  ﱠ︁︋︂: "img/night-hand-amethyst-protection.png",
  ﱟ︁︋︂: "img/inv-amethyst-protection-out.png",
  ﱡ︁︋︂: "img/inv-amethyst-protection-in.png",
  ﱣ︁︋︂: "img/inv-amethyst-protection-click.png",
  ﱢ︁︋︂: "img/day-reidite-sword.png",
  ﱞ︂︋︂: "img/night-reidite-sword.png",
  ﱠ︂︋︂: "img/inv-reidite-sword-out.png",
  ﱟ︂︋︂: "img/inv-reidite-sword-in.png",
  ﱡ︂︋︂: "img/inv-reidite-sword-click.png",
  ﱣ︂︋︂: "img/inv-reidite-out.png",
  ﱢ︂︋︂: "img/inv-reidite-in.png",
  ﱞ︃︋︂: "img/inv-reidite-click.png",
  ﱠ︃︋︂: "img/inv-flame-out.png",
  ﱟ︃︋︂: "img/inv-flame-in.png",
  ﱡ︃︋︂: "img/inv-flame-click.png",
  ﱣ︃︋︂: "img/day-magma-buble0.png",
  ﱢ︃︋︂: "img/night-magma-buble0.png",
  ﱞ︄︋︂: "img/day-magma-buble1.png",
  ﱠ︄︋︂: "img/night-magma-buble1.png",
  ﱟ︄︋︂: "img/day-magma-buble2.png",
  ﱡ︄︋︂: "img/night-magma-buble2.png",
  ﱣ︄︋︂: "img/day-lava-dragon.png",
  ﱢ︄︋︂: "img/night-lava-dragon.png",
  ﱞ︅︋︂: "img/day-fire-dragon.png",
  ﱠ︅︋︂: "img/night-fire-dragon.png",
  ﱢ︊︀︂: "img/hurt-lava-dragon.png",
  ﱟ︅︋︂: "img/day-lava-wing-left.png",
  ﱡ︅︋︂: "img/night-lava-wing-left.png",
  ﱣ︅︋︂: "img/day-lava-wing-right.png",
  ﱢ︅︋︂: "img/night-lava-wing-right.png",
  ﱡ︋︀︂: "img/hurt-lava-wing-left.png",
  ﱣ︋︀︂: "img/hurt-lava-wing-right.png",
  ﱞ︆︋︂: "img/day-reidite-spear.png",
  ﱠ︆︋︂: "img/night-reidite-spear.png",
  ﱟ︆︋︂: "img/inv-reidite-spear-out.png",
  ﱡ︆︋︂: "img/inv-reidite-spear-in.png",
  ﱣ︆︋︂: "img/inv-reidite-spear-click.png",
  ﱢ︆︋︂: "img/day-reidite-helmet.png",
  ﱞ︇︋︂: "img/night-reidite-helmet.png",
  ﱠ︇︋︂: "img/inv-reidite-helmet-out.png",
  ﱟ︇︋︂: "img/inv-reidite-helmet-in.png",
  ﱡ︇︋︂: "img/inv-reidite-helmet-click.png",
  ﱣ︇︋︂: "img/day-hand-reidite-protection.png",
  ﱢ︇︋︂: "img/night-hand-reidite-protection.png",
  ﱞ︈︋︂: "img/day-reidite-protection.png",
  ﱠ︈︋︂: "img/night-reidite-protection.png",
  ﱟ︈︋︂: "img/inv-reidite-protection-out.png",
  ﱡ︈︋︂: "img/inv-reidite-protection-in.png",
  ﱣ︈︋︂: "img/inv-reidite-protection-click.png",
  ﱢ︈︋︂: "img/day-lava-dragon-sword.png",
  ﱞ︉︋︂: "img/night-lava-dragon-sword.png",
  ﱠ︉︋︂: "img/inv-lava-dragon-sword-out.png",
  ﱟ︉︋︂: "img/inv-lava-dragon-sword-in.png",
  ﱡ︉︋︂: "img/inv-lava-dragon-sword-click.png",
  ﱣ︉︋︂: "img/day-lava-spear.png",
  ﱢ︉︋︂: "img/night-lava-spear.png",
  ﱞ︊︋︂: "img/inv-lava-spear-out.png",
  ﱠ︊︋︂: "img/inv-lava-spear-in.png",
  ﱟ︊︋︂: "img/inv-lava-spear-click.png",
  ﱡ︊︋︂: "img/day-lava-helmet.png",
  ﱣ︊︋︂: "img/night-lava-helmet.png",
  ﱢ︊︋︂: "img/inv-lava-helmet-out.png",
  ﱞ︋︋︂: "img/inv-lava-helmet-in.png",
  ﱠ︋︋︂: "img/inv-lava-helmet-click.png",
  ﱟ︋︋︂: "img/day-witch-hat.png",
  ﱡ︋︋︂: "img/night-witch-hat.png",
  ﱣ︋︋︂: "img/inv-witch-hat-out.png",
  ﱢ︋︋︂: "img/inv-witch-hat-in.png",
  ﱞ︌︋︂: "img/inv-witch-hat-click.png",
  ﱠ︌︋︂: "img/day-nimbus2000.png",
  ﱟ︌︋︂: "img/night-nimbus2000.png",
  ﱡ︌︋︂: "img/inv-nimbus2000-out.png",
  ﱣ︌︋︂: "img/inv-nimbus2000-in.png",
  ﱢ︌︋︂: "img/inv-nimbus2000-click.png",
  ﱞ︍︋︂: "img/day-accessory1-pacques.png",
  ﱠ︍︋︂: "img/night-accessory1-pacques.png",
  ﱟ︍︋︂: "img/day-accessory2-pacques.png",
  ﱡ︍︋︂: "img/night-accessory2-pacques.png",
  ﱣ︍︋︂: "img/day-accessory3-pacques.png",
  ﱢ︍︋︂: "img/night-accessory3-pacques.png",
  ﱞ︎︋︂: "img/day-accessory5-pacques.png",
  ﱠ︎︋︂: "img/night-accessory5-pacques.png",
  ﱟ︎︋︂: "img/day-accessory6-pacques.png",
  ﱡ︎︋︂: "img/night-accessory6-pacques.png",
  ﱣ︎︋︂: "img/day-accessory7-pacques.png",
  ﱢ︎︋︂: "img/night-accessory7-pacques.png",
  ﱞ️︋︂: "img/day-accessory8-pacques.png",
  ﱠ️︋︂: "img/night-accessory8-pacques.png",
  ﱟ️︋︂: "img/day-bag-pacques.png",
  ﱡ️︋︂: "img/night-bag-pacques.png",
  ﱣ️︋︂: "img/day-carrot.png",
  ﱢ️︋︂: "img/night-carrot.png",
  ﱞ︀︌︂: "img/day-carrot-dried.png",
  ﱠ︀︌︂: "img/night-carrot-dried.png",
  ﱟ︀︌︂: "img/day-tomato-herb.png",
  ﱡ︀︌︂: "img/night-tomato-herb.png",
  ﱣ︀︌︂: "img/day-tomato-herb-dried.png",
  ﱢ︀︌︂: "img/night-tomato-herb-dried.png",
  ﱞ︁︌︂: "img/day-tomato.png",
  ﱠ︁︌︂: "img/night-tomato.png",
  ﱟ︁︌︂: "img/inv-carrot-out.png",
  ﱡ︁︌︂: "img/inv-carrot-in.png",
  ﱣ︁︌︂: "img/inv-carrot-click.png",
  ﱢ︁︌︂: "img/inv-tomato-out.png",
  ﱞ︂︌︂: "img/inv-tomato-in.png",
  ﱠ︂︌︂: "img/inv-tomato-click.png",
  ﱟ︂︌︂: "img/day-player0.png",
  ﱡ︂︌︂: "img/night-player0.png",
  ﱣ︂︌︂: "img/day-player1.png",
  ﱢ︂︌︂: "img/night-player1.png",
  ﱞ︃︌︂: "img/day-player2.png",
  ﱠ︃︌︂: "img/night-player22.png",
  ﱟ︃︌︂: "img/day-player3.png",
  ﱡ︃︌︂: "img/night-player33.png",
  ﱣ︃︌︂: "img/day-player4.png",
  ﱢ︃︌︂: "img/night-player4.png",
  ﱞ︄︌︂: "img/day-player5.png",
  ﱠ︄︌︂: "img/night-player5.png",
  ﱟ︄︌︂: "img/day-player6.png",
  ﱡ︄︌︂: "img/night-player6.png",
  ﱣ︄︌︂: "img/day-player7.png",
  ﱢ︄︌︂: "img/night-player7.png",
  ﱞ︅︌︂: "img/day-player8.png",
  ﱠ︅︌︂: "img/night-player8.png",
  ﱟ︅︌︂: "img/day-player9.png",
  ﱡ︅︌︂: "img/night-player9.png",
  ﱣ︅︌︂: "img/day-player10.png",
  ﱢ︅︌︂: "img/night-player10.png",
  ﱞ︆︌︂: "img/day-player11.png",
  ﱠ︆︌︂: "img/night-player11.png",
  ﱟ︆︌︂: "img/day-player12.png",
  ﱡ︆︌︂: "img/night-player12.png",
  ﱣ︆︌︂: "img/day-player13.png",
  ﱢ︆︌︂: "img/night-player13.png",
  ﱞ︇︌︂: "img/day-player14.png",
  ﱠ︇︌︂: "img/night-player14.png",
  ﱟ︇︌︂: "img/day-player15.png",
  ﱡ︇︌︂: "img/night-player15.png",
  ﱣ︇︌︂: "img/day-player16.png",
  ﱢ︇︌︂: "img/night-player16.png",
  ﱞ︈︌︂: "img/day-player17.png",
  ﱠ︈︌︂: "img/night-player17.png",
  ﱟ︈︌︂: "img/day-player18.png",
  ﱡ︈︌︂: "img/night-player18.png",
  ﱣ︈︌︂: "img/day-player19.png",
  ﱢ︈︌︂: "img/night-player19.png",
  ﱞ︉︌︂: "img/day-hand-player0.png",
  ﱠ︉︌︂: "img/night-hand-player0.png",
  ﱟ︉︌︂: "img/day-hand-player1.png",
  ﱡ︉︌︂: "img/night-hand-player1.png",
  ﱣ︉︌︂: "img/day-hand-player2.png",
  ﱢ︉︌︂: "img/night-hand-player22.png",
  ﱞ︊︌︂: "img/day-hand-player3.png",
  ﱠ︊︌︂: "img/night-hand-player33.png",
  ﱟ︊︌︂: "img/day-hand-player4.png",
  ﱡ︊︌︂: "img/night-hand-player4.png",
  ﱣ︊︌︂: "img/day-hand-player5.png",
  ﱢ︊︌︂: "img/night-hand-player5.png",
  ﱞ︋︌︂: "img/day-hand-player6.png",
  ﱠ︋︌︂: "img/night-hand-player6.png",
  ﱟ︋︌︂: "img/day-hand-player7.png",
  ﱡ︋︌︂: "img/night-hand-player7.png",
  ﱣ︋︌︂: "img/day-hand-player8.png",
  ﱢ︋︌︂: "img/night-hand-player8.png",
  ﱞ︌︌︂: "img/day-hand-player9.png",
  ﱠ︌︌︂: "img/night-hand-player9.png",
  ﱟ︌︌︂: "img/day-hand-player10.png",
  ﱡ︌︌︂: "img/night-hand-player10.png",
  ﱣ︌︌︂: "img/day-hand-player11.png",
  ﱢ︌︌︂: "img/night-hand-player11.png",
  ﱞ︍︌︂: "img/day-hand-player12.png",
  ﱠ︍︌︂: "img/night-hand-player12.png",
  ﱟ︍︌︂: "img/day-hand-player13.png",
  ﱡ︍︌︂: "img/night-hand-player13.png",
  ﱣ︍︌︂: "img/day-hand-player14.png",
  ﱢ︍︌︂: "img/night-hand-player14.png",
  ﱞ︎︌︂: "img/day-hand-player15.png",
  ﱠ︎︌︂: "img/night-hand-player15.png",
  ﱟ︎︌︂: "img/day-hand-player16.png",
  ﱡ︎︌︂: "img/night-hand-player16.png",
  ﱣ︎︌︂: "img/day-hand-player17.png",
  ﱢ︎︌︂: "img/night-hand-player17.png",
  ﱞ️︌︂: "img/day-hand-player18.png",
  ﱠ️︌︂: "img/night-hand-player18.png",
  ﱟ️︌︂: "img/day-hand-player19.png",
  ﱡ️︌︂: "img/night-hand-player19.png",
  ﱣ️︌︂: "img/day-accessory4.png",
  ﱢ️︌︂: "img/night-accessory4.png",
  ﱞ︀︍︂: "img/day-accessory9.png",
  ﱠ︀︍︂: "img/night-accessory9.png",
  ﱟ︀︍︂: "img/day-accessory10.png",
  ﱡ︀︍︂: "img/night-accessory10.png",
  ﱣ︀︍︂: "img/day-accessory11.png",
  ﱢ︀︍︂: "img/night-accessory11.png",
  ﱞ︁︍︂: "img/day-accessory12.png",
  ﱠ︁︍︂: "img/night-accessory12.png",
  ﱟ︁︍︂: "img/day-bag.png",
  ﱡ︁︍︂: "img/night-bag.png",
  ﱣ︁︍︂: "img/inv-bag-out.png",
  ﱢ︁︍︂: "img/inv-bag-in.png",
  ﱞ︂︍︂: "img/inv-bag-click.png",
  ﱠ︂︍︂: "img/day-pitchfork.png",
  ﱟ︂︍︂: "img/night-pitchfork.png",
  ﱡ︂︍︂: "img/inv-pitchfork-out.png",
  ﱣ︂︍︂: "img/inv-pitchfork-in.png",
  ﱢ︂︍︂: "img/inv-pitchfork-click.png",
  ﱞ︃︍︂: "img/inv-wood-spike-door-out.png",
  ﱠ︃︍︂: "img/inv-wood-spike-door-in.png",
  ﱟ︃︍︂: "img/inv-wood-spike-door-click.png",
  ﱡ︃︍︂: "img/inv-stone-spike-door-out.png",
  ﱣ︃︍︂: "img/inv-stone-spike-door-in.png",
  ﱢ︃︍︂: "img/inv-stone-spike-door-click.png",
  ﱞ︄︍︂: "img/inv-gold-spike-door-out.png",
  ﱠ︄︍︂: "img/inv-gold-spike-door-in.png",
  ﱟ︄︍︂: "img/inv-gold-spike-door-click.png",
  ﱡ︄︍︂: "img/inv-diamond-spike-door-out.png",
  ﱣ︄︍︂: "img/inv-diamond-spike-door-in.png",
  ﱢ︄︍︂: "img/inv-diamond-spike-door-click.png",
  ﱞ︅︍︂: "img/inv-amethyst-spike-door-out.png",
  ﱠ︅︍︂: "img/inv-amethyst-spike-door-in.png",
  ﱟ︅︍︂: "img/inv-amethyst-spike-door-click.png",
  ﱡ︅︍︂: "img/day-wood-spike-door.png",
  ﱣ︅︍︂: "img/night-wood-spike-door.png",
  ﱢ︅︍︂: "img/day-stone-spike-door.png",
  ﱞ︆︍︂: "img/night-stone-spike-door.png",
  ﱠ︆︍︂: "img/day-gold-spike-door.png",
  ﱟ︆︍︂: "img/night-gold-spike-door.png",
  ﱡ︆︍︂: "img/day-diamond-spike-door.png",
  ﱣ︆︍︂: "img/night-diamond-spike-door.png",
  ﱢ︆︍︂: "img/day-amethyst-spike-door.png",
  ﱞ︇︍︂: "img/night-amethyst-spike-door.png",
  ﱠ︇︍︂: "img/inv-reidite-spike-door-out.png",
  ﱟ︇︍︂: "img/inv-reidite-spike-door-in.png",
  ﱡ︇︍︂: "img/inv-reidite-spike-door-click.png",
  ﱣ︇︍︂: "img/inv-reidite-door-out.png",
  ﱢ︇︍︂: "img/inv-reidite-door-in.png",
  ﱞ︈︍︂: "img/inv-reidite-door-click.png",
  ﱠ︈︍︂: "img/inv-reidite-spike-out.png",
  ﱟ︈︍︂: "img/inv-reidite-spike-in.png",
  ﱡ︈︍︂: "img/inv-reidite-spike-click.png",
  ﱣ︈︍︂: "img/inv-reidite-wall-out.png",
  ﱢ︈︍︂: "img/inv-reidite-wall-in.png",
  ﱞ︉︍︂: "img/inv-reidite-wall-click.png",
  ﱠ︉︍︂: "img/day-reidite-wall.png",
  ﱟ︉︍︂: "img/night-reidite-wall.png",
  ﱡ︉︍︂: "img/day-reidite-door.png",
  ﱣ︉︍︂: "img/night-reidite-door.png",
  ﱢ︉︍︂: "img/day-reidite-spike.png",
  ﱞ︊︍︂: "img/night-reidite-spike.png",
  ﱠ︊︍︂: "img/day-reidite-spike-door.png",
  ﱟ︊︍︂: "img/night-reidite-spike-door.png",
  ﱡ︊︍︂: "img/inv-reidite-pickaxe-out.png",
  ﱣ︊︍︂: "img/inv-reidite-pickaxe-in.png",
  ﱢ︊︍︂: "img/inv-reidite-pickaxe-click.png",
  ﱞ︋︍︂: "img/day-reidite-pickaxe.png",
  ﱠ︋︍︂: "img/night-reidite-pickaxe.png",
  ﱟ︋︍︂: "img/inv-reidite-hammer-out.png",
  ﱡ︋︍︂: "img/inv-reidite-hammer-in.png",
  ﱣ︋︍︂: "img/inv-reidite-hammer-click.png",
  ﱢ︋︍︂: "img/day-reidite-hammer.png",
  ﱞ︌︍︂: "img/night-reidite-hammer.png",
  ﱠ︌︍︂: "img/day-watermelon1.png",
  ﱟ︌︍︂: "img/night-watermelon1.png",
  ﱡ︌︍︂: "img/day-watermelon-dried1.png",
  ﱣ︌︍︂: "img/night-watermelon-dried1.png",
  ﱢ︌︍︂: "img/inv-watermelon-out.png",
  ﱞ︍︍︂: "img/inv-watermelon-in.png",
  ﱠ︍︍︂: "img/inv-watermelon-click.png",
  ﱟ︍︍︂: "img/day-boat.png",
  ﱡ︍︍︂: "img/night-boat.png",
  ﱣ︍︍︂: "img/day-boat-wave.png",
  ﱢ︍︍︂: "img/night-boat-wave.png",
  ﱞ︎︍︂: "img/inv-boat-out.png",
  ﱠ︎︍︂: "img/inv-boat-in.png",
  ﱟ︎︍︂: "img/inv-boat-click.png",
  ﱡ︎︍︂: "img/day-plane.png",
  ﱣ︎︍︂: "img/night-plane.png",
  ﱢ︎︍︂: "img/inv-plane-out.png",
  ﱞ️︍︂: "img/inv-plane-in.png",
  ﱠ️︍︂: "img/inv-plane-click.png",
  ﱟ️︍︂: "img/day-sled.png",
  ﱡ️︍︂: "img/night-sled.png",
  ﱣ️︍︂: "img/day-sled-wave.png",
  ﱢ️︍︂: "img/night-sled-wave.png",
  ﱞ︀︎︂: "img/inv-sled-out.png",
  ﱠ︀︎︂: "img/inv-sled-in.png",
  ﱟ︀︎︂: "img/inv-sled-click.png",
  ﱡ︀︎︂: "img/day-pirate-hat.png",
  ﱣ︀︎︂: "img/night-pirate-hat.png",
  ﱢ︀︎︂: "img/inv-pirate-hat-out.png",
  ﱞ︁︎︂: "img/inv-pirate-hat-in.png",
  ﱠ︁︎︂: "img/inv-pirate-hat-click.png",
  ﱟ︁︎︂: "img/day-penguin.png",
  ﱡ︁︎︂: "img/night-penguin.png",
  ﱟ︉︆︂: "img/hurt-penguin.png",
  ﱡ︉︆︂: "img/inv-penguin-feather-click.png",
  ﱢ︉︆︂: "img/inv-hawk-feather-click.png",
  ﱣ︁︎︂: "img/day-boar1.png",
  ﱢ︁︎︂: "img/day-boar1-tamed.png",
  ﱞ︂︎︂: "img/day-boar1-angry.png",
  ﱠ︂︎︂: "img/night-boar1.png",
  ﱟ︂︎︂: "img/night-boar1-tamed.png",
  ﱡ︂︎︂: "img/night-boar1-angry.png",
  ﱣ︂︎︂: "img/inv-mount-boar-out.png",
  ﱢ︂︎︂: "img/inv-mount-boar-in.png",
  ﱞ︃︎︂: "img/inv-mount-boar-click.png",
  ﱠ︋︆︂: "img/day-hurt-boar1.png",
  ﱣ︃︎︁: "img/boar1-step.png",
  ﱠ︃︎︂: "img/day-saddle1.png",
  ﱟ︃︎︂: "img/night-saddle1.png",
  ﱡ︃︎︂: "img/inv-saddle-out.png",
  ﱣ︃︎︂: "img/inv-saddle-in.png",
  ﱢ︃︎︂: "img/inv-saddle-click.png",
  ﱞ︄︎︂: "img/day-magic-wand0.png",
  ﱠ︄︎︂: "img/night-magic-wand0.png",
  ﱟ︄︎︂: "img/day-light-wand1.png",
  ﱡ︄︎︂: "img/night-light-wand1.png",
  ﱣ︄︎︂: "img/inv-magic-wand0-out.png",
  ﱢ︄︎︂: "img/inv-magic-wand0-in.png",
  ﱞ︅︎︂: "img/inv-magic-wand0-click.png",
  ﱠ︅︎︂: "img/day-magic-wand1.png",
  ﱟ︅︎︂: "img/night-magic-wand1.png",
  ﱡ︅︎︂: "img/day-light-wand0.png",
  ﱣ︅︎︂: "img/night-light-wand0.png",
  ﱢ︅︎︂: "img/inv-magic-wand1-out.png",
  ﱞ︆︎︂: "img/inv-magic-wand1-in.png",
  ﱠ︆︎︂: "img/inv-magic-wand1-click.png",
  ﱟ︆︎︂: "img/day-firefly.png",
  ﱡ︆︎︂: "img/night-firefly.png",
  ﱣ︆︎︁: "img/hurt-firefly.png",
  ﱣ︆︎︂: "img/inv-firefly-out.png",
  ﱢ︆︎︂: "img/inv-firefly-in.png",
  ﱞ︇︎︂: "img/inv-firefly-click.png",
  ﱠ︇︎︂: "img/day-baby-dragon.png",
  ﱟ︇︎︂: "img/night-baby-dragon.png",
  ﱡ︇︎︂: "img/day-baby-dragon-angry.png",
  ﱣ︇︎︂: "img/night-baby-dragon-angry.png",
  ﱢ︇︎︂: "img/day-baby-dragon-tamed.png",
  ﱞ︈︎︂: "img/night-baby-dragon-tamed.png",
  ﱠ︈︎︂: "img/day-wing-dragon-left-angry.png",
  ﱟ︈︎︂: "img/night-dragon-wing-left-angry.png",
  ﱡ︈︎︂: "img/day-wing-dragon-right-angry.png",
  ﱣ︈︎︂: "img/night-dragon-wing-right-angry.png",
  ﱢ︈︎︂: "img/day-wing-dragon-left-tamed.png",
  ﱞ︉︎︂: "img/night-dragon-wing-left-tamed.png",
  ﱠ︉︎︂: "img/day-wing-dragon-right-tamed.png",
  ﱟ︉︎︂: "img/night-wing-dragon-right-tamed.png",
  ﱡ︉︎︂: "img/day-wing-dragon-left.png",
  ﱣ︉︎︂: "img/night-dragon-wing-left.png",
  ﱢ︉︎︂: "img/day-wing-dragon-right.png",
  ﱞ︊︎︂: "img/night-wing-dragon-right.png",
  ﱠ︀︇︂: "img/hurt-baby-dragon.png",
  ﱟ︀︇︂: "img/hurt-baby-dragon-wing-left.png",
  ﱡ︀︇︂: "img/hurt-baby-dragon-wing-right.png",
  ﱠ︊︎︂: "img/inv-baby-dragon-out.png",
  ﱟ︊︎︂: "img/inv-baby-dragon-in.png",
  ﱡ︊︎︂: "img/inv-baby-dragon-click.png",
  ﱣ︊︎︂: "img/day-baby-lava.png",
  ﱢ︊︎︂: "img/night-baby-lava.png",
  ﱞ︋︎︂: "img/day-baby-lava-angry.png",
  ﱠ︋︎︂: "img/night-baby-lava-angry.png",
  ﱟ︋︎︂: "img/day-baby-lava-tamed.png",
  ﱡ︋︎︂: "img/night-baby-lava-tamed.png",
  ﱣ︋︎︂: "img/day-wing-lava-left-angry.png",
  ﱢ︋︎︂: "img/night-wing-lava-left-angry.png",
  ﱞ︌︎︂: "img/day-wing-lava-right-angry.png",
  ﱠ︌︎︂: "img/night-wing-lava-right-angry.png",
  ﱟ︌︎︂: "img/day-wing-lava-left-tamed.png",
  ﱡ︌︎︂: "img/night-wing-lava-left-tamed.png",
  ﱣ︌︎︂: "img/day-wing-lava-right-tamed.png",
  ﱢ︌︎︂: "img/night-wing-lava-right-tamed.png",
  ﱞ︍︎︂: "img/day-wing-lava-left.png",
  ﱠ︍︎︂: "img/night-wing-lava-left.png",
  ﱟ︍︎︂: "img/day-wing-lava-right.png",
  ﱡ︍︎︂: "img/night-wing-lava-right.png",
  ﱡ︂︇︂: "img/hurt-baby-lava.png",
  ﱣ︂︇︂: "img/hurt-baby-lava-wing-left.png",
  ﱢ︂︇︂: "img/hurt-baby-lava-wing-right.png",
  ﱣ︍︎︂: "img/inv-baby-lava-out.png",
  ﱢ︍︎︂: "img/inv-baby-lava-in.png",
  ﱞ︎︎︂: "img/inv-baby-lava-click.png",
  ﱠ︎︎︂: "img/day-falcon.png",
  ﱟ︎︎︂: "img/night-falcon.png",
  ﱡ︎︎︂: "img/day-falcon-angry.png",
  ﱣ︎︎︂: "img/night-falcon-angry.png",
  ﱢ︎︎︂: "img/day-falcon-ground.png",
  ﱞ️︎︂: "img/night-falcon-ground.png",
  ﱠ️︎︂: "img/day-falcon-ground-angry.png",
  ﱟ️︎︂: "img/night-falcon-ground-angry.png",
  ﱡ️︎︂: "img/day-falcon-wings-left.png",
  ﱣ️︎︂: "img/night-falcon-wings-left.png",
  ﱢ️︎︂: "img/day-falcon-wings-right.png",
  ﱞ︀️︂: "img/night-falcon-wings-right.png",
  ﱠ︀️︂: "img/day-falcon-angry-wings-left.png",
  ﱟ︀️︂: "img/night-falcon-angry-wings-left.png",
  ﱡ︀️︂: "img/day-falcon-angry-wings-right.png",
  ﱣ︀️︂: "img/night-falcon-angry-wings-right.png",
  ﱢ︀️︂: "img/day-falcon-wings-left-tamed.png",
  ﱞ︁️︂: "img/night-falcon-wings-left-tamed.png",
  ﱠ︁️︂: "img/day-falcon-wings-right-tamed.png",
  ﱟ︁️︂: "img/night-falcon-wings-right-tamed.png",
  ﱡ︁️︂: "img/day-falcon-tamed.png",
  ﱣ︁️︂: "img/night-falcon-tamed.png",
  ﱠ︆︇︂: "img/hurt-falcon-ground.png",
  ﱢ︄︇︂: "img/hurt-falcon.png",
  ﱞ︅︇︂: "img/hurt-falcon-wings-left.png",
  ﱠ︅︇︂: "img/hurt-falcon-wings-right.png",
  ﱢ︁️︂: "img/inv-falcon-out.png",
  ﱞ︂️︂: "img/inv-falcon-in.png",
  ﱠ︂️︂: "img/inv-falcon-click.png",
  ﱟ︂️︂: "img/day-crab-boss.png",
  ﱡ︂️︂: "img/night-crab-boss.png",
  ﱣ︂️︂: "img/day-crab-boss-angry.png",
  ﱢ︂️︂: "img/night-crab-boss-angry.png",
  ﱞ︃️︂: "img/day-crab-boss-tamed.png",
  ﱠ︃️︂: "img/night-crab-boss-tamed.png",
  ﱟ︃️︂: "img/day-crab-boss-claw-left-attack.png",
  ﱡ︃️︂: "img/night-crab-boss-claw-left-attack.png",
  ﱣ︃️︂: "img/day-crab-boss-claw-right-attack.png",
  ﱢ︃️︂: "img/night-crab-boss-claw-right-attack.png",
  ﱞ︄️︂: "img/day-crab-boss-claw-left-tamed.png",
  ﱠ︄️︂: "img/night-crab-boss-claw-left-tamed.png",
  ﱟ︄️︂: "img/day-crab-boss-claw-right-tamed.png",
  ﱡ︄️︂: "img/night-crab-boss-claw-right-tamed.png",
  ﱣ︄️︂: "img/day-crab-boss-claw-left.png",
  ﱢ︄️︂: "img/night-crab-boss-claw-left.png",
  ﱞ︅️︂: "img/day-crab-boss-claw-right.png",
  ﱠ︅️︂: "img/night-crab-boss-claw-right.png",
  ﱢ︌︆︂: "img/hurt-crab-boss.png",
  ﱞ︍︆︂: "img/hurt-crab-boss-claw-left.png",
  ﱠ︍︆︂: "img/hurt-crab-boss-claw-right.png",
  ﱟ︎︆︂: "img/heal-crab-boss.png",
  ﱡ︎︆︂: "img/heal-crab-boss-claw-left.png",
  ﱣ︎︆︂: "img/heal-crab-boss-claw-right.png",
  ﱣ︄︎︁: "img/crab-step.png",
  ﱟ︅️︂: "img/inv-crab-boss-out.png",
  ﱡ︅️︂: "img/inv-crab-boss-in.png",
  ﱣ︅️︂: "img/inv-crab-boss-click.png",
  ﱢ︅️︂: "img/day-cactus10.png",
  ﱞ︆️︂: "img/night-cactus10.png",
  ﱠ︆️︂: "img/inv-cactus-out.png",
  ﱟ︆️︂: "img/inv-cactus-in.png",
  ﱡ︆️︂: "img/inv-cactus-click.png",
  ﱣ︆️︂: "img/day-scorpion.png",
  ﱢ︆️︂: "img/night-scorpion.png",
  ﱞ︇️︂: "img/day-scorpion-hand-left.png",
  ﱠ︇️︂: "img/night-scorpion-hand-left.png",
  ﱟ︇️︂: "img/day-scorpion-hand-right.png",
  ﱡ︇️︂: "img/night-scorpion-hand-right.png",
  ﱢ︊︇︂: "img/hurt-scorpion.png",
  ﱟ︋︇︂: "img/hurt-scorpion-hand-left.png",
  ﱡ︋︇︂: "img/hurt-scorpion-hand-right.png",
  ﱣ︇️︂: "img/day-vulture.png",
  ﱢ︇️︂: "img/night-vulture.png",
  ﱞ︈️︂: "img/day-vulture-angry.png",
  ﱠ︈️︂: "img/night-vulture-angry.png",
  ﱟ︈️︂: "img/day-vulture-ground.png",
  ﱡ︈️︂: "img/night-vulture-ground.png",
  ﱣ︈️︂: "img/day-vulture-ground-angry.png",
  ﱢ︈️︂: "img/night-vulture-ground-angry.png",
  ﱞ︉️︂: "img/day-vulture-wings-left.png",
  ﱠ︉️︂: "img/night-vulture-wings-left.png",
  ﱟ︉️︂: "img/day-vulture-wings-right.png",
  ﱡ︉️︂: "img/night-vulture-wings-right.png",
  ﱣ︉️︂: "img/day-vulture-angry-wings-left.png",
  ﱢ︉️︂: "img/night-vulture-angry-wings-left.png",
  ﱞ︊️︂: "img/day-vulture-angry-wings-right.png",
  ﱠ︊️︂: "img/night-vulture-angry-wings-right.png",
  ﱟ︊️︂: "img/day-vulture-wings-left-tamed.png",
  ﱡ︊️︂: "img/night-vulture-wings-left-tamed.png",
  ﱣ︊️︂: "img/day-vulture-wings-right-tamed.png",
  ﱢ︊️︂: "img/night-vulture-wings-right-tamed.png",
  ﱞ︋️︂: "img/day-vulture-tamed.png",
  ﱠ︋️︂: "img/night-vulture-tamed.png",
  ﱡ︉︇︂: "img/hurt-vulture-ground.png",
  ﱠ︈︇︂: "img/hurt-vulture.png",
  ﱟ︈︇︂: "img/hurt-vulture-wings-left.png",
  ﱡ︈︇︂: "img/hurt-vulture-wings-right.png",
  ﱟ︋️︂: "img/day-aloe-vera.png",
  ﱡ︋️︂: "img/night-aloe-vera.png",
  ﱣ︋️︂: "img/inv-aloe-vera-out.png",
  ﱢ︋️︂: "img/inv-aloe-vera-in.png",
  ﱞ︌️︂: "img/inv-aloe-vera-click.png",
  ﱠ︌️︂: "img/day-aloe-vera-grown.png",
  ﱟ︌️︂: "img/night-aloe-vera-grown.png",
  ﱡ︌️︂: "img/day-aloe-vera-dried.png",
  ﱣ︌️︂: "img/night-aloe-vera-dried.png",
  ﱢ︌️︂: "img/day-turban1.png",
  ﱞ︍️︂: "img/night-turban1.png",
  ﱠ︍️︂: "img/day-turban2.png",
  ﱟ︍️︂: "img/night-turban2.png",
  ﱡ︍️︂: "img/inv-turban2-out.png",
  ﱣ︍️︂: "img/inv-turban2-in.png",
  ﱢ︍️︂: "img/inv-turban2-click.png",
  ﱞ︎️︂: "img/inv-turban1-out.png",
  ﱠ︎️︂: "img/inv-turban1-in.png",
  ﱟ︎️︂: "img/inv-turban1-click.png",
  ﱡ︎️︂: "img/day-pitchfork2.png",
  ﱣ︎️︂: "img/night-pitchfork2.png",
  ﱢ︎️︂: "img/inv-pitchfork2-out.png",
  ﱞ️️︂: "img/inv-pitchfork2-in.png",
  ﱠ️️︂: "img/inv-pitchfork2-click.png",
  ﱟ️️︂: "img/inv-gold-fork-click.png",
  ﱡ️️︂: "img/inv-pilot-glasses-click.png",
  ﱣ️️︂: "img/day-pilot-helmet.png",
  ﱢ️️︂: "img/night-pilot-helmet.png",
  ﱞ︀︀︃: "img/inv-pilot-helmet-out.png",
  ﱠ︀︀︃: "img/inv-pilot-helmet-in.png",
  ﱟ︀︀︃: "img/inv-pilot-helmet-click.png",
  ﱡ︀︀︃: "img/day-sandworm0.png",
  ﱣ︀︀︃: "img/day-sandworm1.png",
  ﱢ︀︀︃: "img/day-sandworm2.png",
  ﱞ︁︀︃: "img/night-sandworm0.png",
  ﱠ︁︀︃: "img/night-sandworm1.png",
  ﱟ︁︀︃: "img/night-sandworm2.png",
  ﱢ︋︇︂: "img/hurt-sandworm0.png",
  ﱠ︌︇︂: "img/hurt-sandworm1.png",
  ﱡ︌︇︂: "img/hurt-sandworm2.png",
  ﱠ︊︆︂: "img/inv-vulture-feather-click.png",
  ﱡ︁︀︃: "img/day-emerald0.png",
  ﱣ︁︀︃: "img/night-emerald0.png",
  ﱢ︁︀︃: "img/day-emerald1.png",
  ﱞ︂︀︃: "img/night-emerald1.png",
  ﱠ︂︀︃: "img/day-emerald2.png",
  ﱟ︂︀︃: "img/night-emerald2.png",
  ﱞ︍︇︂: "img/inv-emerald-click.png",
  ﱡ︂︀︃: "img/inv-sworm-juice-out.png",
  ﱣ︂︀︃: "img/inv-sworm-juice-in.png",
  ﱢ︂︀︃: "img/inv-sworm-juice-click.png",
  ﱞ︃︀︃: "img/day-point-machine.png",
  ﱠ︃︀︃: "img/night-point-machine.png",
  ﱟ︃︀︃: "img/day-point-machine-hole.png",
  ﱡ︃︀︃: "img/night-point-machine-hole.png",
  ﱣ︃︀︃: "img/day-point-machine-ground.png",
  ﱢ︃︀︃: "img/night-point-machine-ground.png",
  ﱞ︄︀︃: "img/day-point-machine-rotate.png",
  ﱠ︄︀︃: "img/night-point-machine-rotate.png",
  ﱟ︄︀︃: "img/inv-point-machine-out.png",
  ﱡ︄︀︃: "img/inv-point-machine-in.png",
  ﱣ︄︀︃: "img/inv-point-machine-click.png",
  ﱢ︄︀︃: "img/day-extractor-machine0-stone.png",
  ﱞ︅︀︃: "img/night-extractor-machine0-stone.png",
  ﱠ︅︀︃: "img/day-extractor-machine-stone.png",
  ﱟ︅︀︃: "img/night-extractor-machine-stone.png",
  ﱡ︅︀︃: "img/inv-extractor-machine-stone-out.png",
  ﱣ︅︀︃: "img/inv-extractor-machine-stone-in.png",
  ﱢ︅︀︃: "img/inv-extractor-machine-stone-click.png",
  ﱞ︆︀︃: "img/day-extractor-machine0-gold.png",
  ﱠ︆︀︃: "img/night-extractor-machine0-gold.png",
  ﱟ︆︀︃: "img/day-extractor-machine-gold.png",
  ﱡ︆︀︃: "img/night-extractor-machine-gold.png",
  ﱣ︆︀︃: "img/inv-extractor-machine-gold-out.png",
  ﱢ︆︀︃: "img/inv-extractor-machine-gold-in.png",
  ﱞ︇︀︃: "img/inv-extractor-machine-gold-click.png",
  ﱠ︇︀︃: "img/day-extractor-machine0-diamond.png",
  ﱟ︇︀︃: "img/night-extractor-machine0-diamond.png",
  ﱡ︇︀︃: "img/day-extractor-machine-diamond.png",
  ﱣ︇︀︃: "img/night-extractor-machine-diamond.png",
  ﱢ︇︀︃: "img/inv-extractor-machine-diamond-out.png",
  ﱞ︈︀︃: "img/inv-extractor-machine-diamond-in.png",
  ﱠ︈︀︃: "img/inv-extractor-machine-diamond-click.png",
  ﱟ︈︀︃: "img/day-extractor-machine0-amethyst.png",
  ﱡ︈︀︃: "img/night-extractor-machine0-amethyst.png",
  ﱣ︈︀︃: "img/day-extractor-machine-amethyst.png",
  ﱢ︈︀︃: "img/night-extractor-machine-amethyst.png",
  ﱞ︉︀︃: "img/inv-extractor-machine-amethyst-out.png",
  ﱠ︉︀︃: "img/inv-extractor-machine-amethyst-in.png",
  ﱟ︉︀︃: "img/inv-extractor-machine-amethyst-click.png",
  ﱡ︉︀︃: "img/day-extractor-machine0-reidite.png",
  ﱣ︉︀︃: "img/night-extractor-machine0-reidite.png",
  ﱢ︉︀︃: "img/day-extractor-machine-reidite.png",
  ﱞ︊︀︃: "img/night-extractor-machine-reidite.png",
  ﱠ︊︀︃: "img/inv-extractor-machine-reidite-out.png",
  ﱟ︊︀︃: "img/inv-extractor-machine-reidite-in.png",
  ﱡ︊︀︃: "img/inv-extractor-machine-reidite-click.png",
  ﱟ︊︂︂: "img/extractor-cases.png",
  ﱣ︊︀︃: "img/day-golden-hen.png",
  ﱢ︊︀︃: "img/night-golden-hen.png",
  ﱞ︋︀︃: "img/day-golden-chicken.png",
  ﱠ︋︀︃: "img/night-golden-chicken.png",
  ﱟ︇︆︂: "img/hurt-golden-hen.png",
  ﱡ︇︆︂: "img/hurt-golden-chicken.png",
  ﱟ︋︀︃: "img/logo-interface.png",
  ﱡ︋︀︃: "img/forest-mode-hover.png",
  ﱣ︋︀︃: "img/normal-mode-hover.png",
  ﱢ︋︀︃: "img/vampire-mode-hover.png",
  ﱞ︌︀︃: "img/zombie-mode-hover.png",
  ﱠ︌︀︃: "img/community-mode-hover2.png",
  ﱟ︌︀︃: "img/experimental-mode-hover.png",
  ﱡ︌︀︃: "img/zombie-mode-out.png",
  ﱣ︌︀︃: "img/zombie-mode-in.png",
  ﱢ︌︀︃: "img/zombie-mode-click.png",
  ﱞ︍︀︃: "img/vampire-mode-out.png",
  ﱠ︍︀︃: "img/vampire-mode-in.png",
  ﱟ︍︀︃: "img/vampire-mode-click.png",
  ﱡ︍︀︃: "img/normal-mode-out.png",
  ﱣ︍︀︃: "img/normal-mode-in.png",
  ﱢ︍︀︃: "img/normal-mode-click.png",
  ﱞ︎︀︃: "img/forest-mode-out.png",
  ﱠ︎︀︃: "img/forest-mode-in.png",
  ﱟ︎︀︃: "img/forest-mode-click.png",
  ﱡ︎︀︃: "img/community-mode-out.png",
  ﱣ︎︀︃: "img/community-mode-in.png",
  ﱢ︎︀︃: "img/community-mode-click.png",
  ﱞ️︀︃: "img/experimental-modes-out.png",
  ﱠ️︀︃: "img/experimental-modes-in.png",
  ﱟ️︀︃: "img/experimental-modes-click.png",
  ﱡ️︀︃: "img/youtube-button-out.png",
  ﱣ️︀︃: "img/youtube-button-in.png",
  ﱢ️︀︃: "img/youtube-button-click.png",
  ﱞ︀︁︃: "img/wiki-button-out.png",
  ﱠ︀︁︃: "img/wiki-button-in.png",
  ﱟ︀︁︃: "img/wiki-button-click.png",
  ﱡ︀︁︃: "img/twitter-button-out.png",
  ﱣ︀︁︃: "img/twitter-button-in.png",
  ﱢ︀︁︃: "img/twitter-button-click.png",
  ﱞ︁︁︃: "img/facebook-button-out.png",
  ﱠ︁︁︃: "img/facebook-button-in.png",
  ﱟ︁︁︃: "img/facebook-button-click.png",
  ﱡ︁︁︃: "img/reddit-button-out.png",
  ﱣ︁︁︃: "img/reddit-button-in.png",
  ﱢ︁︁︃: "img/reddit-button-click.png",
  ﱞ︂︁︃: "img/discord-button-out.png",
  ﱠ︂︁︃: "img/discord-button-in.png",
  ﱟ︂︁︃: "img/discord-button-click.png",
  ﱡ︂︁︃: "img/merch-button-out.png",
  ﱣ︂︁︃: "img/merch-button-in.png",
  ﱢ︂︁︃: "img/merch-button-click.png",
  ﱞ︃︁︃: "img/terminal-button-out.png",
  ﱠ︃︁︃: "img/terminal-button-in.png",
  ﱟ︃︁︃: "img/terminal-button-click.png",
  ﱡ︃︁︃: "img/restart-out.png",
  ﱣ︃︁︃: "img/restart-in.png",
  ﱢ︃︁︃: "img/restart-click.png",
  ﱞ︄︁︃: "img/guide-out.png",
  ﱠ︄︁︃: "img/guide-in.png",
  ﱟ︄︁︃: "img/guide-click.png",
  ﱡ︄︁︃: "img/copy-paste-out.png",
  ﱣ︄︁︃: "img/copy-paste-in.png",
  ﱢ︄︁︃: "img/copy-paste-click.png",
  ﱞ︅︁︃: "img/link-buttons-bg.png",
  ﱠ︅︁︃: "img/changelog-box2.png",
  ﱟ︅︁︃: "",
  ﱡ︅︁︃: "",
  ﱣ︅︁︃: "img/profile-button-out.png",
  ﱢ︅︁︃: "img/profile-button-in.png",
  ﱞ︆︁︃: "img/profile-button-click.png",
  ﱠ︆︁︃: "img/login-button-out.png",
  ﱟ︆︁︃: "img/login-button-in.png",
  ﱡ︆︁︃: "img/login-button-click.png",
  ﱣ︆︁︃: "img/login-google-out.png",
  ﱢ︆︁︃: "img/login-google-in.png",
  ﱞ︇︁︃: "img/login-google-click.png",
  ﱠ︇︁︃: "img/login-facebook-out.png",
  ﱟ︇︁︃: "img/login-facebook-in.png",
  ﱡ︇︁︃: "img/login-facebook-click.png",
  ﱣ︇︁︃: "img/account-box.png",
  ﱢ︇︁︃: "img/account-under-maintenance.png",
  ﱞ︈︁︃: "img/close-button-account-out.png",
  ﱠ︈︁︃: "img/close-button-account-in.png",
  ﱟ︈︁︃: "img/close-button-account-click.png",
  ﱡ︈︁︃: "img/play-button-out.png",
  ﱣ︈︁︃: "img/play-button-in.png",
  ﱢ︈︁︃: "img/play-button-click.png",
  ﱞ︉︁︃: "img/app-store-badge.png",
  ﱠ︉︁︃: "img/play-store-badge.png",
  ﱟ︉︁︃: "img/mobile-boxad.png",
  ﱡ︉︁︃: "img/modify-name-out.png",
  ﱣ︉︁︃: "img/modify-name-in.png",
  ﱢ︉︁︃: "img/modify-name-click.png",
  ﱞ︊︁︃: "img/yes-button-out.png",
  ﱠ︊︁︃: "img/yes-button-in.png",
  ﱟ︊︁︃: "img/yes-button-click.png",
  ﱡ︊︁︃: "img/yes-300-button-out.png",
  ﱣ︊︁︃: "img/yes-300-button-in.png",
  ﱢ︊︁︃: "img/yes-300-button-click.png",
  ﱞ︋︁︃: "img/no-button-out.png",
  ﱠ︋︁︃: "img/no-button-in.png",
  ﱟ︋︁︃: "img/no-button-click.png",
  ﱡ︋︁︃: "img/no-thanks-button-out.png",
  ﱣ︋︁︃: "img/no-thanks-button-in.png",
  ﱢ︋︁︃: "img/no-thanks-button-click.png",
  ﱞ︌︁︃: "img/shop-button-out.png",
  ﱠ︌︁︃: "img/shop-button-in.png",
  ﱟ︌︁︃: "img/shop-button-click.png",
  ﱡ︌︁︃: "img/logout-out.png",
  ﱣ︌︁︃: "img/logout-in.png",
  ﱢ︌︁︃: "img/logout-click.png",
  ﱞ︍︁︃: "img/terms-button-out.png",
  ﱠ︍︁︃: "img/terms-button-in.png",
  ﱟ︍︁︃: "img/terms-button-click.png",
  ﱡ︍︁︃: "img/tutorial-icon.png",
  ﱣ︍︁︃: "img/skins-icon.png",
  ﱢ︍︁︃: "img/shop-icon.png",
  ﱞ︎︁︃: "img/paint-icon.png",
  ﱠ︎︁︃: "img/leaderboard-icon.png",
  ﱟ︎︁︃: "img/start-icon.png",
  ﱡ︎︁︃: "img/profile-icon.png",
  ﱣ︎︁︃: "img/server-access-icon2.png",
  ﱢ︎︁︃: "img/button-homepage-bg-out.png",
  ﱞ️︁︃: "img/button-homepage-bg-in.png",
  ﱠ️︁︃: "img/button-homepage-bg-click.png",
  ﱟ️︁︃: "img/button-bottom-homepage-bg-out.png",
  ﱡ️︁︃: "img/button-bottom-homepage-bg-in.png",
  ﱣ️︁︃: "img/button-bottom-homepage-bg-click.png",
  ﱢ️︁︃: "img/lvl-player.png",
  ﱞ︀︂︃: "img/avatar-player.png",
  ﱠ︀︂︃: "img/avatar-player1.png",
  ﱟ︀︂︃: "img/avatar-player2.png",
  ﱡ︀︂︃: "img/avatar-player3.png",
  ﱣ︀︂︃: "img/avatar-player4.png",
  ﱢ︀︂︃: "img/avatar-player5.png",
  ﱞ︁︂︃: "img/avatar-player6.png",
  ﱠ︁︂︃: "img/avatar-player7.png",
  ﱟ︁︂︃: "img/avatar-player8.png",
  ﱡ︁︂︃: "img/avatar-player9.png",
  ﱣ︁︂︃: "img/avatar-player10.png",
  ﱢ︁︂︃: "img/avatar-player11.png",
  ﱞ︂︂︃: "img/avatar-player12.png",
  ﱠ︂︂︃: "img/avatar-player13.png",
  ﱟ︂︂︃: "img/avatar-player14.png",
  ﱡ︂︂︃: "img/avatar-player14.png",
  ﱣ︂︂︃: "img/avatar-player14.png",
  ﱢ︂︂︃: "img/avatar-player14.png",
  ﱞ︃︂︃: "img/golden-bread.png",
  ﱠ︃︂︃: "img/buy-bread-out.png",
  ﱟ︃︂︃: "img/buy-bread-in.png",
  ﱡ︃︂︃: "img/buy-bread-click.png",
  ﱣ︃︂︃: "img/gauge.png",
  ﱢ︃︂︃: "img/season-4-out.png",
  ﱞ︄︂︃: "img/season-4-in.png",
  ﱠ︄︂︃: "img/season-4-click.png",
  ﱟ︄︂︃: "img/season4-box.png",
  ﱡ︄︂︃: "img/season-5-out.png",
  ﱣ︄︂︃: "img/season-5-in.png",
  ﱢ︄︂︃: "img/season-5-click.png",
  ﱞ︅︂︃: "img/season5-box.png",
  ﱠ︅︂︃: "img/profile2-box.png",
  ﱟ︅︂︃: "img/skins-box.png",
  ﱡ︅︂︃: "img/shop-box.png",
  ﱣ︅︂︃: "img/private-server-box.png",
  ﱢ︅︂︃: "img/location-box.png",
  ﱞ︆︂︃: "img/server-duration-box.png",
  ﱠ︆︂︃: "img/tutorial-box.png",
  ﱟ︆︂︃: "img/leaderboard1-box.png",
  ﱡ︆︂︃: "img/buy-breads-box.png",
  ﱣ︆︂︃: "img/bag-box.png",
  ﱢ︆︂︃: "img/deadbox-box.png",
  ﱞ︇︂︃: "img/book-box.png",
  ﱠ︇︂︃: "img/accessories-box.png",
  ﱟ︇︂︃: "img/customskin-box.png",
  ﱡ︇︂︃: "img/bag-lasts.png",
  ﱣ︇︂︃: "img/server-lasts.png",
  ﱢ︇︂︃: "img/server-access-box2.png",
  ﱞ︈︂︃: "img/lootbox-box.png",
  ﱠ︈︂︃: "img/change-nickname0.png",
  ﱟ︈︂︃: "img/change-nickname1.png",
  ﱡ︈︂︃: "img/cheating-box.png",
  ﱣ︈︂︃: "img/daily-quest-box.png",
  ﱢ︈︂︃: "img/daily-5-bread.png",
  ﱞ︉︂︃: "img/daily-10-bread.png",
  ﱠ︉︂︃: "img/daily-valid.png",
  ﱟ︉︂︃: "img/normal-profile-out.png",
  ﱡ︉︂︃: "img/normal-profile-in.png",
  ﱣ︉︂︃: "img/normal-profile-click.png",
  ﱢ︉︂︃: "img/forest-profile-out.png",
  ﱞ︊︂︃: "img/forest-profile-in.png",
  ﱠ︊︂︃: "img/forest-profile-click.png",
  ﱟ︊︂︃: "img/zombie-profile-out.png",
  ﱡ︊︂︃: "img/zombie-profile-in.png",
  ﱣ︊︂︃: "img/zombie-profile-click.png",
  ﱢ︊︂︃: "img/vampire-profile-out.png",
  ﱞ︋︂︃: "img/vampire-profile-in.png",
  ﱠ︋︂︃: "img/vampire-profile-click.png",
  ﱟ︋︂︃: "img/total-profile-out.png",
  ﱡ︋︂︃: "img/total-profile-in.png",
  ﱣ︋︂︃: "img/total-profile-click.png",
  ﱢ︋︂︃: "img/season1-profile-out.png",
  ﱞ︌︂︃: "img/season1-profile-in.png",
  ﱠ︌︂︃: "img/season1-profile-click.png",
  ﱟ︌︂︃: "img/season2-profile-out.png",
  ﱡ︌︂︃: "img/season2-profile-in.png",
  ﱣ︌︂︃: "img/season2-profile-click.png",
  ﱢ︌︂︃: "img/season3-profile-out.png",
  ﱞ︍︂︃: "img/season3-profile-in.png",
  ﱠ︍︂︃: "img/season3-profile-click.png",
  ﱟ︍︂︃: "img/season4-profile-out.png",
  ﱡ︍︂︃: "img/season4-profile-in.png",
  ﱣ︍︂︃: "img/season4-profile-click.png",
  ﱢ︍︂︃: "img/season5-profile-out.png",
  ﱞ︎︂︃: "img/season5-profile-in.png",
  ﱠ︎︂︃: "img/season5-profile-click.png",
  ﱟ︎︂︃: "img/locked-skin-alert.png",
  ﱡ︎︂︃: "img/locked-custom-alert.png",
  ﱣ︎︂︃: "img/bg-red-locked.png",
  ﱢ︎︂︃: "img/skin-button-out.png",
  ﱞ️︂︃: "img/skin-button-in.png",
  ﱠ️︂︃: "img/skin-button-click.png",
  ﱟ️︂︃: "img/accessory-button-out.png",
  ﱡ️︂︃: "img/accessory-button-in.png",
  ﱣ️︂︃: "img/accessory-button-click.png",
  ﱢ️︂︃: "img/bag-button-out.png",
  ﱞ︀︃︃: "img/bag-button-in.png",
  ﱠ︀︃︃: "img/bag-button-click.png",
  ﱟ︀︃︃: "img/book-button-out.png",
  ﱡ︀︃︃: "img/book-button-in.png",
  ﱣ︀︃︃: "img/book-button-click.png",
  ﱢ︀︃︃: "img/deadbox-button-out.png",
  ﱞ︁︃︃: "img/deadbox-button-in.png",
  ﱠ︁︃︃: "img/deadbox-button-click.png",
  ﱟ︁︃︃: "img/loot-button-out.png",
  ﱡ︁︃︃: "img/loot-button-in.png",
  ﱣ︁︃︃: "img/loot-button-click.png",
  ﱢ︁︃︃: "img/free-item-out.png",
  ﱞ︂︃︃: "img/free-item-in.png",
  ﱠ︂︃︃: "img/free-item-click.png",
  ﱟ︂︃︃: "img/wood-item-out.png",
  ﱡ︂︃︃: "img/wood-item-in.png",
  ﱣ︂︃︃: "img/wood-item-click.png",
  ﱢ︂︃︃: "img/stone-item.png",
  ﱞ︃︃︃: "img/stone-item-in.png",
  ﱠ︃︃︃: "img/stone-item-click.png",
  ﱟ︃︃︃: "img/gold-item.png",
  ﱡ︃︃︃: "img/gold-item-in.png",
  ﱣ︃︃︃: "img/gold-item-click.png",
  ﱢ︃︃︃: "img/diamond-item.png",
  ﱞ︄︃︃: "img/diamond-item-in.png",
  ﱠ︄︃︃: "img/diamond-item-click.png",
  ﱟ︄︃︃: "img/amethyst-item.png",
  ﱡ︄︃︃: "img/amethyst-item-in.png",
  ﱣ︄︃︃: "img/amethyst-item-click.png",
  ﱢ︄︃︃: "img/reidite-item.png",
  ﱞ︅︃︃: "img/reidite-item-in.png",
  ﱠ︅︃︃: "img/reidite-item-click.png",
  ﱟ︅︃︃: "img/special-item-out.png",
  ﱡ︅︃︃: "img/special-item-in.png",
  ﱣ︅︃︃: "img/special-item-click.png",
  ﱢ︅︃︃: "img/level-item-out.png",
  ﱞ︆︃︃: "img/level-item-in.png",
  ﱠ︆︃︃: "img/level-item-click.png",
  ﱟ︆︃︃: "img/skin-previous-out.png",
  ﱡ︆︃︃: "img/skin-previous-in.png",
  ﱣ︆︃︃: "img/skin-previous-click.png",
  ﱢ︆︃︃: "img/skin-next-out.png",
  ﱞ︇︃︃: "img/skin-next-in.png",
  ﱠ︇︃︃: "img/skin-next-click.png",
  ﱟ︇︃︃: "img/back-button-out.png",
  ﱡ︇︃︃: "img/back-button-in.png",
  ﱣ︇︃︃: "img/back-button-click.png",
  ﱢ︇︃︃: "img/get-more-button-out.png",
  ﱞ︈︃︃: "img/get-more-button-in.png",
  ﱠ︈︃︃: "img/get-more-button-click.png",
  ﱟ︈︃︃: "img/currency1-out.png",
  ﱡ︈︃︃: "img/currency1-in.png",
  ﱣ︈︃︃: "img/currency1-click.png",
  ﱢ︈︃︃: "img/currency2-out.png",
  ﱞ︉︃︃: "img/currency2-in.png",
  ﱠ︉︃︃: "img/currency2-click.png",
  ﱟ︉︃︃: "img/currency3-out.png",
  ﱡ︉︃︃: "img/currency3-in.png",
  ﱣ︉︃︃: "img/currency3-click.png",
  ﱢ︉︃︃: "img/currency4-out.png",
  ﱞ︊︃︃: "img/currency4-in.png",
  ﱠ︊︃︃: "img/currency4-click.png",
  ﱟ︊︃︃: "img/currency5-out.png",
  ﱡ︊︃︃: "img/currency5-in.png",
  ﱣ︊︃︃: "img/currency5-click.png",
  ﱢ︊︃︃: "img/price1-out.png",
  ﱞ︋︃︃: "img/price1-in.png",
  ﱠ︋︃︃: "img/price1-click.png",
  ﱟ︋︃︃: "img/price2-out.png",
  ﱡ︋︃︃: "img/price2-in.png",
  ﱣ︋︃︃: "img/price2-click.png",
  ﱢ︋︃︃: "img/price3-out.png",
  ﱞ︌︃︃: "img/price3-in.png",
  ﱠ︌︃︃: "img/price3-click.png",
  ﱟ︌︃︃: "img/price4-out.png",
  ﱡ︌︃︃: "img/price4-in.png",
  ﱣ︌︃︃: "img/price4-click.png",
  ﱢ︌︃︃: "img/price5-out.png",
  ﱞ︍︃︃: "img/price5-in.png",
  ﱠ︍︃︃: "img/price5-click.png",
  ﱟ︍︃︃: "img/buy-private-server-out.png",
  ﱡ︍︃︃: "img/buy-private-server-in.png",
  ﱣ︍︃︃: "img/buy-private-server-click.png",
  ﱢ︍︃︃: "img/atlanta-out.png",
  ﱞ︎︃︃: "img/atlanta-in.png",
  ﱠ︎︃︃: "img/atlanta-click.png",
  ﱟ︎︃︃: "img/dallas-out.png",
  ﱡ︎︃︃: "img/dallas-in.png",
  ﱣ︎︃︃: "img/dallas-click.png",
  ﱢ︎︃︃: "img/fremont-out.png",
  ﱞ️︃︃: "img/fremont-in.png",
  ﱠ️︃︃: "img/fremont-click.png",
  ﱟ️︃︃: "img/newark-out.png",
  ﱡ️︃︃: "img/newark-in.png",
  ﱣ️︃︃: "img/newark-click.png",
  ﱢ️︃︃: "img/toronto-out.png",
  ﱞ︀︄︃: "img/toronto-in.png",
  ﱠ︀︄︃: "img/toronto-click.png",
  ﱟ︀︄︃: "img/singapore-out.png",
  ﱡ︀︄︃: "img/singapore-in.png",
  ﱣ︀︄︃: "img/singapore-click.png",
  ﱢ︀︄︃: "img/frankfurt-out.png",
  ﱞ︁︄︃: "img/frankfurt-in.png",
  ﱠ︁︄︃: "img/frankfurt-click.png",
  ﱟ︁︄︃: "img/london-out.png",
  ﱡ︁︄︃: "img/london-in.png",
  ﱣ︁︄︃: "img/london-click.png",
  ﱢ︁︄︃: "img/mumbai-out.png",
  ﱞ︂︄︃: "img/mumbai-in.png",
  ﱠ︂︄︃: "img/mumbai-click.png",
  ﱟ︂︄︃: "img/tokyo-out.png",
  ﱡ︂︄︃: "img/tokyo-in.png",
  ﱣ︂︄︃: "img/tokyo-click.png",
  ﱢ︂︄︃: "img/yes-location-out.png",
  ﱞ︃︄︃: "img/yes-location-in.png",
  ﱠ︃︄︃: "img/yes-location-click.png",
  ﱟ︃︄︃: "img/3days-out.png",
  ﱡ︃︄︃: "img/3days-in.png",
  ﱣ︃︄︃: "img/3days-click.png",
  ﱢ︃︄︃: "img/7days-out.png",
  ﱞ︄︄︃: "img/7days-in.png",
  ﱠ︄︄︃: "img/7days-click.png",
  ﱟ︄︄︃: "img/30days-out.png",
  ﱡ︄︄︃: "img/30days-in.png",
  ﱣ︄︄︃: "img/30days-click.png",
  ﱢ︄︄︃: "img/90days-out.png",
  ﱞ︅︄︃: "img/90days-in.png",
  ﱠ︅︄︃: "img/90days-click.png",
  ﱟ︅︄︃: "img/spin1.png",
  ﱡ︅︄︃: "img/spin2.png",
  ﱣ︅︄︃: "img/spin3.png",
  ﱢ︅︄︃: "img/spin4.png",
  ﱞ︆︄︃: "img/spin5.png",
  ﱠ︆︄︃: "img/spin6.png",
  ﱟ︆︄︃: "img/arrow-spin.png",
  ﱡ︆︄︃: "img/spin-button-1-out.png",
  ﱣ︆︄︃: "img/spin-button-1-in.png",
  ﱢ︆︄︃: "img/spin-button-1-click.png",
  ﱞ︇︄︃: "img/spin-button-2-out.png",
  ﱠ︇︄︃: "img/spin-button-2-in.png",
  ﱟ︇︄︃: "img/spin-button-2-click.png",
  ﱡ︇︄︃: "img/spin-button-3-out.png",
  ﱣ︇︄︃: "img/spin-button-3-in.png",
  ﱢ︇︄︃: "img/spin-button-3-click.png",
  ﱞ︈︄︃: "img/spin-button-4-out.png",
  ﱠ︈︄︃: "img/spin-button-4-in.png",
  ﱟ︈︄︃: "img/spin-button-4-click.png",
  ﱡ︈︄︃: "img/spin-button-5-out.png",
  ﱣ︈︄︃: "img/spin-button-5-in.png",
  ﱢ︈︄︃: "img/spin-button-5-click.png",
  ﱞ︉︄︃: "img/spin-light.png",
  ﱠ︉︄︃: "img/tuto-wiki-out.png",
  ﱟ︉︄︃: "img/tuto-wiki-in.png",
  ﱡ︉︄︃: "img/tuto-wiki-click.png",
  ﱣ︉︄︃: "img/tuto-previous-out.png",
  ﱢ︉︄︃: "img/tuto-previous-in.png",
  ﱞ︊︄︃: "img/tuto-previous-click.png",
  ﱠ︊︄︃: "img/tuto-next-out.png",
  ﱟ︊︄︃: "img/tuto-next-in.png",
  ﱡ︊︄︃: "img/tuto-next-click.png",
  ﱣ︊︄︃: "img/time-leaderboard-out.png",
  ﱢ︊︄︃: "img/time-leaderboard-in.png",
  ﱞ︋︄︃: "img/time-leaderboard-click.png",
  ﱠ︋︄︃: "img/score-leaderboard-out.png",
  ﱟ︋︄︃: "img/score-leaderboard-in.png",
  ﱡ︋︄︃: "img/score-leaderboard-click.png",
  ﱣ︋︄︃: "img/lvl-leaderboard-out.png",
  ﱢ︋︄︃: "img/lvl-leaderboard-in.png",
  ﱞ︌︄︃: "img/lvl-leaderboard-click.png",
  ﱠ︌︄︃: "img/kill-leaderboard-out.png",
  ﱟ︌︄︃: "img/kill-leaderboard-in.png",
  ﱡ︌︄︃: "img/kill-leaderboard-click.png",
  ﱣ︌︄︃: "img/all-leaderboard-out.png",
  ﱢ︌︄︃: "img/all-leaderboard-in.png",
  ﱞ︍︄︃: "img/all-leaderboard-click.png",
  ﱠ︍︄︃: "img/today-leaderboard-out.png",
  ﱟ︍︄︃: "img/today-leaderboard-in.png",
  ﱡ︍︄︃: "img/today-leaderboard-click.png",
  ﱣ︍︄︃: "img/week-leaderboard-out.png",
  ﱢ︍︄︃: "img/week-leaderboard-in.png",
  ﱞ︎︄︃: "img/week-leaderboard-click.png",
  ﱠ︎︄︃: "img/season1-out.png",
  ﱟ︎︄︃: "img/season1-in.png",
  ﱡ︎︄︃: "img/season1-click.png",
  ﱣ︎︄︃: "img/season2--out.png",
  ﱢ︎︄︃: "img/season2--in.png",
  ﱞ️︄︃: "img/season2--click.png",
  ﱠ️︄︃: "img/season3-out.png",
  ﱟ️︄︃: "img/season3-in.png",
  ﱡ️︄︃: "img/season3-click.png",
  ﱣ️︄︃: "img/season4-out.png",
  ﱢ️︄︃: "img/season4-in.png",
  ﱞ︀︅︃: "img/season4-click.png",
  ﱠ︀︅︃: "img/season5-out.png",
  ﱟ︀︅︃: "img/season5-in.png",
  ﱡ︀︅︃: "img/season5-click.png",
  ﱣ︀︅︃: "img/total-lead-out.png",
  ﱢ︀︅︃: "img/total-lead-in.png",
  ﱞ︁︅︃: "img/total-lead-click.png",
  ﱠ︁︅︃: "img/normal-lead-out.png",
  ﱟ︁︅︃: "img/normal-lead-in.png",
  ﱡ︁︅︃: "img/normal-lead-click.png",
  ﱣ︁︅︃: "img/forest-lead-out.png",
  ﱢ︁︅︃: "img/forest-lead-in.png",
  ﱞ︂︅︃: "img/forest-lead-click.png",
  ﱠ︂︅︃: "img/vampire-lead-out.png",
  ﱟ︂︅︃: "img/vampire-lead-in.png",
  ﱡ︂︅︃: "img/vampire-lead-click.png",
  ﱣ︂︅︃: "img/zombie-lead-out.png",
  ﱢ︂︅︃: "img/zombie-lead-in.png",
  ﱞ︃︅︃: "img/zombie-lead-click.png",
  ﱠ︃︅︃: "img/day-level5.png",
  ﱟ︃︅︃: "img/night-level5.png",
  ﱡ︃︅︃: "img/day-level10.png",
  ﱣ︃︅︃: "img/night-level10.png",
  ﱢ︃︅︃: "img/day-level15.png",
  ﱞ︄︅︃: "img/night-level15.png",
  ﱠ︄︅︃: "img/day-level20.png",
  ﱟ︄︅︃: "img/night-level20.png",
  ﱡ︄︅︃: "img/day-level25.png",
  ﱣ︄︅︃: "img/night-level25.png",
  ﱢ︄︅︃: "img/day-level30.png",
  ﱞ︅︅︃: "img/night-level30.png",
  ﱠ︅︅︃: "img/day-level35.png",
  ﱟ︅︅︃: "img/night-level35.png",
  ﱡ︅︅︃: "img/day-level40.png",
  ﱣ︅︅︃: "img/night-level40.png",
  ﱢ︅︅︃: "img/day-level45.png",
  ﱞ︆︅︃: "img/night-level45.png",
  ﱠ︆︅︃: "img/day-level50.png",
  ﱟ︆︅︃: "img/night-level50.png",
  ﱡ︆︅︃: "img/day-level55.png",
  ﱣ︆︅︃: "img/night-level55.png",
  ﱢ︆︅︃: "img/day-level60.png",
  ﱞ︇︅︃: "img/night-level60.png",
  ﱠ︇︅︃: "img/day-skin-devast0.png",
  ﱟ︇︅︃: "img/night-skin-devast0.png",
  ﱡ︇︅︃: "img/day-hand-devaster.png",
  ﱣ︇︅︃: "img/night-hand-devaster.png",
  ﱢ︇︅︃: "img/day-skin-star0.png",
  ﱞ︈︅︃: "img/night-skin-star0.png",
  ﱠ︈︅︃: "img/day-hand-star0.png",
  ﱟ︈︅︃: "img/night-hand-star0.png",
  ﱡ︈︅︃: "img/day-vampire.png",
  ﱣ︈︅︃: "img/night-vampire.png",
  ﱢ︈︅︃: "img/day-hand-vampire.png",
  ﱞ︉︅︃: "img/night-hand-vampire.png",
  ﱠ︉︅︃: "img/day-zombie.png",
  ﱟ︉︅︃: "img/night-zombie.png",
  ﱡ︉︅︃: "img/day-hand-zombie.png",
  ﱣ︉︅︃: "img/night-hand-zombie.png",
  ﱢ︉︅︃: "img/day-skin113.png",
  ﱞ︊︅︃: "img/night-skin113.png",
  ﱠ︊︅︃: "img/day-hand-skin113.png",
  ﱟ︊︅︃: "img/night-hand-skin113.png",
  ﱡ︊︅︃: "img/day-skin0.png",
  ﱣ︊︅︃: "img/night-skin0.png",
  ﱢ︊︅︃: "img/day-skin1.png",
  ﱞ︋︅︃: "img/night-skin1.png",
  ﱠ︋︅︃: "img/day-skin2.png",
  ﱟ︋︅︃: "img/night-skin2.png",
  ﱡ︋︅︃: "img/day-skin3.png",
  ﱣ︋︅︃: "img/night-skin3.png",
  ﱢ︋︅︃: "img/day-skin4.png",
  ﱞ︌︅︃: "img/night-skin4.png",
  ﱠ︌︅︃: "img/day-skin5.png",
  ﱟ︌︅︃: "img/night-skin5.png",
  ﱡ︌︅︃: "img/day-skin6.png",
  ﱣ︌︅︃: "img/night-skin6.png",
  ﱢ︌︅︃: "img/day-skin7.png",
  ﱞ︍︅︃: "img/night-skin7.png",
  ﱠ︍︅︃: "img/day-skin8.png",
  ﱟ︍︅︃: "img/night-skin8.png",
  ﱡ︍︅︃: "img/day-skin9.png",
  ﱣ︍︅︃: "img/night-skin9.png",
  ﱢ︍︅︃: "img/day-skin10.png",
  ﱞ︎︅︃: "img/night-skin10.png",
  ﱠ︎︅︃: "img/day-skin11.png",
  ﱟ︎︅︃: "img/night-skin11.png",
  ﱡ︎︅︃: "img/day-skin12.png",
  ﱣ︎︅︃: "img/night-skin12.png",
  ﱢ︎︅︃: "img/day-skin13.png",
  ﱞ️︅︃: "img/night-skin13.png",
  ﱠ️︅︃: "img/day-skin14.png",
  ﱟ️︅︃: "img/night-skin14.png",
  ﱡ️︅︃: "img/day-skin15.png",
  ﱣ️︅︃: "img/night-skin15.png",
  ﱢ️︅︃: "img/day-skin16.png",
  ﱞ︀︆︃: "img/night-skin16.png",
  ﱠ︀︆︃: "img/day-skin17.png",
  ﱟ︀︆︃: "img/night-skin17.png",
  ﱡ︀︆︃: "img/day-skin18.png",
  ﱣ︀︆︃: "img/night-skin18.png",
  ﱢ︀︆︃: "img/day-skin19.png",
  ﱞ︁︆︃: "img/night-skin19.png",
  ﱠ︁︆︃: "img/day-skin20.png",
  ﱟ︁︆︃: "img/night-skin20.png",
  ﱡ︁︆︃: "img/day-skin21.png",
  ﱣ︁︆︃: "img/night-skin21.png",
  ﱢ︁︆︃: "img/day-skin22.png",
  ﱞ︂︆︃: "img/night-skin22.png",
  ﱠ︂︆︃: "img/day-skin23.png",
  ﱟ︂︆︃: "img/night-skin23.png",
  ﱡ︂︆︃: "img/day-skin24.png",
  ﱣ︂︆︃: "img/night-skin24.png",
  ﱢ︂︆︃: "img/day-skin25.png",
  ﱞ︃︆︃: "img/night-skin25.png",
  ﱠ︃︆︃: "img/day-skin26.png",
  ﱟ︃︆︃: "img/night-skin26.png",
  ﱡ︃︆︃: "img/day-skin27.png",
  ﱣ︃︆︃: "img/night-skin27.png",
  ﱢ︃︆︃: "img/day-skin28.png",
  ﱞ︄︆︃: "img/night-skin28.png",
  ﱠ︄︆︃: "img/day-skin29.png",
  ﱟ︄︆︃: "img/night-skin29.png",
  ﱡ︄︆︃: "img/day-skin30.png",
  ﱣ︄︆︃: "img/night-skin30.png",
  ﱢ︄︆︃: "img/day-skin31.png",
  ﱞ︅︆︃: "img/night-skin31.png",
  ﱠ︅︆︃: "img/day-skin32.png",
  ﱟ︅︆︃: "img/night-skin32.png",
  ﱡ︅︆︃: "img/day-skin33.png",
  ﱣ︅︆︃: "img/night-skin33.png",
  ﱢ︅︆︃: "img/day-skin34.png",
  ﱞ︆︆︃: "img/night-skin34.png",
  ﱠ︆︆︃: "img/day-skin35.png",
  ﱟ︆︆︃: "img/night-skin35.png",
  ﱡ︆︆︃: "img/day-skin36.png",
  ﱣ︆︆︃: "img/night-skin36.png",
  ﱢ︆︆︃: "img/day-skin37.png",
  ﱞ︇︆︃: "img/night-skin37.png",
  ﱠ︇︆︃: "img/day-skin38.png",
  ﱟ︇︆︃: "img/night-skin38.png",
  ﱡ︇︆︃: "img/day-skin39.png",
  ﱣ︇︆︃: "img/night-skin39.png",
  ﱢ︇︆︃: "img/day-skin40.png",
  ﱞ︈︆︃: "img/night-skin40.png",
  ﱠ︈︆︃: "img/day-skin41.png",
  ﱟ︈︆︃: "img/night-skin41.png",
  ﱡ︈︆︃: "img/day-skin42.png",
  ﱣ︈︆︃: "img/night-skin42.png",
  ﱢ︈︆︃: "img/day-skin43.png",
  ﱞ︉︆︃: "img/night-skin43.png",
  ﱠ︉︆︃: "img/day-skin44.png",
  ﱟ︉︆︃: "img/night-skin44.png",
  ﱡ︉︆︃: "img/day-skin45.png",
  ﱣ︉︆︃: "img/night-skin45.png",
  ﱢ︉︆︃: "img/day-skin46.png",
  ﱞ︊︆︃: "img/night-skin46.png",
  ﱠ︊︆︃: "img/day-skin47.png",
  ﱟ︊︆︃: "img/night-skin47.png",
  ﱡ︊︆︃: "img/day-skin48.png",
  ﱣ︊︆︃: "img/night-skin48.png",
  ﱢ︊︆︃: "img/day-skin49.png",
  ﱞ︋︆︃: "img/night-skin49.png",
  ﱠ︋︆︃: "img/day-skin50.png",
  ﱟ︋︆︃: "img/night-skin50.png",
  ﱡ︋︆︃: "img/day-skin51.png",
  ﱣ︋︆︃: "img/night-skin51.png",
  ﱢ︋︆︃: "img/day-skin52.png",
  ﱞ︌︆︃: "img/night-skin52.png",
  ﱠ︌︆︃: "img/day-skin53.png",
  ﱟ︌︆︃: "img/night-skin53.png",
  ﱡ︌︆︃: "img/day-skin54.png",
  ﱣ︌︆︃: "img/night-skin54.png",
  ﱢ︌︆︃: "img/day-skin55.png",
  ﱞ︍︆︃: "img/night-skin55.png",
  ﱠ︍︆︃: "img/day-skin56.png",
  ﱟ︍︆︃: "img/night-skin56.png",
  ﱡ︍︆︃: "img/day-skin57.png",
  ﱣ︍︆︃: "img/night-skin57.png",
  ﱢ︍︆︃: "img/day-skin58.png",
  ﱞ︎︆︃: "img/night-skin58.png",
  ﱠ︎︆︃: "img/day-skin59.png",
  ﱟ︎︆︃: "img/night-skin59.png",
  ﱡ︎︆︃: "img/day-skin60.png",
  ﱣ︎︆︃: "img/night-skin60.png",
  ﱢ︎︆︃: "img/day-skin61.png",
  ﱞ️︆︃: "img/night-skin61.png",
  ﱠ️︆︃: "img/day-skin62.png",
  ﱟ️︆︃: "img/night-skin62.png",
  ﱡ️︆︃: "img/day-skin63.png",
  ﱣ️︆︃: "img/night-skin63.png",
  ﱢ️︆︃: "img/day-skin64.png",
  ﱞ︀︇︃: "img/night-skin64.png",
  ﱠ︀︇︃: "img/day-skin65.png",
  ﱟ︀︇︃: "img/night-skin65.png",
  ﱡ︀︇︃: "img/day-skin66.png",
  ﱣ︀︇︃: "img/night-skin66.png",
  ﱢ︀︇︃: "img/day-skin67.png",
  ﱞ︁︇︃: "img/night-skin67.png",
  ﱠ︁︇︃: "img/day-skin68.png",
  ﱟ︁︇︃: "img/night-skin68.png",
  ﱡ︁︇︃: "img/day-skin69.png",
  ﱣ︁︇︃: "img/night-skin69.png",
  ﱢ︁︇︃: "img/day-skin70.png",
  ﱞ︂︇︃: "img/night-skin70.png",
  ﱠ︂︇︃: "img/day-skin71.png",
  ﱟ︂︇︃: "img/night-skin71.png",
  ﱡ︂︇︃: "img/day-skin72.png",
  ﱣ︂︇︃: "img/night-skin72.png",
  ﱢ︂︇︃: "img/day-skin73.png",
  ﱞ︃︇︃: "img/night-skin73.png",
  ﱠ︃︇︃: "img/day-skin74.png",
  ﱟ︃︇︃: "img/night-skin74.png",
  ﱡ︃︇︃: "img/day-skin75.png",
  ﱣ︃︇︃: "img/night-skin75.png",
  ﱢ︃︇︃: "img/day-skin76.png",
  ﱞ︄︇︃: "img/night-skin76.png",
  ﱠ︄︇︃: "img/day-skin77.png",
  ﱟ︄︇︃: "img/night-skin77.png",
  ﱡ︄︇︃: "img/day-skin78.png",
  ﱣ︄︇︃: "img/night-skin78.png",
  ﱢ︄︇︃: "img/day-skin79.png",
  ﱞ︅︇︃: "img/night-skin79.png",
  ﱠ︅︇︃: "img/day-skin80.png",
  ﱟ︅︇︃: "img/night-skin80.png",
  ﱡ︅︇︃: "img/day-skin81.png",
  ﱣ︅︇︃: "img/night-skin81.png",
  ﱢ︅︇︃: "img/day-skin82.png",
  ﱞ︆︇︃: "img/night-skin82.png",
  ﱠ︆︇︃: "img/day-skin83.png",
  ﱟ︆︇︃: "img/night-skin83.png",
  ﱡ︆︇︃: "img/day-skin84.png",
  ﱣ︆︇︃: "img/night-skin84.png",
  ﱢ︆︇︃: "img/day-skin85.png",
  ﱞ︇︇︃: "img/night-skin85.png",
  ﱠ︇︇︃: "img/day-skin86.png",
  ﱟ︇︇︃: "img/night-skin86.png",
  ﱡ︇︇︃: "img/day-skin87.png",
  ﱣ︇︇︃: "img/night-skin87.png",
  ﱢ︇︇︃: "img/day-skin88.png",
  ﱞ︈︇︃: "img/night-skin88.png",
  ﱠ︈︇︃: "img/day-skin89.png",
  ﱟ︈︇︃: "img/night-skin89.png",
  ﱡ︈︇︃: "img/day-skin90.png",
  ﱣ︈︇︃: "img/night-skin90.png",
  ﱢ︈︇︃: "img/day-skin91.png",
  ﱞ︉︇︃: "img/night-skin91.png",
  ﱠ︉︇︃: "img/day-skin92.png",
  ﱟ︉︇︃: "img/night-skin92.png",
  ﱡ︉︇︃: "img/day-skin93.png",
  ﱣ︉︇︃: "img/night-skin93.png",
  ﱢ︉︇︃: "img/day-skin94.png",
  ﱞ︊︇︃: "img/night-skin94.png",
  ﱠ︊︇︃: "img/day-skin95.png",
  ﱟ︊︇︃: "img/night-skin95.png",
  ﱡ︊︇︃: "img/day-skin96.png",
  ﱣ︊︇︃: "img/night-skin96.png",
  ﱢ︊︇︃: "img/day-skin97.png",
  ﱞ︋︇︃: "img/night-skin97.png",
  ﱠ︋︇︃: "img/day-skin98.png",
  ﱟ︋︇︃: "img/night-skin98.png",
  ﱡ︋︇︃: "img/day-skin99.png",
  ﱣ︋︇︃: "img/night-skin99.png",
  ﱢ︋︇︃: "img/day-skin100.png",
  ﱞ︌︇︃: "img/night-skin100.png",
  ﱠ︌︇︃: "img/day-skin101.png",
  ﱟ︌︇︃: "img/night-skin101.png",
  ﱡ︌︇︃: "img/day-skin102.png",
  ﱣ︌︇︃: "img/night-skin102.png",
  ﱢ︌︇︃: "img/day-skin103.png",
  ﱞ︍︇︃: "img/night-skin103.png",
  ﱠ︍︇︃: "img/day-skin104.png",
  ﱟ︍︇︃: "img/night-skin104.png",
  ﱡ︍︇︃: "img/day-skin105.png",
  ﱣ︍︇︃: "img/night-skin105.png",
  ﱢ︍︇︃: "img/day-skin106.png",
  ﱞ︎︇︃: "img/night-skin106.png",
  ﱠ︎︇︃: "img/day-skin107.png",
  ﱟ︎︇︃: "img/night-skin107.png",
  ﱡ︎︇︃: "img/day-skin108.png",
  ﱣ︎︇︃: "img/night-skin108.png",
  ﱢ︎︇︃: "img/day-skin109.png",
  ﱞ️︇︃: "img/night-skin109.png",
  ﱠ️︇︃: "img/day-skin110.png",
  ﱟ️︇︃: "img/night-skin110.png",
  ﱡ️︇︃: "img/day-skin111.png",
  ﱣ️︇︃: "img/night-skin111.png",
  ﱢ️︇︃: "img/day-skin112.png",
  ﱞ︀︈︃: "img/night-skin112.png",
  ﱠ︀︈︃: "img/day-skin113.png",
  ﱟ︀︈︃: "img/night-skin113.png",
  ﱡ︀︈︃: "img/day-skin114.png",
  ﱣ︀︈︃: "img/night-skin114.png",
  ﱢ︀︈︃: "img/day-skin115.png",
  ﱞ︁︈︃: "img/night-skin115.png",
  ﱠ︁︈︃: "img/day-skin116.png",
  ﱟ︁︈︃: "img/night-skin116.png",
  ﱡ︁︈︃: "img/day-skin117.png",
  ﱣ︁︈︃: "img/night-skin117.png",
  ﱢ︁︈︃: "img/day-skin118.png",
  ﱞ︂︈︃: "img/night-skin118.png",
  ﱠ︂︈︃: "img/day-skin119.png",
  ﱟ︂︈︃: "img/night-skin119.png",
  ﱡ︂︈︃: "img/day-skin120.png",
  ﱣ︂︈︃: "img/night-skin120.png",
  ﱢ︂︈︃: "img/day-skin121.png",
  ﱞ︃︈︃: "img/night-skin121.png",
  ﱠ︃︈︃: "img/day-skin122.png",
  ﱟ︃︈︃: "img/night-skin122.png",
  ﱡ︃︈︃: "img/day-skin123.png",
  ﱣ︃︈︃: "img/night-skin123.png",
  ﱢ︃︈︃: "img/day-skin124.png",
  ﱞ︄︈︃: "img/night-skin124.png",
  ﱠ︄︈︃: "img/day-skin125.png",
  ﱟ︄︈︃: "img/night-skin125.png",
  ﱡ︄︈︃: "img/day-skin126.png",
  ﱣ︄︈︃: "img/night-skin126.png",
  ﱢ︄︈︃: "img/day-skin127.png",
  ﱞ︅︈︃: "img/night-skin127.png",
  ﱠ︅︈︃: "img/day-skin128.png",
  ﱟ︅︈︃: "img/night-skin128.png",
  ﱡ︅︈︃: "img/day-skin129.png",
  ﱣ︅︈︃: "img/night-skin129.png",
  ﱢ︅︈︃: "img/day-skin130-1.png",
  ﱞ︆︈︃: "img/night-skin130-1.png",
  ﱠ︆︈︃: "img/day-skin131.png",
  ﱟ︆︈︃: "img/night-skin131.png",
  ﱡ︆︈︃: "img/day-skin132.png",
  ﱣ︆︈︃: "img/night-skin132.png",
  ﱢ︆︈︃: "img/day-skin133.png",
  ﱞ︇︈︃: "img/night-skin133.png",
  ﱠ︇︈︃: "img/day-skin134.png",
  ﱟ︇︈︃: "img/night-skin134.png",
  ﱡ︇︈︃: "img/day-skin135.png",
  ﱣ︇︈︃: "img/night-skin135.png",
  ﱢ︇︈︃: "img/day-skin136.png",
  ﱞ︈︈︃: "img/night-skin136.png",
  ﱠ︈︈︃: "img/day-skin137.png",
  ﱟ︈︈︃: "img/night-skin137.png",
  ﱡ︈︈︃: "img/day-skin138.png",
  ﱣ︈︈︃: "img/night-skin138.png",
  ﱢ︈︈︃: "img/day-skin139.png",
  ﱞ︉︈︃: "img/night-skin139.png",
  ﱠ︉︈︃: "img/day-skin140.png",
  ﱟ︉︈︃: "img/night-skin140.png",
  ﱡ︉︈︃: "img/day-skin141.png",
  ﱣ︉︈︃: "img/night-skin141.png",
  ﱢ︉︈︃: "img/day-skin142.png",
  ﱞ︊︈︃: "img/night-skin142.png",
  ﱠ︊︈︃: "img/day-skin143.png",
  ﱟ︊︈︃: "img/night-skin143.png",
  ﱡ︊︈︃: "img/day-skin144.png",
  ﱣ︊︈︃: "img/night-skin144.png",
  ﱢ︊︈︃: "img/day-skin145.png",
  ﱞ︋︈︃: "img/night-skin145.png",
  ﱠ︋︈︃: "img/day-skin146.png",
  ﱟ︋︈︃: "img/night-skin146.png",
  ﱡ︋︈︃: "img/day-skin147.png",
  ﱣ︋︈︃: "img/night-skin147.png",
  ﱢ︋︈︃: "img/day-skin148.png",
  ﱞ︌︈︃: "img/night-skin148.png",
  ﱠ︌︈︃: "img/day-skin149.png",
  ﱟ︌︈︃: "img/night-skin149.png",
  ﱡ︌︈︃: "img/day-skin150.png",
  ﱣ︌︈︃: "img/night-skin150.png",
  ﱢ︌︈︃: "img/day-hand-skin0.png",
  ﱞ︍︈︃: "img/night-hand-skin0.png",
  ﱠ︍︈︃: "img/day-hand-skin1.png",
  ﱟ︍︈︃: "img/night-hand-skin1.png",
  ﱡ︍︈︃: "img/day-hand-skin2.png",
  ﱣ︍︈︃: "img/night-hand-skin2.png",
  ﱢ︍︈︃: "img/day-hand-skin3.png",
  ﱞ︎︈︃: "img/night-hand-skin3.png",
  ﱠ︎︈︃: "img/day-hand-skin4.png",
  ﱟ︎︈︃: "img/night-hand-skin4.png",
  ﱡ︎︈︃: "img/day-hand-skin5.png",
  ﱣ︎︈︃: "img/night-hand-skin5.png",
  ﱢ︎︈︃: "img/day-hand-skin6.png",
  ﱞ️︈︃: "img/night-hand-skin6.png",
  ﱠ️︈︃: "img/day-hand-skin6.png",
  ﱟ️︈︃: "img/night-hand-skin6.png",
  ﱡ️︈︃: "img/day-hand-skin8.png",
  ﱣ️︈︃: "img/night-hand-skin8.png",
  ﱢ️︈︃: "img/day-hand-skin9.png",
  ﱞ︀︉︃: "img/night-hand-skin9.png",
  ﱠ︀︉︃: "img/day-hand-skin10.png",
  ﱟ︀︉︃: "img/night-hand-skin10.png",
  ﱡ︀︉︃: "img/day-hand-skin11.png",
  ﱣ︀︉︃: "img/night-hand-skin11.png",
  ﱢ︀︉︃: "img/day-hand-skin12.png",
  ﱞ︁︉︃: "img/night-hand-skin12.png",
  ﱠ︁︉︃: "img/day-hand-skin13.png",
  ﱟ︁︉︃: "img/night-hand-skin13.png",
  ﱡ︁︉︃: "img/day-hand-skin14.png",
  ﱣ︁︉︃: "img/night-hand-skin14.png",
  ﱢ︁︉︃: "img/day-hand-skin15.png",
  ﱞ︂︉︃: "img/night-hand-skin15.png",
  ﱠ︂︉︃: "img/day-hand-skin16.png",
  ﱟ︂︉︃: "img/night-hand-skin16.png",
  ﱡ︂︉︃: "img/day-hand-skin17.png",
  ﱣ︂︉︃: "img/night-hand-skin17.png",
  ﱢ︂︉︃: "img/day-hand-skin18.png",
  ﱞ︃︉︃: "img/night-hand-skin18.png",
  ﱠ︃︉︃: "img/day-hand-skin19.png",
  ﱟ︃︉︃: "img/night-hand-skin19.png",
  ﱡ︃︉︃: "img/day-hand-skin20.png",
  ﱣ︃︉︃: "img/night-hand-skin20.png",
  ﱢ︃︉︃: "img/day-hand-skin21.png",
  ﱞ︄︉︃: "img/night-hand-skin21.png",
  ﱠ︄︉︃: "img/day-hand-skin22.png",
  ﱟ︄︉︃: "img/night-hand-skin22.png",
  ﱡ︄︉︃: "img/day-hand-skin23.png",
  ﱣ︄︉︃: "img/night-hand-skin23.png",
  ﱢ︄︉︃: "img/day-hand-skin24.png",
  ﱞ︅︉︃: "img/night-hand-skin24.png",
  ﱠ︅︉︃: "img/day-hand-skin25.png",
  ﱟ︅︉︃: "img/night-hand-skin25.png",
  ﱡ︅︉︃: "img/day-hand-skin26.png",
  ﱣ︅︉︃: "img/night-hand-skin26.png",
  ﱢ︅︉︃: "img/day-hand-skin27.png",
  ﱞ︆︉︃: "img/night-hand-skin27.png",
  ﱠ︆︉︃: "img/day-hand-skin28.png",
  ﱟ︆︉︃: "img/night-hand-skin28.png",
  ﱡ︆︉︃: "img/day-hand-skin29.png",
  ﱣ︆︉︃: "img/night-hand-skin29.png",
  ﱢ︆︉︃: "img/day-hand-skin30.png",
  ﱞ︇︉︃: "img/night-hand-skin30.png",
  ﱠ︇︉︃: "img/day-hand-skin31.png",
  ﱟ︇︉︃: "img/night-hand-skin31.png",
  ﱡ︇︉︃: "img/day-hand-skin32.png",
  ﱣ︇︉︃: "img/night-hand-skin32.png",
  ﱢ︇︉︃: "img/day-hand-skin33.png",
  ﱞ︈︉︃: "img/night-hand-skin33.png",
  ﱠ︈︉︃: "img/day-hand-skin34.png",
  ﱟ︈︉︃: "img/night-hand-skin34.png",
  ﱡ︈︉︃: "img/day-hand-skin35.png",
  ﱣ︈︉︃: "img/night-hand-skin35.png",
  ﱢ︈︉︃: "img/day-hand-skin36.png",
  ﱞ︉︉︃: "img/night-hand-skin36.png",
  ﱠ︉︉︃: "img/day-hand-skin37.png",
  ﱟ︉︉︃: "img/night-hand-skin37.png",
  ﱡ︉︉︃: "img/day-hand-skin38.png",
  ﱣ︉︉︃: "img/night-hand-skin38.png",
  ﱢ︉︉︃: "img/day-hand-skin39.png",
  ﱞ︊︉︃: "img/night-hand-skin39.png",
  ﱠ︊︉︃: "img/day-hand-skin40.png",
  ﱟ︊︉︃: "img/night-hand-skin40.png",
  ﱡ︊︉︃: "img/day-hand-skin41.png",
  ﱣ︊︉︃: "img/night-hand-skin41.png",
  ﱢ︊︉︃: "img/day-hand-skin42.png",
  ﱞ︋︉︃: "img/night-hand-skin42.png",
  ﱠ︋︉︃: "img/day-hand-skin43.png",
  ﱟ︋︉︃: "img/night-hand-skin43.png",
  ﱡ︋︉︃: "img/day-hand-skin16.png",
  ﱣ︋︉︃: "img/night-hand-skin16.png",
  ﱢ︋︉︃: "img/day-hand-skin45.png",
  ﱞ︌︉︃: "img/night-hand-skin45.png",
  ﱠ︌︉︃: "img/day-hand-skin46.png",
  ﱟ︌︉︃: "img/night-hand-skin46.png",
  ﱡ︌︉︃: "img/day-hand-skin47.png",
  ﱣ︌︉︃: "img/night-hand-skin47.png",
  ﱢ︌︉︃: "img/day-hand-skin48.png",
  ﱞ︍︉︃: "img/night-hand-skin48.png",
  ﱠ︍︉︃: "img/day-hand-skin49.png",
  ﱟ︍︉︃: "img/night-hand-skin49.png",
  ﱡ︍︉︃: "img/day-hand-skin49.png",
  ﱣ︍︉︃: "img/night-hand-skin49.png",
  ﱢ︍︉︃: "img/day-hand-skin51.png",
  ﱞ︎︉︃: "img/night-hand-skin51.png",
  ﱠ︎︉︃: "img/day-hand-skin52.png",
  ﱟ︎︉︃: "img/night-hand-skin52.png",
  ﱡ︎︉︃: "img/day-hand-skin53.png",
  ﱣ︎︉︃: "img/night-hand-skin53.png",
  ﱢ︎︉︃: "img/day-hand-skin53.png",
  ﱞ️︉︃: "img/night-hand-skin53.png",
  ﱠ️︉︃: "img/day-hand-skin55.png",
  ﱟ️︉︃: "img/night-hand-skin55.png",
  ﱡ️︉︃: "img/day-hand-skin56.png",
  ﱣ️︉︃: "img/night-hand-skin56.png",
  ﱢ️︉︃: "img/day-hand-skin57.png",
  ﱞ︀︊︃: "img/night-hand-skin57.png",
  ﱠ︀︊︃: "img/day-hand-skin58.png",
  ﱟ︀︊︃: "img/night-hand-skin58.png",
  ﱡ︀︊︃: "img/day-hand-skin59.png",
  ﱣ︀︊︃: "img/night-hand-skin59.png",
  ﱢ︀︊︃: "img/day-hand-skin61.png",
  ﱞ︁︊︃: "img/night-hand-skin61.png",
  ﱠ︁︊︃: "img/day-hand-skin61.png",
  ﱟ︁︊︃: "img/night-hand-skin61.png",
  ﱡ︁︊︃: "img/day-hand-skin62.png",
  ﱣ︁︊︃: "img/night-hand-skin62.png",
  ﱢ︁︊︃: "img/day-hand-skin63.png",
  ﱞ︂︊︃: "img/night-hand-skin63.png",
  ﱠ︂︊︃: "img/day-hand-skin64.png",
  ﱟ︂︊︃: "img/night-hand-skin64.png",
  ﱡ︂︊︃: "img/day-hand-skin65.png",
  ﱣ︂︊︃: "img/night-hand-skin65.png",
  ﱢ︂︊︃: "img/day-hand-skin66.png",
  ﱞ︃︊︃: "img/night-hand-skin66.png",
  ﱠ︃︊︃: "img/day-hand-skin67.png",
  ﱟ︃︊︃: "img/night-hand-skin67.png",
  ﱡ︃︊︃: "img/day-hand-skin68.png",
  ﱣ︃︊︃: "img/night-hand-skin68.png",
  ﱢ︃︊︃: "img/day-hand-skin69.png",
  ﱞ︄︊︃: "img/night-hand-skin69.png",
  ﱠ︄︊︃: "img/day-hand-skin70.png",
  ﱟ︄︊︃: "img/night-hand-skin70.png",
  ﱡ︄︊︃: "img/day-hand-skin71.png",
  ﱣ︄︊︃: "img/night-hand-skin71.png",
  ﱢ︄︊︃: "img/day-hand-skin72.png",
  ﱞ︅︊︃: "img/night-hand-skin72.png",
  ﱠ︅︊︃: "img/day-hand-skin73.png",
  ﱟ︅︊︃: "img/night-hand-skin73.png",
  ﱡ︅︊︃: "img/day-hand-skin74.png",
  ﱣ︅︊︃: "img/night-hand-skin74.png",
  ﱢ︅︊︃: "img/day-hand-skin75.png",
  ﱞ︆︊︃: "img/night-hand-skin75.png",
  ﱠ︆︊︃: "img/day-hand-skin76.png",
  ﱟ︆︊︃: "img/night-hand-skin76.png",
  ﱡ︆︊︃: "img/day-hand-skin77.png",
  ﱣ︆︊︃: "img/night-hand-skin77.png",
  ﱢ︆︊︃: "img/day-hand-skin78.png",
  ﱞ︇︊︃: "img/night-hand-skin78.png",
  ﱠ︇︊︃: "img/day-hand-skin79.png",
  ﱟ︇︊︃: "img/night-hand-skin79.png",
  ﱡ︇︊︃: "img/day-hand-skin80.png",
  ﱣ︇︊︃: "img/night-hand-skin80.png",
  ﱢ︇︊︃: "img/day-hand-skin81.png",
  ﱞ︈︊︃: "img/night-hand-skin81.png",
  ﱠ︈︊︃: "img/day-hand-skin82.png",
  ﱟ︈︊︃: "img/night-hand-skin82.png",
  ﱡ︈︊︃: "img/day-hand-skin83.png",
  ﱣ︈︊︃: "img/night-hand-skin83.png",
  ﱢ︈︊︃: "img/day-hand-skin84.png",
  ﱞ︉︊︃: "img/night-hand-skin84.png",
  ﱠ︉︊︃: "img/day-hand-skin85.png",
  ﱟ︉︊︃: "img/night-hand-skin85.png",
  ﱡ︉︊︃: "img/day-hand-skin86.png",
  ﱣ︉︊︃: "img/night-hand-skin86.png",
  ﱢ︉︊︃: "img/day-hand-skin87.png",
  ﱞ︊︊︃: "img/night-hand-skin87.png",
  ﱠ︊︊︃: "img/day-hand-skin88.png",
  ﱟ︊︊︃: "img/night-hand-skin88.png",
  ﱡ︊︊︃: "img/day-hand-skin89.png",
  ﱣ︊︊︃: "img/night-hand-skin89.png",
  ﱢ︊︊︃: "img/day-hand-skin90.png",
  ﱞ︋︊︃: "img/night-hand-skin90.png",
  ﱠ︋︊︃: "img/day-hand-skin91.png",
  ﱟ︋︊︃: "img/night-hand-skin91.png",
  ﱡ︋︊︃: "img/day-hand-skin92.png",
  ﱣ︋︊︃: "img/night-hand-skin92.png",
  ﱢ︋︊︃: "img/day-hand-skin93.png",
  ﱞ︌︊︃: "img/night-hand-skin93.png",
  ﱠ︌︊︃: "img/day-hand-skin94.png",
  ﱟ︌︊︃: "img/night-hand-skin94.png",
  ﱡ︌︊︃: "img/day-hand-skin95.png",
  ﱣ︌︊︃: "img/night-hand-skin95.png",
  ﱢ︌︊︃: "img/day-hand-skin96.png",
  ﱞ︍︊︃: "img/night-hand-skin96.png",
  ﱠ︍︊︃: "img/day-hand-skin97.png",
  ﱟ︍︊︃: "img/night-hand-skin97.png",
  ﱡ︍︊︃: "img/day-hand-skin98.png",
  ﱣ︍︊︃: "img/night-hand-skin98.png",
  ﱢ︍︊︃: "img/day-hand-skin99.png",
  ﱞ︎︊︃: "img/night-hand-skin99.png",
  ﱠ︎︊︃: "img/day-hand-skin100.png",
  ﱟ︎︊︃: "img/night-hand-skin100.png",
  ﱡ︎︊︃: "img/day-hand-skin101.png",
  ﱣ︎︊︃: "img/night-hand-skin101.png",
  ﱢ︎︊︃: "img/day-hand-skin102.png",
  ﱞ️︊︃: "img/night-hand-skin102.png",
  ﱠ️︊︃: "img/day-hand-skin103.png",
  ﱟ️︊︃: "img/night-hand-skin103.png",
  ﱡ️︊︃: "img/day-hand-skin104.png",
  ﱣ️︊︃: "img/night-hand-skin104.png",
  ﱢ️︊︃: "img/day-hand-skin105.png",
  ﱞ︀︋︃: "img/night-hand-skin105.png",
  ﱠ︀︋︃: "img/day-hand-skin106.png",
  ﱟ︀︋︃: "img/night-hand-skin106.png",
  ﱡ︀︋︃: "img/day-hand-skin107.png",
  ﱣ︀︋︃: "img/night-hand-skin107.png",
  ﱢ︀︋︃: "img/day-hand-skin108.png",
  ﱞ︁︋︃: "img/night-hand-skin108.png",
  ﱠ︁︋︃: "img/day-hand-skin109.png",
  ﱟ︁︋︃: "img/night-hand-skin109.png",
  ﱡ︁︋︃: "img/day-hand-skin110.png",
  ﱣ︁︋︃: "img/night-hand-skin110.png",
  ﱢ︁︋︃: "img/day-hand-skin111.png",
  ﱞ︂︋︃: "img/night-hand-skin111.png",
  ﱠ︂︋︃: "img/day-hand-skin112.png",
  ﱟ︂︋︃: "img/night-hand-skin112.png",
  ﱡ︂︋︃: "img/day-hand-skin113.png",
  ﱣ︂︋︃: "img/night-hand-skin113.png",
  ﱢ︂︋︃: "img/day-hand-skin114.png",
  ﱞ︃︋︃: "img/night-hand-skin114.png",
  ﱠ︃︋︃: "img/day-hand-skin115.png",
  ﱟ︃︋︃: "img/night-hand-skin115.png",
  ﱡ︃︋︃: "img/day-hand-skin116.png",
  ﱣ︃︋︃: "img/night-hand-skin116.png",
  ﱢ︃︋︃: "img/day-hand-skin117.png",
  ﱞ︄︋︃: "img/night-hand-skin117.png",
  ﱠ︄︋︃: "img/day-hand-skin118.png",
  ﱟ︄︋︃: "img/night-hand-skin118.png",
  ﱡ︄︋︃: "img/day-hand-skin119.png",
  ﱣ︄︋︃: "img/night-hand-skin119.png",
  ﱢ︄︋︃: "img/day-hand-skin120.png",
  ﱞ︅︋︃: "img/night-hand-skin120.png",
  ﱠ︅︋︃: "img/day-hand-skin122.png",
  ﱟ︅︋︃: "img/night-hand-skin122.png",
  ﱡ︅︋︃: "img/day-hand-skin122.png",
  ﱣ︅︋︃: "img/night-hand-skin122.png",
  ﱢ︅︋︃: "img/day-hand-skin122.png",
  ﱞ︆︋︃: "img/night-hand-skin122.png",
  ﱠ︆︋︃: "img/day-hand-skin124.png",
  ﱟ︆︋︃: "img/night-hand-skin124.png",
  ﱡ︆︋︃: "img/day-hand-skin125.png",
  ﱣ︆︋︃: "img/night-hand-skin125.png",
  ﱢ︆︋︃: "img/day-hand-skin126.png",
  ﱞ︇︋︃: "img/night-hand-skin126.png",
  ﱠ︇︋︃: "img/day-hand-skin127.png",
  ﱟ︇︋︃: "img/night-hand-skin127.png",
  ﱡ︇︋︃: "img/day-hand-skin128.png",
  ﱣ︇︋︃: "img/night-hand-skin128.png",
  ﱢ︇︋︃: "img/day-hand-skin129.png",
  ﱞ︈︋︃: "img/night-hand-skin129.png",
  ﱠ︈︋︃: "img/day-hand-skin130.png",
  ﱟ︈︋︃: "img/night-hand-skin130.png",
  ﱡ︈︋︃: "img/day-hand-skin131.png",
  ﱣ︈︋︃: "img/night-hand-skin131.png",
  ﱢ︈︋︃: "img/day-hand-skin130.png",
  ﱞ︉︋︃: "img/night-hand-skin130.png",
  ﱠ︉︋︃: "img/day-hand-skin133.png",
  ﱟ︉︋︃: "img/night-hand-skin133.png",
  ﱡ︉︋︃: "img/day-hand-skin134.png",
  ﱣ︉︋︃: "img/night-hand-skin134.png",
  ﱢ︉︋︃: "img/day-hand-skin135.png",
  ﱞ︊︋︃: "img/night-hand-skin135.png",
  ﱠ︊︋︃: "img/day-hand-skin136.png",
  ﱟ︊︋︃: "img/night-hand-skin136.png",
  ﱡ︊︋︃: "img/day-hand-skin137.png",
  ﱣ︊︋︃: "img/night-hand-skin137.png",
  ﱢ︊︋︃: "img/day-hand-skin138.png",
  ﱞ︋︋︃: "img/night-hand-skin138.png",
  ﱠ︋︋︃: "img/day-hand-skin139.png",
  ﱟ︋︋︃: "img/night-hand-skin139.png",
  ﱡ︋︋︃: "img/day-hand-skin140.png",
  ﱣ︋︋︃: "img/night-hand-skin140.png",
  ﱢ︋︋︃: "img/day-hand-skin141.png",
  ﱞ︌︋︃: "img/night-hand-skin141.png",
  ﱠ︌︋︃: "img/day-hand-skin142.png",
  ﱟ︌︋︃: "img/night-hand-skin142.png",
  ﱡ︌︋︃: "img/day-hand-skin143.png",
  ﱣ︌︋︃: "img/night-hand-skin143.png",
  ﱢ︌︋︃: "img/day-hand-skin144.png",
  ﱞ︍︋︃: "img/night-hand-skin144.png",
  ﱠ︍︋︃: "img/day-hand-skin145.png",
  ﱟ︍︋︃: "img/night-hand-skin145.png",
  ﱡ︍︋︃: "img/day-hand-skin146.png",
  ﱣ︍︋︃: "img/night-hand-skin146.png",
  ﱢ︍︋︃: "img/day-hand-skin147.png",
  ﱞ︎︋︃: "img/night-hand-skin147.png",
  ﱠ︎︋︃: "img/day-hand-skin148.png",
  ﱟ︎︋︃: "img/night-hand-skin148.png",
  ﱡ︎︋︃: "img/day-hand-skin149.png",
  ﱣ︎︋︃: "img/night-hand-skin149.png",
  ﱢ︎︋︃: "img/day-hand-skin150.png",
  ﱞ️︋︃: "img/night-hand-skin150.png",
  ﱠ️︋︃: "img/day-bag-star0.png",
  ﱟ️︋︃: "img/night-bag-star0.png",
  ﱡ️︋︃: "img/day-bag0.png",
  ﱣ️︋︃: "img/night-bag0.png",
  ﱢ️︋︃: "img/day-bag1.png",
  ﱞ︀︌︃: "img/night-bag1.png",
  ﱠ︀︌︃: "img/day-bag2.png",
  ﱟ︀︌︃: "img/night-bag2.png",
  ﱡ︀︌︃: "img/day-bag3.png",
  ﱣ︀︌︃: "img/night-bag3.png",
  ﱢ︀︌︃: "img/day-bag4.png",
  ﱞ︁︌︃: "img/night-bag4.png",
  ﱠ︁︌︃: "img/day-bag5.png",
  ﱟ︁︌︃: "img/night-bag5.png",
  ﱡ︁︌︃: "img/day-bag6.png",
  ﱣ︁︌︃: "img/night-bag6.png",
  ﱢ︁︌︃: "img/day-bag7.png",
  ﱞ︂︌︃: "img/night-bag7.png",
  ﱠ︂︌︃: "img/day-bag8.png",
  ﱟ︂︌︃: "img/night-bag8.png",
  ﱡ︂︌︃: "img/day-bag9.png",
  ﱣ︂︌︃: "img/night-bag9.png",
  ﱢ︂︌︃: "img/day-bag10.png",
  ﱞ︃︌︃: "img/night-bag10.png",
  ﱠ︃︌︃: "img/day-bag11.png",
  ﱟ︃︌︃: "img/night-bag11.png",
  ﱡ︃︌︃: "img/day-bag13.png",
  ﱣ︃︌︃: "img/night-bag13.png",
  ﱢ︃︌︃: "img/day-bag14.png",
  ﱞ︄︌︃: "img/night-bag14.png",
  ﱠ︄︌︃: "img/day-bag16.png",
  ﱟ︄︌︃: "img/night-bag16.png",
  ﱡ︄︌︃: "img/day-bag17.png",
  ﱣ︄︌︃: "img/night-bag17.png",
  ﱢ︄︌︃: "img/day-bag18.png",
  ﱞ︅︌︃: "img/night-bag18.png",
  ﱠ︅︌︃: "img/day-bag19.png",
  ﱟ︅︌︃: "img/night-bag19.png",
  ﱡ︅︌︃: "img/day-bag20.png",
  ﱣ︅︌︃: "img/night-bag20.png",
  ﱢ︅︌︃: "img/day-bag21.png",
  ﱞ︆︌︃: "img/night-bag21.png",
  ﱠ︆︌︃: "img/day-bag22.png",
  ﱟ︆︌︃: "img/night-bag22.png",
  ﱡ︆︌︃: "img/day-bag23.png",
  ﱣ︆︌︃: "img/night-bag23.png",
  ﱢ︆︌︃: "img/day-bag24.png",
  ﱞ︇︌︃: "img/night-bag24.png",
  ﱠ︇︌︃: "img/day-bag25.png",
  ﱟ︇︌︃: "img/night-bag25.png",
  ﱡ︇︌︃: "img/day-bag26.png",
  ﱣ︇︌︃: "img/night-bag26.png",
  ﱢ︇︌︃: "img/day-bag27.png",
  ﱞ︈︌︃: "img/night-bag27.png",
  ﱠ︈︌︃: "img/day-bag28.png",
  ﱟ︈︌︃: "img/night-bag28.png",
  ﱡ︈︌︃: "img/day-bag29.png",
  ﱣ︈︌︃: "img/night-bag29.png",
  ﱢ︈︌︃: "img/day-bag30.png",
  ﱞ︉︌︃: "img/night-bag30.png",
  ﱠ︉︌︃: "img/day-bag31.png",
  ﱟ︉︌︃: "img/night-bag31.png",
  ﱡ︉︌︃: "img/day-bag32.png",
  ﱣ︉︌︃: "img/night-bag32.png",
  ﱢ︉︌︃: "img/day-bag33.png",
  ﱞ︊︌︃: "img/night-bag33.png",
  ﱠ︊︌︃: "img/day-bag34.png",
  ﱟ︊︌︃: "img/night-bag34.png",
  ﱡ︊︌︃: "img/day-bag35.png",
  ﱣ︊︌︃: "img/night-bag35.png",
  ﱢ︊︌︃: "img/day-bag36.png",
  ﱞ︋︌︃: "img/night-bag36.png",
  ﱠ︋︌︃: "img/day-bag37.png",
  ﱟ︋︌︃: "img/night-bag37.png",
  ﱡ︋︌︃: "img/day-bag38.png",
  ﱣ︋︌︃: "img/night-bag38.png",
  ﱢ︋︌︃: "img/day-bag39.png",
  ﱞ︌︌︃: "img/night-bag39.png",
  ﱠ︌︌︃: "img/day-bag40.png",
  ﱟ︌︌︃: "img/night-bag40.png",
  ﱡ︌︌︃: "img/day-bag41.png",
  ﱣ︌︌︃: "img/night-bag41.png",
  ﱢ︌︌︃: "img/day-bag42.png",
  ﱞ︍︌︃: "img/night-bag42.png",
  ﱠ︍︌︃: "img/day-bag43.png",
  ﱟ︍︌︃: "img/night-bag43.png",
  ﱡ︍︌︃: "img/day-bag44.png",
  ﱣ︍︌︃: "img/night-bag44.png",
  ﱢ︍︌︃: "img/day-bag45.png",
  ﱞ︎︌︃: "img/night-bag45.png",
  ﱠ︎︌︃: "img/day-bag46.png",
  ﱟ︎︌︃: "img/night-bag46.png",
  ﱡ︎︌︃: "img/day-bag47.png",
  ﱣ︎︌︃: "img/night-bag47.png",
  ﱢ︎︌︃: "img/day-bag48.png",
  ﱞ️︌︃: "img/night-bag48.png",
  ﱠ️︌︃: "img/day-bag49.png",
  ﱟ️︌︃: "img/night-bag49.png",
  ﱡ️︌︃: "img/day-bag50.png",
  ﱣ️︌︃: "img/night-bag50.png",
  ﱢ️︌︃: "img/day-bag51.png",
  ﱞ︀︍︃: "img/night-bag51.png",
  ﱠ︀︍︃: "img/day-bag52.png",
  ﱟ︀︍︃: "img/night-bag52.png",
  ﱡ︀︍︃: "img/day-bag53.png",
  ﱣ︀︍︃: "img/night-bag53.png",
  ﱢ︀︍︃: "img/day-bag54.png",
  ﱞ︁︍︃: "img/night-bag54.png",
  ﱠ︁︍︃: "img/day-bag55.png",
  ﱟ︁︍︃: "img/night-bag55.png",
  ﱡ︁︍︃: "img/day-bag56.png",
  ﱣ︁︍︃: "img/night-bag56.png",
  ﱢ︁︍︃: "img/day-bag57.png",
  ﱞ︂︍︃: "img/night-bag57.png",
  ﱠ︂︍︃: "img/day-bag58.png",
  ﱟ︂︍︃: "img/night-bag58.png",
  ﱡ︂︍︃: "img/day-bag59.png",
  ﱣ︂︍︃: "img/night-bag59.png",
  ﱢ︂︍︃: "img/day-bag60.png",
  ﱞ︃︍︃: "img/night-bag60.png",
  ﱠ︃︍︃: "img/day-bag61.png",
  ﱟ︃︍︃: "img/night-bag61.png",
  ﱡ︃︍︃: "img/day-bag62.png",
  ﱣ︃︍︃: "img/night-bag62.png",
  ﱢ︃︍︃: "img/day-bag63.png",
  ﱞ︄︍︃: "img/night-bag63.png",
  ﱠ︄︍︃: "img/day-bag64.png",
  ﱟ︄︍︃: "img/night-bag64.png",
  ﱡ︄︍︃: "img/day-bag65.png",
  ﱣ︄︍︃: "img/night-bag65.png",
  ﱢ︄︍︃: "img/day-bag66.png",
  ﱞ︅︍︃: "img/night-bag66.png",
  ﱠ︅︍︃: "img/day-bag67.png",
  ﱟ︅︍︃: "img/night-bag67.png",
  ﱡ︅︍︃: "img/day-bag68.png",
  ﱣ︅︍︃: "img/night-bag68.png",
  ﱢ︅︍︃: "img/day-accessory0.png",
  ﱞ︆︍︃: "img/day-accessory0-pacques.png",
  ﱠ︆︍︃: "img/night-accessory0-pacques.png",
  ﱟ︆︍︃: "img/day-accessory13.png",
  ﱡ︆︍︃: "img/night-accessory13.png",
  ﱣ︆︍︃: "img/day-accessory14.png",
  ﱢ︆︍︃: "img/night-accessory14.png",
  ﱞ︇︍︃: "img/day-accessory15.png",
  ﱠ︇︍︃: "img/night-accessory15.png",
  ﱟ︇︍︃: "img/day-accessory16.png",
  ﱡ︇︍︃: "img/night-accessory16.png",
  ﱣ︇︍︃: "img/day-accessory17.png",
  ﱢ︇︍︃: "img/day-accessory17.png",
  ﱞ︈︍︃: "img/day-accessory19.png",
  ﱠ︈︍︃: "img/night-accessory19.png",
  ﱟ︈︍︃: "img/day-accessory20.png",
  ﱡ︈︍︃: "img/night-accessory20.png",
  ﱣ︈︍︃: "img/day-accessory21.png",
  ﱢ︈︍︃: "img/night-accessory21.png",
  ﱞ︉︍︃: "img/day-accessory22.png",
  ﱠ︉︍︃: "img/night-accessory22.png",
  ﱟ︉︍︃: "img/day-accessory23.png",
  ﱡ︉︍︃: "img/night-accessory23.png",
  ﱣ︉︍︃: "img/day-accessory24.png",
  ﱢ︉︍︃: "img/night-accessory24.png",
  ﱞ︊︍︃: "img/day-accessory25.png",
  ﱠ︊︍︃: "img/night-accessory25.png",
  ﱟ︊︍︃: "img/day-accessory26.png",
  ﱡ︊︍︃: "img/night-accessory26.png",
  ﱣ︊︍︃: "img/day-accessory27.png",
  ﱢ︊︍︃: "img/night-accessory27.png",
  ﱞ︋︍︃: "img/day-accessory18.png",
  ﱠ︋︍︃: "img/night-accessory18.png",
  ﱟ︋︍︃: "img/day-accessory29.png",
  ﱡ︋︍︃: "img/night-accessory29.png",
  ﱣ︋︍︃: "img/day-accessory30.png",
  ﱢ︋︍︃: "img/night-accessory30.png",
  ﱞ︌︍︃: "img/day-accessory31.png",
  ﱠ︌︍︃: "img/night-accessory31.png",
  ﱟ︌︍︃: "img/day-accessory32.png",
  ﱡ︌︍︃: "img/night-accessory32.png",
  ﱣ︌︍︃: "img/day-accessory33.png",
  ﱢ︌︍︃: "img/night-accessory33.png",
  ﱞ︍︍︃: "img/day-accessory34.png",
  ﱠ︍︍︃: "img/night-accessory34.png",
  ﱟ︍︍︃: "img/day-accessory35.png",
  ﱡ︍︍︃: "img/night-accessory35.png",
  ﱣ︍︍︃: "img/day-accessory28.png",
  ﱢ︍︍︃: "img/night-accessory28.png",
  ﱞ︎︍︃: "img/day-accessory36.png",
  ﱠ︎︍︃: "img/night-accessory36.png",
  ﱟ︎︍︃: "img/day-accessory37.png",
  ﱡ︎︍︃: "img/night-accessory37.png",
  ﱣ︎︍︃: "img/day-accessory39.png",
  ﱢ︎︍︃: "img/night-accessory39.png",
  ﱞ️︍︃: "img/day-accessory40.png",
  ﱠ️︍︃: "img/night-accessory40.png",
  ﱟ️︍︃: "img/day-accessory41.png",
  ﱡ️︍︃: "img/night-accessory41.png",
  ﱣ️︍︃: "img/day-accessory42.png",
  ﱢ️︍︃: "img/night-accessory42.png",
  ﱞ︀︎︃: "img/day-accessory43.png",
  ﱠ︀︎︃: "img/night-accessory43.png",
  ﱟ︀︎︃: "img/day-accessory44.png",
  ﱡ︀︎︃: "img/night-accessory44.png",
  ﱣ︀︎︃: "img/day-accessory38.png",
  ﱢ︀︎︃: "img/night-accessory38.png",
  ﱞ︁︎︃: "img/day-accessory46.png",
  ﱠ︁︎︃: "img/night-accessory46.png",
  ﱟ︁︎︃: "img/day-accessory47.png",
  ﱡ︁︎︃: "img/night-accessory47.png",
  ﱣ︁︎︃: "img/day-accessory48.png",
  ﱢ︁︎︃: "img/night-accessory48.png",
  ﱞ︂︎︃: "img/day-accessory49.png",
  ﱠ︂︎︃: "img/night-accessory49.png",
  ﱟ︂︎︃: "img/day-accessory45.png",
  ﱡ︂︎︃: "img/night-accessory45.png",
  ﱣ︂︎︃: "img/day-accessory50.png",
  ﱢ︂︎︃: "img/night-accessory50.png",
  ﱞ︃︎︃: "img/day-accessory51.png",
  ﱠ︃︎︃: "img/night-accessory51.png",
  ﱟ︃︎︃: "img/day-accessory52.png",
  ﱡ︃︎︃: "img/night-accessory52.png",
  ﱣ︃︎︃: "img/day-accessory53.png",
  ﱢ︃︎︃: "img/night-accessory53.png",
  ﱞ︄︎︃: "img/day-accessory54.png",
  ﱠ︄︎︃: "img/night-accessory54.png",
  ﱟ︄︎︃: "img/day-accessory55.png",
  ﱡ︄︎︃: "img/night-accessory55.png",
  ﱣ︄︎︃: "img/day-accessory56.png",
  ﱢ︄︎︃: "img/night-accessory56.png",
  ﱞ︅︎︃: "img/day-accessory57.png",
  ﱠ︅︎︃: "img/night-accessory57.png",
  ﱟ︅︎︃: "img/day-accessory58.png",
  ﱡ︅︎︃: "img/night-accessory58.png",
  ﱣ︅︎︃: "img/day-accessory59.png",
  ﱢ︅︎︃: "img/night-accessory59.png",
  ﱞ︆︎︃: "img/day-accessory60.png",
  ﱠ︆︎︃: "img/night-accessory60.png",
  ﱟ︆︎︃: "img/day-accessory61.png",
  ﱡ︆︎︃: "img/night-accessory61.png",
  ﱣ︆︎︃: "img/day-accessory62.png",
  ﱢ︆︎︃: "img/night-accessory62.png",
  ﱞ︇︎︃: "img/day-accessory63.png",
  ﱠ︇︎︃: "img/night-accessory63.png",
  ﱟ︇︎︃: "img/day-accessory64.png",
  ﱡ︇︎︃: "img/night-accessory64.png",
  ﱣ︇︎︃: "img/day-accessory65.png",
  ﱢ︇︎︃: "img/night-accessory65.png",
  ﱞ︈︎︃: "img/day-accessory66.png",
  ﱠ︈︎︃: "img/night-accessory66.png",
  ﱟ︈︎︃: "img/day-accessory67.png",
  ﱡ︈︎︃: "img/night-accessory67.png",
  ﱣ︈︎︃: "img/day-accessory68.png",
  ﱢ︈︎︃: "img/night-accessory68.png",
  ﱞ︉︎︃: "img/day-accessory69.png",
  ﱠ︉︎︃: "img/night-accessory69.png",
  ﱟ︉︎︃: "img/day-accessory70.png",
  ﱡ︉︎︃: "img/night-accessory70.png",
  ﱣ︉︎︃: "img/day-accessory71.png",
  ﱢ︉︎︃: "img/night-accessory71.png",
  ﱞ︊︎︃: "img/day-accessory72.png",
  ﱠ︊︎︃: "img/night-accessory72.png",
  ﱟ︊︎︃: "img/day-accessory73.png",
  ﱡ︊︎︃: "img/night-accessory73.png",
  ﱣ︊︎︃: "img/day-accessory74.png",
  ﱢ︊︎︃: "img/night-accessory74.png",
  ﱞ︋︎︃: "img/day-accessory75.png",
  ﱠ︋︎︃: "img/night-accessory75.png",
  ﱟ︋︎︃: "img/day-accessory76.png",
  ﱡ︋︎︃: "img/night-accessory76.png",
  ﱣ︋︎︃: "img/day-accessory77.png",
  ﱢ︋︎︃: "img/night-accessory77.png",
  ﱞ︌︎︃: "img/day-accessory78.png",
  ﱠ︌︎︃: "img/night-accessory78.png",
  ﱟ︌︎︃: "img/day-accessory79.png",
  ﱡ︌︎︃: "img/night-accessory79.png",
  ﱣ︌︎︃: "img/day-accessory80.png",
  ﱢ︌︎︃: "img/night-accessory80.png",
  ﱞ︍︎︃: "img/day-accessory81.png",
  ﱠ︍︎︃: "img/night-accessory81.png",
  ﱟ︍︎︃: "img/day-book0.png",
  ﱡ︍︎︃: "img/night-book0.png",
  ﱣ︍︎︃: "img/day-book1.png",
  ﱢ︍︎︃: "img/night-book1.png",
  ﱞ︎︎︃: "img/day-book2.png",
  ﱠ︎︎︃: "img/night-book2.png",
  ﱟ︎︎︃: "img/day-book3.png",
  ﱡ︎︎︃: "img/night-book3.png",
  ﱣ︎︎︃: "img/day-book4.png",
  ﱢ︎︎︃: "img/night-book4.png",
  ﱞ️︎︃: "img/day-book5.png",
  ﱠ️︎︃: "img/night-book5.png",
  ﱟ️︎︃: "img/day-book6.png",
  ﱡ️︎︃: "img/night-book6.png",
  ﱣ️︎︃: "img/day-book7.png",
  ﱢ️︎︃: "img/night-book7.png",
  ﱞ︀️︃: "img/day-book8.png",
  ﱠ︀️︃: "img/night-book8.png",
  ﱟ︀️︃: "img/day-book9.png",
  ﱡ︀️︃: "img/night-book9.png",
  ﱣ︀️︃: "img/day-book10.png",
  ﱢ︀️︃: "img/night-book10.png",
  ﱞ︁️︃: "img/day-book11.png",
  ﱠ︁️︃: "img/night-book11.png",
  ﱟ︁️︃: "img/day-book12.png",
  ﱡ︁️︃: "img/night-book12.png",
  ﱣ︁️︃: "img/day-book13.png",
  ﱢ︁️︃: "img/night-book13.png",
  ﱞ︂️︃: "img/day-book14.png",
  ﱠ︂️︃: "img/night-book14.png",
  ﱟ︂️︃: "img/day-book15.png",
  ﱡ︂️︃: "img/night-book15.png",
  ﱣ︂️︃: "img/day-book16.png",
  ﱢ︂️︃: "img/night-book16.png",
  ﱞ︃️︃: "img/day-book17.png",
  ﱠ︃️︃: "img/night-book17.png",
  ﱟ︃️︃: "img/day-book18.png",
  ﱡ︃️︃: "img/night-book18.png",
  ﱣ︃️︃: "img/day-book19.png",
  ﱢ︃️︃: "img/night-book19.png",
  ﱞ︄️︃: "img/day-book20.png",
  ﱠ︄️︃: "img/night-book20.png",
  ﱟ︄️︃: "img/day-book21.png",
  ﱡ︄️︃: "img/night-book21.png",
  ﱣ︄️︃: "img/day-book22.png",
  ﱢ︄️︃: "img/night-book22.png",
  ﱞ︅️︃: "img/day-book23.png",
  ﱠ︅️︃: "img/night-book23.png",
  ﱟ︅️︃: "img/day-book24.png",
  ﱡ︅️︃: "img/night-book24.png",
  ﱣ︅️︃: "img/day-book25.png",
  ﱢ︅️︃: "img/night-book25.png",
  ﱞ︆️︃: "img/day-book26.png",
  ﱠ︆️︃: "img/night-book26.png",
  ﱟ︆️︃: "img/day-book27.png",
  ﱡ︆️︃: "img/night-book27.png",
  ﱣ︆️︃: "img/day-book28.png",
  ﱢ︆️︃: "img/night-book28.png",
  ﱞ︇️︃: "img/day-book29.png",
  ﱠ︇️︃: "img/night-book29.png",
  ﱟ︇️︃: "img/day-book30.png",
  ﱡ︇️︃: "img/night-book30.png",
  ﱣ︇️︃: "img/day-book31.png",
  ﱢ︇️︃: "img/night-book31.png",
  ﱞ︈️︃: "img/day-book32.png",
  ﱠ︈️︃: "img/night-book32.png",
  ﱟ︈️︃: "img/day-book33.png",
  ﱡ︈️︃: "img/night-book33.png",
  ﱣ︈️︃: "img/day-book34.png",
  ﱢ︈️︃: "img/night-book34.png",
  ﱞ︉️︃: "img/day-book35.png",
  ﱠ︉️︃: "img/night-book35.png",
  ﱟ︉️︃: "img/day-book36.png",
  ﱡ︉️︃: "img/night-book36.png",
  ﱣ︉️︃: "img/day-book37.png",
  ﱢ︉️︃: "img/night-book37.png",
  ﱞ︊️︃: "img/day-book38.png",
  ﱠ︊️︃: "img/night-book38.png",
  ﱟ︊️︃: "img/day-book39.png",
  ﱡ︊️︃: "img/night-book39.png",
  ﱣ︊️︃: "img/day-book40.png",
  ﱢ︊️︃: "img/night-book40.png",
  ﱞ︋️︃: "img/day-book41.png",
  ﱠ︋️︃: "img/night-book41.png",
  ﱟ︋️︃: "img/day-book42.png",
  ﱡ︋️︃: "img/night-book42.png",
  ﱣ︋️︃: "img/day-book43.png",
  ﱢ︋️︃: "img/night-book43.png",
  ﱞ︌️︃: "img/day-book44.png",
  ﱠ︌️︃: "img/night-book44.png",
  ﱟ︌️︃: "img/day-book45.png",
  ﱡ︌️︃: "img/night-book45.png",
  ﱣ︌️︃: "img/day-crate1.png",
  ﱢ︌️︃: "img/night-crate1.png",
  ﱞ︍️︃: "img/day-crate2.png",
  ﱠ︍️︃: "img/night-crate2.png",
  ﱟ︍️︃: "img/day-crate3.png",
  ﱡ︍️︃: "img/night-crate3.png",
  ﱣ︍️︃: "img/day-crate4.png",
  ﱢ︍️︃: "img/night-crate4.png",
  ﱞ︎️︃: "img/day-crate5.png",
  ﱠ︎️︃: "img/night-crate5.png",
  ﱟ︎️︃: "img/day-crate6.png",
  ﱡ︎️︃: "img/night-crate6.png",
  ﱣ︎️︃: "img/day-crate7.png",
  ﱢ︎️︃: "img/night-crate7.png",
  ﱞ️️︃: "img/day-crate8.png",
  ﱠ️️︃: "img/night-crate8.png",
  ﱟ️️︃: "img/day-crate9.png",
  ﱡ️️︃: "img/night-crate9.png",
  ﱣ️️︃: "img/day-crate10.png",
  ﱢ️️︃: "img/night-crate10.png",
  ﱞ︀︀︄: "img/day-crate11.png",
  ﱠ︀︀︄: "img/night-crate11.png",
  ﱟ︀︀︄: "img/day-crate12.png",
  ﱡ︀︀︄: "img/night-crate12.png",
  ﱣ︀︀︄: "img/day-crate13.png",
  ﱢ︀︀︄: "img/night-crate13.png",
  ﱞ︁︀︄: "img/day-crate14.png",
  ﱠ︁︀︄: "img/night-crate14.png",
  ﱟ︁︀︄: "img/day-crate15.png",
  ﱡ︁︀︄: "img/night-crate15.png",
  ﱣ︁︀︄: "img/day-crate16.png",
  ﱢ︁︀︄: "img/night-crate16.png",
  ﱞ︂︀︄: "img/day-crate17.png",
  ﱠ︂︀︄: "img/night-crate17.png",
  ﱟ︂︀︄: "img/day-crate18.png",
  ﱡ︂︀︄: "img/night-crate18.png",
  ﱣ︂︀︄: "img/day-crate19.png",
  ﱢ︂︀︄: "img/night-crate19.png",
  ﱞ︃︀︄: "img/day-crate20.png",
  ﱠ︃︀︄: "img/night-crate20.png",
  ﱟ︃︀︄: "img/day-crate21.png",
  ﱡ︃︀︄: "img/night-crate21.png",
  ﱣ︃︀︄: "img/day-crate22.png",
  ﱢ︃︀︄: "img/night-crate22.png",
  ﱞ︄︀︄: "img/day-crate23.png",
  ﱠ︄︀︄: "img/night-crate23.png",
  ﱟ︄︀︄: "img/day-crate24.png",
  ﱡ︄︀︄: "img/night-crate24.png",
  ﱣ︄︀︄: "img/day-crate25.png",
  ﱢ︄︀︄: "img/night-crate25.png",
  ﱞ︅︀︄: "img/day-crate26.png",
  ﱠ︅︀︄: "img/night-crate26.png",
  ﱟ︅︀︄: "img/day-crate27.png",
  ﱡ︅︀︄: "img/night-crate27.png",
  ﱣ︅︀︄: "img/day-crate28.png",
  ﱢ︅︀︄: "img/night-crate28.png",
  ﱞ︆︀︄: "img/day-crate29.png",
  ﱠ︆︀︄: "img/night-crate29.png",
  ﱟ︆︀︄: "img/day-crate30.png",
  ﱡ︆︀︄: "img/night-crate30.png",
  ﱣ︆︀︄: "img/day-crate31.png",
  ﱢ︆︀︄: "img/night-crate31.png",
  ﱞ︇︀︄: "img/day-crate32.png",
  ﱠ︇︀︄: "img/night-crate32.png",
  ﱟ︇︀︄: "img/day-crate33.png",
  ﱡ︇︀︄: "img/night-crate33.png",
  ﱣ︇︀︄: "img/day-crate34.png",
  ﱢ︇︀︄: "img/night-crate34.png",
  ﱞ︈︀︄: "img/day-crate35.png",
  ﱠ︈︀︄: "img/night-crate35.png",
  ﱟ︈︀︄: "img/day-crate36.png",
  ﱡ︈︀︄: "img/night-crate36.png",
  ﱣ︈︀︄: "img/day-crate37.png",
  ﱢ︈︀︄: "img/night-crate37.png",
  ﱞ︉︀︄: "img/day-crate38.png",
  ﱠ︉︀︄: "img/night-crate38.png",
  ﱟ︉︀︄: "img/day-crate39.png",
  ﱡ︉︀︄: "img/night-crate39.png",
  ﱣ︉︀︄: "img/day-crate40.png",
  ﱢ︉︀︄: "img/night-crate40.png",
  ﱞ︊︀︄: "img/day-crate41.png",
  ﱠ︊︀︄: "img/night-crate41.png",
  ﱟ︊︀︄: "img/day-crate42.png",
  ﱡ︊︀︄: "img/night-crate42.png",
  ﱣ︊︀︄: "img/day-crate43.png",
  ﱢ︊︀︄: "img/night-crate43.png",
  ﱞ︋︀︄: "img/day-crate44.png",
  ﱠ︋︀︄: "img/night-crate44.png",
  ﱟ︋︀︄: "img/day-crate45.png",
  ﱡ︋︀︄: "img/night-crate45.png",
  ﱣ︋︀︄: "img/day-crate46.png",
  ﱢ︋︀︄: "img/night-crate46.png",
  ﱞ︌︀︄: "img/day-crate47.png",
  ﱠ︌︀︄: "img/night-crate47.png",
  ﱟ︌︀︄: "img/day-crate48.png",
  ﱡ︌︀︄: "img/night-crate48.png",
  ﱣ︌︀︄: "img/day-crate49.png",
  ﱢ︌︀︄: "img/night-crate49.png",
  ﱞ︍︀︄: "img/day-crate50.png",
  ﱠ︍︀︄: "img/night-crate50.png",
  ﱟ︍︀︄: "img/day-crate51.png",
  ﱡ︍︀︄: "img/night-crate51.png",
  ﱣ︍︀︄: "img/day-crate52.png",
  ﱢ︍︀︄: "img/night-crate52.png",
  ﱞ︎︀︄: "img/day-crate53.png",
  ﱠ︎︀︄: "img/night-crate53.png",
  ﱟ︎︀︄: "img/day-crate54.png",
  ﱡ︎︀︄: "img/night-crate54.png",
  ﱣ︎︀︄: "img/day-crate55.png",
  ﱢ︎︀︄: "img/night-crate55.png",
  ﱞ️︀︄: "img/day-crate56.png",
  ﱠ️︀︄: "img/night-crate56.png",
  ﱟ️︀︄: "img/day-crate57.png",
  ﱡ️︀︄: "img/night-crate57.png",
  ﱣ️︀︄: "img/day-crate58.png",
  ﱢ️︀︄: "img/night-crate58.png",
  ﱞ︀︁︄: "img/day-crate59.png",
  ﱠ︀︁︄: "img/night-crate59.png",
  ﱟ︀︁︄: "img/day-crate60.png",
  ﱡ︀︁︄: "img/night-crate60.png",
  ﱣ︀︁︄: "img/day-crate61.png",
  ﱢ︀︁︄: "img/night-crate61.png",
  ﱞ︁︁︄: "img/day-crate62.png",
  ﱠ︁︁︄: "img/night-crate62.png",
  ﱟ︁︁︄: "img/day-crate63.png",
  ﱡ︁︁︄: "img/night-crate63.png",
  ﱣ︁︁︄: "img/day-crate64.png",
  ﱢ︁︁︄: "img/night-crate64.png",
  ﱞ︂︁︄: "img/day-crate65.png",
  ﱠ︂︁︄: "img/night-crate65.png",
  ﱟ︂︁︄: "img/day-crate66.png",
  ﱡ︂︁︄: "img/night-crate66.png",
  ﱣ︂︁︄: "img/day-crate67.png",
  ﱢ︂︁︄: "img/night-crate67.png",
  ﱞ︃︁︄: "img/day-crate68.png",
  ﱠ︃︁︄: "img/night-crate68.png",
  ﱟ︃︁︄: "img/day-crate69.png",
  ﱡ︃︁︄: "img/night-crate69.png",
  ﱣ︃︁︄: "img/day-crate70.png",
  ﱢ︃︁︄: "img/night-crate70.png",
  ﱞ︄︁︄: "img/day-crate71.png",
  ﱠ︄︁︄: "img/night-crate71.png",
  ﱟ︄︁︄: "img/day-crate72.png",
  ﱡ︄︁︄: "img/night-crate72.png",
  ﱣ︄︁︄: "img/day-herb0.png",
  ﱢ︄︁︄: "img/day-herb1.png",
  ﱞ︅︁︄: "img/day-herb2.png",
  ﱠ︅︁︄: "img/day-herb3.png",
  ﱟ︅︁︄: "img/day-herb4.png",
  ﱡ︅︁︄: "img/day-herb5.png",
  ﱣ︅︁︄: "img/day-herb6.png",
  ﱢ︅︁︄: "img/day-herb7.png",
  ﱞ︆︁︄: "img/day-herb8.png",
  ﱠ︆︁︄: "img/day-herb9.png",
  ﱟ︆︁︄: "img/day-herb10.png",
  ﱡ︆︁︄: "img/day-herb11.png",
  ﱣ︆︁︄: "img/day-herb12.png",
  ﱢ︆︁︄: "img/day-herb13.png",
  ﱞ︇︁︄: "img/day-herb14.png",
  ﱠ︇︁︄: "img/day-herb15.png",
  ﱟ︇︁︄: "img/day-shell0.png",
  ﱡ︇︁︄: "img/day-shell1.png",
  ﱣ︇︁︄: "img/day-shell2.png",
  ﱢ︇︁︄: "img/day-leaf1.png",
  ﱞ︈︁︄: "img/day-leaf2.png",
  ﱠ︈︁︄: "img/day-leaf3.png",
  ﱟ︈︁︄: "img/day-leaf4.png",
  ﱡ︈︁︄: "img/day-leaf5.png",
  ﱣ︈︁︄: "img/day-leaf6.png",
  ﱢ︈︁︄: "img/day-leaf7.png",
  ﱞ︉︁︄: "img/day-leaf8.png",
  ﱠ︉︁︄: "img/day-rock0.png",
  ﱟ︉︁︄: "img/day-rock1.png",
  ﱡ︉︁︄: "img/day-rock2.png",
  ﱣ︉︁︄: "img/day-rock3.png",
  ﱢ︉︁︄: "img/day-rock4.png",
  ﱞ︊︁︄: "img/day-rock5.png",
  ﱠ︊︁︄: "img/day-rock6.png",
  ﱟ︊︁︄: "img/day-rock7.png",
  ﱡ︊︁︄: "img/day-rock8.png",
  ﱣ︊︁︄: "img/day-rock9.png",
  ﱢ︊︁︄: "img/day-rock10.png",
  ﱞ︋︁︄: "img/day-rock11.png",
  ﱠ︋︁︄: "img/day-rock12.png",
  ﱟ︋︁︄: "img/day-rock13.png",
  ﱡ︋︁︄: "img/day-flower1.png",
  ﱣ︋︁︄: "img/day-flower2.png",
  ﱢ︋︁︄: "img/day-flower3.png",
  ﱞ︌︁︄: "img/day-flower4.png",
  ﱠ︌︁︄: "img/day-flower5.png",
  ﱟ︌︁︄: "img/day-flower6.png",
  ﱡ︌︁︄: "img/day-flower7.png",
  ﱣ︌︁︄: "img/day-flower8.png",
  ﱢ︌︁︄: "img/day-flower9.png",
  ﱞ︍︁︄: "img/day-herb16.png",
  ﱠ︍︁︄: "img/day-herb17.png",
  ﱟ︍︁︄: "img/day-herb18.png",
  ﱡ︍︁︄: "img/day-herb19.png",
  ﱣ︍︁︄: "img/day-herb20.png",
  ﱢ︍︁︄: "img/day-herb21.png",
  ﱞ︎︁︄: "img/night-herb0.png",
  ﱠ︎︁︄: "img/night-herb1.png",
  ﱟ︎︁︄: "img/night-herb2.png",
  ﱡ︎︁︄: "img/night-herb3.png",
  ﱣ︎︁︄: "img/night-herb4.png",
  ﱢ︎︁︄: "img/night-herb5.png",
  ﱞ️︁︄: "img/night-herb6.png",
  ﱠ️︁︄: "img/night-herb7.png",
  ﱟ️︁︄: "img/night-herb8.png",
  ﱡ️︁︄: "img/night-herb9.png",
  ﱣ️︁︄: "img/night-herb10.png",
  ﱢ️︁︄: "img/night-herb11.png",
  ﱞ︀︂︄: "img/night-herb12.png",
  ﱠ︀︂︄: "img/night-herb13.png",
  ﱟ︀︂︄: "img/night-herb14.png",
  ﱡ︀︂︄: "img/night-herb15.png",
  ﱣ︀︂︄: "img/night-shell0.png",
  ﱢ︀︂︄: "img/night-shell1.png",
  ﱞ︁︂︄: "img/night-shell2.png",
  ﱠ︁︂︄: "img/night-leaf1.png",
  ﱟ︁︂︄: "img/night-leaf2.png",
  ﱡ︁︂︄: "img/night-leaf3.png",
  ﱣ︁︂︄: "img/night-leaf4.png",
  ﱢ︁︂︄: "img/night-leaf5.png",
  ﱞ︂︂︄: "img/night-leaf6.png",
  ﱠ︂︂︄: "img/night-leaf7.png",
  ﱟ︂︂︄: "img/night-leaf8.png",
  ﱡ︂︂︄: "img/night-rock0.png",
  ﱣ︂︂︄: "img/night-rock1.png",
  ﱢ︂︂︄: "img/night-rock2.png",
  ﱞ︃︂︄: "img/night-rock3.png",
  ﱠ︃︂︄: "img/night-rock4.png",
  ﱟ︃︂︄: "img/night-rock5.png",
  ﱡ︃︂︄: "img/night-rock6.png",
  ﱣ︃︂︄: "img/night-rock7.png",
  ﱢ︃︂︄: "img/night-rock8.png",
  ﱞ︄︂︄: "img/night-rock9.png",
  ﱠ︄︂︄: "img/night-rock10.png",
  ﱟ︄︂︄: "img/night-rock11.png",
  ﱡ︄︂︄: "img/night-rock12.png",
  ﱣ︄︂︄: "img/night-rock13.png",
  ﱢ︄︂︄: "img/night-flower1.png",
  ﱞ︅︂︄: "img/night-flower2.png",
  ﱠ︅︂︄: "img/night-flower3.png",
  ﱟ︅︂︄: "img/night-flower4.png",
  ﱡ︅︂︄: "img/night-flower5.png",
  ﱣ︅︂︄: "img/night-flower6.png",
  ﱢ︅︂︄: "img/night-flower7.png",
  ﱞ︆︂︄: "img/night-flower8.png",
  ﱠ︆︂︄: "img/night-flower9.png",
  ﱟ︆︂︄: "img/night-herb16.png",
  ﱡ︆︂︄: "img/night-herb17.png",
  ﱣ︆︂︄: "img/night-herb18.png",
  ﱢ︆︂︄: "img/night-herb19.png",
  ﱞ︇︂︄: "img/night-herb20.png",
  ﱠ︇︂︄: "img/night-herb21.png",
  ﱟ︇︂︄: "img/day-river000-010-000.png",
  ﱡ︇︂︄: "img/day-river000-010-010.png",
  ﱣ︇︂︄: "img/day-river000-011-000.png",
  ﱢ︇︂︄: "img/day-river000-011-010.png",
  ﱞ︈︂︄: "img/day-river000-011-011.png",
  ﱠ︈︂︄: "img/day-river000-110-000.png",
  ﱟ︈︂︄: "img/day-river000-110-010.png",
  ﱡ︈︂︄: "img/day-river000-110-110.png",
  ﱣ︈︂︄: "img/day-river000-111-000.png",
  ﱢ︈︂︄: "img/day-river000-111-010.png",
  ﱞ︉︂︄: "img/day-river000-111-011.png",
  ﱠ︉︂︄: "img/day-river000-111-110.png",
  ﱟ︉︂︄: "img/day-river000-111-111.png",
  ﱡ︉︂︄: "img/day-river010-010-000.png",
  ﱣ︉︂︄: "img/day-river010-010-010.png",
  ﱢ︉︂︄: "img/day-river010-011-000.png",
  ﱞ︊︂︄: "img/day-river010-011-010.png",
  ﱠ︊︂︄: "img/day-river010-011-011.png",
  ﱟ︊︂︄: "img/day-river010-110-000.png",
  ﱡ︊︂︄: "img/day-river010-110-010.png",
  ﱣ︊︂︄: "img/day-river010-110-110.png",
  ﱢ︊︂︄: "img/day-river010-111-000.png",
  ﱞ︋︂︄: "img/day-river010-111-010.png",
  ﱠ︋︂︄: "img/day-river010-111-011.png",
  ﱟ︋︂︄: "img/day-river010-111-110.png",
  ﱡ︋︂︄: "img/day-river010-111-111.png",
  ﱣ︋︂︄: "img/day-river011-011-000.png",
  ﱢ︋︂︄: "img/day-river011-011-010.png",
  ﱞ︌︂︄: "img/day-river011-011-011.png",
  ﱠ︌︂︄: "img/day-river011-111-000.png",
  ﱟ︌︂︄: "img/day-river011-111-010.png",
  ﱡ︌︂︄: "img/day-river011-111-011.png",
  ﱣ︌︂︄: "img/day-river011-111-110.png",
  ﱢ︌︂︄: "img/day-river011-111-111.png",
  ﱞ︍︂︄: "img/day-river110-110-000.png",
  ﱠ︍︂︄: "img/day-river110-110-010.png",
  ﱟ︍︂︄: "img/day-river110-110-110.png",
  ﱡ︍︂︄: "img/day-river110-111-000.png",
  ﱣ︍︂︄: "img/day-river110-111-010.png",
  ﱢ︍︂︄: "img/day-river110-111-011.png",
  ﱞ︎︂︄: "img/day-river110-111-110.png",
  ﱠ︎︂︄: "img/day-river110-111-111.png",
  ﱟ︎︂︄: "img/day-river111-111-011.png",
  ﱡ︎︂︄: "img/day-river111-111-110.png",
  ﱟ︎︂︄: "img/day-river111-111-011.png",
  ﱣ︎︂︄: "img/day-river111-111-000.png",
  ﱢ︎︂︄: "img/day-river111-111-111.png",
  ﱞ️︂︄: "img/day-river111-111-010.png",
  ﱠ️︂︄: "img/night-river000-010-000.png",
  ﱟ️︂︄: "img/night-river000-010-010.png",
  ﱡ️︂︄: "img/night-river000-011-000.png",
  ﱣ️︂︄: "img/night-river000-011-010.png",
  ﱢ️︂︄: "img/night-river000-011-011.png",
  ﱞ︀︃︄: "img/night-river000-110-000.png",
  ﱠ︀︃︄: "img/night-river000-110-010.png",
  ﱟ︀︃︄: "img/night-river000-110-110.png",
  ﱡ︀︃︄: "img/night-river000-111-000.png",
  ﱣ︀︃︄: "img/night-river000-111-010.png",
  ﱢ︀︃︄: "img/night-river000-111-011.png",
  ﱞ︁︃︄: "img/night-river000-111-110.png",
  ﱠ︁︃︄: "img/night-river000-111-111.png",
  ﱟ︁︃︄: "img/night-river010-010-000.png",
  ﱡ︁︃︄: "img/night-river010-010-010.png",
  ﱣ︁︃︄: "img/night-river010-011-000.png",
  ﱢ︁︃︄: "img/night-river010-011-010.png",
  ﱞ︂︃︄: "img/night-river010-011-011.png",
  ﱠ︂︃︄: "img/night-river010-110-000.png",
  ﱟ︂︃︄: "img/night-river010-110-010.png",
  ﱡ︂︃︄: "img/night-river010-110-110.png",
  ﱣ︂︃︄: "img/night-river010-111-000.png",
  ﱢ︂︃︄: "img/night-river010-111-010.png",
  ﱞ︃︃︄: "img/night-river010-111-011.png",
  ﱠ︃︃︄: "img/night-river010-111-110.png",
  ﱟ︃︃︄: "img/night-river010-111-111.png",
  ﱡ︃︃︄: "img/night-river011-011-000.png",
  ﱣ︃︃︄: "img/night-river011-011-010.png",
  ﱢ︃︃︄: "img/night-river011-011-011.png",
  ﱞ︄︃︄: "img/night-river011-111-000.png",
  ﱠ︄︃︄: "img/night-river011-111-010.png",
  ﱟ︄︃︄: "img/night-river011-111-011.png",
  ﱡ︄︃︄: "img/night-river011-111-110.png",
  ﱣ︄︃︄: "img/night-river011-111-111.png",
  ﱢ︄︃︄: "img/night-river110-110-000.png",
  ﱞ︅︃︄: "img/night-river110-110-010.png",
  ﱠ︅︃︄: "img/night-river110-110-110.png",
  ﱟ︅︃︄: "img/night-river110-111-000.png",
  ﱡ︅︃︄: "img/night-river110-111-010.png",
  ﱣ︅︃︄: "img/night-river110-111-011.png",
  ﱢ︅︃︄: "img/night-river110-111-110.png",
  ﱞ︆︃︄: "img/night-river110-111-111.png",
  ﱠ︆︃︄: "img/night-river111-111-011.png",
  ﱟ︆︃︄: "img/night-river111-111-110.png",
  ﱠ︆︃︄: "img/night-river111-111-011.png",
  ﱡ︆︃︄: "img/night-river111-111-000.png",
  ﱣ︆︃︄: "img/night-river111-111-111.png",
  ﱢ︆︃︄: "img/night-river111-111-010.png",
  ﱞ︇︃︄: "img/day-pebblecompo1.png",
  ﱠ︇︃︄: "img/day-pebblecompo2.png",
  ﱟ︇︃︄: "img/day-pebblecompo3.png",
  ﱡ︇︃︄: "img/day-pebblecompo4.png",
  ﱣ︇︃︄: "img/day-pebblecompo5.png",
  ﱢ︇︃︄: "img/day-pebblecompo6.png",
  ﱞ︈︃︄: "img/day-pebblecompo7.png",
  ﱠ︈︃︄: "img/day-pebblecompo8.png",
  ﱟ︈︃︄: "img/day-pebblecompo9.png",
  ﱡ︈︃︄: "img/day-pebblecompo10.png",
  ﱣ︈︃︄: "img/day-pebblecompo11.png",
  ﱢ︈︃︄: "img/day-pebblecompo12.png",
  ﱞ︉︃︄: "img/day-pebblecompo13.png",
  ﱠ︉︃︄: "img/day-pebblecompo14.png",
  ﱟ︉︃︄: "img/day-pebblecompo15.png",
  ﱡ︉︃︄: "img/day-pebblecompo16.png",
  ﱣ︉︃︄: "img/day-pebblecompo17.png",
  ﱢ︉︃︄: "img/day-pebblecompo18.png",
  ﱞ︊︃︄: "img/day-pebblecompo19.png",
  ﱠ︊︃︄: "img/day-pebblecompo20.png",
  ﱟ︊︃︄: "img/day-pebblecompo21.png",
  ﱡ︊︃︄: "img/day-pebblecompo22.png",
  ﱣ︊︃︄: "img/day-pebblecompo23.png",
  ﱢ︊︃︄: "img/day-pebblecompo24.png",
  ﱞ︋︃︄: "img/day-pebblecompo25.png",
  ﱠ︋︃︄: "img/day-pebblecompo26.png",
  ﱟ︋︃︄: "img/day-pebblecompo27.png",
  ﱡ︋︃︄: "img/day-pebblecompo28.png",
  ﱣ︋︃︄: "img/night-pebblecompo1.png",
  ﱢ︋︃︄: "img/night-pebblecompo2.png",
  ﱞ︌︃︄: "img/night-pebblecompo3.png",
  ﱠ︌︃︄: "img/night-pebblecompo4.png",
  ﱟ︌︃︄: "img/night-pebblecompo5.png",
  ﱡ︌︃︄: "img/night-pebblecompo6.png",
  ﱣ︌︃︄: "img/night-pebblecompo7.png",
  ﱢ︌︃︄: "img/night-pebblecompo8.png",
  ﱞ︍︃︄: "img/night-pebblecompo9.png",
  ﱠ︍︃︄: "img/night-pebblecompo10.png",
  ﱟ︍︃︄: "img/night-pebblecompo11.png",
  ﱡ︍︃︄: "img/night-pebblecompo12.png",
  ﱣ︍︃︄: "img/night-pebblecompo13.png",
  ﱢ︍︃︄: "img/night-pebblecompo14.png",
  ﱞ︎︃︄: "img/night-pebblecompo15.png",
  ﱠ︎︃︄: "img/night-pebblecompo16.png",
  ﱟ︎︃︄: "img/night-pebblecompo17.png",
  ﱡ︎︃︄: "img/night-pebblecompo18.png",
  ﱣ︎︃︄: "img/night-pebblecompo19.png",
  ﱢ︎︃︄: "img/night-pebblecompo20.png",
  ﱞ️︃︄: "img/night-pebblecompo21.png",
  ﱠ️︃︄: "img/night-pebblecompo22.png",
  ﱟ️︃︄: "img/night-pebblecompo23.png",
  ﱡ️︃︄: "img/night-pebblecompo24.png",
  ﱣ️︃︄: "img/night-pebblecompo25.png",
  ﱢ️︃︄: "img/night-pebblecompo26.png",
  ﱞ︀︄︄: "img/night-pebblecompo27.png",
  ﱠ︀︄︄: "img/night-pebblecompo28.png",
  ﱟ︀︄︄: "img/day-baby-mammoth.png",
  ﱡ︀︄︄: "img/day-baby-mammoth-tamed.png",
  ﱣ︀︄︄: "img/day-baby-mammoth-angry.png",
  ﱢ︀︄︄: "img/night-baby-mammoth.png",
  ﱞ︁︄︄: "img/night-baby-mammoth-tamed.png",
  ﱠ︁︄︄: "img/night-baby-mammoth-angry.png",
  ﱟ︁︄︄: "img/inv-mammoth-out.png",
  ﱡ︁︄︄: "img/inv-mammoth-in.png",
  ﱣ︁︄︄: "img/inv-mammoth-click.png",
  ﱞ︈︈︂: "img/hurt-baby-mammoth.png",
  ﱠ︇︎︁: "img/baby-mammoth-step.png",
  ﱢ︁︄︄: "img/day-flower-hat.png",
  ﱞ︂︄︄: "img/night-flower-hat.png",
  ﱠ︂︄︄: "img/inv-flower-hat-out.png",
  ﱟ︂︄︄: "img/inv-flower-hat-in.png",
  ﱡ︂︄︄: "img/inv-flower-hat-click.png",
  ﱣ︂︄︄: "img/day-fur-hat.png",
  ﱢ︂︄︄: "img/night-fur-hat.png",
  ﱞ︃︄︄: "img/inv-fur-hat-out.png",
  ﱠ︃︄︄: "img/inv-fur-hat-in.png",
  ﱟ︃︄︄: "img/inv-fur-hat-click.png",
  ﱡ︃︄︄: "img/day-mammoth.png",
  ﱣ︃︄︄: "img/night-mammoth.png",
  ﱡ︇︈︂: "img/hurt-mammoth.png",
  ﱢ︃︄︄: "img/inv-mammoth-fur-out.png",
  ﱞ︄︄︄: "img/inv-mammoth-fur-in.png",
  ﱠ︄︄︄: "img/inv-mammoth-fur-click.png",
  ﱟ︄︄︄: "img/inv-wood-bow-out.png",
  ﱡ︄︄︄: "img/inv-wood-bow-in.png",
  ﱣ︄︄︄: "img/inv-wood-bow-click.png",
  ﱢ︄︄︄: "img/inv-wood-arrow-out.png",
  ﱞ︅︄︄: "img/inv-wood-arrow-in.png",
  ﱠ︅︄︄: "img/inv-wood-arrow-click.png",
  ﱟ︅︄︄: "img/day-wood-bow2.png",
  ﱡ︅︄︄: "img/night-wood-bow2.png",
  ﱣ︅︄︄: "img/day-wood-arrow.png",
  ﱢ︅︄︄: "img/night-wood-arrow.png",
  ﱞ︆︄︄: "img/inv-stone-bow-out.png",
  ﱠ︆︄︄: "img/inv-stone-bow-in.png",
  ﱟ︆︄︄: "img/inv-stone-bow-click.png",
  ﱡ︆︄︄: "img/inv-stone-arrow-out.png",
  ﱣ︆︄︄: "img/inv-stone-arrow-in.png",
  ﱢ︆︄︄: "img/inv-stone-arrow-click.png",
  ﱞ︇︄︄: "img/day-stone-bow.png",
  ﱠ︇︄︄: "img/night-stone-bow.png",
  ﱟ︇︄︄: "img/day-stone-arrow.png",
  ﱡ︇︄︄: "img/night-stone-arrow.png",
  ﱣ︇︄︄: "img/inv-gold-bow-out.png",
  ﱢ︇︄︄: "img/inv-gold-bow-in.png",
  ﱞ︈︄︄: "img/inv-gold-bow-click.png",
  ﱠ︈︄︄: "img/inv-gold-arrow-out.png",
  ﱟ︈︄︄: "img/inv-gold-arrow-in.png",
  ﱡ︈︄︄: "img/inv-gold-arrow-click.png",
  ﱣ︈︄︄: "img/day-gold-bow.png",
  ﱢ︈︄︄: "img/night-gold-bow.png",
  ﱞ︉︄︄: "img/day-gold-arrow.png",
  ﱠ︉︄︄: "img/night-gold-arrow.png",
  ﱟ︉︄︄: "img/inv-diamond-bow-out.png",
  ﱡ︉︄︄: "img/inv-diamond-bow-in.png",
  ﱣ︉︄︄: "img/inv-diamond-bow-click.png",
  ﱢ︉︄︄: "img/inv-diamond-arrow-out.png",
  ﱞ︊︄︄: "img/inv-diamond-arrow-in.png",
  ﱠ︊︄︄: "img/inv-diamond-arrow-click.png",
  ﱟ︊︄︄: "img/day-diamond-bow.png",
  ﱡ︊︄︄: "img/night-diamond-bow.png",
  ﱣ︊︄︄: "img/day-diamond-arrow.png",
  ﱢ︊︄︄: "img/night-diamond-arrow.png",
  ﱞ︋︄︄: "img/inv-amethyst-bow-out.png",
  ﱠ︋︄︄: "img/inv-amethyst-bow-in.png",
  ﱟ︋︄︄: "img/inv-amethyst-bow-click.png",
  ﱡ︋︄︄: "img/inv-amethyst-arrow-out.png",
  ﱣ︋︄︄: "img/inv-amethyst-arrow-in.png",
  ﱢ︋︄︄: "img/inv-amethyst-arrow-click.png",
  ﱞ︌︄︄: "img/day-amethyst-bow.png",
  ﱠ︌︄︄: "img/night-amethyst-bow.png",
  ﱟ︌︄︄: "img/day-amethyst-arrow.png",
  ﱡ︌︄︄: "img/night-amethyst-arrow.png",
  ﱣ︌︄︄: "img/inv-dragon-bow-out.png",
  ﱢ︌︄︄: "img/inv-dragon-bow-in.png",
  ﱞ︍︄︄: "img/inv-dragon-bow-click.png",
  ﱠ︍︄︄: "img/inv-dragon-arrow-out.png",
  ﱟ︍︄︄: "img/inv-dragon-arrow-in.png",
  ﱡ︍︄︄: "img/inv-dragon-arrow-click.png",
  ﱣ︍︄︄: "img/day-dragon-bow.png",
  ﱢ︍︄︄: "img/night-dragon-bow.png",
  ﱞ︎︄︄: "img/day-dragon-arrow.png",
  ﱠ︎︄︄: "img/night-dragon-arrow.png",
  ﱟ︎︄︄: "img/inv-reidite-bow-out.png",
  ﱡ︎︄︄: "img/inv-reidite-bow-in.png",
  ﱣ︎︄︄: "img/inv-reidite-bow-click.png",
  ﱢ︎︄︄: "img/inv-reidite-arrow-out.png",
  ﱞ️︄︄: "img/inv-reidite-arrow-in.png",
  ﱠ️︄︄: "img/inv-reidite-arrow-click.png",
  ﱟ️︄︄: "img/day-reidite-bow.png",
  ﱡ️︄︄: "img/night-reidite-bow.png",
  ﱣ️︄︄: "img/day-reidite-arrow.png",
  ﱢ️︄︄: "img/night-reidite-arrow.png",
  ﱠ︈︁︂: "img/bandage-activated.png",
  ﱞ︈︁︂: "img/auto-feed.png",
  ﱡ︈︁︂: "img/stop-regeneration.png",
  ﱟ︈︁︂: "img/stop-regeneration2.png",
  ﱞ︀︅︄: "img/day-wood-platform.png",
  ﱠ︀︅︄: "img/night-wood-platform.png",
  ﱟ︀︅︄: "img/inv-wood-platform-in.png",
  ﱡ︀︅︄: "img/inv-wood-platform-out.png",
  ﱣ︀︅︄: "img/inv-wood-platform-click.png",
  ﱢ︀︅︄: "img/day-wood-shield.png",
  ﱞ︁︅︄: "img/night-wood-shield.png",
  ﱠ︁︅︄: "img/day-stone-shield.png",
  ﱟ︁︅︄: "img/night-stone-shield.png",
  ﱡ︁︅︄: "img/day-gold-shield.png",
  ﱣ︁︅︄: "img/night-gold-shield.png",
  ﱢ︁︅︄: "img/day-diamond-shield.png",
  ﱞ︂︅︄: "img/night-diamond-shield.png",
  ﱠ︂︅︄: "img/day-amethyst-shield.png",
  ﱟ︂︅︄: "img/night-amethyst-shield.png",
  ﱡ︂︅︄: "img/day-reidite-shield.png",
  ﱣ︂︅︄: "img/night-reidite-shield.png",
  ﱢ︂︅︄: "img/inv-wood-shield-in.png",
  ﱞ︃︅︄: "img/inv-wood-shield-out.png",
  ﱠ︃︅︄: "img/inv-wood-shield-click.png",
  ﱟ︃︅︄: "img/inv-stone-shield-in.png",
  ﱡ︃︅︄: "img/inv-stone-shield-out.png",
  ﱣ︃︅︄: "img/inv-stone-shield-click.png",
  ﱢ︃︅︄: "img/inv-gold-shield-in.png",
  ﱞ︄︅︄: "img/inv-gold-shield-out.png",
  ﱠ︄︅︄: "img/inv-gold-shield-click.png",
  ﱟ︄︅︄: "img/inv-diamond-shield-in.png",
  ﱡ︄︅︄: "img/inv-diamond-shield-out.png",
  ﱣ︄︅︄: "img/inv-diamond-shield-click.png",
  ﱢ︄︅︄: "img/inv-amethyst-shield-in.png",
  ﱞ︅︅︄: "img/inv-amethyst-shield-out.png",
  ﱠ︅︅︄: "img/inv-amethyst-shield-click.png",
  ﱟ︅︅︄: "img/inv-reidite-shield-in.png",
  ﱡ︅︅︄: "img/inv-reidite-shield-out.png",
  ﱣ︅︅︄: "img/inv-reidite-shield-click.png",
  ﱢ︅︅︄: "img/day-machete.png",
  ﱞ︆︅︄: "img/night-machete.png",
  ﱠ︆︅︄: "img/inv-machete-in.png",
  ﱟ︆︅︄: "img/inv-machete-out.png",
  ﱡ︆︅︄: "img/inv-machete-click.png"
};
WINDOW12 = [{}];
WINDOW12[0].stringify = function (c) {
  for (var d = new Uint8Array(new ArrayBuffer(c[Oa])), e = 0; e < c[Oa]; e++) {
    d[e] = c[e];
  }
  return d;
};
DUMP_IMAGES = {};
PREPROC_IMAGES = {};
for (var dc in IMAGES) {
  DUMP_IMAGES[dc] = IMAGES[dc];
}
sprite = [];
// Ally Spikes
let ReiditeSpikeAlly = new Image;
let AmethystSpikeAlly = new Image;
let DiamondSpikeAlly = new Image;
let GoldSpikeAlly = new Image;
let StoneSpikeAlly = new Image;
let WoodSpikeAlly = new Image;
// Enemy Spikes
let ReiditeSpikeEnemy = new Image;
let AmethystSpikeEnemy = new Image;
let DiamondSpikeEnemy = new Image;
let GoldSpikeEnemy = new Image;
let StoneSpikeEnemy = new Image;
let WoodSpikeEnemy = new Image;
// Ally Door Spikes
let ReiditeDoorSpikeAlly = new Image
let AmethystDoorSpikeAlly = new Image
let DiamondDoorSpikeAlly = new Image
let GoldDoorSpikeAlly = new Image
let StoneDoorSpikeAlly = new Image
let WoodDoorSpikeAlly = new Image
// Enemy Door Spikes
let ReiditeDoorSpikeEnemy = new Image
let AmethystDoorSpikeEnemy = new Image
let DiamondDoorSpikeEnemy = new Image
let GoldDoorSpikeEnemy = new Image
let StoneDoorSpikeEnemy = new Image
let WoodDoorSpikeEnemy = new Image



function srccs_of_spikes() {
  requestAnimationFrame(srccs_of_spikes)  

  // Ally Spikes
  ReiditeSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-reidite-spike-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988333425709136/day-reidite-spike-enemy.png.111.png?ex=656b8c03&is=65591703&hm=ff0e5f405f968222cf40a6a51aa7f74d45d3c4338880f3e874cd77fad56f6dd0&"
  AmethystSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-amethyst-spike-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988272432132156/day-amethyst-spike-ally.png312312.png?ex=656b8bf5&is=655916f5&hm=70df8a63856a9a697b229ad536e6fcf7833ea84597bab23fe01b9b542ab7edcf&"
  DiamondSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-diamond-spike-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988200436904027/day-diamond-spike-ally.png?ex=656b8be4&is=655916e4&hm=c79dcd278d78c44aa4c4daaa714aa95e70ffc711c2b55031396cf70511973acb&"
  GoldSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-gold-spike-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988150851842178/day-gold-spike-ally_remaster_by_hersgori.png?ex=656b8bd8&is=655916d8&hm=ed031fef8dcfe5327176c743de47fe117512a72b40d3701cde68bc432a558def&"
  StoneSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-stone-spike-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988071235555428/day-stone-spike-ally1.png?ex=656b8bc5&is=655916c5&hm=3b3ce732297fa5601c8a866358843e0fba45a77adf3997baedd2d1929f15db45&"
  WoodSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-wood-spike-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172987987445940245/day-wood-spike-all1232y.png?ex=656b8bb1&is=655916b1&hm=96a4bf578729fbc8b95e183f3e64ee38a748da5b3ba1589293e75c8e15b0946d&"
  // Enemy Spikes
  ReiditeSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-reidite-spike-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988350530064454/day-reidite-spike-enemy.png12312.png?ex=656b8c07&is=65591707&hm=b9d6df7bcef0ebe90ea4c32ac7091570038aa58972ecc5e0bc2b54555af3fb8d&"
  AmethystSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-amethyst-spike-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988292883562637/day-amethyst-spike-enemy.1213png1.png?ex=656b8bfa&is=655916fa&hm=5a62863cc9beb349c879b80ea530a115fa91060e8fb2eb73da9dc7c6e5c93150&"
  DiamondSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-diamond-spike-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988220066246779/day-diamond-spike-enemy.png1.png1.png?ex=656b8be8&is=655916e8&hm=f5acaa9f255c5a411c33f4d25fea0ed5ccb259afb7f6b492de90f90ea0bba77e&"
  GoldSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-gold-spike-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988163883536394/day-gold-spike-enemy.png1132.png1.png?ex=656b8bdb&is=655916db&hm=80f1c1a815325ed5037d09d42bf574a17f229a0993535da41b1818491d8ae393&"
  StoneSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-stone-spike-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988106736156824/day-stone-spike-enemy.png1.png?ex=656b8bcd&is=655916cd&hm=c9a0fadb342caaef0e338247135be0fe102c640cf739fd2ac0c5de7618bb2e1d&"
  WoodSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-wood-spike-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1172988041174978651/day-wood-spike-enemy.png123.png1.png?ex=656b8bbe&is=655916be&hm=c47096ec572b7d044fec29f458ba5f165c6f42c3317963cabedd13c4bbe976a0&"

  ReiditeDoorSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-reidite-spike-door-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086697713356801/day-reidite-spike-door-ally_remastered_by_hersgori.png?ex=656d9717&is=655b2217&hm=b05574473cc6e46b0ac6a55171f46409b32d309a5b5f93c2340c72116655eee3&"
  AmethystDoorSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-amethyst-spike-door-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086595938562108/day-amethyst-spike-door-ally.png?ex=656d96ff&is=655b21ff&hm=de6162c8586bf02f743951828e7bbb6360e1864587d6ed717bfeb5b31c2c609b&"
  DiamondDoorSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-diamond-spike-door-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086496625819728/day-diamond-spike-door-ally.png?ex=656d96e7&is=655b21e7&hm=c40dbc322ec1fa93ecb5baae6ea00b685211d16f18eaebc281c92b57ed726fb1&"
  GoldDoorSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-gold-spike-door-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086420880887808/day-gold-spike-door-ally.png?ex=656d96d5&is=655b21d5&hm=f430d486c18be585aefaa452aae3f25ad3dafe44928aaf7961af9cc949fd2e9b&"
  StoneDoorSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-stone-spike-door-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086326802657300/day-stone-spike-door-ally.png?ex=656d96be&is=655b21be&hm=f65d2ab32c17d6a315f98349d25cc4f277b1a44db69390f22b987189f87231be&"
  WoodDoorSpikeAlly.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-wood-spike-door-ally.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086241335320606/day-wood-spike-door-ally.png?ex=656d96aa&is=655b21aa&hm=2151650a5e8e3919691ab0fca6bcf111ddbf33ce09cdc7e4fe191d3522a29b14&"

  ReiditeDoorSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-reidite-spike-door-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176087039809167400/day-reidite-spike-door-enemy.png?ex=656d9768&is=655b2268&hm=da08941a2ed8f45a1ba0a03d57bca1c9c195101db8fd31c1d4b48014125a768d&"
  AmethystDoorSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-amethyst-spike-door-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176087023409434645/day-amethyst-spike-door-enemy.png?ex=656d9765&is=655b2265&hm=aa8321efef00f9ee7f3509f2771ebbefbf737a6e51e2a58e05ada9889d669ec6&"
  WoodDoorSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-diamond-spike-door-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086935819784192/day-wood-spike-door-enemy.png?ex=656d9750&is=655b2250&hm=38a5982a0f81860cb95a286f3e777f142b15edb72e570f3a5b0e75ac3bef5f2f&"
  DiamondDoorSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-gold-spike-door-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086995416662067/day-diamond-spike-door-enemy.png?ex=656d975e&is=655b225e&hm=c50429f32327251051c6ccac7a9eb1121dd82acb355555ce60eda79c81d32ba6&"
  GoldDoorSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-stone-spike-door-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086979427971092/day-gold-spike-door-enemy.png?ex=656d975a&is=655b225a&hm=ce804393ef6b2b3af90bb9f91e0cb3b0b2554c074d9ea7a0565a607f3a292e58&"
  StoneDoorSpikeEnemy.src = Settings.ColoredSpikes.Style == 1 ? "https://raw.githubusercontent.com/sfagasdzdgfhs/spikes/main/day-wood-spike-door-enemy.png" : "https://cdn.discordapp.com/attachments/1172987889349574806/1176086955449135134/day-stone-spike-door-enemy.png?ex=656d9754&is=655b2254&hm=10a92abe24fefc211cfb874040ff1524ef6ed286bf21b16d17468c3a69842992&"
}
srccs_of_spikes()


// SPIKES
sprite[10000] = [WoodSpikeAlly, WoodSpikeAlly];
sprite[10001] = [WoodSpikeEnemy, WoodSpikeEnemy];

sprite[10002] = [StoneSpikeAlly, StoneSpikeAlly];
sprite[10003] = [StoneSpikeEnemy, StoneSpikeEnemy];

sprite[10004] = [GoldSpikeAlly, GoldSpikeAlly];
sprite[10005] = [GoldSpikeEnemy, GoldSpikeEnemy];

sprite[10006] = [DiamondSpikeAlly, DiamondSpikeAlly];
sprite[10007] = [DiamondSpikeEnemy, DiamondSpikeEnemy];

sprite[10008] = [AmethystSpikeAlly, AmethystSpikeAlly];
sprite[10009] = [AmethystSpikeEnemy, AmethystSpikeEnemy];

sprite[10010] = [ReiditeSpikeAlly, ReiditeSpikeAlly];
sprite[10011] = [ReiditeSpikeEnemy, ReiditeSpikeEnemy];


// DOOR SPIKES
sprite[10012] = [WoodDoorSpikeAlly, WoodDoorSpikeAlly]
sprite[10013] = [WoodDoorSpikeEnemy, WoodDoorSpikeEnemy]

sprite[10014] = [StoneDoorSpikeAlly, StoneDoorSpikeAlly]
sprite[10015] = [StoneDoorSpikeEnemy, StoneDoorSpikeEnemy]

sprite[10016] = [GoldDoorSpikeAlly, GoldDoorSpikeAlly]
sprite[10017] = [GoldDoorSpikeEnemy, GoldDoorSpikeEnemy]

sprite[10018] = [DiamondDoorSpikeAlly, DiamondDoorSpikeAlly]
sprite[10019] = [DiamondDoorSpikeEnemy, DiamondDoorSpikeEnemy]

sprite[10020] = [AmethystDoorSpikeAlly, AmethystDoorSpikeAlly]
sprite[10021] = [AmethystDoorSpikeEnemy, AmethystDoorSpikeEnemy]

sprite[10022] = [ReiditeDoorSpikeAlly, ReiditeDoorSpikeAlly]
sprite[10023] = [ReiditeDoorSpikeEnemy, ReiditeDoorSpikeEnemy]



RARITY = {};
RARITY.FREE = 0;
RARITY.ﱟ︁︉︂ = 1;
RARITY.ﱠ︁︉︂ = 2;
RARITY.ﱠ︀︍︁ = 3;
RARITY.ﱟ︀︍︁ = 4;
RARITY.ﱢ︁︍︁ = 5;
RARITY.ﱟ️︍︁ = 6;
RARITY.SPECIAL = 7;
RARITY.LEVEL = 8;
COSMETICS = {};
MINIMAP_UTILS = [];
find_cosmetics_per_id = function (c, d) {
  for (var e = 0; e < c[Oa]; e++) {
    if (c[e].id === d) {
      return e;
    }
  }
  return -1;
};
var gc = [];
function hc(c, d) {
  for (var e = 0; e < gc[Oa]; e += d) {
    var f = gc[e];
    if (f[0] === c) {
      ic(f[0], f[1], f[2], f[3]);
    }
  }
}
function ic(c, d, e, f) {
  var g = MINIMAP_UTILS[c];
  if (g !== undefined) {
    for (var i = 0; i < 2; i++) {
      var k = g[d][i];
      var m = f * 193 / gj.ﱣ︆︅︄;
      var n = e * 193 / gj.ﱢ︆︅︄;
      var o = k.width / 3.5;
      var p = k.height / 3.5;
      sprite[812][i][r](k, m - o / 2, n - p / 2, o, p);
      m = f * 600 / gj.ﱣ︆︅︄;
      n = e * 600 / gj.ﱢ︆︅︄;
      o = k.width / 1.5;
      p = k.height / 1.5;
      sprite[813][i][r](k, m - o / 2, n - p / 2, o, p);
    }
  }
}
function jc(c, e, f, g) {
  if (e) {
    c[d] = e;
    c[xa]();
  }
  if (f) {
    c[m] = g;
    c[S] = f;
    c[M]();
  }
}
function kc(c, d, e, f, g, i) {
  if (f < i * 2) {
    i = f / 2;
  }
  if (g < i * 2) {
    i = g / 2;
  }
  if (i < 0) {
    i = 0;
  }
  c[Y]();
  c[K](d + i, e);
  c[ca](d + f, e, d + f, e + g, i);
  c[ca](d + f, e + g, d, e + g, i);
  c[ca](d, e + g, d, e, i);
  c[ca](d, e, d + f, e, i);
  c[X]();
}
function lc(c, d, e, f) {
  c[Y]();
  c[J](d, e, f, 0, Math[D] * 2);
}
function mc(c, d, e, f, g) {
  c[Y]();
  c[Ga] = "round";
  c[J](d, e, f, 0, Math[D] * 2 * g);
}
function nc(c, d, f, g) {
  var i = Math[D] * 2 / d;
  c[Y]();
  for (var k = [{
      x: f,
      y: 0
    }], m = [], n = 1; n < d; n++) {
    k[Na]({
      x: Math[za](n * i) * f,
      y: Math[e](n * i) * f
    });
    var o = k[Oa];
    m[Na](Utils.ﱣ︀︋︁(k[o - 2], k[o - 1]));
  }
  m[Na](Utils.ﱣ︀︋︁(k[k[Oa] - 1], k[0]));
  var p = m[m[Oa] - 1];
  c[K](p.x, p.y);
  for (n = 0; n < d; n++) {
    c[ca](k[n].x, k[n].y, m[n].x, m[n].y, g);
  }
  c[X]();
}
function oc(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = Math[Ca](d.width * d.width + d.height * d.height);
  d2 = g / 2;
  e.width = g;
  e.height = g;
  f[Ia](d2, d2);
  f[ra](c);
  f[r](d, -d.width / 2, -d.height / 2);
  return e;
}
function pc(c, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = Math[A](c * 28);
  var k = Math[A](c * 20);
  g[U] = k + "px Baloo Paaji";
  var m = c * 8;
  var n = g[ka](e).width + m * 2;
  f.width = n;
  f.height = i;
  kc(g, 0, 0, n, i, c * 10);
  g[ua] = 0.5;
  jc(g, "#000");
  g[ua] = 1;
  g[oa] = "middle";
  g[U] = k + "px Baloo Paaji";
  g[Y]();
  g[d] = "#FFF";
  g[sa](e, m, i / 2);
  return f;
}
function qc(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = c * 120;
  var i = c * 110;
  var k = g / 2;
  var m = i / 2;
  var n = c * 20;
  var o = c * 112;
  var q = c * 82;
  var r = o / 2;
  var s = q / 2;
  var t = c * 4;
  e.width = g;
  e.height = i;
  f[ua] = 1;
  f[Ia](k, m);
  kc(f, -r, -s, o, q, n);
  jc(f, d, d, t);
  return e;
}
function rc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 264;
  f.height = c * 246;
  g[Ia](0, c * 10);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 75, c * 54);
  g[G](c * 79, c * 21, c * 131, c * 13, c * 153, c * 36);
  g[G](c * 204, c * 27, c * 221, c * 52, c * 216, c * 83);
  g[G](c * 241, c * 103, c * 232, c * 138, c * 214, c * 147);
  g[G](c * 223, c * 184, c * 201, c * 200, c * 175, c * 199);
  g[G](c * 156, c * 218, c * 135, c * 222, c * 114, c * 203);
  g[G](c * 62, c * 213, c * 66, c * 189, c * 59, c * 170);
  g[G](c * 27, c * 164, c * 31, c * 134, c * 38, c * 123);
  g[G](c * 11, c * 80, c * 51, c * 52, c * 75, c * 54);
  g[X]();
  jc(g, e[0]);
  g[Ia](0, c * -10);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 75, c * 54);
  g[G](c * 79, c * 21, c * 131, c * 13, c * 153, c * 36);
  g[G](c * 204, c * 27, c * 221, c * 52, c * 216, c * 83);
  g[G](c * 241, c * 103, c * 232, c * 138, c * 214, c * 147);
  g[G](c * 223, c * 184, c * 201, c * 200, c * 175, c * 199);
  g[G](c * 156, c * 218, c * 135, c * 222, c * 114, c * 203);
  g[G](c * 62, c * 213, c * 66, c * 189, c * 59, c * 170);
  g[G](c * 27, c * 164, c * 31, c * 134, c * 38, c * 123);
  g[G](c * 11, c * 80, c * 51, c * 52, c * 75, c * 54);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 121, c * 102);
  g[G](c * 111, c * 80, c * 110, c * 66, c * 108, c * 51);
  g[G](c * 119, c * 65, c * 129, c * 85, c * 135, c * 99);
  g[G](c * 142, c * 67, c * 146, c * 60, c * 152, c * 50);
  g[G](c * 154, c * 71, c * 152, c * 85, c * 149, c * 104);
  g[G](c * 166, c * 88, c * 175, c * 83, c * 188, c * 78);
  g[G](c * 179, c * 91, c * 170, c * 103, c * 160, c * 112);
  g[G](c * 186, c * 107, c * 191, c * 107, c * 204, c * 108);
  g[G](c * 195, c * 114, c * 179, c * 120, c * 163, c * 123);
  g[G](c * 183, c * 130, c * 186, c * 135, c * 192, c * 140);
  g[G](c * 179, c * 141, c * 164, c * 139, c * 153, c * 135);
  g[G](c * 158, c * 145, c * 163, c * 159, c * 165, c * 177);
  g[G](c * 154, c * 166, c * 145, c * 153, c * 138, c * 139);
  g[G](c * 133, c * 155, c * 125, c * 170, c * 117, c * 182);
  g[G](c * 116, c * 160, c * 119, c * 151, c * 124, c * 138);
  g[G](c * 107, c * 150, c * 95, c * 156, c * 82, c * 159);
  g[G](c * 94, c * 140, c * 101, c * 136, c * 113, c * 128);
  g[G](c * 78, c * 123, c * 75, c * 121, c * 67, c * 118);
  g[G](c * 85, c * 112, c * 94, c * 112, c * 111, c * 113);
  g[G](c * 89, c * 97, c * 85, c * 93, c * 78, c * 82);
  g[G](c * 92, c * 85, c * 101, c * 90, c * 121, c * 102);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 128, c * 103);
  g[G](c * 111, c * 112, c * 117, c * 136, c * 140, c * 130);
  g[G](c * 151, c * 126, c * 156, c * 115, c * 155, c * 107);
  g[G](c * 155, c * 96, c * 154, c * 94, c * 148, c * 94);
  g[G](c * 141, c * 94, c * 146, c * 104, c * 136, c * 104);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  return f;
}
function sc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 70;
  f.height = c * 70;
  g[ua] = 0.5;
  lc(g, c * 26, c * 26, c * 9);
  jc(g, e[0]);
  lc(g, c * 56, c * 36, c * 9);
  jc(g, e[1]);
  lc(g, c * 40, c * 50, c * 9);
  jc(g, e[2]);
  g[ua] = 1;
  lc(g, c * 26, c * 26, c * 5);
  jc(g, e[0]);
  lc(g, c * 56, c * 36, c * 5);
  jc(g, e[1]);
  lc(g, c * 40, c * 50, c * 5);
  jc(g, e[2]);
  return f;
}
function tc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 22;
  f.height = c * 22;
  g[ua] = 0.4;
  lc(g, c * 11, c * 11, c * 10);
  jc(g, e[0]);
  g[ua] = 0.7;
  lc(g, c * 11, c * 11, c * 7);
  jc(g, e[0]);
  g[ua] = 1;
  lc(g, c * 11, c * 11, c * 4);
  jc(g, e[0]);
  return f;
}
function uc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 248;
  f.height = c * 247;
  i[g]();
  i[Ia](c * 69.5, c * 145);
  kc(i, c * -8.5, c * -63, c * 17, c * 127, c * 1);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 183, c * 145);
  kc(i, c * -8, c * -63, c * 16, c * 126, c * 1);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 123.5, c * 62.5);
  i[ra](6.28);
  kc(i, c * -84.5, c * -25.5, c * 169, c * 51, c * 5);
  i[Qa]();
  jc(i, e[2], e[1], c * 6);
  i[g]();
  i[Ia](c * 123.5, c * 118);
  i[ra](6.24);
  kc(i, c * -85.5, c * -24, c * 169, c * 48, c * 5);
  i[Qa]();
  jc(i, e[3], e[1], c * 6);
  i[g]();
  i[Ia](c * 122, c * 177.5);
  i[ra](6.32);
  kc(i, c * -84, c * -23.5, c * 169, c * 47, c * 5);
  i[Qa]();
  jc(i, e[2], e[1], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 37, c * 157);
  i[G](c * 49, c * 160, c * 49, c * 160, c * 61, c * 163);
  i[G](c * 49.5, c * 165.5, c * 49.5, c * 165.5, c * 38, c * 168);
  i[X]();
  jc(i, e[1]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 205, c * 175);
  i[G](c * 192.5, c * 180, c * 192.5, c * 180, c * 180, c * 185);
  i[G](c * 193, c * 188, c * 193, c * 188, c * 206, c * 191);
  i[X]();
  jc(i, e[1]);
  return f;
}
function vc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 248;
  f.height = c * 247;
  i[g]();
  i[Ia](c * 182, c * 120);
  kc(i, c * -8, c * -67, c * 16, c * 134, c * 1);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 68.5, c * 127.5);
  kc(i, c * -8.5, c * -70.5, c * 17, c * 141, c * 1);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 123.5, c * 68);
  kc(i, c * -82.5, c * -24, c * 165, c * 48, c * 4);
  i[Qa]();
  jc(i, e[2], e[1], c * 6);
  i[g]();
  i[Ia](c * 123, c * 179.5);
  kc(i, c * -83, c * -24.5, c * 166, c * 49, c * 4);
  i[Qa]();
  jc(i, e[2], e[1], c * 6);
  i[g]();
  i[Ia](c * 123.5, c * 123.5);
  i[ra](6.24);
  kc(i, c * -82.5, c * -24.5, c * 165, c * 49, c * 4);
  i[Qa]();
  jc(i, e[3], e[1], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 204, c * 112);
  i[G](c * 149, c * 121.5, c * 96, c * 130, c * 94, c * 131);
  i[G](c * 149.5, c * 127.5, c * 149.5, c * 127.5, c * 205, c * 124);
  i[X]();
  jc(i, e[1]);
  return f;
}
function wc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 248;
  f.height = c * 247;
  i[g]();
  i[Ia](c * 183, c * 107);
  kc(i, c * -8, c * -70.5, c * 16, c * 141, c * 1);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 69.5, c * 110);
  kc(i, c * -8.5, c * -71, c * 17, c * 143, c * 1);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 123.5, c * 181);
  kc(i, c * -84.5, c * -26, c * 169, c * 52, c * 5);
  i[Qa]();
  jc(i, e[2], e[1], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 41, c * 95);
  i[G](c * 105, c * 96, c * 113, c * 99, c * 134, c * 102);
  i[G](c * 147, c * 106, c * 173, c * 100, c * 207, c * 105);
  i[G](c * 210, c * 105, c * 207, c * 140, c * 207, c * 154);
  i[G](c * 123.5, c * 151.5, c * 123.5, c * 151.5, c * 40, c * 149);
  i[G](c * 37, c * 145, c * 39, c * 95, c * 41, c * 96);
  i[X]();
  jc(i, e[2], e[1], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 68, c * 75);
  i[G](c * 54, c * 72.5, c * 54, c * 72.5, c * 40, c * 70);
  i[G](c * 38, c * 46, c * 40, c * 46, c * 53, c * 46);
  i[G](c * 201, c * 41, c * 201, c * 41, c * 201, c * 42);
  i[G](c * 211, c * 40, c * 208, c * 53, c * 208, c * 72);
  i[G](c * 209, c * 91, c * 210, c * 96, c * 194, c * 94);
  i[G](c * 119, c * 97, c * 119, c * 97, c * 44, c * 100);
  i[G](c * 39, c * 99, c * 40, c * 96, c * 40, c * 80);
  i[G](c * 54, c * 77.5, c * 54, c * 77.5, c * 68, c * 75);
  i[X]();
  jc(i, e[3], e[1], c * 6);
  return f;
}
function xc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 191;
  f.height = c * 153;
  i[ua] = 0.5;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 97.49996948242188, c * 95.12844848632812);
  kc(i, c * -62.5, c * -41.5, c * 125, c * 83, c * 20);
  i[Qa]();
  jc(i, e[0], e[0], c * 4);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 97.49996948242188, c * 95.12844848632812);
  kc(i, c * -62.5, c * -41.5, c * 125, c * 83, c * 20);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[Sa] = "destination-out";
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 26.999969482421875, c * 50.850677490234375);
  i[G](c * 46.499969482421875, c * 64.85067749023438, c * 46.499969482421875, c * 64.85067749023438, c * 65.99996948242188, c * 78.85067749023438);
  i[G](c * 80.99996948242188, c * 87.85067749023438, c * 105.99996948242188, c * 82.85067749023438, c * 114.99996948242188, c * 80.85067749023438);
  i[G](c * 130.99996948242188, c * 69.85067749023438, c * 152.99996948242188, c * 70.85067749023438, c * 166.99996948242188, c * 67.85067749023438);
  i[G](c * 156.99996948242188, c * 52.850677490234375, c * 156.99996948242188, c * 52.850677490234375, c * 146.99996948242188, c * 37.850677490234375);
  i[G](c * 101.49996948242188, c * 37.350677490234375, c * 101.49996948242188, c * 37.350677490234375, c * 55.999969482421875, c * 36.850677490234375);
  i[X]();
  jc(i, e[2], e[3], c * 4);
  i[Sa] = "source-over";
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 40.999969482421875, c * 59.850677490234375);
  i[G](c * 41.999969482421875, c * 50.850677490234375, c * 47.999969482421875, c * 47.850677490234375, c * 56.999969482421875, c * 49.850677490234375);
  i[G](c * 65.99996948242188, c * 41.850677490234375, c * 76.99996948242188, c * 42.850677490234375, c * 90.99996948242188, c * 47.850677490234375);
  i[G](c * 94.99996948242188, c * 42.850677490234375, c * 104.99996948242188, c * 42.850677490234375, c * 114.99996948242188, c * 47.850677490234375);
  i[G](c * 131.99996948242188, c * 42.850677490234375, c * 142.99996948242188, c * 48.850677490234375, c * 145.99996948242188, c * 56.850677490234375);
  i[G](c * 160.99996948242188, c * 63.850677490234375, c * 154.99996948242188, c * 69.85067749023438, c * 155.99996948242188, c * 70.85067749023438);
  i[G](c * 141.99996948242188, c * 71.85067749023438, c * 141.99996948242188, c * 71.85067749023438, c * 127.99996948242188, c * 72.85067749023438);
  i[G](c * 110.99996948242188, c * 83.85067749023438, c * 107.99996948242188, c * 82.85067749023438, c * 90.99996948242188, c * 85.85067749023438);
  i[G](c * 70.99996948242188, c * 83.85067749023438, c * 64.99996948242188, c * 79.85067749023438, c * 53.999969482421875, c * 70.85067749023438);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 33.999969482421875, c * 65.85067749023438);
  i[G](c * 36.999969482421875, c * 59.850677490234375, c * 34.999969482421875, c * 60.850677490234375, c * 39.999969482421875, c * 59.850677490234375);
  i[G](c * 47.999969482421875, c * 61.850677490234375, c * 62.999969482421875, c * 76.85067749023438, c * 74.99996948242188, c * 79.85067749023438);
  i[G](c * 93.99996948242188, c * 85.85067749023438, c * 111.99996948242188, c * 83.85067749023438, c * 124.99996948242188, c * 70.85067749023438);
  i[G](c * 129.99996948242188, c * 67.85067749023438, c * 145.99996948242188, c * 65.85067749023438, c * 159.99996948242188, c * 67.85067749023438);
  i[G](c * 159.99996948242188, c * 71.85067749023438, c * 159.99996948242188, c * 71.85067749023438, c * 159.99996948242188, c * 75.85067749023438);
  i[G](c * 146.99996948242188, c * 72.85067749023438, c * 144.99996948242188, c * 75.85067749023438, c * 143.99996948242188, c * 82.85067749023438);
  i[G](c * 144.99996948242188, c * 86.85067749023438, c * 140.99996948242188, c * 90.85067749023438, c * 137.99996948242188, c * 86.85067749023438);
  i[G](c * 139.99996948242188, c * 72.85067749023438, c * 135.99996948242188, c * 72.85067749023438, c * 133.99996948242188, c * 82.85067749023438);
  i[G](c * 127.99996948242188, c * 88.85067749023438, c * 124.99996948242188, c * 70.85067749023438, c * 116.99996948242188, c * 86.85067749023438);
  i[G](c * 110.99996948242188, c * 91.85067749023438, c * 96.99996948242188, c * 81.85067749023438, c * 89.99996948242188, c * 90.85067749023438);
  i[G](c * 85.99996948242188, c * 92.85067749023438, c * 81.99996948242188, c * 95.85067749023438, c * 76.99996948242188, c * 86.85067749023438);
  i[G](c * 67.99996948242188, c * 93.85067749023438, c * 67.99996948242188, c * 91.85067749023438, c * 60.999969482421875, c * 79.85067749023438);
  i[G](c * 53.999969482421875, c * 71.85067749023438, c * 52.999969482421875, c * 72.85067749023438, c * 46.999969482421875, c * 77.85067749023438);
  i[G](c * 41.999969482421875, c * 78.85067749023438, c * 42.999969482421875, c * 69.85067749023438, c * 33.999969482421875, c * 65.85067749023438);
  i[X]();
  jc(i, e[5], e[6], c * 4);
  lc(i, c * 68, c * 111.29513549804688, c * 15);
  jc(i, e[7], e[8], c * 4);
  lc(i, c * 123, c * 111.29510498046875, c * 15);
  jc(i, e[7], e[8], c * 4);
  lc(i, c * 63, c * 106, c * 5);
  jc(i, e[9]);
  lc(i, c * 118, c * 106, c * 5);
  jc(i, e[9]);
  return f;
}
function yc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 191;
  f.height = c * 153;
  i[ua] = 0.5;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 96.49996948242188, c * 66.79510498046875);
  i[ra](0);
  kc(i, c * -79.5, c * -48.5, c * 159, c * 97, c * 22);
  i[Qa]();
  jc(i, e[0], e[0], c * 4);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 96.49996948242188, c * 66.79510498046875);
  i[ra](0);
  kc(i, c * -79.5, c * -48.5, c * 159, c * 97, c * 22);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[Ia](c * 2, 0);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 119, c * 28);
  i[G](c * 119, c * 22, c * 119, c * 20, c * 122, c * 16);
  i[G](c * 149, c * 39, c * 149, c * 39, c * 176, c * 63);
  i[G](c * 176, c * 75, c * 176, c * 75, c * 175, c * 88);
  i[G](c * 174, c * 90, c * 174, c * 90, c * 172, c * 93);
  i[G](c * 171, c * 101, c * 169, c * 109, c * 164, c * 113);
  i[G](c * 163, c * 104, c * 163, c * 104, c * 162, c * 95);
  i[G](c * 155, c * 105, c * 155, c * 105, c * 147, c * 116);
  i[G](c * 87, c * 114, c * 87, c * 114, c * 26, c * 112);
  i[G](c * 27, c * 106, c * 27, c * 106, c * 27, c * 101);
  i[G](c * 24, c * 104, c * 24, c * 104, c * 20, c * 108);
  i[G](c * 17, c * 103, c * 20, c * 86, c * 23, c * 72);
  i[G](c * 15, c * 74, c * 14, c * 78, c * 12, c * 83);
  i[G](c * 12, c * 65, c * 12, c * 54, c * 16, c * 42);
  i[G](c * 14, c * 39, c * 14, c * 39, c * 12, c * 36);
  i[G](c * 16, c * 33, c * 16, c * 33, c * 19, c * 30);
  i[G](c * 18, c * 27, c * 18, c * 27, c * 17, c * 25);
  i[G](c * 24, c * 24, c * 31, c * 21, c * 29, c * 19);
  i[G](c * 37, c * 25, c * 37, c * 25, c * 45, c * 31);
  i[G](c * 40, c * 23, c * 40, c * 21, c * 42, c * 16);
  i[G](c * 74, c * 16, c * 74, c * 16, c * 106, c * 16);
  i[G](c * 113, c * 21, c * 113, c * 21, c * 119, c * 26);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  return f;
}
function zc(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 191;
  e.height = c * 153;
  f[g]();
  f[Ia](c * 96.49996948242188, c * 66.79510498046875);
  kc(f, c * -79.5, c * -48.5, c * 159, c * 97, c * 22);
  f[Qa]();
  jc(f, d[0], d[0], c * 4);
  f[Ia](c * 2, 0);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 119, c * 28);
  f[G](c * 119, c * 22, c * 119, c * 20, c * 122, c * 16);
  f[G](c * 149, c * 39, c * 149, c * 39, c * 176, c * 63);
  f[G](c * 176, c * 75, c * 176, c * 75, c * 175, c * 88);
  f[G](c * 174, c * 90, c * 174, c * 90, c * 172, c * 93);
  f[G](c * 171, c * 101, c * 169, c * 109, c * 164, c * 113);
  f[G](c * 163, c * 104, c * 163, c * 104, c * 162, c * 95);
  f[G](c * 155, c * 105, c * 155, c * 105, c * 147, c * 116);
  f[G](c * 87, c * 114, c * 87, c * 114, c * 26, c * 112);
  f[G](c * 27, c * 106, c * 27, c * 106, c * 27, c * 101);
  f[G](c * 24, c * 104, c * 24, c * 104, c * 20, c * 108);
  f[G](c * 17, c * 103, c * 20, c * 86, c * 23, c * 72);
  f[G](c * 15, c * 74, c * 14, c * 78, c * 12, c * 83);
  f[G](c * 12, c * 65, c * 12, c * 54, c * 16, c * 42);
  f[G](c * 14, c * 39, c * 14, c * 39, c * 12, c * 36);
  f[G](c * 16, c * 33, c * 16, c * 33, c * 19, c * 30);
  f[G](c * 18, c * 27, c * 18, c * 27, c * 17, c * 25);
  f[G](c * 24, c * 24, c * 31, c * 21, c * 29, c * 19);
  f[G](c * 37, c * 25, c * 37, c * 25, c * 45, c * 31);
  f[G](c * 40, c * 23, c * 40, c * 21, c * 42, c * 16);
  f[G](c * 74, c * 16, c * 74, c * 16, c * 106, c * 16);
  f[G](c * 113, c * 21, c * 113, c * 21, c * 119, c * 26);
  f[X]();
  jc(f, d[0], d[0], c * 4);
  f[g]();
  f[Ia](c * 97.49996948242188, c * 95.12844848632812);
  kc(f, c * -62.5, c * -41.5, c * 125, c * 83, c * 20);
  f[Qa]();
  jc(f, d[0], d[0], c * 4);
  return e;
}
function Ac(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = c * 40;
  var m = c * 40;
  f.width = k;
  f.height = m;
  var n = c * k / 2;
  var o = c * m / 2;
  var q = c * 15;
  i[g]();
  i[Ia](n, o);
  i[ua] = 1;
  lc(i, 0, 0, q);
  jc(i, e[0]);
  q = c * 5;
  n = c * 2;
  o = c * 1;
  i[Ia](n, o);
  i[ua] = 1;
  lc(i, 0, 0, q);
  jc(i, e[1]);
  i[Qa]();
  return f;
}
function Bc(c, d, e, f) {
  var g = document[p]("canvas");
  var i = g[T]("2d");
  g.width = c * 185;
  g.height = c * 240;
  i[ua] = 0.5;
  i[Ia](0, c * 10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 137);
  i[G](c * 60, c * 87, c * 68, c * 66, c * 92, c * 67);
  i[G](c * 115, c * 64, c * 129, c * 97, c * 137, c * 136);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 53, c * 181);
  i[G](c * 30, c * 164, c * 19, c * 150, c * 11, c * 136);
  i[G](c * 28, c * 121, c * 38, c * 132, c * 48, c * 150);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 63, c * 208);
  i[G](c * 75, c * 224, c * 86, c * 228, c * 93, c * 228);
  i[G](c * 104, c * 229, c * 116, c * 219, c * 122, c * 205);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 130, c * 170);
  i[G](c * 146, c * 125, c * 156, c * 126, c * 173, c * 137);
  i[G](c * 167, c * 151, c * 143, c * 174, c * 131, c * 183);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 39, c * 140);
  i[G](c * 75, c * 126, c * 113, c * 127, c * 143, c * 137);
  i[G](c * 141, c * 186, c * 130, c * 202, c * 113, c * 214);
  i[G](c * 85, c * 228, c * 56, c * 219, c * 48, c * 173);
  i[G](c * 40, c * 148, c * 43, c * 145, c * 39, c * 140);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 137);
  i[G](c * 60, c * 87, c * 68, c * 66, c * 92, c * 67);
  i[G](c * 115, c * 64, c * 129, c * 97, c * 137, c * 136);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 53, c * 181);
  i[G](c * 30, c * 164, c * 19, c * 150, c * 11, c * 136);
  i[G](c * 28, c * 121, c * 38, c * 132, c * 48, c * 150);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 63, c * 208);
  i[G](c * 75, c * 224, c * 86, c * 228, c * 93, c * 228);
  i[G](c * 104, c * 229, c * 116, c * 219, c * 122, c * 205);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 130, c * 170);
  i[G](c * 146, c * 125, c * 156, c * 126, c * 173, c * 137);
  i[G](c * 167, c * 151, c * 143, c * 174, c * 131, c * 183);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 39, c * 140);
  i[G](c * 75, c * 126, c * 113, c * 127, c * 143, c * 137);
  i[G](c * 141, c * 186, c * 130, c * 202, c * 113, c * 214);
  i[G](c * 85, c * 228, c * 56, c * 219, c * 48, c * 173);
  i[G](c * 40, c * 148, c * 43, c * 145, c * 39, c * 140);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 59, c * 99);
  i[G](c * 71, c * 68, c * 81, c * 68, c * 94, c * 67);
  i[G](c * 105, c * 66, c * 119, c * 75, c * 123, c * 96);
  i[G](c * 104, c * 91, c * 101, c * 94, c * 94, c * 97);
  i[G](c * 76, c * 92, c * 73, c * 93, c * 60, c * 99);
  i[X]();
  jc(i, e[3], e[2], c * 4);
  if (f === 0) {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 47, c * 149);
    i[G](c * 43, c * 140, c * 48, c * 130, c * 59, c * 127);
    i[G](c * 77, c * 126, c * 90, c * 131, c * 131, c * 127);
    i[G](c * 143, c * 130, c * 144, c * 143, c * 132, c * 154);
    i[G](c * 90, c * 152, c * 90, c * 152, c * 48, c * 150);
    i[X]();
    jc(i, e[1]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 40, c * 139);
    i[G](c * 48, c * 113, c * 76, c * 119, c * 91, c * 126);
    i[G](c * 117, c * 113, c * 135, c * 117, c * 144, c * 134);
    i[G](c * 144, c * 138, c * 144, c * 138, c * 144, c * 142);
    i[G](c * 128, c * 124, c * 108, c * 124, c * 91, c * 136);
    i[G](c * 59, c * 124, c * 50, c * 137, c * 42, c * 148);
    i[X]();
    jc(i, e[3], e[2], c * 4);
  } else {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 41, c * 139);
    i[G](c * 53, c * 117, c * 69, c * 118, c * 92, c * 127);
    i[G](c * 124, c * 111, c * 136, c * 121, c * 143, c * 136);
    i[G](c * 142, c * 144, c * 142, c * 144, c * 141, c * 152);
    i[G](c * 128, c * 131, c * 113, c * 138, c * 92, c * 145);
    i[G](c * 57, c * 133, c * 57, c * 147, c * 44, c * 154);
    i[X]();
    jc(i, e[3], e[2], c * 4);
  }
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 90, c * 95);
  i[G](c * 99, c * 82, c * 98, c * 58, c * 99, c * 40);
  i[G](c * 90, c * 38, c * 89, c * 34, c * 92, c * 17);
  i[G](c * 92, c * 5, c * 83, c * 16, c * 78, c * 29);
  i[G](c * 72, c * 59, c * 87, c * 81, c * 89, c * 87);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 90, c * 86);
  i[G](c * 95, c * 74, c * 95, c * 62, c * 95, c * 43);
  i[G](c * 84, c * 37, c * 86, c * 34, c * 89, c * 16);
  i[G](c * 75, c * 29, c * 80, c * 58, c * 90, c * 85);
  i[X]();
  jc(i, e[1], e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 92, c * 117);
  i[G](c * 98, c * 87, c * 93, c * 78, c * 85, c * 76);
  i[G](c * 85.5, c * 79.5, c * 85.5, c * 79.5, c * 86, c * 83);
  i[G](c * 84, c * 85.5, c * 84, c * 85.5, c * 82, c * 88);
  i[G](c * 90, c * 93, c * 89, c * 100, c * 92, c * 117);
  i[X]();
  jc(i, e[1], e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 92, c * 175);
  i[G](c * 95, c * 135, c * 98, c * 125, c * 109, c * 121);
  i[G](c * 106, c * 114, c * 104, c * 114, c * 102, c * 113);
  i[G](c * 103, c * 106, c * 104, c * 103, c * 107, c * 96);
  i[G](c * 74, c * 108, c * 86, c * 157, c * 92, c * 174);
  i[X]();
  jc(i, e[1], e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 48, c * 169);
  i[G](c * 42, c * 187, c * 50, c * 193, c * 59, c * 198);
  i[X]();
  jc(i, undefined, e[2], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 136, c * 171);
  i[G](c * 139, c * 186, c * 138, c * 191, c * 124, c * 199);
  i[X]();
  jc(i, undefined, e[2], c * 4);
  lc(i, c * 63, c * 180, c * 15.231546211727817);
  jc(i, e[4]);
  lc(i, c * 121, c * 181, c * 15.652475842498529);
  jc(i, e[4]);
  lc(i, c * 58, c * 175, c * 5.656854249492381);
  jc(i, e[2]);
  lc(i, c * 116, c * 175, c * 5.656854249492381);
  jc(i, e[2]);
  return g;
}
function Cc(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 185;
  e.height = c * 240;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 44, c * 137);
  f[G](c * 60, c * 87, c * 68, c * 66, c * 92, c * 67);
  f[G](c * 115, c * 64, c * 129, c * 97, c * 137, c * 136);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 53, c * 181);
  f[G](c * 30, c * 164, c * 19, c * 150, c * 11, c * 136);
  f[G](c * 28, c * 121, c * 38, c * 132, c * 48, c * 150);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 63, c * 208);
  f[G](c * 75, c * 224, c * 86, c * 228, c * 93, c * 228);
  f[G](c * 104, c * 229, c * 116, c * 219, c * 122, c * 205);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 130, c * 170);
  f[G](c * 146, c * 125, c * 156, c * 126, c * 173, c * 137);
  f[G](c * 167, c * 151, c * 143, c * 174, c * 131, c * 183);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 39, c * 140);
  f[G](c * 75, c * 126, c * 113, c * 127, c * 143, c * 137);
  f[G](c * 141, c * 186, c * 130, c * 202, c * 113, c * 214);
  f[G](c * 85, c * 228, c * 56, c * 219, c * 48, c * 173);
  f[G](c * 40, c * 148, c * 43, c * 145, c * 39, c * 140);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 90, c * 95);
  f[G](c * 99, c * 82, c * 98, c * 58, c * 99, c * 40);
  f[G](c * 90, c * 38, c * 89, c * 34, c * 92, c * 17);
  f[G](c * 92, c * 5, c * 83, c * 16, c * 78, c * 29);
  f[G](c * 72, c * 59, c * 87, c * 81, c * 89, c * 87);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 90, c * 86);
  f[G](c * 95, c * 74, c * 95, c * 62, c * 95, c * 43);
  f[G](c * 84, c * 37, c * 86, c * 34, c * 89, c * 16);
  f[G](c * 75, c * 29, c * 80, c * 58, c * 90, c * 85);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 92, c * 117);
  f[G](c * 98, c * 87, c * 93, c * 78, c * 85, c * 76);
  f[G](c * 85.5, c * 79.5, c * 85.5, c * 79.5, c * 86, c * 83);
  f[G](c * 84, c * 85.5, c * 84, c * 85.5, c * 82, c * 88);
  f[G](c * 90, c * 93, c * 89, c * 100, c * 92, c * 117);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 92, c * 175);
  f[G](c * 95, c * 135, c * 98, c * 125, c * 109, c * 121);
  f[G](c * 106, c * 114, c * 104, c * 114, c * 102, c * 113);
  f[G](c * 103, c * 106, c * 104, c * 103, c * 107, c * 96);
  f[G](c * 74, c * 108, c * 86, c * 157, c * 92, c * 174);
  f[X]();
  jc(f, d[0]);
  return e;
}
function Dc(c) {
  var d = document[p]("canvas");
  var e = d[T]("2d");
  var f = c * 200;
  var g = c * 200;
  d.width = f;
  d.height = g;
  var i = Ed(0.35, false, ["#0e3022", "#0b8052", "#077b49"]);
  e[r](i, 10, 10);
  i = Fd(0.9, false, ["#3d2a6e", "#8255b5"]);
  e[r](i, 21, 20);
  i = Fd(0.9, false, ["#3d2a6e", "#8255b5"]);
  e[r](i, 38, 28);
  i = Fd(0.9, false, ["#3d2a6e", "#8255b5"]);
  e[r](i, 15, 37);
  i = Fd(0.9, false, ["#3d2a6e", "#8255b5"]);
  e[r](i, 32, 45);
  return d;
}
function Ec(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = c * 100;
  var i = c * 100;
  var k = g / 2;
  var m = i / 2;
  e.width = g;
  e.height = i;
  var n = c * 5;
  var o = c * 28;
  var q = n / 2;
  var r = o / 2;
  f[Ia](k, m);
  for (var s = 0; s < 4; s++) {
    kc(f, -q, -r, n, o, c * 2);
    f[ra](Math[D] / 4);
    jc(f, d);
  }
  f[J](0, 0, c * 10, 0, Math[D] * 2);
  jc(f, d);
  f[Sa] = "destination-out";
  lc(f, 0, 0, c * 4);
  f[xa]();
  return e;
}
function Fc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 32;
  var k = c * 32;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  var o = c * 5;
  var q = c * 28;
  var r = o / 2;
  var s = q / 2;
  g[Ia](c * 0, c * 0);
  g[Ia](m, n);
  if (e == 1) {
    lc(g, 0, 0, c * 10);
    jc(g, d[2], d[2], c * 3);
    for (var t = 0; t < 4; t++) {
      kc(g, -r, -s, o, q, c * 2);
      g[ra](Math[D] / 4);
      jc(g, d[2], d[2], c * 4);
    }
  }
  lc(g, 0, 0, c * 10);
  jc(g, d[0], d[1], c * 1.5);
  for (t = 0; t < 4; t++) {
    kc(g, -r, -s, o, q, c * 2);
    g[ra](Math[D] / 4);
    jc(g, d[0], d[1], c * 1.5);
  }
  lc(g, 0, 0, c * 10);
  jc(g, d[0]);
  lc(g, 0, 0, c * 4);
  jc(g, d[2], d[1], c * 1.5);
  g[Sa] = "destination-out";
  lc(g, 0, 0, c * 4);
  jc(g, d[0], d[1], c * 2);
  g[Sa] = "source-over";
  lc(g, 0, 0, c * 4);
  jc(g, undefined, d[1], c * 2);
  return f;
}
function Gc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = (v = c * 125) / 2;
  var k = (z = c * 95) / 2;
  var m = c * 10;
  var n = c * 8;
  var o = c * 112;
  var q = c * 82;
  var s = o / 2;
  var t = q / 2;
  var u = c * 4;
  f.width = v;
  f.height = z;
  g[Ia](i - c * 4, k + c * 4);
  g[ua] = d ? 0.5 : 1;
  kc(g, -s, -t, o, q, m);
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, -n);
  kc(g, -s, -t, o, q, m);
  jc(g, e[1], e[2], u);
  var v = c * 55;
  var z = c * 45;
  m = 5;
  g[Ia](c * -40, c * -30);
  kc(g, 0, 0, v, z, m);
  jc(g, e[3]);
  var A = Ec(c * 0.7, e[3]);
  g[r](A, c * 45, c * -25);
  A = Ec(c * 0.7, e[3]);
  g[r](A, c * 45, c * 15);
  A = Ec(c * 1.2, e[3]);
  g[r](A, c * 28, c * -30);
  v = c * 15;
  z = c * 70;
  m = c * 5;
  g[Ia](c * 78, c * -5);
  kc(g, 0, 0, v, z, m);
  jc(g, e[4]);
  v = c * 9;
  z = c * 50;
  m = c * 3;
  g[Ia](c * -20, c * 20);
  g[ra](Math[D] / 5);
  g[ua] = 0.6;
  kc(g, 0, 0, v, z, m);
  jc(g, e[5]);
  g[Ia](c * -20, c * 29);
  g[ra](Math[D] / 5);
  g[ua] = 0.6;
  g[Y]();
  g[ea] = "round";
  g[K](0, 0);
  g[L](0, c * 30);
  g[L](c * 30, c * 30);
  g[X]();
  jc(g, null, e[5], c * 8);
  return f;
}
function Hc(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var i = c * 85;
  var k = c * 115;
  var m = c * 6;
  e.width = i;
  e.height = k;
  f[Ia](c * -130, c * -60 + m);
  f[ua] = 0.5;
  f[Y]();
  f[G](c * 190, c * 87, c * 201, c * 59, c * 208, c * 64);
  f[G](c * 213, c * 68, c * 204, c * 93, c * 195, c * 109);
  f[G](c * 195, c * 109, c * 202, c * 124, c * 191, c * 141);
  f[G](c * 182, c * 151, c * 164, c * 155, c * 148, c * 144);
  f[G](c * 136, c * 135, c * 138, c * 111, c * 145, c * 104);
  f[G](c * 140, c * 92, c * 131, c * 67, c * 138, c * 63);
  f[G](c * 145, c * 61, c * 153, c * 82, c * 155, c * 96);
  f[G](c * 167, c * 91, c * 178, c * 92, c * 187, c * 98);
  f[X]();
  jc(f, d[0]);
  f[Ia](0, -m);
  f[ua] = 1;
  f[Y]();
  f[G](c * 190, c * 87, c * 201, c * 59, c * 208, c * 64);
  f[G](c * 213, c * 68, c * 204, c * 93, c * 195, c * 109);
  f[G](c * 195, c * 109, c * 202, c * 124, c * 191, c * 141);
  f[G](c * 182, c * 151, c * 164, c * 155, c * 148, c * 144);
  f[G](c * 136, c * 135, c * 138, c * 111, c * 145, c * 104);
  f[G](c * 140, c * 92, c * 131, c * 67, c * 138, c * 63);
  f[G](c * 145, c * 61, c * 153, c * 82, c * 155, c * 96);
  f[G](c * 167, c * 91, c * 178, c * 92, c * 187, c * 98);
  f[X]();
  jc(f, d[1], d[2], 4);
  var n = c * 155;
  var o = c * 133;
  var q = c * 10;
  var r = c * 3;
  var s = n + c * -3;
  var t = o + c * -5;
  f[g]();
  f[Ia](n, o);
  f[ua] = 1;
  lc(f, 0, 0, q);
  jc(f, d[3]);
  f[Qa]();
  f[g]();
  f[Ia](s, t);
  f[ua] = 1;
  lc(f, 0, 0, r);
  jc(f, d[4]);
  f[Qa]();
  f[g]();
  f[Ia](n + c * 27, o);
  f[ua] = 1;
  lc(f, 0, 0, q);
  jc(f, d[3]);
  f[Qa]();
  f[g]();
  f[Ia](c * 27 + s, t);
  f[ua] = 1;
  lc(f, 0, 0, r);
  jc(f, d[4]);
  return e;
}
function Ic(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 188;
  e.height = c * 190;
  f[ua] = 0.5;
  f[Ia](0, c * 5);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 33.00567626953125, c * 95.44320678710938);
  f[G](c * 42.00567626953125, c * 87.44320678710938, c * 48.00567626953125, c * 51.443206787109375, c * 74.00567626953125, c * 47.443206787109375);
  f[G](c * 100.00567626953125, c * 42.443206787109375, c * 118.00567626953125, c * 49.443206787109375, c * 131.00567626953125, c * 55.443206787109375);
  f[G](c * 140.00567626953125, c * 70.44320678710938, c * 145.00567626953125, c * 87.44320678710938, c * 152.00567626953125, c * 94.44320678710938);
  f[G](c * 149.00567626953125, c * 99.44320678710938, c * 147.00567626953125, c * 98.44320678710938, c * 141.00567626953125, c * 101.44320678710938);
  f[G](c * 147.00567626953125, c * 108.44320678710938, c * 147.00567626953125, c * 111.44320678710938, c * 147.00567626953125, c * 112.44320678710938);
  f[G](c * 143.00567626953125, c * 112.44320678710938, c * 141.00567626953125, c * 112.44320678710938, c * 137.00567626953125, c * 111.44320678710938);
  f[G](c * 138.00567626953125, c * 117.44320678710938, c * 138.00567626953125, c * 120.44320678710938, c * 138.00567626953125, c * 124.44320678710938);
  f[G](c * 125.00567626953125, c * 107.44320678710938, c * 121.00567626953125, c * 124.44320678710938, c * 110.00567626953125, c * 141.44320678710938);
  f[G](c * 102.00567626953125, c * 158.44320678710938, c * 89.00567626953125, c * 158.44320678710938, c * 80.00567626953125, c * 144.44320678710938);
  f[G](c * 61.00567626953125, c * 111.44320678710938, c * 56.00567626953125, c * 117.44320678710938, c * 48.00567626953125, c * 120.44320678710938);
  f[G](c * 46.00567626953125, c * 118.44320678710938, c * 47.00567626953125, c * 112.44320678710938, c * 48.00567626953125, c * 107.44320678710938);
  f[G](c * 43.00567626953125, c * 111.44320678710938, c * 40.00567626953125, c * 111.44320678710938, c * 37.00567626953125, c * 110.44320678710938);
  f[G](c * 39.50567626953125, c * 104.94320678710938, c * 39.50567626953125, c * 104.94320678710938, c * 42.00567626953125, c * 99.44320678710938);
  f[G](c * 33.00567626953125, c * 99.44320678710938, c * 33.00567626953125, c * 98.44320678710938, c * 33.00567626953125, c * 96.44320678710938);
  f[X]();
  jc(f, d[0], d[0], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 60.00567626953125, c * 99.35227966308594);
  f[G](c * 70.00567626953125, c * 82.35227966308594, c * 85.00567626953125, c * 86.35227966308594, c * 87.00567626953125, c * 97.35227966308594);
  f[G](c * 89.00567626953125, c * 101.35227966308594, c * 88.00567626953125, c * 105.35227966308594, c * 87.00567626953125, c * 110.35227966308594);
  f[G](c * 89.00567626953125, c * 111.35227966308594, c * 91.00567626953125, c * 112.35227966308594, c * 93.00567626953125, c * 115.35227966308594);
  f[G](c * 96.00567626953125, c * 111.35227966308594, c * 99.00567626953125, c * 111.35227966308594, c * 100.00567626953125, c * 110.35227966308594);
  f[G](c * 98.00567626953125, c * 92.35227966308594, c * 103.00567626953125, c * 86.35227966308594, c * 113.00567626953125, c * 89.35227966308594);
  f[G](c * 122.00567626953125, c * 92.35227966308594, c * 123.00567626953125, c * 94.35227966308594, c * 126.00567626953125, c * 98.35227966308594);
  f[G](c * 124.00567626953125, c * 102.35227966308594, c * 123.00567626953125, c * 103.35227966308594, c * 121.00567626953125, c * 104.35227966308594);
  f[G](c * 124.00567626953125, c * 105.35227966308594, c * 126.00567626953125, c * 107.35227966308594, c * 129.00567626953125, c * 111.35227966308594);
  f[G](c * 115.00567626953125, c * 122.35227966308594, c * 113.00567626953125, c * 145.35227966308594, c * 100.00567626953125, c * 152.35227966308594);
  f[G](c * 91.00567626953125, c * 158.35227966308594, c * 83.00567626953125, c * 149.35227966308594, c * 76.00567626953125, c * 138.35227966308594);
  f[G](c * 67.00567626953125, c * 114.35227966308594, c * 63.00567626953125, c * 113.35227966308594, c * 59.00567626953125, c * 111.35227966308594);
  f[G](c * 62.00567626953125, c * 107.35227966308594, c * 64.00567626953125, c * 105.35227966308594, c * 66.00567626953125, c * 104.35227966308594);
  f[G](c * 63.00567626953125, c * 100.35227966308594, c * 62.00567626953125, c * 100.35227966308594, c * 60.00567626953125, c * 99.35227966308594);
  f[X]();
  jc(f, d[0], d[0], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 51.00567626953125, c * 72.53409576416016);
  f[G](c * 48.00567626953125, c * 56.534095764160156, c * 48.00567626953125, c * 49.534095764160156, c * 54.00567626953125, c * 35.534095764160156);
  f[G](c * 58.00567626953125, c * 26.534095764160156, c * 65.00567626953125, c * 27.534095764160156, c * 73.00567626953125, c * 40.534095764160156);
  f[G](c * 81.00567626953125, c * 49.534095764160156, c * 82.00567626953125, c * 50.534095764160156, c * 83.00567626953125, c * 51.534095764160156);
  f[G](c * 77.00567626953125, c * 71.53409576416016, c * 64.00567626953125, c * 75.53409576416016, c * 51.00567626953125, c * 72.53409576416016);
  f[X]();
  jc(f, d[0], d[0], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 105.00567626953125, c * 50.53410339355469);
  f[G](c * 112.00567626953125, c * 48.53410339355469, c * 125.00567626953125, c * 21.534103393554688, c * 132.00567626953125, c * 33.53410339355469);
  f[G](c * 138.00567626953125, c * 42.53410339355469, c * 140.00567626953125, c * 64.53410339355469, c * 136.00567626953125, c * 75.53410339355469);
  f[X]();
  jc(f, d[0], d[0], c * 2);
  f[ua] = 1;
  f[Ia](0, c * -5);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 33.00567626953125, c * 95.44320678710938);
  f[G](c * 42.00567626953125, c * 87.44320678710938, c * 48.00567626953125, c * 51.443206787109375, c * 74.00567626953125, c * 47.443206787109375);
  f[G](c * 100.00567626953125, c * 42.443206787109375, c * 118.00567626953125, c * 49.443206787109375, c * 131.00567626953125, c * 55.443206787109375);
  f[G](c * 140.00567626953125, c * 70.44320678710938, c * 145.00567626953125, c * 87.44320678710938, c * 152.00567626953125, c * 94.44320678710938);
  f[G](c * 149.00567626953125, c * 99.44320678710938, c * 147.00567626953125, c * 98.44320678710938, c * 141.00567626953125, c * 101.44320678710938);
  f[G](c * 147.00567626953125, c * 108.44320678710938, c * 147.00567626953125, c * 111.44320678710938, c * 147.00567626953125, c * 112.44320678710938);
  f[G](c * 143.00567626953125, c * 112.44320678710938, c * 141.00567626953125, c * 112.44320678710938, c * 137.00567626953125, c * 111.44320678710938);
  f[G](c * 138.00567626953125, c * 117.44320678710938, c * 138.00567626953125, c * 120.44320678710938, c * 138.00567626953125, c * 124.44320678710938);
  f[G](c * 125.00567626953125, c * 107.44320678710938, c * 121.00567626953125, c * 124.44320678710938, c * 110.00567626953125, c * 141.44320678710938);
  f[G](c * 102.00567626953125, c * 158.44320678710938, c * 89.00567626953125, c * 158.44320678710938, c * 80.00567626953125, c * 144.44320678710938);
  f[G](c * 61.00567626953125, c * 111.44320678710938, c * 56.00567626953125, c * 117.44320678710938, c * 48.00567626953125, c * 120.44320678710938);
  f[G](c * 46.00567626953125, c * 118.44320678710938, c * 47.00567626953125, c * 112.44320678710938, c * 48.00567626953125, c * 107.44320678710938);
  f[G](c * 43.00567626953125, c * 111.44320678710938, c * 40.00567626953125, c * 111.44320678710938, c * 37.00567626953125, c * 110.44320678710938);
  f[G](c * 39.50567626953125, c * 104.94320678710938, c * 39.50567626953125, c * 104.94320678710938, c * 42.00567626953125, c * 99.44320678710938);
  f[G](c * 33.00567626953125, c * 99.44320678710938, c * 33.00567626953125, c * 98.44320678710938, c * 33.00567626953125, c * 96.44320678710938);
  f[X]();
  jc(f, d[1], d[2], c * 3);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 60.00567626953125, c * 99.35227966308594);
  f[G](c * 70.00567626953125, c * 82.35227966308594, c * 85.00567626953125, c * 86.35227966308594, c * 87.00567626953125, c * 97.35227966308594);
  f[G](c * 89.00567626953125, c * 101.35227966308594, c * 88.00567626953125, c * 105.35227966308594, c * 87.00567626953125, c * 110.35227966308594);
  f[G](c * 89.00567626953125, c * 111.35227966308594, c * 91.00567626953125, c * 112.35227966308594, c * 93.00567626953125, c * 115.35227966308594);
  f[G](c * 96.00567626953125, c * 111.35227966308594, c * 99.00567626953125, c * 111.35227966308594, c * 100.00567626953125, c * 110.35227966308594);
  f[G](c * 98.00567626953125, c * 92.35227966308594, c * 103.00567626953125, c * 86.35227966308594, c * 113.00567626953125, c * 89.35227966308594);
  f[G](c * 122.00567626953125, c * 92.35227966308594, c * 123.00567626953125, c * 94.35227966308594, c * 126.00567626953125, c * 98.35227966308594);
  f[G](c * 124.00567626953125, c * 102.35227966308594, c * 123.00567626953125, c * 103.35227966308594, c * 121.00567626953125, c * 104.35227966308594);
  f[G](c * 124.00567626953125, c * 105.35227966308594, c * 126.00567626953125, c * 107.35227966308594, c * 129.00567626953125, c * 111.35227966308594);
  f[G](c * 115.00567626953125, c * 122.35227966308594, c * 113.00567626953125, c * 145.35227966308594, c * 100.00567626953125, c * 152.35227966308594);
  f[G](c * 91.00567626953125, c * 158.35227966308594, c * 83.00567626953125, c * 149.35227966308594, c * 76.00567626953125, c * 138.35227966308594);
  f[G](c * 67.00567626953125, c * 114.35227966308594, c * 63.00567626953125, c * 113.35227966308594, c * 59.00567626953125, c * 111.35227966308594);
  f[G](c * 62.00567626953125, c * 107.35227966308594, c * 64.00567626953125, c * 105.35227966308594, c * 66.00567626953125, c * 104.35227966308594);
  f[G](c * 63.00567626953125, c * 100.35227966308594, c * 62.00567626953125, c * 100.35227966308594, c * 60.00567626953125, c * 99.35227966308594);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 33.00567626953125, c * 95.44320678710938);
  f[G](c * 42.00567626953125, c * 87.44320678710938, c * 48.00567626953125, c * 51.443206787109375, c * 74.00567626953125, c * 47.443206787109375);
  f[G](c * 100.00567626953125, c * 42.443206787109375, c * 118.00567626953125, c * 49.443206787109375, c * 131.00567626953125, c * 55.443206787109375);
  f[G](c * 140.00567626953125, c * 70.44320678710938, c * 145.00567626953125, c * 87.44320678710938, c * 152.00567626953125, c * 94.44320678710938);
  f[G](c * 149.00567626953125, c * 99.44320678710938, c * 147.00567626953125, c * 98.44320678710938, c * 141.00567626953125, c * 101.44320678710938);
  f[G](c * 147.00567626953125, c * 108.44320678710938, c * 147.00567626953125, c * 111.44320678710938, c * 147.00567626953125, c * 112.44320678710938);
  f[G](c * 143.00567626953125, c * 112.44320678710938, c * 141.00567626953125, c * 112.44320678710938, c * 137.00567626953125, c * 111.44320678710938);
  f[G](c * 138.00567626953125, c * 117.44320678710938, c * 138.00567626953125, c * 120.44320678710938, c * 138.00567626953125, c * 124.44320678710938);
  f[G](c * 125.00567626953125, c * 107.44320678710938, c * 121.00567626953125, c * 124.44320678710938, c * 110.00567626953125, c * 141.44320678710938);
  f[G](c * 102.00567626953125, c * 158.44320678710938, c * 89.00567626953125, c * 158.44320678710938, c * 80.00567626953125, c * 144.44320678710938);
  f[G](c * 61.00567626953125, c * 111.44320678710938, c * 56.00567626953125, c * 117.44320678710938, c * 48.00567626953125, c * 120.44320678710938);
  f[G](c * 46.00567626953125, c * 118.44320678710938, c * 47.00567626953125, c * 112.44320678710938, c * 48.00567626953125, c * 107.44320678710938);
  f[G](c * 43.00567626953125, c * 111.44320678710938, c * 40.00567626953125, c * 111.44320678710938, c * 37.00567626953125, c * 110.44320678710938);
  f[G](c * 39.50567626953125, c * 104.94320678710938, c * 39.50567626953125, c * 104.94320678710938, c * 42.00567626953125, c * 99.44320678710938);
  f[G](c * 33.00567626953125, c * 99.44320678710938, c * 33.00567626953125, c * 98.44320678710938, c * 33.00567626953125, c * 96.44320678710938);
  f[X]();
  jc(f, undefined, d[2], c * 3);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 51.00567626953125, c * 72.53409576416016);
  f[G](c * 48.00567626953125, c * 56.534095764160156, c * 48.00567626953125, c * 49.534095764160156, c * 54.00567626953125, c * 35.534095764160156);
  f[G](c * 58.00567626953125, c * 26.534095764160156, c * 65.00567626953125, c * 27.534095764160156, c * 73.00567626953125, c * 40.534095764160156);
  f[G](c * 81.00567626953125, c * 49.534095764160156, c * 82.00567626953125, c * 50.534095764160156, c * 83.00567626953125, c * 51.534095764160156);
  jc(f, d[1], d[2], c * 3);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 105.00567626953125, c * 50.53410339355469);
  f[G](c * 112.00567626953125, c * 48.53410339355469, c * 125.00567626953125, c * 21.534103393554688, c * 132.00567626953125, c * 33.53410339355469);
  f[G](c * 138.00567626953125, c * 42.53410339355469, c * 140.00567626953125, c * 64.53410339355469, c * 136.00567626953125, c * 75.53410339355469);
  jc(f, d[1], d[2], c * 3);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 57.00567626953125, c * 68.53410339355469);
  f[G](c * 63.00567626953125, c * 69.53410339355469, c * 69.00567626953125, c * 66.53410339355469, c * 73.00567626953125, c * 60.53410339355469);
  f[G](c * 66.00567626953125, c * 47.53410339355469, c * 61.00567626953125, c * 42.53410339355469, c * 58.00567626953125, c * 49.53410339355469);
  f[G](c * 56.00567626953125, c * 59.53410339355469, c * 56.00567626953125, c * 64.53410339355469, c * 57.00567626953125, c * 67.53410339355469);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 115.00567626953125, c * 59.715911865234375);
  f[G](c * 119.00567626953125, c * 48.715911865234375, c * 126.00567626953125, c * 41.715911865234375, c * 129.00567626953125, c * 48.715911865234375);
  f[G](c * 131.00567626953125, c * 56.715911865234375, c * 133.00567626953125, c * 71.71591186523438, c * 127.00567626953125, c * 68.71591186523438);
  f[G](c * 120.00567626953125, c * 67.71591186523438, c * 114.00567626953125, c * 59.715911865234375, c * 116.00567626953125, c * 58.715911865234375);
  f[X]();
  jc(f, d[3]);
  lc(f, c * 77, c * 107, c * 6);
  jc(f, d[2]);
  lc(f, c * 110, c * 107, c * 6);
  jc(f, d[2]);
  lc(f, c * 75, c * 105, c * 3);
  jc(f, d[4]);
  lc(f, c * 108, c * 105, c * 3);
  jc(f, d[4]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 88.00567626953125, c * 141.4431915283203);
  f[G](c * 93.00567626953125, c * 137.4431915283203, c * 96.00567626953125, c * 138.4431915283203, c * 100.00567626953125, c * 141.4431915283203);
  f[G](c * 103.00567626953125, c * 143.4431915283203, c * 101.00567626953125, c * 149.4431915283203, c * 95.00567626953125, c * 148.4431915283203);
  f[G](c * 85.00567626953125, c * 148.4431915283203, c * 86.00567626953125, c * 145.4431915283203, c * 88.00567626953125, c * 142.4431915283203);
  f[X]();
  jc(f, d[1]);
  return e;
}
function Jc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 55;
  var k = c * 55;
  var m = c * 8;
  f.width = i;
  f.height = k;
  g[Ia](c * -65, c * -55 + m);
  g[ua] = 1;
  g[Y]();
  g[K](c * 95, c * 60);
  g[G](c * 107, c * 62, c * 110, c * 73, c * 107, c * 79);
  g[G](c * 104, c * 85, c * 85, c * 93, c * 81, c * 88);
  g[G](c * 74, c * 80, c * 85, c * 60, c * 95, c * 60);
  g[X]();
  jc(g, e[0], e[1], 3);
  g[ua] = 1;
  g[Y]();
  g[K](c * 91, c * 70);
  g[G](c * 91, c * 75, c * 100, c * 76, c * 100, c * 73);
  g[G](c * 100, c * 69, c * 89, c * 65, c * 91, c * 70);
  g[X]();
  jc(g, e[2], e[3], 3);
  return f;
}
function Kc(c, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 238;
  f.height = c * 230;
  i[Ia](c * -93, c * -110 + c * 5);
  i[ua] = 0.3;
  lc(i, c * 213.5, c * 256.75, c * 75);
  jc(i, e[5]);
  lc(i, c * 213.5, c * 175.75, c * 25);
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 156.5, c * 137.75);
  i[G](c * 170.5, c * 173.75, c * 195.5, c * 177.75, c * 209.5, c * 177.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 217.5, c * 178.75);
  i[G](c * 251.5, c * 177.75, c * 263.5, c * 153.75, c * 270.5, c * 140.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 130.5, c * 124.75);
  i[G](c * 153.5, c * 185.75, c * 198.5, c * 185.75, c * 213.5, c * 185.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 214.5, c * 183.75);
  i[G](c * 265.5, c * 192.75, c * 293.5, c * 141.75, c * 297.5, c * 124.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 107.5, c * 213.75);
  i[G](c * 151.5, c * 190.75, c * 198.5, c * 184.75, c * 210.5, c * 184.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 212.5, c * 187.75);
  i[G](c * 258.5, c * 182.75, c * 286.5, c * 194.75, c * 314.5, c * 206.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 102.5, c * 258.75);
  i[G](c * 142.5, c * 200.75, c * 193.5, c * 194.75, c * 211.5, c * 185.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 214.5, c * 192.75);
  i[G](c * 276.5, c * 194.75, c * 306.5, c * 233.75, c * 316.5, c * 246.75);
  i[m] = c * 17;
  i[S] = e[5];
  i[M]();
  i[Ia](0, -5);
  i[ua] = 1;
  lc(i, c * 213.5, c * 256.75, c * 75);
  jc(i, e[3]);
  lc(i, c * 213.5, c * 175.75, c * 25);
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 219.5, c * 158.75);
  i[G](c * 226.5, c * 159.75, c * 227.5, c * 147.75, c * 219.5, c * 145.75);
  i[X]();
  i[m] = c * 10;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 210.5, c * 160.75);
  i[G](c * 203.5, c * 159.75, c * 199.5, c * 146.75, c * 210.5, c * 145.75);
  i[X]();
  i[m] = c * 10;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 219.5, c * 158.75);
  i[G](c * 226.5, c * 159.75, c * 227.5, c * 147.75, c * 219.5, c * 145.75);
  i[X]();
  i[d] = e[0];
  i[xa]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 210.5, c * 160.75);
  i[G](c * 203.5, c * 159.75, c * 199.5, c * 146.75, c * 210.5, c * 145.75);
  i[X]();
  i[d] = e[0];
  i[xa]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 156.5, c * 137.75);
  i[G](c * 170.5, c * 173.75, c * 195.5, c * 177.75, c * 209.5, c * 177.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 217.5, c * 178.75);
  i[G](c * 251.5, c * 177.75, c * 263.5, c * 153.75, c * 270.5, c * 140.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 130.5, c * 124.75);
  i[G](c * 153.5, c * 185.75, c * 198.5, c * 185.75, c * 213.5, c * 185.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 214.5, c * 183.75);
  i[G](c * 265.5, c * 192.75, c * 293.5, c * 141.75, c * 297.5, c * 124.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 107.5, c * 213.75);
  i[G](c * 151.5, c * 190.75, c * 198.5, c * 184.75, c * 210.5, c * 184.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 212.5, c * 187.75);
  i[G](c * 258.5, c * 182.75, c * 286.5, c * 194.75, c * 314.5, c * 206.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 102.5, c * 258.75);
  i[G](c * 142.5, c * 200.75, c * 193.5, c * 194.75, c * 211.5, c * 185.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 214.5, c * 192.75);
  i[G](c * 276.5, c * 194.75, c * 306.5, c * 233.75, c * 316.5, c * 246.75);
  i[m] = c * 17;
  i[S] = e[3];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 156.5, c * 137.75);
  i[G](c * 170.5, c * 173.75, c * 195.5, c * 177.75, c * 209.5, c * 177.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 217.5, c * 178.75);
  i[G](c * 251.5, c * 177.75, c * 263.5, c * 153.75, c * 270.5, c * 140.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 130.5, c * 124.75);
  i[G](c * 153.5, c * 185.75, c * 198.5, c * 185.75, c * 213.5, c * 185.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 214.5, c * 183.75);
  i[G](c * 265.5, c * 192.75, c * 293.5, c * 141.75, c * 297.5, c * 124.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 107.5, c * 213.75);
  i[G](c * 151.5, c * 190.75, c * 198.5, c * 184.75, c * 210.5, c * 184.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 212.5, c * 187.75);
  i[G](c * 258.5, c * 182.75, c * 286.5, c * 194.75, c * 314.5, c * 206.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 102.5, c * 258.75);
  i[G](c * 142.5, c * 200.75, c * 193.5, c * 194.75, c * 211.5, c * 185.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 214.5, c * 192.75);
  i[G](c * 276.5, c * 194.75, c * 306.5, c * 233.75, c * 316.5, c * 246.75);
  i[m] = c * 8;
  i[S] = e[0];
  i[M]();
  lc(i, c * 213.5, c * 256.75, c * 70);
  jc(i, e[0]);
  lc(i, c * 213.5, c * 175.75, c * 20);
  jc(i, e[0]);
  lc(i, c * 222, c * 166, c * 5);
  i[d] = e[2];
  i[xa]();
  lc(i, c * 205, c * 166, c * 5);
  i[d] = e[2];
  i[xa]();
  lc(i, c * 206.2, c * 167, c * 2.5);
  i[d] = e[4];
  i[xa]();
  lc(i, c * 223.2, c * 167, c * 2.5);
  i[d] = e[4];
  i[xa]();
  i[g]();
  i[Ia](c * 213.5, c * 293.75);
  i[ra](0.76);
  kc(i, c * -22, c * -21, c * 44, c * 42, c * 6);
  i[Qa]();
  i[d] = e[1];
  i[xa]();
  i[g]();
  i[Ia](c * 212.5, c * 258.25);
  i[ra](0.8);
  kc(i, c * -15, c * -14.5, c * 30, c * 29, c * 6);
  i[Qa]();
  i[d] = e[1];
  i[xa]();
  return f;
}
function Lc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  i[g]();
  i[Ia](c * 202.5, c * 147.5);
  kc(i, c * -96.5, c * -21.5, c * 193, c * 193, c * 0);
  i[Qa]();
  jc(i, d[0], d[1], c * 12);
  i[g]();
  i[Ia](c * 202.5, c * 190.5);
  kc(i, c * 96.5, c * -21.5, c * -193, c * 43, c * 0);
  i[Qa]();
  jc(i, d[2], d[1], c * 12);
  i[g]();
  i[g]();
  i[Ia](c * 202.5, c * 233.5);
  kc(i, c * -96.5, c * -20.5, c * 193, c * 41, c * 0);
  i[Qa]();
  jc(i, d[3], d[1], c * 12);
  i[g]();
  i[Ia](c * 202.5, c * 275);
  kc(i, c * 96.5, c * -21, c * -193, c * 42, c * 0);
  i[Qa]();
  jc(i, d[0], d[1], c * 12);
  i[g]();
  i[Ia](c * 201, c * 212);
  i[ra](8.64);
  kc(i, c * -116, c * -22, c * 232, c * 44, c * 10);
  i[Qa]();
  jc(i, d[3], d[1], c * 12);
  i[g]();
  i[Ia](c * 203.5, c * 121.5);
  kc(i, c * -115.5, c * -20.5, c * 231, c * 41, c * 10);
  i[Qa]();
  jc(i, d[3], d[1], c * 12);
  i[g]();
  i[Ia](c * 203.5, c * 299);
  kc(i, c * -115.5, c * -20, c * 231, c * 40, c * 10);
  i[Qa]();
  jc(i, d[3], d[1], c * 12);
  i[g]();
  i[Ia](c * 298.5, c * 210);
  kc(i, c * -20.5, c * -109, c * 41, c * 218, c * 10);
  i[Qa]();
  jc(i, d[3], d[1], c * 12);
  i[g]();
  i[Ia](c * 108.5, c * 210);
  kc(i, c * -20.5, c * -109, c * 41, c * 218, c * 10);
  i[Qa]();
  jc(i, d[3], d[1], c * 12);
  i[g]();
  i[Ia](c * 204, c * 121.5);
  kc(i, c * -92, c * -9.5, c * 184, c * 19, c * 10);
  i[Qa]();
  jc(i, d[3], d[3], c * 10);
  i[g]();
  i[Ia](c * 197, c * 299);
  kc(i, c * 85, c * -9, c * -170, c * 18, c * 10);
  i[Qa]();
  jc(i, d[3], d[3], c * 10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 94, c * 317);
  i[G](c * 110.5, c * 299.5, c * 110.5, c * 299.5, c * 127, c * 282);
  i[X]();
  jc(i, undefined, d[1], c * 12);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 279, c * 142);
  i[G](c * 296.5, c * 125.5, c * 296.5, c * 125.5, c * 314, c * 109);
  i[X]();
  jc(i, undefined, d[1], c * 12);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 93, c * 106);
  i[G](c * 110.5, c * 124, c * 110.5, c * 124, c * 128, c * 142);
  i[X]();
  jc(i, undefined, d[1], c * 12);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 281, c * 282);
  i[G](c * 296, c * 297.5, c * 296, c * 297.5, c * 311, c * 313);
  i[X]();
  jc(i, undefined, d[1], c * 12);
  if (e == 0) {
    i[I](2, 2);
    i[Ia](c * -7, c * 55);
    i[ra](-0.5);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 60, c * 47);
    i[G](c * 81, c * 46, c * 85, c * 47, c * 83, c * 63);
    i[G](c * 83, c * 72, c * 83, c * 75, c * 72, c * 73);
    i[G](c * 68, c * 80, c * 69, c * 82, c * 66, c * 73);
    i[G](c * 62, c * 81, c * 61, c * 82, c * 59, c * 73);
    i[G](c * 54, c * 81, c * 55, c * 81, c * 52, c * 74);
    i[G](c * 38, c * 76, c * 41, c * 74, c * 40, c * 66);
    i[G](c * 38, c * 45, c * 39, c * 49, c * 59, c * 47);
    i[X]();
    jc(i, d[4], d[4], c * 5);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 68, c * 54);
    i[G](c * 75, c * 54, c * 77, c * 62, c * 71, c * 64);
    i[G](c * 62, c * 65, c * 63, c * 54, c * 68, c * 54);
    i[X]();
    jc(i, d[3]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 50, c * 55);
    i[G](c * 57, c * 55, c * 58, c * 65, c * 52, c * 65);
    i[G](c * 44, c * 66, c * 44, c * 54, c * 50, c * 55);
    i[X]();
    jc(i, d[3]);
  } else if (e == 1) {
    i[I](0.6, 0.6);
    i[Ia](c * 185, c * 165);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 108, c * 56);
    i[G](c * 136, c * 58, c * 203, c * 69, c * 234, c * 75);
    i[G](c * 246, c * 77, c * 247, c * 78, c * 245, c * 90);
    i[G](c * 238, c * 143, c * 228, c * 197, c * 214, c * 259);
    i[G](c * 212, c * 267, c * 209, c * 270, c * 189, c * 268);
    i[G](c * 142, c * 264, c * 106, c * 260, c * 75, c * 253);
    i[G](c * 60, c * 250, c * 64, c * 250, c * 66, c * 221);
    i[G](c * 71, c * 168, c * 87, c * 95, c * 98, c * 67);
    i[G](c * 101, c * 57, c * 103, c * 56, c * 106, c * 56);
    i[X]();
    jc(i, d[4], d[4], c * 20);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 112, c * 72);
    i[G](c * 132, c * 73, c * 227, c * 85, c * 226, c * 91);
    i[G](c * 231, c * 89, c * 217, c * 196, c * 200, c * 250);
    i[G](c * 196, c * 254, c * 175, c * 249, c * 166, c * 249);
    i[G](c * 91, c * 241, c * 82, c * 236, c * 83, c * 232);
    i[G](c * 90, c * 144, c * 108, c * 71, c * 111, c * 72);
    i[X]();
    jc(i, undefined, d[0], c * 13);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 132, c * 117);
    i[G](c * 171, c * 86, c * 191, c * 101, c * 188, c * 134);
    i[G](c * 185, c * 154, c * 170, c * 158, c * 153, c * 158);
    i[G](c * 143, c * 172, c * 146, c * 180, c * 147, c * 193);
    jc(i, undefined, d[0], c * 20);
    lc(i, c * 142, c * 221, c * 16.1245154965971);
    jc(i, d[0]);
  }
  return f;
}
function Mc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 101, c * 255);
  g[G](c * 113, c * 243, c * 179, c * 210, c * 219, c * 196);
  g[G](c * 252, c * 203, c * 288, c * 215, c * 318, c * 233);
  g[G](c * 304, c * 254, c * 258, c * 273, c * 215, c * 296);
  g[G](c * 161, c * 287, c * 119, c * 270, c * 102, c * 257);
  g[X]();
  jc(g, e[0], e[1], c * 14);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 99, c * 258);
  g[G](c * 99, c * 272.5, c * 99, c * 272.5, c * 99, c * 287);
  g[G](c * 166, c * 319, c * 193, c * 320, c * 212, c * 324);
  g[G](c * 292, c * 286, c * 312, c * 271, c * 319, c * 263);
  g[G](c * 320, c * 249, c * 320, c * 241, c * 318, c * 234);
  g[G](c * 300, c * 254, c * 254, c * 277, c * 216, c * 294);
  g[G](c * 190, c * 296, c * 135, c * 276, c * 102, c * 258);
  g[X]();
  jc(g, e[2], e[1], c * 14);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 212, c * 323);
  g[G](c * 211.5, c * 310.5, c * 211.5, c * 310.5, c * 211, c * 298);
  g[X]();
  jc(g, undefined, e[1], c * 14);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 212, c * 210);
  g[G](c * 286, c * 210, c * 331, c * 254, c * 212, c * 276);
  g[G](c * 108, c * 276, c * 112, c * 222, c * 213, c * 208);
  g[X]();
  jc(g, e[3], e[4], c * 14);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 98, c * 200);
  g[G](c * 126, c * 216, c * 177, c * 232, c * 213, c * 237);
  g[G](c * 266, c * 218, c * 288, c * 209, c * 318, c * 190);
  g[G](c * 269, c * 164, c * 239, c * 158, c * 214, c * 153);
  g[G](c * 148, c * 172, c * 131, c * 182, c * 98, c * 200);
  g[X]();
  jc(g, e[0], e[1], c * 14);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 97, c * 204);
  g[G](c * 97, c * 215.5, c * 97, c * 215.5, c * 97, c * 227);
  g[G](c * 148, c * 250, c * 179, c * 256, c * 212, c * 262);
  g[G](c * 268, c * 244, c * 281, c * 233, c * 318, c * 214);
  g[G](c * 318, c * 203, c * 318, c * 203, c * 318, c * 192);
  g[G](c * 250, c * 225, c * 236, c * 231, c * 214, c * 239);
  g[G](c * 158, c * 228, c * 126, c * 215, c * 99, c * 201);
  g[X]();
  jc(g, e[2], e[1], c * 14);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 212, c * 260);
  g[G](c * 212, c * 251.5, c * 212, c * 251.5, c * 212, c * 243);
  g[X]();
  jc(g, undefined, e[1], c * 14);
  lc(g, c * 161, c * 201, c * 13);
  jc(g, e[5]);
  lc(g, c * 216, c * 205, c * 8.06225774829855);
  jc(g, e[5]);
  lc(g, c * 216, c * 175, c * 6.708203932499369);
  jc(g, e[5]);
  lc(g, c * 271, c * 191, c * 5.0990195135927845);
  jc(g, e[5]);
  lc(g, c * 206, c * 180, c * 11.180339887498949);
  jc(g, e[5]);
  return f;
}
function Nc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  i[g]();
  i[Ia](c * 85, c * 237);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 54.585977194239184, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 178, c * 238);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 52.53573932334064, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 270, c * 239);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 53.58058329516393, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 222, c * 312);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 52.53573932334064, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 317, c * 159);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 57.63465889766331, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 223.5, c * 139.0625);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 51.66236541235796, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 132.5, c * 137.0625);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 52.009614495783374, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 178.5, c * 58.0625);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 53.16013544000805, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 177.5, c * 216.0625);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 50, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 84.5, c * 215.0625);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 54, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 319.5, c * 138.0625);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 55.08175741568164, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 269.5, c * 216.0625);
  i[ra](1.5707963267948966);
  nc(i, 6, c * 54.589376255824725, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[g]();
  i[Ia](c * 221.5, c * 293.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 49.49747468305833, c * 1);
  i[Qa]();
  jc(i, e[1], e[2], c * 12);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 221.5, c * 342.0625);
  i[G](c * 221.5, c * 350.5625, c * 221.5, c * 350.5625, c * 221.5, c * 359.0625);
  i[X]();
  jc(i, undefined, e[2], c * 12);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 84.5, c * 270.0625);
  i[G](c * 84.5, c * 277.0625, c * 84.5, c * 277.0625, c * 84.5, c * 284.0625);
  i[X]();
  jc(i, undefined, e[2], c * 12);
  i[g]();
  i[Ia](c * 84.5, c * 215.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 177.5, c * 215.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 222.5, c * 294.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 270.5, c * 216.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 320.5, c * 134.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 224.5, c * 138.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 133.5, c * 137.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 178.5, c * 56.0625);
  i[ra](0.5235987755982988);
  nc(i, 6, c * 30, c * 15);
  i[Qa]();
  jc(i, e[3]);
  return f;
}
function Oc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 52;
  f.height = c * 65;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 9.833328247070312, c * 12.078125);
  g[G](c * 15.333328247070312, c * 28.078125, c * 15.333328247070312, c * 28.078125, c * 20.833328247070312, c * 44.078125);
  g[X]();
  jc(g, undefined, e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 7.8333282470703125, c * 20.078125);
  g[G](c * 16.833328247070312, c * 32.578125, c * 16.833328247070312, c * 32.578125, c * 25.833328247070312, c * 45.078125);
  g[X]();
  jc(g, undefined, e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 23.833328247070312, c * 26.078125);
  g[G](c * 25.833328247070312, c * 11.078125, c * 16.833328247070312, c * 8.078125, c * 14.833328247070312, c * 7.078125);
  g[G](c * 11.833328247070312, c * 17.078125, c * 13.833328247070312, c * 22.078125, c * 23.833328247070312, c * 27.078125);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 35.83332824707031, c * 8.078125);
  g[G](c * 34.83332824707031, c * 27.078125, c * 28.833328247070312, c * 27.078125, c * 23.833328247070312, c * 28.078125);
  g[G](c * 21.833328247070312, c * 14.078125, c * 26.833328247070312, c * 11.078125, c * 35.83332824707031, c * 8.078125);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 25.833328247070312, c * 39.078125);
  g[G](c * 20.833328247070312, c * 29.078125, c * 14.833328247070312, c * 27.078125, c * 5.8333282470703125, c * 29.078125);
  g[G](c * 9.833328247070312, c * 39.078125, c * 16.833328247070312, c * 42.078125, c * 25.833328247070312, c * 40.078125);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 42.83332824707031, c * 23.078125);
  g[G](c * 35.83332824707031, c * 35.078125, c * 31.833328247070312, c * 37.078125, c * 25.833328247070312, c * 36.078125);
  g[G](c * 25.833328247070312, c * 24.078125, c * 33.83332824707031, c * 21.078125, c * 42.83332824707031, c * 23.078125);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 23.833328247070312, c * 24.078125);
  g[G](c * 20.833328247070312, c * 34.078125, c * 23.833328247070312, c * 40.078125, c * 27.833328247070312, c * 43.078125);
  g[G](c * 37.33332824707031, c * 28.078125, c * 37.33332824707031, c * 28.078125, c * 46.83332824707031, c * 13.078125);
  jc(g, undefined, e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 38.83332824707031, c * 14.078125);
  g[G](c * 34.83332824707031, c * 24.078125, c * 34.83332824707031, c * 24.078125, c * 30.833328247070312, c * 34.078125);
  jc(g, undefined, e[1], c * 2);
  return f;
}
function Pc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 170;
  f.height = c * 173;
  i[Ia](c * 5, c * 5);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 86.25, c * 84.953125);
  i[ra](0.32);
  nc(i, 7, c * 42.15447781671598, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 86.25, c * 84.953125);
  i[ra](0.32);
  nc(i, 7, c * 42.15447781671598, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 86.25, c * 84.953125);
  i[ra](0.28);
  nc(i, 7, c * 30.463092423455635, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 86.25, c * 84.953125);
  i[ra](0.28);
  nc(i, 7, c * 30.463092423455635, c * 10);
  i[Qa]();
  jc(i, e[3], e[4], c * 4);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  lc(i, c * 86.25, c * 84.953125, c * 18.867962264113206);
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  lc(i, c * 86.25, c * 84.953125, c * 18.867962264113206);
  jc(i, e[5], e[6], c * 4);
  return f;
}
function Qc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 170;
  f.height = c * 173;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 85.25, c * 82.953125);
  g[G](c * 98.25, c * 46.453125, c * 98.25, c * 46.453125, c * 111.25, c * 9.953125);
  g[X]();
  jc(g, undefined, e[0], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 111.25, c * 8.953125);
  g[G](c * 117.75, c * 12.453125, c * 117.75, c * 12.453125, c * 124.25, c * 15.953125);
  g[G](c * 113.75, c * 39.953125, c * 113.75, c * 39.953125, c * 103.25, c * 63.953125);
  g[G](c * 97.75, c * 64.953125, c * 97.75, c * 64.953125, c * 92.25, c * 65.953125);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 111.25, c * 8.953125);
  g[G](c * 117.75, c * 12.453125, c * 117.75, c * 12.453125, c * 124.25, c * 15.953125);
  g[G](c * 113.75, c * 39.953125, c * 113.75, c * 39.953125, c * 103.25, c * 63.953125);
  g[G](c * 97.75, c * 64.953125, c * 97.75, c * 64.953125, c * 92.25, c * 65.953125);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 85.25, c * 82.953125);
  g[G](c * 98.25, c * 46.453125, c * 98.25, c * 46.453125, c * 111.25, c * 9.953125);
  g[X]();
  jc(g, undefined, e[6], c * 4);
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87.25, c * 84.953125);
  g[G](c * 123.75, c * 100.453125, c * 123.75, c * 100.453125, c * 160.25, c * 115.953125);
  g[X]();
  jc(g, undefined, e[0], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 160.25, c * 114.953125);
  g[G](c * 156.25, c * 122.453125, c * 156.25, c * 122.453125, c * 152.25, c * 129.953125);
  g[G](c * 130.25, c * 117.953125, c * 130.25, c * 117.953125, c * 108.25, c * 105.953125);
  g[G](c * 107.25, c * 98.953125, c * 107.25, c * 98.953125, c * 106.25, c * 91.953125);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 160.25, c * 114.953125);
  g[G](c * 156.25, c * 122.453125, c * 156.25, c * 122.453125, c * 152.25, c * 129.953125);
  g[G](c * 130.25, c * 117.953125, c * 130.25, c * 117.953125, c * 108.25, c * 105.953125);
  g[G](c * 107.25, c * 98.953125, c * 107.25, c * 98.953125, c * 106.25, c * 91.953125);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87.25, c * 84.953125);
  g[G](c * 123.75, c * 100.453125, c * 123.75, c * 100.453125, c * 160.25, c * 115.953125);
  g[X]();
  jc(g, undefined, e[6], c * 4);
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 83.25, c * 83.953125);
  g[G](c * 47.75, c * 68.453125, c * 47.75, c * 68.453125, c * 12.25, c * 52.953125);
  g[X]();
  jc(g, undefined, e[0], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 13.25, c * 53.953125);
  g[G](c * 17.25, c * 46.953125, c * 17.25, c * 46.953125, c * 21.25, c * 39.953125);
  g[G](c * 42.75, c * 52.453125, c * 42.75, c * 52.453125, c * 64.25, c * 64.953125);
  g[G](c * 64.25, c * 70.953125, c * 64.25, c * 70.953125, c * 64.25, c * 76.953125);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 13.25, c * 53.953125);
  g[G](c * 17.25, c * 46.953125, c * 17.25, c * 46.953125, c * 21.25, c * 39.953125);
  g[G](c * 42.75, c * 52.453125, c * 42.75, c * 52.453125, c * 64.25, c * 64.953125);
  g[G](c * 64.25, c * 70.953125, c * 64.25, c * 70.953125, c * 64.25, c * 76.953125);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 83.25, c * 83.953125);
  g[G](c * 47.75, c * 68.453125, c * 47.75, c * 68.453125, c * 12.25, c * 52.953125);
  g[X]();
  jc(g, undefined, e[6], c * 4);
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 84.25, c * 86.953125);
  g[G](c * 70.25, c * 123.953125, c * 70.25, c * 123.953125, c * 56.25, c * 160.953125);
  g[X]();
  jc(g, undefined, e[0], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 56.25, c * 159.953125);
  g[G](c * 49.25, c * 155.453125, c * 49.25, c * 155.453125, c * 42.25, c * 150.953125);
  g[G](c * 54.25, c * 127.953125, c * 54.25, c * 127.953125, c * 66.25, c * 104.953125);
  g[G](c * 71.25, c * 104.953125, c * 71.25, c * 104.953125, c * 76.25, c * 104.953125);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 56.25, c * 159.953125);
  g[G](c * 49.25, c * 155.453125, c * 49.25, c * 155.453125, c * 42.25, c * 150.953125);
  g[G](c * 54.25, c * 127.953125, c * 54.25, c * 127.953125, c * 66.25, c * 104.953125);
  g[G](c * 71.25, c * 104.953125, c * 71.25, c * 104.953125, c * 76.25, c * 104.953125);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 84.25, c * 86.953125);
  g[G](c * 70.25, c * 123.953125, c * 70.25, c * 123.953125, c * 56.25, c * 160.953125);
  g[X]();
  jc(g, undefined, e[6], c * 4);
  return f;
}
function Rc(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 170;
  f.height = c * 173;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 86.25, c * 84.953125);
  nc(i, 7, c * 9.848857801796104, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 86.25, c * 84.953125);
  nc(i, 7, c * 9.848857801796104, c * 5);
  i[Qa]();
  jc(i, e[8], e[9], c * 4);
  return f;
}
function Sc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 75;
  var k = c * 55;
  f.width = i;
  f.height = k;
  g[Ia](c * -30, c * -40);
  g[ua] = 1;
  g[Y]();
  g[G](c * 67, c * 56, c * 72, c * 71, c * 72, c * 71);
  g[G](c * 72, c * 71, c * 84, c * 70, c * 75, c * 82);
  g[G](c * 70, c * 88, c * 61, c * 89, c * 58, c * 89);
  g[G](c * 55, c * 89, c * 40, c * 89, c * 46, c * 77);
  g[G](c * 46, c * 77, c * 43, c * 63, c * 43, c * 63);
  g[G](c * 35, c * 61, c * 35, c * 53, c * 42, c * 47);
  g[G](c * 48, c * 42, c * 62, c * 41, c * 66, c * 43);
  g[G](c * 70, c * 45, c * 72, c * 48, c * 67, c * 56);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[G](c * 68, c * 61, c * 72, c * 76, c * 72, c * 76);
  g[G](c * 65, c * 85, c * 61, c * 85, c * 49, c * 83);
  g[G](c * 49, c * 83, c * 44, c * 63, c * 44, c * 63);
  g[G](c * 54, c * 63, c * 60, c * 63, c * 67, c * 55);
  g[X]();
  jc(g, e[1]);
  g[Y]();
  g[K](c * 69, c * 65);
  g[G](c * 70, c * 61, c * 81, c * 66, c * 86, c * 66);
  g[G](c * 90, c * 66, c * 97, c * 63, c * 97, c * 56);
  g[G](c * 97, c * 50, c * 93, c * 47, c * 88, c * 44);
  jc(g, false, e[1], 2);
  g[Y]();
  g[K](c * 50, c * 48);
  g[G](c * 43, c * 52, c * 50, c * 54, c * 51, c * 54);
  g[G](c * 54, c * 54, c * 59, c * 52, c * 59, c * 49);
  g[G](c * 59, c * 48, c * 55, c * 46, c * 50, c * 48);
  jc(g, e[2]);
  return f;
}
function Tc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 195;
  var k = c * 190;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  var o = c * 10;
  var q = c * 35;
  var r = c * 150;
  var s = q / 2;
  var t = r / 2;
  var u = c * 4;
  g[Ia](m - c * 5, n - c * 5);
  g[ra](-Math[D] / 1.25);
  g[ua] = 1;
  kc(g, -s, -t, q, r, o);
  jc(g, e[0], e[1], u);
  g[Ia](0, 0);
  g[ra](Math[D] / 3);
  g[ua] = 1;
  kc(g, -s, -t, q, r, o);
  jc(g, e[0], e[1], u);
  g[Ia](0, 5);
  kc(g, -s / 2, -t / 2, q / 2, r / 3, o - 2);
  jc(g, e[1]);
  return f;
}
function Uc(c, d, e, f, i) {
  var k = document[p]("canvas");
  var m = k[T]("2d");
  var n = c * 70;
  var o = c * 70;
  var q = c * 10;
  var s = c * 5;
  k.width = n;
  k.height = o + s;
  for (var t = 0; t < d[Oa]; t++) {
    var u = d[t];
    m[ua] = u.a;
    var v = u.f(e, false, u.c);
    m[g]();
    m[Ia](n / 2 + u.x * c, o / 2 + u.y * c);
    m[ra](u.r);
    m[r](v, -v.width / 2, -v.height / 2);
    m[Qa]();
  }
  var z = [];
  for (t = 0; t < f[Oa]; t++) {
    var A = document[p]("canvas");
    var B = A[T]("2d");
    A.width = n;
    A.height = o + s;
    B[ua] = i / 2;
    if (t == 2) {
      kc(B, 0, s, n, o, q);
    } else {
      kc(B, 0, 0, n, o + s, q);
    }
    jc(B, "#081a19");
    B[ua] = i;
    kc(B, 0, t == 2 ? s : 0, n, o, q);
    jc(B, f[t]);
    B[ua] = 1;
    if (t == 2) {
      B[r](k, 0, s);
    } else {
      B[r](k, 0, 0);
    }
    z[Na](Fb(A));
  }
  return z;
}
function Vc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 193;
  var k = c * 198;
  var m = c * 140;
  var n = c * 90;
  f.width = i;
  f.height = k;
  var o = c * 10;
  var q = c * 25;
  var r = c * 180;
  var s = q / 2;
  var t = r / 2;
  var u = c * 4;
  g[Ia](c * -25, c * 1);
  g[Ia](m, n);
  g[ra](-Math[D] / 5);
  kc(g, -s, -t, q, r, o);
  jc(g, e[0], e[1], u);
  g[Ia](c * -30, c * -25);
  g[ra](Math[D] / 3);
  kc(g, -s, -t, q, r, o);
  jc(g, e[0], e[1], u);
  g[Ia](c * 35, c * 30);
  g[ra](Math[D] / 3);
  kc(g, -s, -t, q, r, o);
  jc(g, e[0], e[1], u);
  return f;
}
function Wc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 145;
  var k = c * 145;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  var o = c * 70;
  g[Ia](m, n);
  g[ua] = 0.4;
  lc(g, 0, 0, o);
  jc(g, e[0]);
  o = c * 50;
  g[Ia](0, 0);
  g[ua] = 0.8;
  lc(g, 0, 0, o);
  jc(g, e[0]);
  o = c * 35;
  g[Ia](0, 0);
  g[ua] = 0.8;
  lc(g, 0, 0, o);
  jc(g, e[1]);
  o = c * 20;
  g[Ia](0, 0);
  g[ua] = 0.8;
  lc(g, 0, 0, o);
  jc(g, e[2]);
  return f;
}
function Xc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 135;
  var k = c * 190;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  var o = c * 10;
  var q = c * 25;
  var r = c * 180;
  var s = q / 2;
  var t = r / 2;
  var u = c * 4;
  g[Ia](m, n);
  g[ra](-Math[D] / 5);
  g[ua] = 1;
  kc(g, -s, -t, q, r, o);
  jc(g, e[0], e[1], u);
  g[Ia](0, 0);
  g[ra](Math[D] / 5);
  g[ua] = 1;
  kc(g, -s, -t, q, r, o);
  jc(g, e[0], e[1], u);
  return f;
}
function Yc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 205;
  var k = c * 205;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  var o = c * 100;
  g[Ia](m, n);
  g[ua] = 1;
  lc(g, 0, 0, o);
  jc(g, e[0]);
  return f;
}
function Zc(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 370;
  var k = c * 370;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  var o = c * 180;
  g[ua] = 0.2;
  lc(g, m, n, o);
  jc(g, e[0]);
  return f;
}
function $c(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 155;
  f.height = c * 127;
  g[ua] = 0.5;
  g[Ia](0, c * 8);
  g[Ia](c * -7, c * -20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 55, c * 68);
  g[G](c * 86, c * 64, c * 117, c * 66, c * 134, c * 68);
  g[G](c * 152, c * 69, c * 165, c * 86, c * 152, c * 104);
  g[G](c * 146, c * 87, c * 122, c * 89, c * 98, c * 90);
  g[G](c * 64, c * 89, c * 41, c * 91, c * 36, c * 106);
  g[G](c * 19, c * 92, c * 31, c * 71, c * 54, c * 69);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -8);
  g[Ia](c * 7, c * 20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 24, c * 28);
  g[G](c * 39, c * 30, c * 37, c * 31, c * 40, c * 32);
  g[G](c * 22, c * 45, c * 26, c * 58, c * 29, c * 66);
  g[G](c * 86.5, c * 65, c * 86.5, c * 65, c * 144, c * 64);
  g[G](c * 151, c * 42, c * 132, c * 20, c * 120, c * 16);
  g[G](c * 106, c * 12, c * 89, c * 0, c * 73, c * 3);
  g[G](c * 51, c * 5, c * 36, c * 20, c * 25, c * 28);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 30, c * 41);
  g[G](c * 49, c * 31, c * 53, c * 29, c * 62, c * 27);
  g[G](c * 59, c * 24, c * 56, c * 25, c * 53, c * 24);
  g[G](c * 67, c * 15, c * 84, c * 12, c * 120, c * 16);
  g[G](c * 107, c * 11, c * 96, c * 6, c * 85, c * 2);
  g[G](c * 59, c * 3, c * 54, c * 7, c * 40, c * 17);
  g[G](c * 32.5, c * 22.5, c * 32.5, c * 22.5, c * 25, c * 28);
  g[G](c * 32, c * 30, c * 32, c * 30, c * 39, c * 32);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 24, c * 28);
  g[G](c * 39, c * 30, c * 37, c * 31, c * 40, c * 32);
  g[G](c * 22, c * 45, c * 26, c * 58, c * 29, c * 66);
  g[G](c * 86.5, c * 65, c * 86.5, c * 65, c * 144, c * 64);
  g[G](c * 151, c * 42, c * 132, c * 20, c * 120, c * 16);
  g[G](c * 106, c * 12, c * 89, c * 0, c * 73, c * 3);
  g[G](c * 51, c * 5, c * 36, c * 20, c * 25, c * 28);
  g[X]();
  jc(g, undefined, e[2], c * 4);
  lc(g, c * 18, c * 38, c * 14.866068747318506);
  jc(g, e[4], e[5], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 39, c * 30);
  g[G](c * 27, c * 38, c * 25, c * 50, c * 26, c * 60);
  g[G](c * 36.5, c * 58.5, c * 36.5, c * 58.5, c * 47, c * 57);
  jc(g, e[1], e[2], c * 4);
  g[Ia](c * -7, c * -20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 27, c * 74);
  g[G](c * 38, c * 77.5, c * 38, c * 77.5, c * 49, c * 81);
  g[G](c * 54.5, c * 75.5, c * 54.5, c * 75.5, c * 60, c * 70);
  g[G](c * 64, c * 72, c * 64, c * 72, c * 68, c * 74);
  g[G](c * 80.5, c * 67.5, c * 80.5, c * 67.5, c * 93, c * 61);
  g[G](c * 104.5, c * 68, c * 104.5, c * 68, c * 116, c * 75);
  g[G](c * 120.5, c * 72.5, c * 120.5, c * 72.5, c * 125, c * 70);
  g[G](c * 129, c * 75, c * 129, c * 75, c * 133, c * 80);
  g[G](c * 145.5, c * 76.5, c * 145.5, c * 76.5, c * 158, c * 73);
  g[G](c * 158, c * 87, c * 158, c * 93, c * 155, c * 95);
  g[G](c * 152.5, c * 96, c * 152.5, c * 96, c * 150, c * 97);
  g[G](c * 121, c * 85, c * 108, c * 86, c * 93, c * 85);
  g[G](c * 64, c * 85, c * 52, c * 95, c * 38, c * 99);
  g[G](c * 36, c * 98.5, c * 36, c * 98.5, c * 34, c * 98);
  g[G](c * 25, c * 98, c * 27, c * 91, c * 27, c * 76);
  g[X]();
  jc(g, e[6], e[7], c * 6);
  return f;
}
function _c(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 155;
  f.height = c * 127;
  g[ua] = 0.5;
  g[Ia](0, c * 8);
  g[Ia](c * -7, c * -20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 55, c * 68);
  g[G](c * 86, c * 64, c * 117, c * 66, c * 134, c * 68);
  g[G](c * 152, c * 69, c * 165, c * 86, c * 152, c * 104);
  g[G](c * 146, c * 87, c * 122, c * 89, c * 98, c * 90);
  g[G](c * 64, c * 89, c * 41, c * 91, c * 36, c * 106);
  g[G](c * 19, c * 92, c * 31, c * 71, c * 54, c * 69);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -8);
  g[Ia](c * 7, c * 20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 24, c * 28);
  g[G](c * 39, c * 30, c * 37, c * 31, c * 40, c * 32);
  g[G](c * 22, c * 45, c * 26, c * 58, c * 29, c * 66);
  g[G](c * 86.5, c * 65, c * 86.5, c * 65, c * 144, c * 64);
  g[G](c * 151, c * 42, c * 132, c * 20, c * 120, c * 16);
  g[G](c * 106, c * 12, c * 89, c * 0, c * 73, c * 3);
  g[G](c * 51, c * 5, c * 36, c * 20, c * 25, c * 28);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 30, c * 41);
  g[G](c * 49, c * 31, c * 53, c * 29, c * 62, c * 27);
  g[G](c * 59, c * 24, c * 56, c * 25, c * 53, c * 24);
  g[G](c * 67, c * 15, c * 84, c * 12, c * 120, c * 16);
  g[G](c * 107, c * 11, c * 96, c * 6, c * 85, c * 2);
  g[G](c * 59, c * 3, c * 54, c * 7, c * 40, c * 17);
  g[G](c * 32.5, c * 22.5, c * 32.5, c * 22.5, c * 25, c * 28);
  g[G](c * 32, c * 30, c * 32, c * 30, c * 39, c * 32);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 24, c * 28);
  g[G](c * 39, c * 30, c * 37, c * 31, c * 40, c * 32);
  g[G](c * 22, c * 45, c * 26, c * 58, c * 29, c * 66);
  g[G](c * 86.5, c * 65, c * 86.5, c * 65, c * 144, c * 64);
  g[G](c * 151, c * 42, c * 132, c * 20, c * 120, c * 16);
  g[G](c * 106, c * 12, c * 89, c * 0, c * 73, c * 3);
  g[G](c * 51, c * 5, c * 36, c * 20, c * 25, c * 28);
  g[X]();
  jc(g, undefined, e[2], c * 4);
  lc(g, c * 18, c * 38, c * 14.866068747318506);
  jc(g, e[4], e[5], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 39, c * 30);
  g[G](c * 27, c * 38, c * 25, c * 50, c * 26, c * 60);
  g[G](c * 36.5, c * 58.5, c * 36.5, c * 58.5, c * 47, c * 57);
  jc(g, e[1], e[2], c * 4);
  g[Ia](c * -7, c * -20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 55, c * 68);
  g[G](c * 86, c * 64, c * 117, c * 66, c * 134, c * 68);
  g[G](c * 152, c * 69, c * 165, c * 86, c * 152, c * 104);
  g[G](c * 146, c * 87, c * 122, c * 89, c * 98, c * 90);
  g[G](c * 64, c * 89, c * 41, c * 91, c * 36, c * 106);
  g[G](c * 19, c * 92, c * 31, c * 71, c * 54, c * 69);
  g[X]();
  jc(g, e[4], e[5], c * 4);
  return f;
}
function ad(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = c * 220;
  var i = c * 220;
  var k = c * 32;
  var m = c * 4;
  e.width = g;
  e.height = i;
  f[Ia](g / 2, i / 2 + c * 10);
  f[ua] = 0.5;
  lc(f, 0, 0, k);
  jc(f, d[0], d[0]);
  f[Ia](0, c * -8);
  f[ua] = 1;
  lc(f, 0, 0, k);
  jc(f, d[1], d[2], m);
  return e;
}
function bd(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = c * 40;
  var i = c * 40;
  var k = c * 16;
  var m = c * 4;
  e.width = g;
  e.height = i;
  f[Ia](g / 2, i / 2);
  f[ua] = 1;
  lc(f, 0, 0, k);
  jc(f, d[0], d[1], m);
  return e;
}
function cd(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = c * 220;
  var i = c * 220;
  var k = c * 16;
  e.width = g;
  e.height = i;
  f[Ia](g / 2, i / 2);
  f[ua] = 0.5;
  lc(f, 0, 0, k);
  jc(f, d[0]);
  f[ua] = 1;
  return e;
}
function dd(c, d, e, f) {
  var i = document[p]("canvas");
  var k = i[T]("2d");
  var m = c * 210;
  var n = c * 205;
  var o = c * 30;
  var q = c * 20;
  var r = c * 200;
  var s = c * 180;
  var t = r / 2;
  var u = s / 2;
  i.width = m;
  i.height = n;
  i.width = c * 419;
  i.height = c * 412;
  if (f == 1) {
    k[g]();
    k[Ia](c * 10, c * 0);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 117.99996948242188, c * 216.40621948242188);
    k[G](c * 86.99996948242188, c * 221.40621948242188, c * 74.99996948242188, c * 217.40621948242188, c * 60.999969482421875, c * 205.40621948242188);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 114.99996948242188, c * 227.40621948242188);
    k[G](c * 90.99996948242188, c * 233.40621948242188, c * 66.99996948242188, c * 228.40621948242188, c * 43.999969482421875, c * 225.40621948242188);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 110.99996948242188, c * 236.40621948242188);
    k[G](c * 94.99996948242188, c * 244.40621948242188, c * 79.99996948242188, c * 249.40621948242188, c * 60.999969482421875, c * 249.40621948242188);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 111.99996948242188, c * 206.29513549804688);
    k[G](c * 91.99996948242188, c * 206.29513549804688, c * 87.99996948242188, c * 201.29513549804688, c * 79.99996948242188, c * 192.29513549804688);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 109.99996948242188, c * 249.18402099609375);
    k[G](c * 97.99996948242188, c * 263.18402099609375, c * 85.99996948242188, c * 271.18402099609375, c * 65.99996948242188, c * 277.18402099609375);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 105.99996948242188, c * 192.18402099609375);
    k[G](c * 99.49996948242188, c * 197.68402099609375, c * 99.49996948242188, c * 197.68402099609375, c * 92.99996948242188, c * 203.18402099609375);
    k[G](c * 95.99996948242188, c * 213.18402099609375, c * 95.99996948242188, c * 215.18402099609375, c * 89.99996948242188, c * 219.18402099609375);
    k[G](c * 91.99996948242188, c * 223.18402099609375, c * 91.99996948242188, c * 226.18402099609375, c * 87.99996948242188, c * 230.18402099609375);
    k[G](c * 89.99996948242188, c * 234.18402099609375, c * 91.99996948242188, c * 237.18402099609375, c * 90.99996948242188, c * 244.18402099609375);
    k[G](c * 96.99996948242188, c * 252.18402099609375, c * 96.99996948242188, c * 256.18402099609375, c * 95.99996948242188, c * 262.18402099609375);
    k[G](c * 106.49996948242188, c * 264.18402099609375, c * 106.49996948242188, c * 264.18402099609375, c * 116.99996948242188, c * 266.18402099609375);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 104.99996948242188, c * 183.29513549804688);
    k[G](c * 99.99996948242188, c * 193.29513549804688, c * 93.99996948242188, c * 195.29513549804688, c * 89.99996948242188, c * 201.29513549804688);
    k[G](c * 86.99996948242188, c * 212.29513549804688, c * 85.99996948242188, c * 214.29513549804688, c * 81.99996948242188, c * 215.29513549804688);
    k[G](c * 83.99996948242188, c * 223.29513549804688, c * 83.99996948242188, c * 227.29513549804688, c * 79.99996948242188, c * 230.29513549804688);
    k[G](c * 83.99996948242188, c * 235.29513549804688, c * 84.99996948242188, c * 240.29513549804688, c * 79.99996948242188, c * 246.29513549804688);
    k[G](c * 86.99996948242188, c * 251.29513549804688, c * 91.99996948242188, c * 256.2951354980469, c * 89.99996948242188, c * 266.2951354980469);
    k[G](c * 102.99996948242188, c * 269.2951354980469, c * 102.99996948242188, c * 269.2951354980469, c * 115.99996948242188, c * 272.2951354980469);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 107.99996948242188, c * 177.85067749023438);
    k[G](c * 95.99996948242188, c * 187.35067749023438, c * 95.99996948242188, c * 187.35067749023438, c * 83.99996948242188, c * 196.85067749023438);
    k[G](c * 82.99996948242188, c * 203.85067749023438, c * 80.99996948242188, c * 209.85067749023438, c * 72.99996948242188, c * 210.85067749023438);
    k[G](c * 73.99996948242188, c * 220.85067749023438, c * 73.99996948242188, c * 221.85067749023438, c * 66.99996948242188, c * 227.85067749023438);
    k[G](c * 71.99996948242188, c * 235.85067749023438, c * 73.99996948242188, c * 239.85067749023438, c * 71.99996948242188, c * 247.85067749023438);
    k[G](c * 80.99996948242188, c * 257.8506774902344, c * 81.99996948242188, c * 263.8506774902344, c * 77.99996948242188, c * 271.8506774902344);
    k[G](c * 95.49996948242188, c * 272.8506774902344, c * 95.49996948242188, c * 272.8506774902344, c * 112.99996948242188, c * 273.8506774902344);
    jc(k, undefined, d[4], c * 3);
    k[Qa]();
  } else if (f == 2) {
    k[g]();
    k[Ia](c * 130, c * 35);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 170.99996948242188, c * 133.85067749023438);
    k[G](c * 195.99996948242188, c * 129.85067749023438, c * 196.99996948242188, c * 111.85067749023438, c * 200.99996948242188, c * 88.85067749023438);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 169.99996948242188, c * 143.85067749023438);
    k[G](c * 189.99996948242188, c * 145.85067749023438, c * 207.99996948242188, c * 126.85067749023438, c * 222.99996948242188, c * 100.85067749023438);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 170.99996948242188, c * 157.85067749023438);
    k[G](c * 193.99996948242188, c * 160.85067749023438, c * 210.99996948242188, c * 151.85067749023438, c * 232.99996948242188, c * 139.85067749023438);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 169.99996948242188, c * 168.85067749023438);
    k[G](c * 192.99996948242188, c * 175.85067749023438, c * 203.99996948242188, c * 177.85067749023438, c * 245.99996948242188, c * 168.85067749023438);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 167.99996948242188, c * 168.85067749023438);
    k[G](c * 183.99996948242188, c * 189.85067749023438, c * 191.99996948242188, c * 193.85067749023438, c * 220.99996948242188, c * 196.85067749023438);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 176.99996948242188, c * 117.85067749023438);
    k[G](c * 181.99996948242188, c * 120.85067749023438, c * 181.99996948242188, c * 120.85067749023438, c * 186.99996948242188, c * 123.85067749023438);
    k[G](c * 183.99996948242188, c * 137.85067749023438, c * 185.99996948242188, c * 136.85067749023438, c * 190.99996948242188, c * 136.85067749023438);
    k[G](c * 186.99996948242188, c * 147.85067749023438, c * 189.99996948242188, c * 152.85067749023438, c * 193.99996948242188, c * 155.85067749023438);
    k[G](c * 187.99996948242188, c * 165.85067749023438, c * 190.99996948242188, c * 169.85067749023438, c * 190.99996948242188, c * 172.85067749023438);
    k[G](c * 186.99996948242188, c * 183.85067749023438, c * 186.99996948242188, c * 185.85067749023438, c * 189.99996948242188, c * 188.85067749023438);
    k[G](c * 182.49996948242188, c * 195.35067749023438, c * 182.49996948242188, c * 195.35067749023438, c * 174.99996948242188, c * 201.85067749023438);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 176.99996948242188, c * 112.18402099609375);
    k[G](c * 183.99996948242188, c * 119.18402099609375, c * 186.99996948242188, c * 117.18402099609375, c * 192.99996948242188, c * 116.18402099609375);
    k[G](c * 191.99996948242188, c * 126.18402099609375, c * 193.99996948242188, c * 130.18402099609375, c * 199.99996948242188, c * 130.18402099609375);
    k[G](c * 194.99996948242188, c * 145.18402099609375, c * 197.99996948242188, c * 147.18402099609375, c * 201.99996948242188, c * 153.18402099609375);
    k[G](c * 196.99996948242188, c * 164.18402099609375, c * 197.99996948242188, c * 169.18402099609375, c * 201.99996948242188, c * 174.18402099609375);
    k[G](c * 194.99996948242188, c * 184.18402099609375, c * 196.99996948242188, c * 187.18402099609375, c * 200.99996948242188, c * 193.18402099609375);
    k[G](c * 185.99996948242188, c * 195.18402099609375, c * 181.99996948242188, c * 201.18402099609375, c * 174.99996948242188, c * 210.18402099609375);
    jc(k, undefined, d[4], c * 3);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 176.99996948242188, c * 101.29513549804688);
    k[G](c * 181.99996948242188, c * 108.29513549804688, c * 189.99996948242188, c * 110.29513549804688, c * 195.99996948242188, c * 107.29513549804688);
    k[G](c * 197.99996948242188, c * 121.29513549804688, c * 200.99996948242188, c * 122.29513549804688, c * 206.99996948242188, c * 122.29513549804688);
    k[G](c * 201.99996948242188, c * 138.29513549804688, c * 204.99996948242188, c * 142.29513549804688, c * 211.99996948242188, c * 148.29513549804688);
    k[G](c * 201.99996948242188, c * 156.29513549804688, c * 205.99996948242188, c * 167.29513549804688, c * 213.99996948242188, c * 173.29513549804688);
    k[G](c * 204.99996948242188, c * 181.29513549804688, c * 204.99996948242188, c * 187.29513549804688, c * 205.99996948242188, c * 193.29513549804688);
    k[G](c * 190.99996948242188, c * 198.29513549804688, c * 181.99996948242188, c * 205.29513549804688, c * 174.99996948242188, c * 214.29513549804688);
    jc(k, undefined, d[4], c * 3);
    k[Qa]();
  }
  k[Ia](i.width / 2, i.height / 2);
  if (!f) {
    k[ua] = 0.5;
    kc(k, -t, -u, r, s + q, o);
    jc(k, d[0]);
    if (e) {
      k[ra](Math[D]);
    }
    k[ua] = 1;
    kc(k, -t, -u, r, s, o);
    jc(k, d[1], d[2], 4);
    k[ua] = 1;
    kc(k, c * 35 - t, c * 20 - u, r - c * 50, s - c * 50, o - c * 10);
    jc(k, d[3]);
  }
  if (f == 3) {
    k[Ia](-i.width / 2, -i.height / 2);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 121, c * 190);
    k[G](c * 129, c * 186, c * 137, c * 183, c * 135, c * 163);
    k[G](c * 131, c * 135, c * 153, c * 127, c * 177, c * 124);
    k[G](c * 198, c * 120, c * 208, c * 122, c * 226, c * 128);
    k[G](c * 261, c * 112, c * 271, c * 126, c * 287, c * 147);
    k[G](c * 310, c * 163, c * 304, c * 183, c * 283, c * 196);
    k[G](c * 296, c * 249, c * 278, c * 262, c * 253, c * 263);
    k[G](c * 210, c * 264, c * 188, c * 252, c * 177, c * 234);
    k[G](c * 133, c * 242, c * 123, c * 241, c * 115, c * 225);
    k[G](c * 109, c * 206, c * 115, c * 193, c * 121, c * 190);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 219, c * 144);
    k[G](c * 251, c * 121, c * 277, c * 136, c * 276, c * 159);
    k[G](c * 276, c * 176, c * 273, c * 191, c * 242, c * 193);
    k[G](c * 226, c * 228, c * 155, c * 219, c * 150, c * 183);
    k[G](c * 142, c * 144, c * 174, c * 127, c * 219, c * 144);
    k[X]();
    jc(k, d[5]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 123, c * 214);
    k[G](c * 119, c * 198, c * 129, c * 189, c * 146, c * 194);
    k[G](c * 158, c * 201, c * 165, c * 218, c * 147, c * 226);
    k[G](c * 135, c * 230, c * 125, c * 222, c * 123, c * 214);
    k[X]();
    jc(k, d[5]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 257, c * 199);
    k[G](c * 264, c * 199, c * 275, c * 213, c * 261, c * 220);
    k[G](c * 246, c * 225, c * 235, c * 200, c * 257, c * 199);
    k[X]();
    jc(k, d[5]);
    k[Ia](c * -5, c * 55);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 186, c * 123);
    k[G](c * 198, c * 115, c * 219, c * 110, c * 219, c * 123);
    k[G](c * 216, c * 135, c * 171, c * 143, c * 186, c * 123);
    k[X]();
    jc(k, d[5]);
    k[Ia](c * 5, c * -55);
    k[Ia](c * -5, c * 15);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 171, c * 241);
    k[G](c * 189, c * 234, c * 200, c * 248, c * 189, c * 254);
    k[G](c * 179, c * 260, c * 158, c * 246, c * 171, c * 241);
    k[X]();
    jc(k, d[5]);
  } else if (f == 4) {
    k[Ia](-i.width / 2, -i.height / 2);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 30, c * 167);
    k[G](c * 47, c * 144, c * 64, c * 140, c * 80, c * 147);
    k[G](c * 95, c * 154, c * 95, c * 159, c * 100, c * 179);
    k[G](c * 105, c * 202, c * 95, c * 218, c * 69, c * 218);
    k[G](c * 48, c * 236, c * 26, c * 223, c * 28, c * 213);
    k[G](c * 28, c * 205, c * 29, c * 199, c * 32, c * 195);
    k[G](c * 21, c * 183, c * 27, c * 173, c * 30, c * 167);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 26, c * 145);
    k[G](c * 32, c * 138, c * 37, c * 137, c * 40, c * 139);
    k[G](c * 43, c * 140, c * 41, c * 150, c * 31, c * 159);
    k[G](c * 23, c * 166, c * 17, c * 158, c * 26, c * 145);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 13, c * 193);
    k[G](c * 21, c * 187, c * 30, c * 190, c * 20, c * 202);
    k[G](c * 13, c * 208, c * 7, c * 202, c * 13, c * 193);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 121, c * 190);
    k[G](c * 129, c * 186, c * 137, c * 183, c * 135, c * 163);
    k[G](c * 131, c * 135, c * 153, c * 127, c * 177, c * 124);
    k[G](c * 198, c * 120, c * 208, c * 122, c * 226, c * 128);
    k[G](c * 261, c * 112, c * 271, c * 126, c * 287, c * 147);
    k[G](c * 310, c * 163, c * 304, c * 183, c * 283, c * 196);
    k[G](c * 296, c * 249, c * 278, c * 262, c * 253, c * 263);
    k[G](c * 210, c * 264, c * 188, c * 252, c * 177, c * 234);
    k[G](c * 133, c * 242, c * 123, c * 241, c * 115, c * 225);
    k[G](c * 109, c * 206, c * 115, c * 193, c * 121, c * 190);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 335, c * 196);
    k[G](c * 312, c * 208, c * 300, c * 185, c * 309, c * 167);
    k[G](c * 314, c * 141, c * 339, c * 127, c * 359, c * 144);
    k[G](c * 363, c * 148, c * 364, c * 150, c * 364, c * 150);
    k[G](c * 392, c * 143, c * 396, c * 183, c * 378, c * 204);
    k[G](c * 367, c * 215, c * 339, c * 208, c * 335, c * 196);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 349, c * 212);
    k[G](c * 339, c * 216, c * 334, c * 208, c * 341, c * 203);
    k[G](c * 353, c * 198, c * 361, c * 205, c * 349, c * 212);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 46, c * 165);
    k[G](c * 55, c * 148, c * 85, c * 157, c * 83, c * 175);
    k[G](c * 99, c * 185, c * 89, c * 212, c * 66, c * 204);
    k[G](c * 55, c * 212, c * 43, c * 212, c * 41, c * 202);
    k[G](c * 39, c * 194, c * 42, c * 187, c * 49, c * 185);
    k[G](c * 44, c * 175, c * 45, c * 172, c * 46, c * 165);
    k[X]();
    jc(k, d[4]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 219, c * 144);
    k[G](c * 251, c * 121, c * 277, c * 136, c * 276, c * 159);
    k[G](c * 276, c * 176, c * 273, c * 191, c * 242, c * 193);
    k[G](c * 226, c * 228, c * 155, c * 219, c * 150, c * 183);
    k[G](c * 142, c * 144, c * 174, c * 127, c * 219, c * 144);
    k[X]();
    jc(k, d[5]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 123, c * 214);
    k[G](c * 119, c * 198, c * 129, c * 189, c * 146, c * 194);
    k[G](c * 158, c * 201, c * 165, c * 218, c * 147, c * 226);
    k[G](c * 135, c * 230, c * 125, c * 222, c * 123, c * 214);
    k[X]();
    jc(k, d[5]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 257, c * 199);
    k[G](c * 264, c * 199, c * 275, c * 213, c * 261, c * 220);
    k[G](c * 246, c * 225, c * 235, c * 200, c * 257, c * 199);
    k[X]();
    jc(k, d[5]);
    k[Ia](c * -5, c * 55);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 186, c * 123);
    k[G](c * 198, c * 115, c * 219, c * 110, c * 219, c * 123);
    k[G](c * 216, c * 135, c * 171, c * 143, c * 186, c * 123);
    k[X]();
    jc(k, d[5]);
    k[Ia](c * 5, c * -55);
    k[Ia](c * -5, c * 15);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 171, c * 241);
    k[G](c * 189, c * 234, c * 200, c * 248, c * 189, c * 254);
    k[G](c * 179, c * 260, c * 158, c * 246, c * 171, c * 241);
    k[X]();
    jc(k, d[5]);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 367, c * 164);
    k[G](c * 380, c * 160, c * 391, c * 185, c * 371, c * 189);
    k[G](c * 362, c * 192, c * 354, c * 191, c * 350, c * 185);
    k[G](c * 326, c * 205, c * 314, c * 182, c * 316, c * 171);
    k[G](c * 317, c * 150, c * 332, c * 143, c * 347, c * 147);
    k[G](c * 361, c * 151, c * 366, c * 158, c * 367, c * 164);
    k[X]();
    jc(k, d[4]);
  }
  return i;
}
function ed(c, d, e, f) {
  var g = document[p]("canvas");
  var i = g[T]("2d");
  g.width = c * 121;
  g.height = c * 130;
  i[Ia](0, c * 20);
  if (e == 1) {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 6, c * 23);
    i[G](c * 6, c * 46, c * 6, c * 46, c * 6, c * 69);
    i[G](c * 21, c * 69, c * 21, c * 69, c * 36, c * 69);
    i[G](c * 45.5, c * 78.5, c * 45.5, c * 78.5, c * 55, c * 88);
    i[G](c * 55.5, c * 45.5, c * 55.5, c * 45.5, c * 56, c * 3);
    i[G](c * 47, c * 14, c * 47, c * 14, c * 38, c * 25);
    i[G](c * 23, c * 25, c * 23, c * 25, c * 6, c * 23);
    i[X]();
    jc(i, undefined, d[3], c * 13);
  }
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 6, c * 23);
  i[G](c * 6, c * 46, c * 6, c * 46, c * 6, c * 69);
  i[G](c * 21, c * 69, c * 21, c * 69, c * 36, c * 69);
  i[G](c * 45.5, c * 78.5, c * 45.5, c * 78.5, c * 55, c * 88);
  i[G](c * 55.5, c * 45.5, c * 55.5, c * 45.5, c * 56, c * 3);
  i[G](c * 47, c * 14, c * 47, c * 14, c * 38, c * 25);
  i[G](c * 23, c * 25, c * 23, c * 25, c * 6, c * 23);
  i[X]();
  jc(i, d[1], d[2], c * 4);
  if (f == 1) {
    i[Ia](0, c * 5);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 67, c * 30);
    i[G](c * 73, c * 47, c * 69, c * 45, c * 67, c * 58);
    jc(i, undefined, d[0], c * 10);
    i[Ia](3, c * 0);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 70, c * 17);
    i[G](c * 83, c * 45, c * 76, c * 55, c * 70, c * 69);
    jc(i, undefined, d[0], c * 10);
    i[Ia](3, c * 0);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 76, c * 8);
    i[G](c * 88, c * 31, c * 89, c * 55, c * 76, c * 79);
    jc(i, undefined, d[0], c * 10);
    if (e == 1) {
      i[Ia](c * -6, c * -5);
      i[Y]();
      i[Ga] = "round";
      i[ea] = "round";
      i[K](c * 67, c * 30);
      i[G](c * 73, c * 47, c * 69, c * 45, c * 67, c * 58);
      jc(i, undefined, d[3], c * 18);
      i[Ia](3, c * 0);
      i[Y]();
      i[Ga] = "round";
      i[ea] = "round";
      i[K](c * 70, c * 17);
      i[G](c * 83, c * 45, c * 76, c * 55, c * 70, c * 69);
      jc(i, undefined, d[3], c * 18);
      i[Ia](3, c * 0);
      i[Y]();
      i[Ga] = "round";
      i[ea] = "round";
      i[K](c * 76, c * 8);
      i[G](c * 88, c * 31, c * 89, c * 55, c * 76, c * 79);
      jc(i, undefined, d[3], c * 18);
      i[Ia](-6, c * 0);
    } else {
      i[Ia](c * -6, c * -5);
    }
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 67, c * 30);
    i[G](c * 73, c * 47, c * 69, c * 45, c * 67, c * 58);
    jc(i, undefined, d[2], c * 10);
    i[Ia](3, c * 0);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 70, c * 17);
    i[G](c * 83, c * 45, c * 76, c * 55, c * 70, c * 69);
    jc(i, undefined, d[2], c * 10);
    i[Ia](3, c * 0);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 76, c * 8);
    i[G](c * 88, c * 31, c * 89, c * 55, c * 76, c * 79);
    jc(i, undefined, d[2], c * 10);
  } else {
    if (e == 1) {
      i[Y]();
      i[Ga] = "round";
      i[ea] = "round";
      i[K](c * 108, c * 27);
      i[G](c * 94, c * 45.5, c * 94, c * 45.5, c * 80, c * 64);
      i[X]();
      jc(i, undefined, d[3], c * 18);
      i[Y]();
      i[Ga] = "round";
      i[ea] = "round";
      i[K](c * 79, c * 30);
      i[G](c * 93, c * 47, c * 93, c * 47, c * 107, c * 64);
      i[X]();
      jc(i, undefined, d[3], c * 18);
    } else {
      i[Ia](0, c * -5);
      i[Y]();
      i[Ga] = "round";
      i[ea] = "round";
      i[K](c * 108, c * 27);
      i[G](c * 94, c * 45.5, c * 94, c * 45.5, c * 80, c * 64);
      i[X]();
      jc(i, undefined, d[0], c * 7);
      i[Y]();
      i[Ga] = "round";
      i[ea] = "round";
      i[K](c * 79, c * 30);
      i[G](c * 93, c * 47, c * 93, c * 47, c * 107, c * 64);
      i[X]();
      jc(i, undefined, d[0], c * 7);
      i[Ia](0, c * 5);
    }
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 108, c * 27);
    i[G](c * 94, c * 45.5, c * 94, c * 45.5, c * 80, c * 64);
    i[X]();
    jc(i, undefined, d[2], c * 7);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 79, c * 30);
    i[G](c * 93, c * 47, c * 93, c * 47, c * 107, c * 64);
    i[X]();
    jc(i, undefined, d[2], c * 7);
  }
  return g;
}
function fd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = (t = c * 450) / 2;
  var m = (u = c * 145) / 2;
  var n = c * 10;
  var o = c * 300;
  var q = c * 30;
  var r = o / 2;
  var s = q / 2;
  if (e) {
    var t = c * 145;
    var u = c * 450;
    f.width = t;
    f.height = u;
    i[ra](Math[D] / 2);
    i[g]();
    i[ua] = 0.5;
    kc(i, c * 100, c * -110, o, q, n);
    jc(i, d[0]);
    i[Ia](c * 178, c * -98);
    kc(i, -r, -s - c * 6, c * 100, c * 100, n);
    jc(i, d[0]);
    i[Ia](c * -50, c * 5);
    kc(i, c * 220, c * -15, c * 90, c * 90, n);
    jc(i, d[0]);
    i[Qa]();
    i[g]();
    i[ua] = 1;
    i[Ia](c * 250, c * -63);
    kc(i, -r - c * 20, -s, o, q, n);
    jc(i, d[1], d[2], 4);
    i[Ia](c * -70, c * -40);
    kc(i, -r - c * 20, -s, c * 100, c * 100, n);
    jc(i, d[3], d[4], 4);
    i[Ia](c * -70, c * 15);
    kc(i, c * 220, c * -22, c * 90, c * 90, n);
    jc(i, d[3], d[4], 4);
    kc(i, c * 230, c * -12, c * 55, c * 55, n);
    jc(i, d[5]);
    i[Ia](c * -70, 0);
    kc(i, c * -15, c * -2, c * 60, c * 60, n);
    jc(i, d[5]);
    i[Qa]();
  } else {
    f.width = t;
    f.height = u;
    i[g]();
    i[ua] = 0.5;
    i[Ia](k, m + c * 10);
    kc(i, -r, -s, o, q, n);
    jc(i, d[0]);
    i[Ia](c * -65, c * -25);
    kc(i, -r, -s - c * 6, c * 100, c * 100, c * 15);
    jc(i, d[0]);
    i[Ia](c * -35, c * -5);
    kc(i, c * 220, c * -15, c * 90, c * 90, c * 15);
    jc(i, d[0]);
    i[Qa]();
    i[g]();
    i[ua] = 1;
    i[Ia](c * 240, c * 70);
    kc(i, -r, -s, o, q, n);
    jc(i, d[1], d[2], 4);
    i[Ia](c * -60, c * -40);
    kc(i, -r - c * 20, -s, c * 100, c * 100, c * 15);
    jc(i, d[3], d[4], 4);
    i[Ia](c * -55, c * 10);
    kc(i, c * 220, c * -22, c * 90, c * 90, c * 15);
    jc(i, d[3], d[4], 4);
    kc(i, c * 240, c * -12, c * 55, c * 55, c * 12);
    jc(i, d[5]);
    i[Ia](c * 45, c * 0);
    kc(i, c * -145, c * -2, c * 60, c * 60, c * 12);
    jc(i, d[5]);
    i[Qa]();
  }
  return f;
}
function gd(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = Math[ba](d.width, c.width);
  var i = Math[ba](d.height, c.height);
  e.width = g;
  e.height = i;
  f[r](c, (g - c.width) / 2, (i - c.height) / 2);
  f[r](d, (g - d.width) / 2, (i - d.height) / 2);
  return e;
}
function hd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = c * 105;
  var m = c * 125;
  var n = c * 4;
  var o = c * 10;
  var q = c * 5;
  var r = c * 10;
  var s = c * 110;
  var t = r / 2;
  var u = s / 2;
  f.width = k;
  f.height = m;
  i[g]();
  i[ua] = d ? 0.5 : 1;
  i[Ia](k / 2 + c * 8, m / 2 + q);
  kc(i, -t, -u, r, s, o);
  jc(i, d ? e[0] : e[1]);
  i[Ia](c * -130 + q, c * -128 + q);
  i[Y]();
  i[G](c * 159, c * 93, c * 156, c * 99, c * 154, c * 102);
  i[G](c * 128, c * 92, c * 90, c * 93, c * 72, c * 96);
  i[G](c * 68, c * 84, c * 143, c * 73, c * 162, c * 86);
  i[X]();
  jc(i, e[2]);
  i[Qa]();
  i[Ia](k / 2 + 8, m / 2);
  i[ua] = 1;
  kc(i, -t, -u, r, s, o);
  jc(i, e[3], e[4], n);
  i[Ia](c * -130, c * -125);
  i[Y]();
  i[G](c * 159, c * 93, c * 156, c * 99, c * 154, c * 102);
  i[G](c * 128, c * 92, c * 90, c * 93, c * 72, c * 96);
  i[G](c * 68, c * 84, c * 143, c * 73, c * 162, c * 86);
  i[X]();
  jc(i, e[5], e[6], n);
  return f;
}
function id(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 170;
  f.height = c * 469;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 20, c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 88, c * 30);
  i[G](c * 96, c * 49.5, c * 96, c * 49.5, c * 104, c * 69);
  i[G](c * 105.5, c * 41.5, c * 105.5, c * 41.5, c * 107, c * 14);
  i[G](c * 114, c * 9.5, c * 114, c * 9.5, c * 121, c * 5);
  i[G](c * 135.5, c * 27.5, c * 135.5, c * 27.5, c * 150, c * 50);
  i[G](c * 110.5, c * 286, c * 110.5, c * 286, c * 103, c * 331);
  i[G](c * 69.5, c * 325, c * 69.5, c * 325, c * 36, c * 319);
  i[G](c * 56.5, c * 180, c * 56.5, c * 180, c * 77, c * 41);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 118, c * 31);
  i[G](c * 125, c * 43, c * 125, c * 43, c * 132, c * 55);
  i[G](c * 109.5, c * 185.5, c * 109.5, c * 185.5, c * 87, c * 316);
  i[G](c * 72, c * 313.5, c * 72, c * 313.5, c * 57, c * 311);
  i[G](c * 76.5, c * 181, c * 76.5, c * 181, c * 96, c * 51);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 56, c * 328);
  i[G](c * 47, c * 385.5, c * 47, c * 385.5, c * 38, c * 443);
  i[G](c * 52, c * 446, c * 52, c * 446, c * 66, c * 449);
  i[G](c * 76.5, c * 388.5, c * 76.5, c * 388.5, c * 87, c * 328);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 74, c * 302);
  i[G](c * 104, c * 316.5, c * 104, c * 316.5, c * 134, c * 331);
  i[G](c * 133, c * 341, c * 133, c * 341, c * 132, c * 351);
  i[G](c * 69.5, c * 342, c * 69.5, c * 342, c * 7, c * 333);
  i[G](c * 8, c * 323, c * 8, c * 323, c * 9, c * 313);
  i[X]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 51.5, c * 440.5);
  i[ra](0.2);
  kc(i, c * -20.5, c * -18.5, c * 41, c * 37, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 73, c * 316);
  i[G](c * 90, c * 324.5, c * 90, c * 324.5, c * 107, c * 333);
  i[G](c * 70, c * 327.5, c * 70, c * 327.5, c * 33, c * 322);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -20, c * -20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 88, c * 30);
  i[G](c * 96, c * 49.5, c * 96, c * 49.5, c * 104, c * 69);
  i[G](c * 105.5, c * 41.5, c * 105.5, c * 41.5, c * 107, c * 14);
  i[G](c * 114, c * 9.5, c * 114, c * 9.5, c * 121, c * 5);
  i[G](c * 135.5, c * 27.5, c * 135.5, c * 27.5, c * 150, c * 50);
  i[G](c * 110.5, c * 286, c * 110.5, c * 286, c * 103, c * 331);
  i[G](c * 69.5, c * 325, c * 69.5, c * 325, c * 36, c * 319);
  i[G](c * 56.5, c * 180, c * 56.5, c * 180, c * 77, c * 41);
  i[X]();
  jc(i, e[1], e[2], c * 7);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 118, c * 31);
  i[G](c * 125, c * 43, c * 125, c * 43, c * 132, c * 55);
  i[G](c * 109.5, c * 185.5, c * 109.5, c * 185.5, c * 87, c * 316);
  i[G](c * 72, c * 313.5, c * 72, c * 313.5, c * 57, c * 311);
  i[G](c * 76.5, c * 181, c * 76.5, c * 181, c * 96, c * 51);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 88, c * 30);
  i[G](c * 96, c * 49.5, c * 96, c * 49.5, c * 104, c * 69);
  i[G](c * 105.5, c * 41.5, c * 105.5, c * 41.5, c * 107, c * 14);
  i[G](c * 114, c * 9.5, c * 114, c * 9.5, c * 121, c * 5);
  i[G](c * 135.5, c * 27.5, c * 135.5, c * 27.5, c * 150, c * 50);
  i[G](c * 110.5, c * 286, c * 110.5, c * 286, c * 103, c * 331);
  i[G](c * 69.5, c * 325, c * 69.5, c * 325, c * 36, c * 319);
  i[G](c * 56.5, c * 180, c * 56.5, c * 180, c * 77, c * 41);
  i[X]();
  jc(i, undefined, e[2], c * 7);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 56, c * 328);
  i[G](c * 47, c * 385.5, c * 47, c * 385.5, c * 38, c * 443);
  i[G](c * 52, c * 446, c * 52, c * 446, c * 66, c * 449);
  i[G](c * 76.5, c * 388.5, c * 76.5, c * 388.5, c * 87, c * 328);
  i[X]();
  jc(i, e[4], e[5], c * 7);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 74, c * 302);
  i[G](c * 104, c * 316.5, c * 104, c * 316.5, c * 134, c * 331);
  i[G](c * 133, c * 341, c * 133, c * 341, c * 132, c * 351);
  i[G](c * 69.5, c * 342, c * 69.5, c * 342, c * 7, c * 333);
  i[G](c * 8, c * 323, c * 8, c * 323, c * 9, c * 313);
  i[X]();
  jc(i, e[4], e[5], c * 7);
  i[g]();
  i[Ia](c * 51.5, c * 440.5);
  i[ra](0.2);
  kc(i, c * -20.5, c * -18.5, c * 41, c * 37, c * 10);
  i[Qa]();
  jc(i, e[4], e[5], c * 7);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 73, c * 316);
  i[G](c * 90, c * 324.5, c * 90, c * 324.5, c * 107, c * 333);
  i[G](c * 70, c * 327.5, c * 70, c * 327.5, c * 33, c * 322);
  i[X]();
  jc(i, e[6]);
  return f;
}
function jd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 424;
  f.height = c * 788;
  i[Ia](c * 25, c * 25);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 193.5, c * 602.5);
  i[ra](-0.12);
  kc(i, c * -26.5, c * -97.5, c * 53, c * 195, c * 25);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 137, c * 519);
  i[G](c * 182, c * 513, c * 182, c * 513, c * 227, c * 507);
  i[G](c * 214, c * 417, c * 189, c * 304, c * 221, c * 180);
  i[G](c * 191, c * 126, c * 192, c * 105, c * 198, c * 64);
  i[G](c * 123, c * 102, c * 99, c * 285, c * 137, c * 517);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 175, c * 119);
  i[G](c * 176, c * 142, c * 184, c * 165, c * 197, c * 183);
  i[G](c * 167, c * 325, c * 191, c * 405, c * 202, c * 502);
  i[G](c * 180, c * 503, c * 180, c * 503, c * 158, c * 504);
  i[G](c * 135, c * 396, c * 134, c * 185, c * 175, c * 119);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 110, c * 518);
  i[G](c * 111.5, c * 533, c * 111.5, c * 533, c * 113, c * 548);
  i[G](c * 162.5, c * 544, c * 162.5, c * 544, c * 212, c * 540);
  i[G](c * 312, c * 535, c * 281, c * 665, c * 225, c * 665);
  i[G](c * 227, c * 686.5, c * 227, c * 686.5, c * 229, c * 708);
  i[G](c * 343, c * 684, c * 354, c * 496, c * 222, c * 498);
  i[G](c * 165.5, c * 503, c * 165.5, c * 503, c * 109, c * 508);
  i[X]();
  jc(i, e[0]);
  lc(i, c * 204, c * 693, c * 36.013886210738214);
  jc(i, e[0]);
  lc(i, c * 105, c * 518, c * 30);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 171, c * 535);
  i[G](c * 139.5, c * 537.5, c * 139.5, c * 537.5, c * 108, c * 540);
  i[G](c * 110, c * 527.5, c * 110, c * 527.5, c * 112, c * 515);
  i[G](c * 148, c * 513, c * 148, c * 513, c * 184, c * 511);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 244, c * 669);
  i[G](c * 248.5, c * 680, c * 248.5, c * 680, c * 253, c * 691);
  i[G](c * 239.5, c * 697, c * 239.5, c * 697, c * 226, c * 703);
  i[G](c * 223, c * 691.5, c * 223, c * 691.5, c * 220, c * 680);
  i[X]();
  jc(i, e[0]);
  i[Ia](c * -25, c * -25);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 193.5, c * 602.5);
  i[ra](-0.12);
  kc(i, c * -26.5, c * -97.5, c * 53, c * 195, c * 25);
  i[Qa]();
  jc(i, e[1], e[2], c * 16);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 137, c * 519);
  i[G](c * 182, c * 513, c * 182, c * 513, c * 227, c * 507);
  i[G](c * 214, c * 417, c * 189, c * 304, c * 221, c * 180);
  i[G](c * 191, c * 126, c * 192, c * 105, c * 198, c * 64);
  i[G](c * 123, c * 102, c * 99, c * 285, c * 137, c * 517);
  i[X]();
  jc(i, e[3], e[4], c * 16);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 175, c * 119);
  i[G](c * 176, c * 142, c * 184, c * 165, c * 197, c * 183);
  i[G](c * 167, c * 325, c * 191, c * 405, c * 202, c * 502);
  i[G](c * 180, c * 503, c * 180, c * 503, c * 158, c * 504);
  i[G](c * 135, c * 396, c * 134, c * 185, c * 175, c * 119);
  i[X]();
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 110, c * 518);
  i[G](c * 111.5, c * 533, c * 111.5, c * 533, c * 113, c * 548);
  i[G](c * 162.5, c * 544, c * 162.5, c * 544, c * 212, c * 540);
  i[G](c * 312, c * 535, c * 281, c * 665, c * 225, c * 665);
  i[G](c * 227, c * 686.5, c * 227, c * 686.5, c * 229, c * 708);
  i[G](c * 343, c * 684, c * 354, c * 496, c * 222, c * 498);
  i[G](c * 165.5, c * 503, c * 165.5, c * 503, c * 109, c * 508);
  i[X]();
  jc(i, e[6], e[4], c * 16);
  lc(i, c * 204, c * 693, c * 36.013886210738214);
  jc(i, e[6], e[4], c * 16);
  lc(i, c * 105, c * 518, c * 30);
  jc(i, e[6], e[4], c * 16);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 171, c * 535);
  i[G](c * 139.5, c * 537.5, c * 139.5, c * 537.5, c * 108, c * 540);
  i[G](c * 110, c * 527.5, c * 110, c * 527.5, c * 112, c * 515);
  i[G](c * 148, c * 513, c * 148, c * 513, c * 184, c * 511);
  i[X]();
  jc(i, e[6]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 244, c * 669);
  i[G](c * 248.5, c * 680, c * 248.5, c * 680, c * 253, c * 691);
  i[G](c * 239.5, c * 697, c * 239.5, c * 697, c * 226, c * 703);
  i[G](c * 223, c * 691.5, c * 223, c * 691.5, c * 220, c * 680);
  i[X]();
  jc(i, e[6]);
  lc(i, c * 204, c * 693, c * 17.029386365926403);
  jc(i, e[7]);
  lc(i, c * 106, c * 518, c * 12);
  jc(i, e[7]);
  return f;
}
function kd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 100;
  f.height = c * 250;
  g[Ia](c * -135, c * -75);
  g[ua] = d ? 0.8 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 178.5, c * 238.03125);
  g[G](c * 177, c * 175.03125, c * 177, c * 175.03125, c * 175.5, c * 112.03125);
  g[G](c * 184.5, c * 100.53125, c * 184.5, c * 100.53125, c * 193.5, c * 89.03125);
  g[G](c * 202, c * 100.03125, c * 202, c * 100.03125, c * 210.5, c * 111.03125);
  g[G](c * 209.5, c * 174.03125, c * 209.5, c * 174.03125, c * 208.5, c * 237.03125);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 155.5, c * 239.03125);
  g[G](c * 194, c * 238.53125, c * 194, c * 238.53125, c * 232.5, c * 238.03125);
  g[G](c * 232.5, c * 243.03125, c * 232.5, c * 243.03125, c * 232.5, c * 248.03125);
  g[G](c * 194, c * 248.53125, c * 194, c * 248.53125, c * 155.5, c * 249.03125);
  g[X]();
  jc(g, e[0]);
  lc(g, c * 160.5, c * 243.03125, c * 7);
  jc(g, e[0]);
  lc(g, c * 227.5, c * 242.03125, c * 7);
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 185.5, c * 253.03125);
  g[G](c * 193.5, c * 253.03125, c * 193.5, c * 253.03125, c * 201.5, c * 253.03125);
  g[G](c * 201.5, c * 276.03125, c * 201.5, c * 276.03125, c * 201.5, c * 299.03125);
  g[G](c * 194.5, c * 299.03125, c * 194.5, c * 299.03125, c * 187.5, c * 299.03125);
  g[X]();
  jc(g, e[0], e[0], c * 5);
  lc(g, c * 194, c * 298, c * 9);
  jc(g, e[0], e[0], c * 5);
  g[ua] = 1;
  g[Ia](c * -10, c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 178.5, c * 238.03125);
  g[G](c * 177, c * 175.03125, c * 177, c * 175.03125, c * 175.5, c * 112.03125);
  g[G](c * 184.5, c * 100.53125, c * 184.5, c * 100.53125, c * 193.5, c * 89.03125);
  g[G](c * 202, c * 100.03125, c * 202, c * 100.03125, c * 210.5, c * 111.03125);
  g[G](c * 209.5, c * 174.03125, c * 209.5, c * 174.03125, c * 208.5, c * 237.03125);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 155.5, c * 239.03125);
  g[G](c * 194, c * 238.53125, c * 194, c * 238.53125, c * 232.5, c * 238.03125);
  g[G](c * 232.5, c * 243.03125, c * 232.5, c * 243.03125, c * 232.5, c * 248.03125);
  g[G](c * 194, c * 248.53125, c * 194, c * 248.53125, c * 155.5, c * 249.03125);
  g[X]();
  jc(g, e[1], e[2], c * 5);
  lc(g, c * 160.5, c * 243.03125, c * 7);
  jc(g, e[1], e[2], c * 5);
  lc(g, c * 227.5, c * 242.03125, c * 7);
  jc(g, e[1], e[2], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 185.5, c * 253.03125);
  g[G](c * 193.5, c * 253.03125, c * 193.5, c * 253.03125, c * 201.5, c * 253.03125);
  g[G](c * 201.5, c * 276.03125, c * 201.5, c * 276.03125, c * 201.5, c * 299.03125);
  g[G](c * 194.5, c * 299.03125, c * 194.5, c * 299.03125, c * 187.5, c * 299.03125);
  g[X]();
  jc(g, e[1], e[2], c * 7);
  lc(g, c * 194, c * 298, c * 9);
  jc(g, e[1], e[2], c * 7);
  return f;
}
function ld(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 290;
  f.height = c * 525;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 20, c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 111, c * 351);
  i[G](c * 129, c * 218, c * 129, c * 218, c * 147, c * 85);
  i[G](c * 167, c * 65.5, c * 167, c * 65.5, c * 187, c * 46);
  i[G](c * 201.5, c * 70.5, c * 201.5, c * 70.5, c * 216, c * 95);
  i[G](c * 194.5, c * 227.5, c * 194.5, c * 227.5, c * 173, c * 360);
  i[X]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 131, c * 425.5);
  i[ra](0.16);
  kc(i, c * -14, c * -56.5, c * 28, c * 113, c * 8);
  i[Qa]();
  jc(i, e[0]);
  lc(i, c * 122, c * 480, c * 18.439088914585774);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 79, c * 371);
  i[G](c * 131, c * 373, c * 145, c * 378, c * 197, c * 388);
  i[G](c * 205, c * 382.5, c * 205, c * 382.5, c * 213, c * 377);
  i[G](c * 167, c * 352, c * 117, c * 345, c * 69, c * 355);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -20, c * -20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 111, c * 351);
  i[G](c * 129, c * 218, c * 129, c * 218, c * 147, c * 85);
  i[G](c * 167, c * 65.5, c * 167, c * 65.5, c * 187, c * 46);
  i[G](c * 201.5, c * 70.5, c * 201.5, c * 70.5, c * 216, c * 95);
  i[G](c * 194.5, c * 227.5, c * 194.5, c * 227.5, c * 173, c * 360);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  i[g]();
  i[Ia](c * 131, c * 425.5);
  i[ra](0.16);
  kc(i, c * -14, c * -56.5, c * 28, c * 113, c * 8);
  i[Qa]();
  jc(i, e[4], e[5], c * 12.5);
  lc(i, c * 122, c * 480, c * 18.439088914585774);
  jc(i, e[4], e[5], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 79, c * 371);
  i[G](c * 131, c * 373, c * 145, c * 378, c * 197, c * 388);
  i[G](c * 205, c * 382.5, c * 205, c * 382.5, c * 213, c * 377);
  i[G](c * 167, c * 352, c * 117, c * 345, c * 69, c * 355);
  i[X]();
  jc(i, e[4], e[5], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 128, c * 345);
  i[G](c * 142, c * 345, c * 147, c * 346, c * 158, c * 349);
  i[G](c * 177.5, c * 224.5, c * 177.5, c * 224.5, c * 197, c * 100);
  i[G](c * 190.5, c * 84.5, c * 190.5, c * 84.5, c * 184, c * 69);
  i[G](c * 173.5, c * 82, c * 173.5, c * 82, c * 163, c * 95);
  i[X]();
  jc(i, e[3]);
  return f;
}
function md(c, d, e, f) {
  var g = document[p]("canvas");
  var i = g[T]("2d");
  g.width = c * 283;
  g.height = c * 224;
  i[Ia](0, c * 15);
  i[ua] = 0.5;
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 93, c * 55);
  i[G](c * 127, c * 27, c * 195, c * 42, c * 213, c * 78);
  i[G](c * 254, c * 134, c * 226, c * 198, c * 153, c * 197);
  i[G](c * 59, c * 204, c * 56, c * 158, c * 51, c * 115);
  i[G](c * 50, c * 93, c * 81, c * 62, c * 90, c * 57);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 100, c * 33);
  i[G](c * 85, c * 62, c * 102, c * 66, c * 110, c * 83);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 181, c * 32);
  i[G](c * 196, c * 62, c * 181, c * 68, c * 178, c * 69);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 225, c * 52);
  i[G](c * 228, c * 78, c * 207, c * 77, c * 192, c * 88);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 34, c * 134);
  i[G](c * 46, c * 111, c * 57, c * 111, c * 79, c * 109);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 249, c * 135);
  i[G](c * 233, c * 107, c * 212, c * 112, c * 202, c * 115);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 56, c * 50);
  i[G](c * 56, c * 82, c * 73, c * 82, c * 93, c * 89);
  jc(i, e[0]);
  i[Ia](0, c * -15);
  i[ua] = 1;
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 100, c * 33);
  i[G](c * 85, c * 62, c * 102, c * 66, c * 110, c * 83);
  jc(i, undefined, e[2], c * 40);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 181, c * 32);
  i[G](c * 196, c * 62, c * 181, c * 68, c * 178, c * 69);
  jc(i, undefined, e[2], c * 40);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 225, c * 52);
  i[G](c * 228, c * 78, c * 207, c * 77, c * 192, c * 88);
  jc(i, undefined, e[2], c * 40);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 34, c * 134);
  i[G](c * 46, c * 111, c * 57, c * 111, c * 79, c * 109);
  jc(i, undefined, e[2], c * 40);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 249, c * 135);
  i[G](c * 233, c * 107, c * 212, c * 112, c * 202, c * 115);
  jc(i, undefined, e[2], c * 40);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 56, c * 50);
  i[G](c * 56, c * 82, c * 73, c * 82, c * 93, c * 89);
  jc(i, undefined, e[2], c * 40);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 93, c * 55);
  i[G](c * 127, c * 27, c * 195, c * 42, c * 213, c * 78);
  i[G](c * 254, c * 134, c * 226, c * 198, c * 153, c * 197);
  i[G](c * 59, c * 204, c * 56, c * 158, c * 51, c * 115);
  i[G](c * 50, c * 93, c * 81, c * 62, c * 90, c * 57);
  i[X]();
  jc(i, e[1], e[2], c * 10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 100, c * 33);
  i[G](c * 85, c * 62, c * 102, c * 66, c * 110, c * 83);
  jc(i, undefined, e[1], c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 181, c * 32);
  i[G](c * 196, c * 62, c * 181, c * 68, c * 178, c * 69);
  jc(i, undefined, e[1], c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 225, c * 52);
  i[G](c * 228, c * 78, c * 207, c * 77, c * 192, c * 88);
  jc(i, undefined, e[1], c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 34, c * 134);
  i[G](c * 46, c * 111, c * 57, c * 111, c * 79, c * 109);
  jc(i, undefined, e[1], c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 249, c * 135);
  i[G](c * 233, c * 107, c * 212, c * 112, c * 202, c * 115);
  jc(i, undefined, e[1], c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 56, c * 50);
  i[G](c * 56, c * 82, c * 73, c * 82, c * 93, c * 89);
  jc(i, undefined, e[1], c * 20);
  lc(i, c * 101, c * 155, c * 20.591260281974);
  jc(i, e[3]);
  lc(i, c * 180, c * 155, c * 20.591260281974);
  jc(i, e[3]);
  lc(i, c * 95, c * 148, c * 7.211102550927978);
  jc(i, e[4]);
  lc(i, c * 173, c * 148, c * 7.211102550927978);
  jc(i, e[4]);
  if (f === 1) {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 191, c * 107);
    i[G](c * 180, c * 104, c * 175, c * 101, c * 180, c * 95);
    i[G](c * 180, c * 95, c * 181, c * 99, c * 188, c * 103);
    i[G](c * 191, c * 101, c * 191, c * 95, c * 190, c * 91);
    i[G](c * 190, c * 91, c * 196, c * 89, c * 195, c * 99);
    i[X]();
    jc(i, e[2]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 206, c * 98);
    i[G](c * 203, c * 95, c * 200, c * 93, c * 198, c * 101);
    i[G](c * 194, c * 109, c * 193, c * 109, c * 196, c * 110);
    i[G](c * 206, c * 115, c * 209, c * 114, c * 211, c * 111);
    i[G](c * 211, c * 106, c * 208, c * 108, c * 203, c * 108);
    i[G](c * 193, c * 107, c * 204, c * 101, c * 206, c * 99);
    i[X]();
    jc(i, e[2]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 172, c * 111);
    i[G](c * 172, c * 106, c * 174, c * 105, c * 185, c * 109);
    i[G](c * 190, c * 109, c * 189, c * 114, c * 185, c * 120);
    i[G](c * 181, c * 125, c * 180, c * 126, c * 176, c * 122);
    i[G](c * 182, c * 119, c * 187, c * 110, c * 182, c * 112);
    i[X]();
    jc(i, e[2]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 202, c * 125);
    i[G](c * 197, c * 117, c * 193, c * 116, c * 193, c * 120);
    i[G](c * 192.5, c * 124.5, c * 192.5, c * 124.5, c * 192, c * 129);
    i[G](c * 188, c * 129, c * 187, c * 124, c * 189, c * 120);
    i[G](c * 191, c * 110, c * 192, c * 110, c * 200, c * 116);
    i[G](c * 208, c * 120, c * 207, c * 123, c * 202, c * 125);
    i[X]();
    jc(i, e[2]);
  }
  return g;
}
function nd(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 283;
  e.height = c * 224;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 100, c * 33);
  f[G](c * 85, c * 62, c * 102, c * 66, c * 110, c * 83);
  jc(f, undefined, d[0], c * 40);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 181, c * 32);
  f[G](c * 196, c * 62, c * 181, c * 68, c * 178, c * 69);
  jc(f, undefined, d[0], c * 40);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 225, c * 52);
  f[G](c * 228, c * 78, c * 207, c * 77, c * 192, c * 88);
  jc(f, undefined, d[0], c * 40);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 34, c * 134);
  f[G](c * 46, c * 111, c * 57, c * 111, c * 79, c * 109);
  jc(f, undefined, d[0], c * 40);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 249, c * 135);
  f[G](c * 233, c * 107, c * 212, c * 112, c * 202, c * 115);
  jc(f, undefined, d[0], c * 40);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 56, c * 50);
  f[G](c * 56, c * 82, c * 73, c * 82, c * 93, c * 89);
  jc(f, undefined, d[0], c * 40);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 93, c * 55);
  f[G](c * 124, c * 29, c * 179, c * 44, c * 188, c * 52);
  f[G](c * 207, c * 64, c * 226, c * 94, c * 231, c * 118);
  f[G](c * 236, c * 145, c * 222, c * 184, c * 193, c * 192);
  f[G](c * 147, c * 201, c * 116, c * 200, c * 93, c * 193);
  f[G](c * 61, c * 180, c * 48, c * 147, c * 50, c * 123);
  f[G](c * 50, c * 93, c * 76, c * 66, c * 92, c * 56);
  f[X]();
  jc(f, d[0]);
  return e;
}
function od(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 131;
  f.height = c * 121;
  g[Ia](0, c * 20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 110, c * 59);
  g[G](c * 93, c * 61.5, c * 93, c * 61.5, c * 76, c * 64);
  g[G](c * 84.5, c * 78.5, c * 84.5, c * 78.5, c * 93, c * 93);
  g[G](c * 70, c * 111, c * 43, c * 103, c * 30, c * 82);
  g[G](c * 17, c * 61, c * 25, c * 30, c * 51, c * 21);
  g[G](c * 66, c * 15, c * 83, c * 18, c * 96, c * 29);
  g[G](c * 104, c * 35, c * 109, c * 47, c * 110, c * 58);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 110, c * 59);
  g[G](c * 93, c * 61.5, c * 93, c * 61.5, c * 76, c * 64);
  g[G](c * 84.5, c * 78.5, c * 84.5, c * 78.5, c * 93, c * 93);
  g[G](c * 70, c * 111, c * 43, c * 103, c * 30, c * 82);
  g[G](c * 17, c * 61, c * 25, c * 30, c * 51, c * 21);
  g[G](c * 66, c * 15, c * 83, c * 18, c * 96, c * 29);
  g[G](c * 104, c * 35, c * 109, c * 47, c * 110, c * 58);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  return f;
}
function pd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 104;
  f.height = c * 112;
  g[Ia](0, c * 15);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 16, c * 44);
  g[G](c * 30.5, c * 48, c * 30.5, c * 48, c * 45, c * 52);
  g[G](c * 36.5, c * 63, c * 36.5, c * 63, c * 28, c * 74);
  g[G](c * 32, c * 86, c * 61, c * 92, c * 78, c * 76);
  g[G](c * 93, c * 62, c * 92, c * 40, c * 80, c * 26);
  g[G](c * 65, c * 11, c * 42, c * 16, c * 34, c * 21);
  g[G](c * 22, c * 27, c * 16, c * 39, c * 16, c * 44);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -15);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 16, c * 44);
  g[G](c * 30.5, c * 48, c * 30.5, c * 48, c * 45, c * 52);
  g[G](c * 36.5, c * 63, c * 36.5, c * 63, c * 28, c * 74);
  g[G](c * 32, c * 86, c * 61, c * 92, c * 78, c * 76);
  g[G](c * 93, c * 62, c * 92, c * 40, c * 80, c * 26);
  g[G](c * 65, c * 11, c * 42, c * 16, c * 34, c * 21);
  g[G](c * 22, c * 27, c * 16, c * 39, c * 16, c * 44);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  return f;
}
function qd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 321;
  f.height = c * 284;
  g[Ia](c * 100, c * 30);
  g[Ia](c * 5, c * 10);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 58, c * 33);
  g[G](c * 81, c * 22, c * 93, c * 26, c * 123, c * 47);
  g[G](c * 160, c * 73, c * 169, c * 80, c * 191, c * 99);
  g[G](c * 202, c * 107, c * 211, c * 118, c * 195, c * 151);
  g[G](c * 181, c * 183, c * 157, c * 192, c * 129, c * 174);
  g[G](c * 78, c * 140, c * 68, c * 129, c * 37, c * 94);
  g[G](c * 15, c * 68, c * 25, c * 52, c * 56, c * 34);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 58, c * 33);
  g[G](c * 81, c * 22, c * 93, c * 26, c * 123, c * 47);
  g[G](c * 160, c * 73, c * 169, c * 80, c * 191, c * 99);
  g[G](c * 202, c * 107, c * 211, c * 118, c * 195, c * 151);
  g[G](c * 181, c * 183, c * 157, c * 192, c * 129, c * 174);
  g[G](c * 78, c * 140, c * 68, c * 129, c * 37, c * 94);
  g[G](c * 15, c * 68, c * 25, c * 52, c * 56, c * 34);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 167, c * 120);
  g[G](c * 196, c * 106, c * 207, c * 111, c * 199, c * 135);
  g[G](c * 185, c * 172, c * 166, c * 187, c * 145, c * 179);
  g[G](c * 118, c * 166, c * 127, c * 139, c * 166, c * 121);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 25, c * 64);
  g[G](c * 59, c * 96, c * 97, c * 128, c * 129, c * 151);
  g[G](c * 126, c * 163, c * 134, c * 174, c * 142, c * 180);
  g[G](c * 114, c * 170, c * 68, c * 134, c * 31, c * 85);
  g[G](c * 24, c * 71, c * 24, c * 70, c * 25, c * 65);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 161, c * 141);
  g[G](c * 181, c * 131, c * 186, c * 135, c * 173, c * 152);
  g[G](c * 163, c * 163, c * 155, c * 161, c * 151, c * 150);
  g[G](c * 147, c * 140, c * 155, c * 131, c * 175, c * 125);
  g[G](c * 190, c * 120, c * 196, c * 121, c * 189, c * 143);
  g[G](c * 182, c * 167, c * 169, c * 174, c * 157, c * 174);
  g[G](c * 138, c * 172, c * 139, c * 162, c * 140, c * 156);
  jc(g, undefined, e[4], c * 4);
  g[Ia](c * -100, c * -30);
  g[Ia](c * 10, c * 70);
  g[Ia](c * 5, c * 10);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 58, c * 33);
  g[G](c * 81, c * 22, c * 93, c * 26, c * 123, c * 47);
  g[G](c * 160, c * 73, c * 169, c * 80, c * 191, c * 99);
  g[G](c * 202, c * 107, c * 211, c * 118, c * 195, c * 151);
  g[G](c * 181, c * 183, c * 157, c * 192, c * 129, c * 174);
  g[G](c * 78, c * 140, c * 68, c * 129, c * 37, c * 94);
  g[G](c * 15, c * 68, c * 25, c * 52, c * 56, c * 34);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 58, c * 33);
  g[G](c * 81, c * 22, c * 93, c * 26, c * 123, c * 47);
  g[G](c * 160, c * 73, c * 169, c * 80, c * 191, c * 99);
  g[G](c * 202, c * 107, c * 211, c * 118, c * 195, c * 151);
  g[G](c * 181, c * 183, c * 157, c * 192, c * 129, c * 174);
  g[G](c * 78, c * 140, c * 68, c * 129, c * 37, c * 94);
  g[G](c * 15, c * 68, c * 25, c * 52, c * 56, c * 34);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 167, c * 120);
  g[G](c * 196, c * 106, c * 207, c * 111, c * 199, c * 135);
  g[G](c * 185, c * 172, c * 166, c * 187, c * 145, c * 179);
  g[G](c * 118, c * 166, c * 127, c * 139, c * 166, c * 121);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 25, c * 64);
  g[G](c * 59, c * 96, c * 97, c * 128, c * 129, c * 151);
  g[G](c * 126, c * 163, c * 134, c * 174, c * 142, c * 180);
  g[G](c * 114, c * 170, c * 68, c * 134, c * 31, c * 85);
  g[G](c * 24, c * 71, c * 24, c * 70, c * 25, c * 65);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 161, c * 141);
  g[G](c * 181, c * 131, c * 186, c * 135, c * 173, c * 152);
  g[G](c * 163, c * 163, c * 155, c * 161, c * 151, c * 150);
  g[G](c * 147, c * 140, c * 155, c * 131, c * 175, c * 125);
  g[G](c * 190, c * 120, c * 196, c * 121, c * 189, c * 143);
  g[G](c * 182, c * 167, c * 169, c * 174, c * 157, c * 174);
  g[G](c * 138, c * 172, c * 139, c * 162, c * 140, c * 156);
  jc(g, undefined, e[4], c * 4);
  g[Ia](c * 20, c * -80);
  g[Ia](c * 5, c * 10);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 58, c * 33);
  g[G](c * 81, c * 22, c * 93, c * 26, c * 123, c * 47);
  g[G](c * 160, c * 73, c * 169, c * 80, c * 191, c * 99);
  g[G](c * 202, c * 107, c * 211, c * 118, c * 195, c * 151);
  g[G](c * 181, c * 183, c * 157, c * 192, c * 129, c * 174);
  g[G](c * 78, c * 140, c * 68, c * 129, c * 37, c * 94);
  g[G](c * 15, c * 68, c * 25, c * 52, c * 56, c * 34);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 58, c * 33);
  g[G](c * 81, c * 22, c * 93, c * 26, c * 123, c * 47);
  g[G](c * 160, c * 73, c * 169, c * 80, c * 191, c * 99);
  g[G](c * 202, c * 107, c * 211, c * 118, c * 195, c * 151);
  g[G](c * 181, c * 183, c * 157, c * 192, c * 129, c * 174);
  g[G](c * 78, c * 140, c * 68, c * 129, c * 37, c * 94);
  g[G](c * 15, c * 68, c * 25, c * 52, c * 56, c * 34);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 167, c * 120);
  g[G](c * 196, c * 106, c * 207, c * 111, c * 199, c * 135);
  g[G](c * 185, c * 172, c * 166, c * 187, c * 145, c * 179);
  g[G](c * 118, c * 166, c * 127, c * 139, c * 166, c * 121);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 25, c * 64);
  g[G](c * 59, c * 96, c * 97, c * 128, c * 129, c * 151);
  g[G](c * 126, c * 163, c * 134, c * 174, c * 142, c * 180);
  g[G](c * 114, c * 170, c * 68, c * 134, c * 31, c * 85);
  g[G](c * 24, c * 71, c * 24, c * 70, c * 25, c * 65);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 161, c * 141);
  g[G](c * 181, c * 131, c * 186, c * 135, c * 173, c * 152);
  g[G](c * 163, c * 163, c * 155, c * 161, c * 151, c * 150);
  g[G](c * 147, c * 140, c * 155, c * 131, c * 175, c * 125);
  g[G](c * 190, c * 120, c * 196, c * 121, c * 189, c * 143);
  g[G](c * 182, c * 167, c * 169, c * 174, c * 157, c * 174);
  g[G](c * 138, c * 172, c * 139, c * 162, c * 140, c * 156);
  jc(g, undefined, e[4], c * 4);
  return f;
}
function rd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 290;
  f.height = c * 525;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 20, c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 111, c * 351);
  i[G](c * 128.5, c * 218.5, c * 128.5, c * 218.5, c * 146, c * 86);
  i[G](c * 166.5, c * 66.5, c * 166.5, c * 66.5, c * 187, c * 47);
  i[G](c * 201, c * 71.5, c * 201, c * 71.5, c * 215, c * 96);
  i[G](c * 193, c * 228.5, c * 193, c * 228.5, c * 171, c * 361);
  i[X]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 129.5, c * 424);
  i[ra](0.16);
  kc(i, c * -15.5, c * -63, c * 31, c * 126, c * 10);
  i[Qa]();
  jc(i, e[0]);
  lc(i, c * 121, c * 480, c * 20.396078054371138);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 90, c * 311);
  i[G](c * 95, c * 324, c * 95, c * 324, c * 100, c * 337);
  i[G](c * 141.5, c * 345.5, c * 141.5, c * 345.5, c * 183, c * 354);
  i[G](c * 193.5, c * 342.5, c * 193.5, c * 342.5, c * 204, c * 331);
  i[G](c * 202, c * 354, c * 202, c * 354, c * 200, c * 377);
  i[G](c * 147, c * 388, c * 106, c * 371, c * 79, c * 356);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -20, c * -20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 111, c * 351);
  i[G](c * 128.5, c * 218.5, c * 128.5, c * 218.5, c * 146, c * 86);
  i[G](c * 166.5, c * 66.5, c * 166.5, c * 66.5, c * 187, c * 47);
  i[G](c * 201, c * 71.5, c * 201, c * 71.5, c * 215, c * 96);
  i[G](c * 193, c * 228.5, c * 193, c * 228.5, c * 171, c * 361);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  i[g]();
  i[Ia](c * 129.5, c * 424);
  i[ra](0.16);
  kc(i, c * -15.5, c * -63, c * 31, c * 126, c * 10);
  i[Qa]();
  jc(i, e[4], e[5], c * 12.5);
  lc(i, c * 121, c * 480, c * 20.396078054371138);
  jc(i, e[4], e[5], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 90, c * 311);
  i[G](c * 95, c * 324, c * 95, c * 324, c * 100, c * 337);
  i[G](c * 141.5, c * 345.5, c * 141.5, c * 345.5, c * 183, c * 354);
  i[G](c * 193.5, c * 342.5, c * 193.5, c * 342.5, c * 204, c * 331);
  i[G](c * 202, c * 354, c * 202, c * 354, c * 200, c * 377);
  i[G](c * 147, c * 388, c * 106, c * 371, c * 79, c * 356);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  return f;
}
function sd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 290;
  f.height = c * 525;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 20, c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 112, c * 356);
  i[G](c * 124, c * 220.5, c * 124, c * 220.5, c * 136, c * 85);
  i[G](c * 162.5, c * 65.5, c * 162.5, c * 65.5, c * 189, c * 46);
  i[G](c * 208.5, c * 72.5, c * 208.5, c * 72.5, c * 228, c * 99);
  i[G](c * 200, c * 232, c * 200, c * 232, c * 172, c * 365);
  i[X]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 131, c * 423);
  i[ra](0.16);
  kc(i, c * -14, c * -53, c * 28, c * 106, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 122, c * 480);
  i[ra](1.72);
  nc(i, 4, c * 26.476404589747453, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 210, c * 387);
  i[G](c * 138, c * 376, c * 138, c * 376, c * 66, c * 365);
  i[G](c * 76, c * 355, c * 76, c * 355, c * 86, c * 345);
  i[G](c * 99, c * 346.5, c * 99, c * 346.5, c * 112, c * 348);
  i[G](c * 128.5, c * 344, c * 128.5, c * 344, c * 145, c * 340);
  i[G](c * 158, c * 348, c * 158, c * 348, c * 171, c * 356);
  i[G](c * 184, c * 358, c * 184, c * 358, c * 197, c * 360);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 129, c * 338);
  i[G](c * 137, c * 336, c * 137, c * 336, c * 145, c * 334);
  i[G](c * 152.5, c * 338, c * 152.5, c * 338, c * 160, c * 342);
  i[G](c * 184, c * 224, c * 184, c * 224, c * 208, c * 106);
  i[G](c * 197, c * 88, c * 187, c * 70, c * 186, c * 70);
  i[G](c * 169.5, c * 83, c * 169.5, c * 83, c * 153, c * 96);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -20, c * -20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 112, c * 356);
  i[G](c * 124, c * 220.5, c * 124, c * 220.5, c * 136, c * 85);
  i[G](c * 162.5, c * 65.5, c * 162.5, c * 65.5, c * 189, c * 46);
  i[G](c * 208.5, c * 72.5, c * 208.5, c * 72.5, c * 228, c * 99);
  i[G](c * 200, c * 232, c * 200, c * 232, c * 172, c * 365);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  i[g]();
  i[Ia](c * 131, c * 423);
  i[ra](0.16);
  kc(i, c * -14, c * -53, c * 28, c * 106, c * 10);
  i[Qa]();
  jc(i, e[4], e[5], c * 12.5);
  i[g]();
  i[Ia](c * 122, c * 480);
  i[ra](1.72);
  nc(i, 4, c * 26.476404589747453, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 210, c * 387);
  i[G](c * 138, c * 376, c * 138, c * 376, c * 66, c * 365);
  i[G](c * 76, c * 355, c * 76, c * 355, c * 86, c * 345);
  i[G](c * 99, c * 346.5, c * 99, c * 346.5, c * 112, c * 348);
  i[G](c * 128.5, c * 344, c * 128.5, c * 344, c * 145, c * 340);
  i[G](c * 158, c * 348, c * 158, c * 348, c * 171, c * 356);
  i[G](c * 184, c * 358, c * 184, c * 358, c * 197, c * 360);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 129, c * 338);
  i[G](c * 137, c * 336, c * 137, c * 336, c * 145, c * 334);
  i[G](c * 152.5, c * 338, c * 152.5, c * 338, c * 160, c * 342);
  i[G](c * 184, c * 224, c * 184, c * 224, c * 208, c * 106);
  i[G](c * 197, c * 88, c * 187, c * 70, c * 186, c * 70);
  i[G](c * 169.5, c * 83, c * 169.5, c * 83, c * 153, c * 96);
  i[X]();
  jc(i, e[3]);
  return f;
}
function td(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 290;
  f.height = c * 525;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 20, c * 20);
  i[Ia](c * -20, c * -20);
  i[g]();
  i[Ia](c * 132, c * 423);
  i[ra](0.16);
  kc(i, c * -14, c * -61, c * 28, c * 122, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 100, c * 344);
  i[G](c * 123, c * 214, c * 123, c * 214, c * 146, c * 84);
  i[G](c * 166.5, c * 65, c * 166.5, c * 65, c * 187, c * 46);
  i[G](c * 201, c * 71, c * 201, c * 71, c * 215, c * 96);
  i[G](c * 199.5, c * 226.5, c * 199.5, c * 226.5, c * 184, c * 357);
  i[G](c * 162.5, c * 362.5, c * 162.5, c * 362.5, c * 141, c * 368);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 75, c * 328);
  i[G](c * 88, c * 336.5, c * 88, c * 336.5, c * 101, c * 345);
  i[G](c * 123.5, c * 337.5, c * 123.5, c * 337.5, c * 146, c * 330);
  i[G](c * 165, c * 343.5, c * 165, c * 343.5, c * 184, c * 357);
  i[G](c * 198.5, c * 353, c * 198.5, c * 353, c * 213, c * 349);
  i[G](c * 200.5, c * 364.5, c * 200.5, c * 364.5, c * 188, c * 380);
  i[G](c * 163, c * 380.5, c * 163, c * 380.5, c * 138, c * 381);
  i[G](c * 112, c * 373.5, c * 112, c * 373.5, c * 86, c * 366);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 121, c * 332);
  i[G](c * 133.5, c * 327.5, c * 133.5, c * 327.5, c * 146, c * 323);
  i[G](c * 157, c * 330.5, c * 157, c * 330.5, c * 168, c * 338);
  i[G](c * 182.5, c * 219.5, c * 182.5, c * 219.5, c * 197, c * 101);
  i[G](c * 190, c * 84.5, c * 190, c * 84.5, c * 183, c * 68);
  i[G](c * 172.5, c * 81, c * 172.5, c * 81, c * 162, c * 94);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 105, c * 463);
  i[G](c * 124.5, c * 466, c * 124.5, c * 466, c * 144, c * 469);
  i[G](c * 145.5, c * 478.5, c * 145.5, c * 478.5, c * 147, c * 488);
  i[G](c * 133.5, c * 495.5, c * 133.5, c * 495.5, c * 120, c * 503);
  i[G](c * 108.5, c * 492, c * 108.5, c * 492, c * 97, c * 481);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -20, c * -20);
  i[g]();
  i[Ia](c * 132, c * 423);
  i[ra](0.16);
  kc(i, c * -14, c * -61, c * 28, c * 122, c * 10);
  i[Qa]();
  jc(i, e[4], e[5], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 100, c * 344);
  i[G](c * 123, c * 214, c * 123, c * 214, c * 146, c * 84);
  i[G](c * 166.5, c * 65, c * 166.5, c * 65, c * 187, c * 46);
  i[G](c * 201, c * 71, c * 201, c * 71, c * 215, c * 96);
  i[G](c * 199.5, c * 226.5, c * 199.5, c * 226.5, c * 184, c * 357);
  i[G](c * 162.5, c * 362.5, c * 162.5, c * 362.5, c * 141, c * 368);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 75, c * 328);
  i[G](c * 88, c * 336.5, c * 88, c * 336.5, c * 101, c * 345);
  i[G](c * 123.5, c * 337.5, c * 123.5, c * 337.5, c * 146, c * 330);
  i[G](c * 165, c * 343.5, c * 165, c * 343.5, c * 184, c * 357);
  i[G](c * 198.5, c * 353, c * 198.5, c * 353, c * 213, c * 349);
  i[G](c * 200.5, c * 364.5, c * 200.5, c * 364.5, c * 188, c * 380);
  i[G](c * 163, c * 380.5, c * 163, c * 380.5, c * 138, c * 381);
  i[G](c * 112, c * 373.5, c * 112, c * 373.5, c * 86, c * 366);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 121, c * 332);
  i[G](c * 133.5, c * 327.5, c * 133.5, c * 327.5, c * 146, c * 323);
  i[G](c * 157, c * 330.5, c * 157, c * 330.5, c * 168, c * 338);
  i[G](c * 182.5, c * 219.5, c * 182.5, c * 219.5, c * 197, c * 101);
  i[G](c * 190, c * 84.5, c * 190, c * 84.5, c * 183, c * 68);
  i[G](c * 172.5, c * 81, c * 172.5, c * 81, c * 162, c * 94);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 105, c * 463);
  i[G](c * 124.5, c * 466, c * 124.5, c * 466, c * 144, c * 469);
  i[G](c * 145.5, c * 478.5, c * 145.5, c * 478.5, c * 147, c * 488);
  i[G](c * 133.5, c * 495.5, c * 133.5, c * 495.5, c * 120, c * 503);
  i[G](c * 108.5, c * 492, c * 108.5, c * 492, c * 97, c * 481);
  i[X]();
  jc(i, e[1], e[2], c * 12.5);
  i[ua] = 1;
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 143, c * 346);
  i[G](c * 125, c * 352, c * 125, c * 352, c * 107, c * 358);
  i[G](c * 124, c * 363, c * 140, c * 368, c * 141, c * 368);
  i[G](c * 156.5, c * 367, c * 156.5, c * 367, c * 172, c * 366);
  i[X]();
  jc(i, e[3]);
  return f;
}
function ud(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 154;
  f.height = c * 261;
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 125, c * 69);
  g[G](c * 123.5, c * 141.5, c * 123.5, c * 141.5, c * 122, c * 214);
  g[G](c * 123, c * 228, c * 119, c * 239, c * 102, c * 239);
  g[G](c * 90, c * 238, c * 86, c * 225, c * 89, c * 197);
  g[G](c * 92, c * 159, c * 92, c * 141, c * 94, c * 84);
  g[G](c * 94, c * 58, c * 87, c * 50, c * 73, c * 52);
  g[G](c * 53, c * 54, c * 54, c * 92, c * 34, c * 87);
  g[G](c * 13, c * 85, c * 22, c * 58, c * 34, c * 40);
  g[G](c * 44, c * 24, c * 68, c * 17, c * 86, c * 21);
  g[G](c * 111, c * 23, c * 123, c * 39, c * 125, c * 67);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 125, c * 69);
  g[G](c * 123.5, c * 141.5, c * 123.5, c * 141.5, c * 122, c * 214);
  g[G](c * 123, c * 228, c * 119, c * 239, c * 102, c * 239);
  g[G](c * 90, c * 238, c * 86, c * 225, c * 89, c * 197);
  g[G](c * 92, c * 159, c * 92, c * 141, c * 94, c * 84);
  g[G](c * 94, c * 58, c * 87, c * 50, c * 73, c * 52);
  g[G](c * 53, c * 54, c * 54, c * 92, c * 34, c * 87);
  g[G](c * 13, c * 85, c * 22, c * 58, c * 34, c * 40);
  g[G](c * 44, c * 24, c * 68, c * 17, c * 86, c * 21);
  g[G](c * 111, c * 23, c * 123, c * 39, c * 125, c * 67);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 31, c * 43);
  g[G](c * 31, c * 61, c * 43, c * 70, c * 51, c * 75);
  g[G](c * 48, c * 84, c * 41, c * 89, c * 33, c * 86);
  g[G](c * 23, c * 88, c * 20, c * 76, c * 23, c * 62);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 45, c * 29);
  g[G](c * 49, c * 45, c * 61, c * 54, c * 64, c * 55);
  g[G](c * 67.5, c * 53, c * 67.5, c * 53, c * 71, c * 51);
  g[G](c * 80, c * 44, c * 83, c * 33, c * 82, c * 20);
  g[G](c * 59, c * 17, c * 51, c * 23, c * 45, c * 30);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 86, c * 56);
  g[G](c * 90, c * 33, c * 103, c * 25, c * 105, c * 27);
  g[G](c * 116, c * 31, c * 121, c * 45, c * 122, c * 50);
  g[G](c * 112, c * 62, c * 103, c * 63, c * 91, c * 62);
  g[G](c * 89, c * 59.5, c * 89, c * 59.5, c * 87, c * 57);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 93, c * 81);
  g[G](c * 109, c * 82, c * 123, c * 70, c * 124, c * 63);
  g[G](c * 124, c * 75.5, c * 124, c * 75.5, c * 124, c * 88);
  g[G](c * 119, c * 99, c * 103, c * 103, c * 94, c * 103);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 93, c * 124);
  g[G](c * 108, c * 125, c * 122, c * 113, c * 124, c * 106);
  g[G](c * 124, c * 119, c * 124, c * 129, c * 124, c * 132);
  g[G](c * 110, c * 147, c * 94, c * 148, c * 90, c * 147);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 90, c * 170);
  g[G](c * 104, c * 166, c * 122, c * 158, c * 122, c * 151);
  g[G](c * 122, c * 162.5, c * 122, c * 162.5, c * 122, c * 174);
  g[G](c * 111, c * 191, c * 97, c * 191, c * 89, c * 191);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 88, c * 208);
  g[G](c * 100, c * 209, c * 115, c * 205, c * 122, c * 193);
  g[G](c * 122, c * 205.5, c * 122, c * 205.5, c * 122, c * 218);
  g[G](c * 115, c * 229, c * 103, c * 235, c * 90, c * 228);
  g[G](c * 88, c * 224, c * 88, c * 217, c * 88, c * 211);
  g[X]();
  jc(g, e[3]);
  g[ua] = 0.4;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 22, c * 81);
  g[G](c * 32, c * 84, c * 41, c * 81, c * 45, c * 68);
  g[G](c * 50, c * 50, c * 62, c * 40, c * 79, c * 43);
  g[G](c * 95, c * 45, c * 102, c * 58, c * 101, c * 81);
  g[G](c * 99.5, c * 120.5, c * 99.5, c * 120.5, c * 98, c * 160);
  g[G](c * 96.5, c * 191.5, c * 96.5, c * 191.5, c * 95, c * 223);
  g[G](c * 93, c * 232, c * 101, c * 235, c * 108, c * 238);
  g[G](c * 100, c * 240, c * 90, c * 233, c * 90, c * 224);
  g[G](c * 92, c * 157, c * 92, c * 157, c * 94, c * 90);
  g[G](c * 94, c * 56, c * 89, c * 53, c * 77, c * 51);
  g[G](c * 58, c * 50, c * 54, c * 59, c * 49, c * 75);
  g[G](c * 44, c * 91, c * 28, c * 90, c * 23, c * 81);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 82, c * 123);
  g[G](c * 88, c * 130, c * 88, c * 127, c * 94, c * 128);
  g[G](c * 91, c * 136, c * 94, c * 137, c * 99, c * 142);
  g[G](c * 97, c * 149, c * 99, c * 152, c * 105, c * 155);
  g[G](c * 107, c * 159, c * 113, c * 159, c * 120, c * 158);
  g[G](c * 121, c * 160, c * 125, c * 163, c * 132, c * 163);
  g[G](c * 133, c * 166, c * 136, c * 169, c * 138, c * 170);
  g[G](c * 133, c * 171, c * 132, c * 172, c * 129, c * 174);
  g[G](c * 122, c * 170, c * 120, c * 170, c * 116, c * 174);
  g[G](c * 108, c * 170.5, c * 108, c * 170.5, c * 100, c * 167);
  g[G](c * 95, c * 172, c * 94, c * 179, c * 95, c * 184);
  g[G](c * 87, c * 185, c * 87, c * 189, c * 88, c * 194);
  g[G](c * 82, c * 194, c * 81, c * 195, c * 79, c * 197);
  g[G](c * 78, c * 192, c * 78, c * 191, c * 77, c * 189);
  g[G](c * 81, c * 185, c * 82, c * 183, c * 80, c * 176);
  g[G](c * 89, c * 170, c * 92, c * 168, c * 95, c * 163);
  g[G](c * 91, c * 151, c * 88, c * 151, c * 82, c * 147);
  g[G](c * 85, c * 142, c * 85, c * 137, c * 81, c * 133);
  g[G](c * 84, c * 127, c * 84, c * 125, c * 82, c * 124);
  g[X]();
  jc(g, e[4], e[5], c * 4);
  lc(g, c * 107, c * 152, c * 9);
  jc(g, e[6]);
  lc(g, c * 105, c * 173, c * 9);
  jc(g, e[6]);
  lc(g, c * 87, c * 161, c * 9);
  jc(g, e[6]);
  lc(g, c * 106, c * 147, c * 4);
  jc(g, e[7]);
  lc(g, c * 104, c * 167, c * 4);
  jc(g, e[7]);
  lc(g, c * 86, c * 154, c * 4);
  jc(g, e[7]);
  return f;
}
function vd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 350;
  f.height = c * 140;
  g[Ia](c * -50, c * -150);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 184.5, c * 222.0625);
  g[G](c * 185.5, c * 184.0625, c * 302.5, c * 171.0625, c * 313.5, c * 222.0625);
  g[G](c * 330.5, c * 263.0625, c * 181.5, c * 274.0625, c * 184.5, c * 223.0625);
  g[X]();
  jc(g, e[0], e[1], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 131.5, c * 241.0625);
  g[G](c * 144.5, c * 278.0625, c * 270.5, c * 209.0625, c * 228.5, c * 174.0625);
  g[G](c * 196.5, c * 147.0625, c * 117.5, c * 196.0625, c * 131.5, c * 240.0625);
  g[X]();
  jc(g, e[0], e[1], c * 8);
  lc(g, c * 270.5, c * 225.0625, c * 15.811388300841896);
  jc(g, e[2]);
  lc(g, c * 243.5, c * 225.0625, c * 6.082762530298219);
  jc(g, e[2]);
  lc(g, c * 255.5, c * 210.0625, c * 10.816653826391969);
  jc(g, e[2]);
  lc(g, c * 167.5, c * 215.0625, c * 15.297058540778355);
  jc(g, e[2]);
  lc(g, c * 176.5, c * 204.0625, c * 7.280109889280518);
  jc(g, e[2]);
  lc(g, c * 206.5, c * 189.0625, c * 7.280109889280518);
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 151.5, c * 212.0625);
  g[G](c * 161.5, c * 204.0625, c * 173.5, c * 214.0625, c * 158.5, c * 221.0625);
  g[G](c * 145.5, c * 228.0625, c * 144.5, c * 216.0625, c * 151.5, c * 212.0625);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 194.5, c * 209.0625);
  g[G](c * 205.5, c * 202.0625, c * 215.5, c * 207.0625, c * 199.5, c * 217.0625);
  g[G](c * 187.5, c * 224.0625, c * 182.5, c * 217.0625, c * 194.5, c * 209.0625);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 188.5, c * 183.0625);
  g[G](c * 201.5, c * 176.0625, c * 213.5, c * 187.0625, c * 193.5, c * 193.0625);
  g[G](c * 185.5, c * 194.0625, c * 175.5, c * 189.0625, c * 188.5, c * 183.0625);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 261.5, c * 202.0625);
  g[G](c * 274.5, c * 201.0625, c * 282.5, c * 214.0625, c * 261.5, c * 215.0625);
  g[G](c * 246.5, c * 214.0625, c * 248.5, c * 203.0625, c * 261.5, c * 202.0625);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 240.5, c * 231.0625);
  g[G](c * 255.5, c * 231.0625, c * 254.5, c * 243.0625, c * 240.5, c * 242.0625);
  g[G](c * 225.5, c * 239.0625, c * 225.5, c * 232.0625, c * 240.5, c * 231.0625);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  return f;
}
function wd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 217;
  f.height = c * 215;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 79, c * 113);
  g[G](c * 135, c * 98, c * 136, c * 96, c * 142, c * 97);
  g[G](c * 167, c * 106, c * 167, c * 106, c * 171, c * 109);
  g[G](c * 173, c * 120, c * 173, c * 134, c * 169, c * 141);
  g[G](c * 140, c * 149.5, c * 140, c * 149.5, c * 111, c * 158);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 154, c * 103);
  g[G](c * 167, c * 91, c * 175, c * 87, c * 176, c * 94);
  g[G](c * 175, c * 102, c * 176, c * 102, c * 186, c * 103);
  g[G](c * 191, c * 104, c * 192, c * 105, c * 185, c * 116);
  g[G](c * 183, c * 120, c * 191, c * 124, c * 189, c * 129);
  g[G](c * 185, c * 139, c * 178, c * 134, c * 166, c * 131);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 60, c * 46);
  g[G](c * 60, c * 34, c * 60, c * 29, c * 56, c * 19);
  g[G](c * 52, c * 12, c * 52, c * 16, c * 49, c * 24);
  g[G](c * 48, c * 27, c * 46, c * 28, c * 39, c * 27);
  g[G](c * 33, c * 26, c * 34, c * 31, c * 35, c * 37);
  g[G](c * 36, c * 41, c * 27, c * 46, c * 29, c * 52);
  g[G](c * 36, c * 55, c * 35, c * 56, c * 31, c * 59);
  g[G](c * 27, c * 65, c * 32, c * 64, c * 35, c * 62);
  g[X]();
  jc(g, e[4], e[5], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 46, c * 50);
  g[G](c * 51, c * 35, c * 70, c * 32, c * 78, c * 29);
  g[G](c * 84, c * 27, c * 113, c * 36, c * 127, c * 41);
  g[G](c * 140, c * 47, c * 147, c * 69, c * 137, c * 73);
  g[G](c * 124, c * 92, c * 117, c * 92, c * 109, c * 94);
  g[G](c * 101, c * 96, c * 89, c * 92, c * 65, c * 83);
  g[G](c * 54, c * 80, c * 46, c * 58, c * 46, c * 51);
  g[X]();
  jc(g, e[4], e[5], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 51, c * 40);
  g[G](c * 49, c * 34, c * 49, c * 34, c * 47, c * 28);
  g[G](c * 38, c * 28, c * 34, c * 27, c * 37, c * 37);
  g[G](c * 43, c * 40.5, c * 43, c * 40.5, c * 49, c * 44);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 29, c * 48);
  g[G](c * 38, c * 49, c * 38, c * 49, c * 47, c * 50);
  g[G](c * 46.5, c * 51.5, c * 46.5, c * 51.5, c * 46, c * 53);
  g[G](c * 40, c * 53.5, c * 40, c * 53.5, c * 34, c * 54);
  g[G](c * 29, c * 51, c * 32, c * 51.5, c * 30, c * 49);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 89, c * 61);
  g[G](c * 101, c * 70, c * 109, c * 90, c * 102, c * 90);
  g[G](c * 97, c * 91, c * 87, c * 91, c * 60, c * 80);
  g[G](c * 48, c * 65, c * 46, c * 56, c * 48, c * 53);
  g[G](c * 50, c * 52, c * 66, c * 56, c * 89, c * 61);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 99, c * 59);
  g[G](c * 115, c * 45, c * 125, c * 42, c * 129, c * 47);
  g[G](c * 138, c * 56, c * 140, c * 63, c * 138, c * 67);
  g[G](c * 131, c * 80, c * 122, c * 87, c * 114, c * 90);
  g[G](c * 105, c * 80, c * 95, c * 62, c * 98, c * 61);
  g[X]();
  jc(g, e[7]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 118, c * 62);
  g[G](c * 139, c * 45, c * 153, c * 40, c * 150, c * 48);
  g[G](c * 145, c * 57, c * 157, c * 63, c * 157, c * 70);
  g[G](c * 157, c * 74, c * 142, c * 77, c * 142, c * 85);
  g[G](c * 143, c * 91, c * 141, c * 92, c * 135, c * 90);
  g[G](c * 132, c * 90, c * 132, c * 96, c * 124, c * 99);
  g[G](c * 118, c * 93, c * 116, c * 77, c * 116, c * 64);
  g[X]();
  jc(g, e[4], e[5], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 90, c * 130);
  g[G](c * 157, c * 115, c * 165, c * 111, c * 167, c * 115);
  g[G](c * 170, c * 117, c * 171, c * 135, c * 167, c * 141);
  g[G](c * 135.5, c * 149.5, c * 135.5, c * 149.5, c * 104, c * 158);
  g[X]();
  jc(g, e[8]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 53, c * 119);
  g[G](c * 46, c * 120, c * 40, c * 118, c * 34, c * 116);
  g[G](c * 28, c * 111, c * 41, c * 112, c * 39, c * 108);
  g[G](c * 36, c * 100, c * 49, c * 102, c * 53, c * 95);
  g[G](c * 57, c * 84, c * 58, c * 85, c * 63, c * 93);
  g[G](c * 68, c * 96, c * 72, c * 94, c * 80, c * 88);
  g[G](c * 80, c * 96, c * 78, c * 107, c * 66, c * 115);
  g[X]();
  jc(g, e[9], e[10], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 118, c * 64);
  g[G](c * 133.5, c * 57, c * 133.5, c * 57, c * 149, c * 50);
  g[G](c * 145, c * 54, c * 154, c * 65, c * 157, c * 68);
  g[G](c * 138.5, c * 66.5, c * 138.5, c * 66.5, c * 120, c * 65);
  g[X]();
  jc(g, e[8]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 118, c * 65);
  g[G](c * 129, c * 77, c * 129, c * 77, c * 140, c * 89);
  g[G](c * 131, c * 89, c * 130, c * 92, c * 128, c * 96);
  g[G](c * 123.5, c * 82, c * 123.5, c * 82, c * 119, c * 68);
  g[X]();
  jc(g, e[8]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 51, c * 112);
  g[G](c * 63, c * 108, c * 78, c * 111, c * 88, c * 112);
  g[G](c * 98, c * 122, c * 117, c * 136, c * 125, c * 157);
  g[G](c * 123, c * 180, c * 123, c * 185, c * 118, c * 186);
  g[G](c * 101, c * 190, c * 89, c * 191, c * 79, c * 187);
  g[G](c * 53, c * 165, c * 50, c * 153, c * 47, c * 144);
  g[G](c * 46, c * 128, c * 46, c * 124, c * 50, c * 112);
  g[X]();
  jc(g, e[9], e[10], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 50, c * 114);
  g[G](c * 81, c * 149, c * 80, c * 147, c * 80, c * 149);
  g[G](c * 82, c * 155, c * 80, c * 182, c * 74, c * 182);
  g[G](c * 60, c * 172, c * 52, c * 157, c * 47, c * 144);
  g[X]();
  jc(g, e[11], e[11], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 85, c * 152);
  g[G](c * 99, c * 150, c * 109, c * 152, c * 119, c * 156);
  g[G](c * 122, c * 163, c * 122, c * 174, c * 117, c * 182);
  g[X]();
  g[G](c * 93, c * 188, c * 82, c * 187, c * 83, c * 179);
  jc(g, e[11], e[11], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 104, c * 166);
  g[G](c * 133, c * 165, c * 142, c * 168, c * 137, c * 173);
  g[G](c * 127, c * 177, c * 137, c * 195, c * 126, c * 196);
  g[G](c * 112, c * 195, c * 112, c * 194, c * 109, c * 199);
  g[G](c * 105, c * 205, c * 102, c * 195, c * 96, c * 197);
  g[G](c * 84, c * 201, c * 88, c * 198, c * 90, c * 187);
  g[G](c * 96, c * 171, c * 97, c * 170, c * 103, c * 167);
  g[X]();
  jc(g, e[9], e[10], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105, c * 168);
  g[G](c * 118, c * 172.5, c * 118, c * 172.5, c * 131, c * 177);
  g[G](c * 133, c * 190, c * 132, c * 199, c * 116, c * 194);
  g[G](c * 110, c * 182, c * 110, c * 182, c * 104, c * 170);
  g[X]();
  jc(g, e[10]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 169);
  g[G](c * 100.5, c * 182, c * 100.5, c * 182, c * 99, c * 195);
  g[G](c * 93.5, c * 196.5, c * 93.5, c * 196.5, c * 88, c * 198);
  g[G](c * 94, c * 176, c * 96, c * 174, c * 101, c * 168);
  g[X]();
  jc(g, e[9], e[9], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 64, c * 107);
  g[G](c * 64, c * 101, c * 64, c * 101, c * 64, c * 95);
  g[G](c * 57, c * 86, c * 57, c * 84, c * 53, c * 97);
  g[G](c * 55, c * 103.5, c * 55, c * 103.5, c * 57, c * 110);
  g[X]();
  jc(g, e[11], e[11], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 40, c * 108);
  g[G](c * 46.5, c * 111, c * 46.5, c * 111, c * 53, c * 114);
  g[G](c * 50.5, c * 117, c * 50.5, c * 117, c * 48, c * 120);
  g[G](c * 40.5, c * 117.5, c * 40.5, c * 117.5, c * 33, c * 115);
  g[G](c * 36, c * 112, c * 36, c * 112, c * 39, c * 109);
  g[X]();
  jc(g, e[11], e[11], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 189, c * 106);
  g[G](c * 178.5, c * 110.5, c * 178.5, c * 110.5, c * 168, c * 115);
  g[G](c * 168.5, c * 119, c * 168.5, c * 119, c * 169, c * 123);
  g[G](c * 179, c * 124.5, c * 179, c * 124.5, c * 189, c * 126);
  g[G](c * 182, c * 118, c * 183, c * 115, c * 188, c * 106);
  g[X]();
  jc(g, e[8]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 69, c * 178);
  g[G](c * 69, c * 141, c * 70, c * 136, c * 77, c * 137);
  g[G](c * 88, c * 133, c * 101, c * 134, c * 108, c * 137);
  jc(g, undefined, e[3], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 55, c * 161);
  g[G](c * 54, c * 124, c * 55, c * 119, c * 62, c * 119);
  g[G](c * 74, c * 117, c * 85, c * 117, c * 93, c * 119);
  jc(g, undefined, e[3], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 91, c * 29);
  g[G](c * 74, c * 33, c * 62, c * 46, c * 57, c * 54);
  g[G](c * 57, c * 63, c * 68, c * 76, c * 77, c * 87);
  jc(g, undefined, e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 107, c * 33);
  g[G](c * 82, c * 51, c * 80, c * 52, c * 79, c * 59);
  g[G](c * 78, c * 65, c * 93, c * 86, c * 101, c * 93);
  jc(g, undefined, e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 130, c * 98);
  g[G](c * 126.5, c * 103, c * 126.5, c * 103, c * 123, c * 108);
  g[G](c * 133.5, c * 107, c * 133.5, c * 107, c * 144, c * 106);
  g[G](c * 138.5, c * 110, c * 138.5, c * 110, c * 133, c * 114);
  g[G](c * 142, c * 114, c * 142, c * 114, c * 151, c * 114);
  g[G](c * 146.5, c * 119.5, c * 146.5, c * 119.5, c * 142, c * 125);
  g[G](c * 146.5, c * 127, c * 146.5, c * 127, c * 151, c * 129);
  g[G](c * 147.5, c * 132, c * 147.5, c * 132, c * 144, c * 135);
  g[G](c * 148, c * 137, c * 148, c * 137, c * 152, c * 139);
  g[G](c * 149, c * 142.5, c * 149, c * 142.5, c * 146, c * 146);
  jc(g, undefined, e[3], c * 4);
  return f;
}
function xd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 118;
  f.height = c * 114;
  g[Ia](0, c * 10);
  lc(g, c * 42, c * 43, c * 24.758836806279895);
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 65, c * 90);
  g[G](c * 72, c * 91, c * 75, c * 92, c * 71, c * 96);
  g[G](c * 65, c * 98, c * 65, c * 94, c * 65, c * 91);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87, c * 45);
  g[G](c * 108, c * 59, c * 100, c * 86, c * 85, c * 91);
  g[G](c * 80, c * 96, c * 68, c * 95, c * 58, c * 87);
  g[G](c * 53, c * 80, c * 61, c * 64, c * 66, c * 58);
  g[G](c * 73, c * 48, c * 78, c * 44, c * 87, c * 45);
  g[X]();
  jc(g, e[0]);
  g[Ia](0, c * -10);
  lc(g, c * 42, c * 43, c * 24.758836806279895);
  jc(g, e[1], e[2], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 65, c * 90);
  g[G](c * 72, c * 91, c * 75, c * 92, c * 71, c * 96);
  g[G](c * 65, c * 98, c * 65, c * 94, c * 65, c * 91);
  g[X]();
  jc(g, e[1], e[2], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87, c * 45);
  g[G](c * 108, c * 59, c * 100, c * 86, c * 85, c * 91);
  g[G](c * 80, c * 96, c * 68, c * 95, c * 58, c * 87);
  g[G](c * 53, c * 80, c * 61, c * 64, c * 66, c * 58);
  g[G](c * 73, c * 48, c * 78, c * 44, c * 87, c * 45);
  g[X]();
  jc(g, e[1], e[2], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 52, c * 16);
  g[G](c * 55, c * 19, c * 54, c * 20, c * 55, c * 22);
  g[G](c * 52, c * 24.5, c * 52, c * 24.5, c * 49, c * 27);
  g[G](c * 45, c * 25, c * 45, c * 25, c * 41, c * 23);
  g[G](c * 45, c * 19, c * 48, c * 16, c * 52, c * 16);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 62, c * 30);
  g[G](c * 66, c * 29, c * 64, c * 30, c * 66, c * 30);
  g[G](c * 67, c * 31, c * 67, c * 31, c * 68, c * 32);
  g[G](c * 66.5, c * 33.5, c * 66.5, c * 33.5, c * 65, c * 35);
  g[G](c * 63.5, c * 32.5, c * 63.5, c * 32.5, c * 62, c * 30);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 29, c * 21);
  g[G](c * 31, c * 22, c * 31, c * 26, c * 29, c * 29);
  g[G](c * 26, c * 28.5, c * 26, c * 28.5, c * 23, c * 28);
  g[G](c * 23, c * 26.5, c * 23, c * 26.5, c * 23, c * 25);
  g[G](c * 25, c * 23, c * 25, c * 23, c * 27, c * 21);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 18, c * 36);
  g[G](c * 23, c * 36, c * 24, c * 42, c * 19, c * 46);
  g[G](c * 12, c * 39, c * 15, c * 38, c * 18, c * 37);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 30, c * 34);
  g[G](c * 35, c * 36, c * 36, c * 39, c * 32, c * 45);
  g[G](c * 25, c * 46, c * 25, c * 44, c * 30, c * 34);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 59, c * 35);
  g[G](c * 58, c * 27, c * 57, c * 27, c * 52, c * 31);
  g[G](c * 50, c * 36, c * 53, c * 38, c * 58, c * 36);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 63, c * 46);
  g[G](c * 64.5, c * 46.5, c * 64.5, c * 46.5, c * 66, c * 47);
  g[G](c * 70, c * 50, c * 70, c * 53, c * 61, c * 55);
  g[G](c * 62, c * 50.5, c * 62, c * 50.5, c * 63, c * 46);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 41, c * 42);
  g[G](c * 47, c * 41, c * 53, c * 47, c * 46, c * 51);
  g[G](c * 38, c * 49, c * 39, c * 46, c * 41, c * 43);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 44, c * 57);
  g[G](c * 54, c * 57, c * 54, c * 58, c * 55, c * 61);
  g[G](c * 54, c * 63, c * 52, c * 64, c * 48, c * 65);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 20, c * 52);
  g[G](c * 25, c * 51, c * 27, c * 50, c * 28, c * 54);
  g[G](c * 27, c * 58, c * 24, c * 58, c * 22, c * 58);
  g[G](c * 21, c * 55.5, c * 21, c * 55.5, c * 20, c * 53);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 30, c * 61);
  g[G](c * 37, c * 61, c * 39, c * 63, c * 39, c * 68);
  g[G](c * 36, c * 68.5, c * 36, c * 68.5, c * 33, c * 69);
  g[G](c * 30.5, c * 67.5, c * 30.5, c * 67.5, c * 28, c * 66);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 88, c * 45);
  g[G](c * 90, c * 46.5, c * 90, c * 46.5, c * 92, c * 48);
  g[G](c * 92, c * 50, c * 92, c * 50, c * 92, c * 52);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 96, c * 53);
  g[G](c * 97.5, c * 55, c * 97.5, c * 55, c * 99, c * 57);
  g[G](c * 97.5, c * 59.5, c * 97.5, c * 59.5, c * 96, c * 62);
  g[G](c * 93.5, c * 60.5, c * 93.5, c * 60.5, c * 91, c * 59);
  g[G](c * 91.5, c * 57, c * 91.5, c * 57, c * 92, c * 55);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 92, c * 71);
  g[G](c * 94.5, c * 70.5, c * 94.5, c * 70.5, c * 97, c * 70);
  g[G](c * 98.5, c * 72.5, c * 98.5, c * 72.5, c * 100, c * 75);
  g[G](c * 97, c * 76.5, c * 97, c * 76.5, c * 94, c * 78);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 95, c * 82);
  g[G](c * 96, c * 83, c * 96, c * 83, c * 97, c * 84);
  g[G](c * 97, c * 85.5, c * 97, c * 85.5, c * 97, c * 87);
  g[G](c * 93.5, c * 87.5, c * 93.5, c * 87.5, c * 90, c * 88);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 86, c * 72);
  g[G](c * 89, c * 76, c * 88, c * 81, c * 85, c * 82);
  g[G](c * 80, c * 80, c * 82, c * 78, c * 85, c * 72);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 80, c * 86);
  g[G](c * 84, c * 88, c * 86, c * 88, c * 85, c * 93);
  g[G](c * 80, c * 96, c * 79, c * 96, c * 76, c * 91);
  g[X]();
  jc(g, e[3], e[4], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 84, c * 46);
  g[G](c * 93, c * 51, c * 91, c * 62, c * 80, c * 78);
  g[G](c * 74, c * 86, c * 66, c * 90, c * 60, c * 86);
  g[G](c * 55, c * 79, c * 57, c * 73, c * 67, c * 57);
  g[G](c * 71, c * 51, c * 79, c * 44, c * 84, c * 46);
  g[X]();
  jc(g, e[5], e[6], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 76, c * 60);
  g[G](c * 80, c * 66, c * 75, c * 74, c * 68, c * 74);
  g[G](c * 60, c * 64, c * 68, c * 59, c * 76, c * 59);
  g[X]();
  jc(g, e[7], e[8], c * 5);
  return f;
}
function yd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = c * 70;
  var m = c * 90;
  var n = c * 4;
  var o = c * 5;
  f.width = k;
  f.height = m;
  i[g]();
  i[Ia](c * -80, c * -70 + o);
  i[ua] = 0.5;
  i[Y]();
  i[G](c * 130, c * 79, c * 132, c * 86, c * 130, c * 93);
  i[G](c * 128, c * 100, c * 121, c * 107, c * 120, c * 107);
  i[G](c * 120, c * 107, c * 115, c * 98, c * 115, c * 92);
  i[G](c * 115, c * 86, c * 119, c * 76, c * 127, c * 73);
  i[X]();
  jc(i, "#0d1b1c");
  i[Qa]();
  i[g]();
  i[Ia](c * -80, c * -70 + o);
  i[ua] = 0.5;
  i[Y]();
  i[G](c * 112, c * 109, c * 111, c * 100, c * 106, c * 93);
  i[G](c * 104, c * 90, c * 91, c * 87, c * 91, c * 87);
  i[G](c * 91, c * 88, c * 91, c * 96, c * 94, c * 102);
  i[G](c * 97, c * 108, c * 106, c * 112, c * 113, c * 112);
  i[X]();
  jc(i, "#0d1b1c");
  i[Qa]();
  i[g]();
  i[Ia](c * -80, c * -70 + o);
  i[ua] = 0.5;
  i[Y]();
  i[G](c * 108, c * 120, c * 100, c * 119, c * 91, c * 127);
  i[G](c * 83, c * 134, c * 82, c * 146, c * 83, c * 146);
  i[G](c * 84, c * 146, c * 98, c * 142, c * 103, c * 138);
  i[G](c * 107, c * 135, c * 110, c * 130, c * 112, c * 121);
  i[X]();
  jc(i, "#0d1b1c");
  i[Qa]();
  i[g]();
  i[Ia](c * 3, c * -93 + o);
  i[ra](Math[D] / 5);
  i[ua] = 0.5;
  i[Y]();
  i[G](c * 130, c * 79, c * 132, c * 86, c * 130, c * 93);
  i[G](c * 128, c * 100, c * 121, c * 107, c * 120, c * 107);
  i[G](c * 120, c * 107, c * 115, c * 98, c * 115, c * 92);
  i[G](c * 115, c * 86, c * 119, c * 76, c * 127, c * 73);
  i[X]();
  jc(i, "#0d1b1c");
  i[Qa]();
  i[g]();
  i[Ia](c * -80, c * -70);
  i[ua] = 1;
  i[Y]();
  i[G](c * 130, c * 79, c * 132, c * 86, c * 130, c * 93);
  i[G](c * 128, c * 100, c * 121, c * 107, c * 120, c * 107);
  i[G](c * 120, c * 107, c * 115, c * 98, c * 115, c * 92);
  i[G](c * 115, c * 86, c * 119, c * 76, c * 127, c * 73);
  i[X]();
  jc(i, e[0], e[1], n);
  i[Qa]();
  i[g]();
  i[Ia](c * -80, c * -70);
  i[ua] = 1;
  i[Y]();
  i[G](c * 112, c * 109, c * 111, c * 100, c * 106, c * 93);
  i[G](c * 104, c * 90, c * 91, c * 87, c * 91, c * 87);
  i[G](c * 91, c * 88, c * 91, c * 96, c * 94, c * 102);
  i[G](c * 97, c * 108, c * 106, c * 112, c * 113, c * 112);
  i[X]();
  jc(i, e[0], e[1], n);
  i[Qa]();
  i[g]();
  i[Ia](c * -80, c * -70);
  i[ua] = 1;
  i[Y]();
  i[G](c * 108, c * 120, c * 100, c * 119, c * 91, c * 127);
  i[G](c * 83, c * 134, c * 82, c * 146, c * 83, c * 146);
  i[G](c * 84, c * 146, c * 98, c * 142, c * 103, c * 138);
  i[G](c * 107, c * 135, c * 110, c * 130, c * 112, c * 121);
  i[X]();
  jc(i, e[0], e[1], n);
  i[Qa]();
  i[g]();
  i[Ia](c * 3, c * -93);
  i[ra](Math[D] / 5);
  i[ua] = 1;
  i[Y]();
  i[G](c * 130, c * 79, c * 132, c * 86, c * 130, c * 93);
  i[G](c * 128, c * 100, c * 121, c * 107, c * 120, c * 107);
  i[G](c * 120, c * 107, c * 115, c * 98, c * 115, c * 92);
  i[G](c * 115, c * 86, c * 119, c * 76, c * 127, c * 73);
  i[X]();
  jc(i, e[0], e[1], n);
  i[Qa]();
  return f;
}
function zd(c, e, f, g, i, k, n, o, q, r, s) {
  if (s === undefined) {
    s = 0;
  }
  var t = document[p]("canvas");
  var u = t[T]("2d");
  k = k ? k * c : 0;
  var v = Math[A](c * f);
  u[U] = v + "px Baloo Paaji";
  u[ea] = "round";
  o *= c;
  var z = n ? o * 2 : 0;
  if (q) {
    var B = Math[ta](u[ka](e).width + c * 2 + z, q);
  } else {
    B = u[ka](e).width + c * 2 + z + s * c * 2;
  }
  v = (v + k + s) * c + z;
  t.width = B;
  t.height = v;
  if (n) {
    u[d] = n;
    kc(u, 0, 0, B, v, o * 2);
    u[xa]();
    u[Ia](o, o);
  }
  u[oa] = "middle";
  u[U] = f + "px Baloo Paaji";
  u[ea] = "round";
  if (i) {
    u[Y]();
    u[d] = i;
    u[sa](e, 0, v / 2 + k - z / 2, B);
  }
  u[Y]();
  if (r) {
    u[S] = r;
    u[m] = s;
    u[la](e, s, (v - z) / 2, B);
  }
  u[d] = g;
  u[sa](e, s, (v - z) / 2, B);
  return t;
}
function Ad(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 220;
  var k = c * 230;
  var m = c * 100;
  var n = m / 4;
  var o = c * 20;
  f.width = i;
  f.height = k;
  g[Ia](i / 2, k / 2 + o);
  g[ua] = 0.5;
  nc(g, 7, m, n);
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, -o);
  nc(g, 7, m, n);
  jc(g, e[1]);
  nc(g, 6, m * 0.65, n * 0.65);
  jc(g, e[2]);
  return f;
}
function Bd(c, d, e, f) {
  var g = document[p]("canvas");
  var i = g[T]("2d");
  var k = c * 220;
  var m = c * 220;
  var n = c * 100;
  var o = n / 4;
  g.width = k;
  g.height = m;
  i[Ia](k / 2, m / 2);
  i[ua] = d ? 0.5 : 1;
  if (!d) {
    i[Ia](c * 0, c * -8);
  }
  nc(i, 7, n, o);
  jc(i, d ? e[0] : e[1]);
  i[ua] = 1;
  if (f == 0) {
    nc(i, 6, n * 0.65, o * 0.65);
    jc(i, e[2]);
  } else if (f == 1) {
    i[Ia](c * 20, c * 20);
    nc(i, 6, n * 0.45, o * 0.4);
    jc(i, e[2]);
  }
  return g;
}
function Cd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = c * 120;
  var m = c * 150;
  var n = c * 60;
  var o = n / 4;
  var q = c * 15;
  f.width = k;
  f.height = m;
  i[g]();
  i[Ia](k / 2 + c * 0, m / 2 + c * 0 + q);
  i[ra](Math[D] / 3);
  i[ua] = 0.5;
  nc(i, 8, n, o);
  jc(i, e[0]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 - c * 11, m / 2 + c * 12);
  i[ua] = 1;
  i[ra](Math[D] / 3);
  i[Ia](0, -q);
  nc(i, 8, n, o);
  jc(i, e[1]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 - c * 9, m / 2 - c * 12);
  i[ra](Math[D] / 2.8);
  nc(i, 5, n * 0.5, o * 0.4);
  jc(i, e[2]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 + c * 19, m / 2 + c * 5);
  i[ra](Math[D] / 1);
  nc(i, 5, n * 0.5, o * 0.4);
  jc(i, e[2]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 - c * 8, m / 2 + c * 20);
  i[ra](Math[D] / 2.25);
  nc(i, 5, n * 0.5, o * 0.4);
  jc(i, e[2]);
  i[Qa]();
  return f;
}
function Dd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = c * 180;
  var m = c * 210;
  var n = (q = c * 60) / 4;
  var o = c * 20;
  f.width = k;
  f.height = m;
  i[g]();
  i[Ia](k / 2 - c * 0, m / 2 - c * 35 + o);
  i[ra](Math[D] / -1.8);
  i[ua] = 0.5;
  i[Ia](c * 0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[0]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 + c * 10, m / 2 + c * 15 + o);
  i[ra](Math[D] / 2);
  i[ua] = 0.5;
  i[Ia](c * 0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[0]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 - c * 50, m / 2 + c * 40 + o);
  i[ra](Math[D] / 3);
  i[ua] = 0.5;
  i[Ia](0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[0]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 - c * 0, m / 2 - c * 35);
  i[ra](Math[D] / -1.8);
  i[ua] = 1;
  i[Ia](c * 0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[1]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 + c * 10, m / 2 + c * 15);
  i[ra](Math[D] / 2);
  i[ua] = 1;
  i[Ia](0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[1]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 - c * 50, m / 2 + c * 40);
  i[ra](Math[D] / 3);
  i[ua] = 1;
  i[Ia](0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[1]);
  i[Qa]();
  var q;
  n = (q = c * 30) / 4;
  i[g]();
  i[Ia](k / 2 + c * 5, m / 2 - c * 20);
  i[ra](Math[D] / -1.8);
  i[ua] = 1;
  i[Ia](0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[2]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 + c * 0, m / 2 + c * 10);
  i[ra](Math[D] / 2);
  i[ua] = 1;
  i[Ia](0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[2]);
  i[Qa]();
  i[g]();
  i[Ia](k / 2 - c * 45, m / 2 + c * 35);
  i[ra](Math[D] / 3);
  i[ua] = 1;
  i[Ia](0, c * -20);
  nc(i, 5, q, n);
  jc(i, e[2]);
  i[Qa]();
  lc(i, k / 2 - c * 7, m / 2 + c * 7, 5);
  jc(i, e[2]);
  return f;
}
function Ed(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 140;
  var k = c * 150;
  var m = c * 10;
  var n = c * 4;
  f.width = i;
  f.height = k;
  g[Ia](c * -50, c * -38 + m);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[G](c * 160, c * 65, c * 160, c * 85, c * 152, c * 95);
  g[G](c * 152, c * 95, c * 173, c * 94, c * 187, c * 102);
  g[G](c * 187, c * 102, c * 180, c * 120, c * 155, c * 126);
  g[G](c * 154, c * 126, c * 166, c * 138, c * 169, c * 148);
  g[G](c * 169, c * 148, c * 148, c * 152, c * 133, c * 140);
  g[G](c * 133, c * 140, c * 134, c * 160, c * 122, c * 175);
  g[G](c * 122, c * 175, c * 107, c * 162, c * 107, c * 144);
  g[G](c * 107, c * 144, c * 98, c * 164, c * 73, c * 167);
  g[G](c * 73, c * 167, c * 72, c * 134, c * 90, c * 127);
  g[G](c * 90, c * 127, c * 70, c * 134, c * 55, c * 123);
  g[G](c * 55, c * 123, c * 58, c * 115, c * 75, c * 104);
  g[G](c * 75, c * 104, c * 66, c * 96, c * 61, c * 77);
  g[G](c * 61, c * 77, c * 83, c * 74, c * 102, c * 89);
  g[G](c * 102, c * 89, c * 92, c * 66, c * 110, c * 41);
  g[G](c * 111, c * 40, c * 130, c * 54, c * 130, c * 82);
  g[G](c * 130, c * 82, c * 143, c * 67, c * 159, c * 65);
  g[X]();
  jc(g, e[0]);
  g[Ia](0, 0 - m);
  g[ua] = 1;
  g[Y]();
  g[G](c * 160, c * 65, c * 160, c * 85, c * 152, c * 95);
  g[G](c * 152, c * 95, c * 173, c * 94, c * 187, c * 102);
  g[G](c * 187, c * 102, c * 180, c * 120, c * 155, c * 126);
  g[G](c * 154, c * 126, c * 166, c * 138, c * 169, c * 148);
  g[G](c * 169, c * 148, c * 148, c * 152, c * 133, c * 140);
  g[G](c * 133, c * 140, c * 134, c * 160, c * 122, c * 175);
  g[G](c * 122, c * 175, c * 107, c * 162, c * 107, c * 144);
  g[G](c * 107, c * 144, c * 98, c * 164, c * 73, c * 167);
  g[G](c * 73, c * 167, c * 72, c * 134, c * 90, c * 127);
  g[G](c * 90, c * 127, c * 70, c * 134, c * 55, c * 123);
  g[G](c * 55, c * 123, c * 58, c * 115, c * 75, c * 104);
  g[G](c * 75, c * 104, c * 66, c * 96, c * 61, c * 77);
  g[G](c * 61, c * 77, c * 83, c * 74, c * 102, c * 89);
  g[G](c * 102, c * 89, c * 92, c * 66, c * 110, c * 41);
  g[G](c * 111, c * 40, c * 130, c * 54, c * 130, c * 82);
  g[G](c * 130, c * 82, c * 143, c * 67, c * 159, c * 65);
  g[X]();
  jc(g, e[1], e[2], n);
  return f;
}
function Fd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = c * 18;
  var m = c * 18;
  f.width = k;
  f.height = m;
  var n = c * 9;
  var o = c * 9;
  var q = c * 8;
  i[g]();
  i[Ia](n, o);
  i[ua] = 1;
  lc(i, 0, 0, q);
  jc(i, e[0]);
  q = c * 3;
  n = 0;
  o = c * -3;
  i[Ia](n, o);
  i[ua] = 1;
  lc(i, 0, 0, q);
  jc(i, e[1]);
  i[Qa]();
  return f;
}
function Gd(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 80;
  e.height = c * 100;
  f[I](0.5, 0.5);
  f[Ia](10, 15);
  f[ua] = 0.5;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 47, c * 5);
  f[G](c * 19, c * 30, c * 12, c * 42, c * 10, c * 55);
  f[G](c * 11, c * 75, c * 27, c * 76, c * 36, c * 72);
  f[G](c * 52, c * 60, c * 53, c * 46, c * 54, c * 31);
  f[G](c * 53, c * 14, c * 50, c * 9, c * 48, c * 6);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 17, c * 70);
  f[G](c * 18, c * 77, c * 10, c * 83, c * 4, c * 87);
  jc(f, undefined, d[0], c * 10);
  f[Ia](0, -10);
  f[ua] = 1;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 47, c * 5);
  f[G](c * 19, c * 30, c * 12, c * 42, c * 10, c * 55);
  f[G](c * 11, c * 75, c * 27, c * 76, c * 36, c * 72);
  f[G](c * 52, c * 60, c * 53, c * 46, c * 54, c * 31);
  f[G](c * 53, c * 14, c * 50, c * 9, c * 48, c * 6);
  f[X]();
  jc(f, d[1], d[2], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 17, c * 70);
  f[G](c * 18, c * 77, c * 10, c * 83, c * 4, c * 87);
  jc(f, undefined, d[2], c * 8);
  f[ua] = 0.5;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 17, c * 70);
  f[G](c * 33, c * 52, c * 39, c * 33, c * 48, c * 7);
  jc(f, undefined, d[2], c * 8);
  return e;
}
function Gd(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 234;
  e.height = c * 183;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 76, c * 25);
  f[G](c * 150, c * 3, c * 181, c * 22, c * 203, c * 41);
  f[G](c * 225, c * 63, c * 225, c * 105, c * 198, c * 133);
  f[G](c * 179, c * 157, c * 134, c * 178, c * 81, c * 164);
  f[G](c * 19, c * 148, c * 6, c * 95, c * 21, c * 66);
  f[G](c * 34, c * 39, c * 52, c * 33, c * 75, c * 25);
  f[X]();
  jc(f, d[0], d[0], c * 4);
  return e;
}
function Hd(c, d, e, f, g) {
  var i = document[p]("canvas");
  var k = i[T]("2d");
  if (f == 0) {
    var m = c * 270;
    var n = c * 250;
    i.width = m;
    i.height = n;
    k[Y]();
    k[K](c * 140, c * 3);
    k[Ia](c * -25, c * -20);
    k[G](c * 218, c * 31, c * 251, c * 61, c * 265, c * 85);
    k[G](c * 278, c * 108, c * 295, c * 160, c * 285, c * 195);
    k[G](c * 271, c * 242, c * 213, c * 268, c * 188, c * 266);
    k[G](c * 139, c * 262, c * 70, c * 244, c * 47, c * 204);
    k[G](c * 20, c * 158, c * 35, c * 78, c * 59, c * 56);
    k[G](c * 90, c * 28, c * 124, c * 23, c * 140, c * 23);
    k[X]();
    jc(k, e[0]);
  } else if (f == 1) {
    m = c * 430;
    n = c * 350;
    i.width = m;
    i.height = n;
    k[Y]();
    k[K](c * 180, c * 5);
    k[Ia](c * -30, c * -60);
    k[G](c * 283, c * 60, c * 265, c * 163, c * 335, c * 206);
    k[G](c * 376, c * 231, c * 492, c * 299, c * 434, c * 357);
    k[G](c * 371, c * 421, c * 289, c * 394, c * 255, c * 386);
    k[G](c * 218, c * 377, c * 91, c * 359, c * 50, c * 272);
    k[G](c * 12, c * 192, c * 107, c * 75, c * 178, c * 69);
    k[X]();
    jc(k, e[0]);
  } else if (f == 2) {
    m = c * 400;
    n = c * 300;
    i.width = m;
    i.height = n;
    k[Y]();
    k[K](c * 80, c * 52);
    k[Ia](c * -40, c * -30);
    k[G](c * 124, c * 77, c * 241, c * 22, c * 311, c * 65);
    k[G](c * 352, c * 90, c * 404, c * 176, c * 346, c * 234);
    k[G](c * 283, c * 298, c * 179, c * 299, c * 145, c * 291);
    k[G](c * 108, c * 282, c * 100, c * 239, c * 63, c * 205);
    k[G](c * 37, c * 181, c * 45, c * 131, c * 80, c * 107);
    k[X]();
    jc(k, e[0]);
  }
  return i;
}
function Id(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * d * 2;
  var k = c * d * 2;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  g[Ia](m, n);
  lc(g, 0, 0, d * c);
  jc(g, e);
  return f;
}
function Jd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 373;
  f.height = c * 314;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 184.048583984375, c * 69.1805419921875);
  kc(i, c * -40, c * -28.5, c * 80, c * 57, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 185.048583984375, c * 61.6805419921875);
  i[G](c * 145.048583984375, c * 59.6805419921875, c * 138.048583984375, c * 41.6805419921875, c * 148.048583984375, c * 33.6805419921875);
  i[G](c * 169.048583984375, c * 17.6805419921875, c * 194.048583984375, c * 20.6805419921875, c * 210.048583984375, c * 27.6805419921875);
  i[G](c * 234.048583984375, c * 40.6805419921875, c * 225.048583984375, c * 57.6805419921875, c * 186.048583984375, c * 61.6805419921875);
  i[X]();
  jc(i, e[0], e[0], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 224.048583984375, c * 56.6805419921875);
  i[G](c * 326.048583984375, c * 69.6805419921875, c * 363.048583984375, c * 148.6805419921875, c * 349.048583984375, c * 206.6805419921875);
  i[G](c * 329.048583984375, c * 278.6805419921875, c * 252.048583984375, c * 283.6805419921875, c * 206.048583984375, c * 275.6805419921875);
  i[G](c * 206.548583984375, c * 266.6805419921875, c * 206.548583984375, c * 266.6805419921875, c * 207.048583984375, c * 257.6805419921875);
  i[G](c * 276.048583984375, c * 268.6805419921875, c * 308.048583984375, c * 239.6805419921875, c * 323.048583984375, c * 208.6805419921875);
  i[G](c * 352.048583984375, c * 145.6805419921875, c * 292.048583984375, c * 86.6805419921875, c * 223.048583984375, c * 74.6805419921875);
  i[X]();
  jc(i, e[0], e[0], c * 6);
  i[g]();
  i[Ia](c * 183.548583984375, c * 119.6805419921875);
  kc(i, c * -121.5, c * -45, c * 243, c * 90, c * 40);
  i[Qa]();
  jc(i, e[0], e[0], c * 6);
  i[g]();
  i[Ia](c * 183.048583984375, c * 155.6805419921875);
  kc(i, c * -121, c * -52, c * 242, c * 104, c * 40);
  i[Qa]();
  jc(i, e[0], e[0], c * 6);
  i[g]();
  i[Ia](c * 183.048583984375, c * 205.1805419921875);
  kc(i, c * -121, c * -50.5, c * 242, c * 101, c * 40);
  i[Qa]();
  jc(i, e[0], e[0], c * 6);
  i[g]();
  i[Ia](c * 185.048583984375, c * 204.1805419921875);
  kc(i, c * -100, c * -34.5, c * 200, c * 69, c * 40);
  i[Qa]();
  jc(i, e[0], e[0], c * 6);
  lc(i, c * 185.048583984375, c * 257.6805419921875, c * 27.018512172212592);
  jc(i, e[0], e[0], c * 6);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 224.048583984375, c * 56.6805419921875);
  i[G](c * 326.048583984375, c * 69.6805419921875, c * 363.048583984375, c * 148.6805419921875, c * 349.048583984375, c * 206.6805419921875);
  i[G](c * 329.048583984375, c * 278.6805419921875, c * 252.048583984375, c * 283.6805419921875, c * 206.048583984375, c * 275.6805419921875);
  i[G](c * 206.548583984375, c * 266.6805419921875, c * 206.548583984375, c * 266.6805419921875, c * 207.048583984375, c * 257.6805419921875);
  i[G](c * 276.048583984375, c * 268.6805419921875, c * 308.048583984375, c * 239.6805419921875, c * 323.048583984375, c * 208.6805419921875);
  i[G](c * 352.048583984375, c * 145.6805419921875, c * 292.048583984375, c * 86.6805419921875, c * 223.048583984375, c * 74.6805419921875);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[g]();
  i[Ia](c * 184.048583984375, c * 69.1805419921875);
  kc(i, c * -40, c * -28.5, c * 80, c * 57, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 185.048583984375, c * 61.6805419921875);
  i[G](c * 145.048583984375, c * 59.6805419921875, c * 138.048583984375, c * 41.6805419921875, c * 148.048583984375, c * 33.6805419921875);
  i[G](c * 169.048583984375, c * 17.6805419921875, c * 194.048583984375, c * 20.6805419921875, c * 210.048583984375, c * 27.6805419921875);
  i[G](c * 234.048583984375, c * 40.6805419921875, c * 225.048583984375, c * 57.6805419921875, c * 186.048583984375, c * 61.6805419921875);
  i[X]();
  jc(i, e[1], e[2], c * 6);
  i[g]();
  i[Ia](c * 183.548583984375, c * 119.6805419921875);
  kc(i, c * -121.5, c * -45, c * 243, c * 90, c * 40);
  i[Qa]();
  jc(i, e[5], e[4], c * 6);
  i[g]();
  i[Ia](c * 183.048583984375, c * 155.6805419921875);
  kc(i, c * -121, c * -52, c * 242, c * 104, c * 40);
  i[Qa]();
  jc(i, e[3], e[4], c * 6);
  i[g]();
  i[Ia](c * 183.048583984375, c * 205.1805419921875);
  kc(i, c * -121, c * -50.5, c * 242, c * 101, c * 40);
  i[Qa]();
  jc(i, e[6], e[4], c * 6);
  i[Sa] = "destination-out";
  i[g]();
  i[Ia](c * 185.048583984375, c * 204.1805419921875);
  kc(i, c * -100, c * -34.5, c * 200, c * 69, c * 40);
  i[Qa]();
  jc(i, e[7], e[8], c * 6);
  i[Sa] = "source-over";
  i[ua] = 0.5;
  i[g]();
  i[Ia](c * 185.048583984375, c * 204.1805419921875);
  kc(i, c * -100, c * -34.5, c * 200, c * 69, c * 40);
  i[Qa]();
  jc(i, e[7], e[8], c * 6);
  i[ua] = 1;
  i[g]();
  lc(i, c * 185.048583984375, c * 257.6805419921875, c * 27.018512172212592);
  jc(i, e[3], e[4], c * 6);
  i[Qa]();
  return f;
}
function Kd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 220;
  f.height = c * 180;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * -90, c * -150);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 104, c * 237.8000030517578);
  g[G](c * 110, c * 237.8000030517578, c * 110, c * 237.8000030517578, c * 116, c * 237.8000030517578);
  g[G](c * 116, c * 241.8000030517578, c * 116, c * 241.8000030517578, c * 116, c * 245.8000030517578);
  g[G](c * 115, c * 245.3000030517578, c * 115, c * 245.3000030517578, c * 114, c * 244.8000030517578);
  g[G](c * 109.5, c * 244.8000030517578, c * 109.5, c * 244.8000030517578, c * 105, c * 244.8000030517578);
  g[X]();
  jc(g, e[5], e[5], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 115, c * 211.20000457763672);
  g[G](c * 106, c * 216.20000457763672, c * 101, c * 234.20000457763672, c * 102, c * 241.20000457763672);
  g[G](c * 102, c * 260.2000045776367, c * 115, c * 269.2000045776367, c * 115, c * 269.2000045776367);
  g[G](c * 116, c * 265.2000045776367, c * 115.5, c * 265.2000045776367, c * 116, c * 261.2000045776367);
  g[G](c * 112, c * 264, c * 108, c * 254, c * 106, c * 242);
  g[G](c * 105, c * 232, c * 110, c * 222, c * 115, c * 218);
  g[G](c * 116, c * 216.75, c * 115.5, c * 217.375, c * 116, c * 216.75);
  g[X]();
  jc(g, e[5], e[5], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 120, c * 207);
  g[G](c * 115, c * 206, c * 114, c * 209, c * 114, c * 211);
  g[G](c * 114, c * 268, c * 114, c * 241, c * 114, c * 271);
  g[G](c * 115, c * 276, c * 118, c * 276, c * 120, c * 276);
  g[G](c * 122, c * 273, c * 120.5, c * 274.5, c * 121, c * 273);
  g[G](c * 121, c * 241, c * 121, c * 241, c * 121, c * 209);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 284, c * 238);
  g[G](c * 289.5, c * 238, c * 289.5, c * 238, c * 295, c * 238);
  g[G](c * 295, c * 241.5, c * 295, c * 241.5, c * 295, c * 245);
  g[G](c * 289.5, c * 245, c * 289.5, c * 245, c * 284, c * 245);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 283, c * 211);
  g[G](c * 293, c * 216, c * 297, c * 231, c * 297, c * 241);
  g[G](c * 298, c * 254, c * 290, c * 265, c * 284, c * 269);
  g[G](c * 283, c * 266, c * 283.5, c * 266, c * 283, c * 263);
  g[G](c * 290, c * 260, c * 292, c * 251, c * 293, c * 242);
  g[G](c * 292, c * 223, c * 289, c * 224, c * 284, c * 218);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 280, c * 206);
  g[G](c * 284, c * 206, c * 285, c * 208, c * 285, c * 211);
  g[G](c * 285, c * 241.5, c * 285, c * 241.5, c * 285, c * 272);
  g[G](c * 284, c * 275, c * 284, c * 275, c * 280, c * 275);
  g[G](c * 279, c * 273.5, c * 279, c * 273.5, c * 278, c * 272);
  g[G](c * 278, c * 240.5, c * 278, c * 240.5, c * 278, c * 209);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 138, c * 298.40000915527344);
  g[G](c * 141, c * 311.40000915527344, c * 151, c * 314.40000915527344, c * 162, c * 316.40000915527344);
  g[G](c * 224, c * 316.40000915527344, c * 200, c * 315.90000915527344, c * 238, c * 315.40000915527344);
  g[G](c * 254, c * 316.40000915527344, c * 261, c * 306.40000915527344, c * 264, c * 298.40000915527344);
  g[G](c * 255, c * 304.40000915527344, c * 250, c * 306.40000915527344, c * 244, c * 306.40000915527344);
  g[G](c * 201, c * 306.90000915527344, c * 201, c * 306.90000915527344, c * 158, c * 307.40000915527344);
  g[G](c * 150, c * 306.40000915527344, c * 148, c * 306.40000915527344, c * 139, c * 300.40000915527344);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 161, c * 177.5999984741211);
  g[G](c * 130, c * 175.5999984741211, c * 123, c * 190.5999984741211, c * 122, c * 205.5999984741211);
  g[G](c * 121, c * 277.5999984741211, c * 122, c * 242.5999984741211, c * 122, c * 279.5999984741211);
  g[G](c * 128, c * 297.5999984741211, c * 137, c * 299.5999984741211, c * 143, c * 300.5999984741211);
  g[G](c * 163, c * 301.0999984741211, c * 163, c * 301.0999984741211, c * 183, c * 301.5999984741211);
  g[G](c * 150, c * 300.5999984741211, c * 135, c * 290.5999984741211, c * 134, c * 267.5999984741211);
  g[G](c * 133, c * 245.5999984741211, c * 146, c * 235.5999984741211, c * 164, c * 235.5999984741211);
  g[G](c * 206, c * 236.0999984741211, c * 206, c * 236.0999984741211, c * 248, c * 236.5999984741211);
  g[G](c * 266, c * 243.5999984741211, c * 268, c * 259.5999984741211, c * 267, c * 266.5999984741211);
  g[G](c * 266, c * 288.5999984741211, c * 251, c * 294.5999984741211, c * 244, c * 297.5999984741211);
  g[G](c * 228.5, c * 299.5999984741211, c * 228.5, c * 299.5999984741211, c * 213, c * 301.5999984741211);
  g[G](c * 236, c * 301.0999984741211, c * 236, c * 301.0999984741211, c * 259, c * 300.5999984741211);
  g[G](c * 272, c * 295.5999984741211, c * 277, c * 288.5999984741211, c * 278, c * 271.5999984741211);
  g[G](c * 277.5, c * 236.5999984741211, c * 277.5, c * 236.5999984741211, c * 277, c * 201.5999984741211);
  g[G](c * 276, c * 186.5999984741211, c * 265, c * 178.5999984741211, c * 254, c * 177.5999984741211);
  g[G](c * 247.5, c * 177.5999984741211, c * 247.5, c * 177.5999984741211, c * 241, c * 177.5999984741211);
  g[G](c * 255, c * 202.5999984741211, c * 214, c * 217.5999984741211, c * 201, c * 215.5999984741211);
  g[G](c * 170, c * 215.5999984741211, c * 152, c * 197.5999984741211, c * 161, c * 178.5999984741211);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 162, c * 175.5999984741211);
  g[G](c * 153, c * 176.0999984741211, c * 153, c * 176.0999984741211, c * 144, c * 176.5999984741211);
  g[G](c * 125, c * 178.5999984741211, c * 121, c * 196.5999984741211, c * 121, c * 207.5999984741211);
  g[G](c * 121, c * 243.20000076293945, c * 121, c * 243.20000076293945, c * 121, c * 278.8000030517578);
  g[G](c * 126, c * 298.8000030517578, c * 137, c * 300.8000030517578, c * 146, c * 302.8000030517578);
  g[G](c * 200.5, c * 302.8000030517578, c * 200.5, c * 302.8000030517578, c * 255, c * 302.8000030517578);
  g[G](c * 271, c * 301.8000030517578, c * 279, c * 288.8000030517578, c * 279, c * 273.8000030517578);
  g[G](c * 279, c * 236.8000030517578, c * 279, c * 236.8000030517578, c * 279, c * 199.8000030517578);
  g[G](c * 274, c * 178.8000030517578, c * 263, c * 177.8000030517578, c * 255, c * 175.8000030517578);
  g[G](c * 248, c * 175.8000030517578, c * 248, c * 175.8000030517578, c * 241, c * 175.8000030517578);
  g[G](c * 240, c * 175.8000030517578, c * 240, c * 175.8000030517578, c * 239, c * 175.8000030517578);
  g[G](c * 254, c * 200.8000030517578, c * 222, c * 211.8000030517578, c * 202, c * 212.8000030517578);
  g[G](c * 168, c * 213.8000030517578, c * 151, c * 190.8000030517578, c * 163, c * 176.8000030517578);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 198, c * 161.4000015258789);
  g[G](c * 198, c * 186.9000015258789, c * 198, c * 186.9000015258789, c * 198, c * 212.4000015258789);
  g[G](c * 201, c * 212.4000015258789, c * 201, c * 212.4000015258789, c * 204, c * 212.4000015258789);
  g[G](c * 204, c * 186.9000015258789, c * 204, c * 186.9000015258789, c * 204, c * 161.4000015258789);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 161, c * 194);
  g[G](c * 188, c * 169, c * 231, c * 179, c * 241, c * 194);
  g[G](c * 239.5, c * 196, c * 239.5, c * 196, c * 238, c * 198);
  g[G](c * 221, c * 179, c * 182, c * 182, c * 165, c * 198);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 157, c * 188.80000019073486);
  g[G](c * 162, c * 150.80000019073486, c * 241, c * 150.80000019073486, c * 245, c * 188.80000019073486);
  g[G](c * 242, c * 224.80000019073486, c * 162, c * 228.80000019073486, c * 157, c * 188.80000019073486);
  g[G](c * 159, c * 188.80000019073486, c * 159, c * 188.80000019073486, c * 161, c * 188.80000019073486);
  g[G](c * 168, c * 216.80000019073486, c * 231, c * 218.80000019073486, c * 241, c * 188.80000019073486);
  g[G](c * 236, c * 156.80000019073486, c * 169, c * 152.80000019073486, c * 161, c * 188.80000019073486);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 156, c * 188);
  g[G](c * 160, c * 164, c * 183, c * 159, c * 201, c * 158);
  g[G](c * 232, c * 159, c * 244, c * 174, c * 246, c * 188);
  g[G](c * 245, c * 212, c * 213, c * 219, c * 201, c * 218);
  g[G](c * 181, c * 221, c * 158, c * 207, c * 156, c * 190);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 162, c * 189);
  g[G](c * 166, c * 170, c * 185, c * 165, c * 201, c * 164);
  g[G](c * 227, c * 165, c * 240, c * 178, c * 239, c * 188);
  g[G](c * 239, c * 204, c * 210, c * 210, c * 201, c * 210);
  g[G](c * 182, c * 211, c * 166, c * 200, c * 162, c * 190);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 131, c * 262);
  g[G](c * 136, c * 241, c * 144, c * 236, c * 158, c * 233);
  g[G](c * 200.5, c * 233, c * 229, c * 232, c * 243, c * 233);
  g[G](c * 259, c * 235, c * 267, c * 248, c * 269, c * 260);
  g[G](c * 269, c * 266.5, c * 269, c * 266.5, c * 269, c * 273);
  g[G](c * 265, c * 290, c * 251, c * 297, c * 242, c * 298);
  g[G](c * 202, c * 298, c * 202, c * 298, c * 162, c * 298);
  g[G](c * 148, c * 298, c * 136, c * 289, c * 132, c * 273);
  g[G](c * 131.5, c * 268, c * 131.5, c * 268, c * 131, c * 263);
  g[G](c * 135, c * 263, c * 135, c * 263, c * 139, c * 263);
  g[G](c * 139, c * 281, c * 151, c * 287, c * 160, c * 290);
  g[G](c * 200.5, c * 290, c * 200.5, c * 290, c * 241, c * 290);
  g[G](c * 252, c * 290, c * 257, c * 281, c * 262, c * 271);
  g[G](c * 261.5, c * 267, c * 261.5, c * 267, c * 261, c * 263);
  g[G](c * 260, c * 249, c * 251, c * 242, c * 241, c * 241);
  g[G](c * 240.5, c * 240.5, c * 240.5, c * 240.5, c * 240, c * 240);
  g[G](c * 200, c * 240, c * 200, c * 240, c * 160, c * 240);
  g[G](c * 145, c * 244, c * 142, c * 250, c * 139, c * 264);
  g[X]();
  jc(g, e[4], e[4], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 130, c * 264);
  g[G](c * 132, c * 244, c * 144, c * 235, c * 157, c * 232);
  g[G](c * 245, c * 232, c * 201, c * 232, c * 245, c * 232);
  g[G](c * 264, c * 235, c * 269, c * 251, c * 270, c * 264);
  g[G](c * 272, c * 291, c * 248, c * 299, c * 242, c * 299);
  g[G](c * 200, c * 299, c * 200, c * 299, c * 158, c * 299);
  g[G](c * 139, c * 298, c * 130, c * 276, c * 130, c * 265);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 140, c * 265.33333587646484);
  g[G](c * 141, c * 250.33333587646484, c * 148, c * 244.33333587646484, c * 160, c * 241.33333587646484);
  g[G](c * 200, c * 241.33333587646484, c * 200, c * 241.33333587646484, c * 240, c * 241.33333587646484);
  g[G](c * 256, c * 243.33333587646484, c * 260, c * 255.33333587646484, c * 260, c * 265.33333587646484);
  g[G](c * 261, c * 281.33333587646484, c * 247, c * 289.33333587646484, c * 240, c * 289.33333587646484);
  g[G](c * 161, c * 289.33333587646484, c * 200.5, c * 289.33333587646484, c * 161, c * 289.33333587646484);
  g[G](c * 149, c * 288.33333587646484, c * 142, c * 278.33333587646484, c * 140, c * 266.33333587646484);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[ua] = 0.5;
  g[I](1, 1);
  g[Ia](c * 105, c * 155);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 59.27557373046875, c * 20.406280517578125);
  g[G](c * 74.27557373046875, c * 5.406280517578125, c * 90.27557373046875, c * 6.406280517578125, c * 99.27557373046875, c * 5.406280517578125);
  g[G](c * 120.27557373046875, c * 5.406280517578125, c * 126.27557373046875, c * 10.406280517578125, c * 136.27557373046875, c * 20.406280517578125);
  g[G](c * 157.77557373046875, c * 37.906280517578125, c * 157.77557373046875, c * 37.906280517578125, c * 179.27557373046875, c * 55.406280517578125);
  g[G](c * 190.27557373046875, c * 63.406280517578125, c * 192.27557373046875, c * 77.40628051757812, c * 189.27557373046875, c * 91.40628051757812);
  g[G](c * 183.27557373046875, c * 108.40628051757812, c * 176.27557373046875, c * 110.40628051757812, c * 169.27557373046875, c * 118.40628051757812);
  g[G](c * 152.27557373046875, c * 133.40628051757812, c * 152.27557373046875, c * 133.40628051757812, c * 135.27557373046875, c * 148.40628051757812);
  g[G](c * 87.27557373046875, c * 143.40628051757812, c * 87.27557373046875, c * 143.40628051757812, c * 39.27557373046875, c * 138.40628051757812);
  g[G](c * 26.77557373046875, c * 123.40628051757812, c * 26.77557373046875, c * 123.40628051757812, c * 14.27557373046875, c * 108.40628051757812);
  g[G](c * 2.27557373046875, c * 95.40628051757812, c * 2.27557373046875, c * 92.40628051757812, c * 3.27557373046875, c * 83.40628051757812);
  g[G](c * 4.27557373046875, c * 63.406280517578125, c * 12.27557373046875, c * 60.406280517578125, c * 24.27557373046875, c * 40.406280517578125);
  g[X]();
  jc(g, e[5], e[5], c * 4);
  g[ua] = 1;
  g[Ia](c * -110, c * -155);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 104, c * 237.8000030517578);
  g[G](c * 110, c * 237.8000030517578, c * 110, c * 237.8000030517578, c * 116, c * 237.8000030517578);
  g[G](c * 116, c * 241.8000030517578, c * 116, c * 241.8000030517578, c * 116, c * 245.8000030517578);
  g[G](c * 115, c * 245.3000030517578, c * 115, c * 245.3000030517578, c * 114, c * 244.8000030517578);
  g[G](c * 109.5, c * 244.8000030517578, c * 109.5, c * 244.8000030517578, c * 105, c * 244.8000030517578);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 115, c * 211.20000457763672);
  g[G](c * 106, c * 216.20000457763672, c * 101, c * 234.20000457763672, c * 102, c * 241.20000457763672);
  g[G](c * 102, c * 260.2000045776367, c * 115, c * 269.2000045776367, c * 115, c * 269.2000045776367);
  g[G](c * 116, c * 265.2000045776367, c * 115.5, c * 265.2000045776367, c * 116, c * 261.2000045776367);
  g[G](c * 112, c * 264, c * 108, c * 254, c * 106, c * 242);
  g[G](c * 105, c * 232, c * 110, c * 222, c * 115, c * 218);
  g[G](c * 116, c * 216.75, c * 115.5, c * 217.375, c * 116, c * 216.75);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 120, c * 207);
  g[G](c * 115, c * 206, c * 114, c * 209, c * 114, c * 211);
  g[G](c * 114, c * 268, c * 114, c * 241, c * 114, c * 271);
  g[G](c * 115, c * 276, c * 118, c * 276, c * 120, c * 276);
  g[G](c * 122, c * 273, c * 120.5, c * 274.5, c * 121, c * 273);
  g[G](c * 121, c * 241, c * 121, c * 241, c * 121, c * 209);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 284, c * 238);
  g[G](c * 289.5, c * 238, c * 289.5, c * 238, c * 295, c * 238);
  g[G](c * 295, c * 241.5, c * 295, c * 241.5, c * 295, c * 245);
  g[G](c * 289.5, c * 245, c * 289.5, c * 245, c * 284, c * 245);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 283, c * 211);
  g[G](c * 293, c * 216, c * 297, c * 231, c * 297, c * 241);
  g[G](c * 298, c * 254, c * 290, c * 265, c * 284, c * 269);
  g[G](c * 283, c * 266, c * 283.5, c * 266, c * 283, c * 263);
  g[G](c * 290, c * 260, c * 292, c * 251, c * 293, c * 242);
  g[G](c * 292, c * 223, c * 289, c * 224, c * 284, c * 218);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 280, c * 206);
  g[G](c * 284, c * 206, c * 285, c * 208, c * 285, c * 211);
  g[G](c * 285, c * 241.5, c * 285, c * 241.5, c * 285, c * 272);
  g[G](c * 284, c * 275, c * 284, c * 275, c * 280, c * 275);
  g[G](c * 279, c * 273.5, c * 279, c * 273.5, c * 278, c * 272);
  g[G](c * 278, c * 240.5, c * 278, c * 240.5, c * 278, c * 209);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 138, c * 298.40000915527344);
  g[G](c * 141, c * 311.40000915527344, c * 151, c * 314.40000915527344, c * 162, c * 316.40000915527344);
  g[G](c * 224, c * 316.40000915527344, c * 200, c * 315.90000915527344, c * 238, c * 315.40000915527344);
  g[G](c * 254, c * 316.40000915527344, c * 261, c * 306.40000915527344, c * 264, c * 298.40000915527344);
  g[G](c * 255, c * 304.40000915527344, c * 250, c * 306.40000915527344, c * 244, c * 306.40000915527344);
  g[G](c * 201, c * 306.90000915527344, c * 201, c * 306.90000915527344, c * 158, c * 307.40000915527344);
  g[G](c * 150, c * 306.40000915527344, c * 148, c * 306.40000915527344, c * 139, c * 300.40000915527344);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 161, c * 177.5999984741211);
  g[G](c * 130, c * 175.5999984741211, c * 123, c * 190.5999984741211, c * 122, c * 205.5999984741211);
  g[G](c * 121, c * 277.5999984741211, c * 122, c * 242.5999984741211, c * 122, c * 279.5999984741211);
  g[G](c * 128, c * 297.5999984741211, c * 137, c * 299.5999984741211, c * 143, c * 300.5999984741211);
  g[G](c * 163, c * 301.0999984741211, c * 163, c * 301.0999984741211, c * 183, c * 301.5999984741211);
  g[G](c * 150, c * 300.5999984741211, c * 135, c * 290.5999984741211, c * 134, c * 267.5999984741211);
  g[G](c * 133, c * 245.5999984741211, c * 146, c * 235.5999984741211, c * 164, c * 235.5999984741211);
  g[G](c * 206, c * 236.0999984741211, c * 206, c * 236.0999984741211, c * 248, c * 236.5999984741211);
  g[G](c * 266, c * 243.5999984741211, c * 268, c * 259.5999984741211, c * 267, c * 266.5999984741211);
  g[G](c * 266, c * 288.5999984741211, c * 251, c * 294.5999984741211, c * 244, c * 297.5999984741211);
  g[G](c * 228.5, c * 299.5999984741211, c * 228.5, c * 299.5999984741211, c * 213, c * 301.5999984741211);
  g[G](c * 236, c * 301.0999984741211, c * 236, c * 301.0999984741211, c * 259, c * 300.5999984741211);
  g[G](c * 272, c * 295.5999984741211, c * 277, c * 288.5999984741211, c * 278, c * 271.5999984741211);
  g[G](c * 277.5, c * 236.5999984741211, c * 277.5, c * 236.5999984741211, c * 277, c * 201.5999984741211);
  g[G](c * 276, c * 186.5999984741211, c * 265, c * 178.5999984741211, c * 254, c * 177.5999984741211);
  g[G](c * 247.5, c * 177.5999984741211, c * 247.5, c * 177.5999984741211, c * 241, c * 177.5999984741211);
  g[G](c * 255, c * 202.5999984741211, c * 214, c * 217.5999984741211, c * 201, c * 215.5999984741211);
  g[G](c * 170, c * 215.5999984741211, c * 152, c * 197.5999984741211, c * 161, c * 178.5999984741211);
  g[X]();
  jc(g, e[2], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 162, c * 175.5999984741211);
  g[G](c * 153, c * 176.0999984741211, c * 153, c * 176.0999984741211, c * 144, c * 176.5999984741211);
  g[G](c * 125, c * 178.5999984741211, c * 121, c * 196.5999984741211, c * 121, c * 207.5999984741211);
  g[G](c * 121, c * 243.20000076293945, c * 121, c * 243.20000076293945, c * 121, c * 278.8000030517578);
  g[G](c * 126, c * 298.8000030517578, c * 137, c * 300.8000030517578, c * 146, c * 302.8000030517578);
  g[G](c * 200.5, c * 302.8000030517578, c * 200.5, c * 302.8000030517578, c * 255, c * 302.8000030517578);
  g[G](c * 271, c * 301.8000030517578, c * 279, c * 288.8000030517578, c * 279, c * 273.8000030517578);
  g[G](c * 279, c * 236.8000030517578, c * 279, c * 236.8000030517578, c * 279, c * 199.8000030517578);
  g[G](c * 274, c * 178.8000030517578, c * 263, c * 177.8000030517578, c * 255, c * 175.8000030517578);
  g[G](c * 248, c * 175.8000030517578, c * 248, c * 175.8000030517578, c * 241, c * 175.8000030517578);
  g[G](c * 240, c * 175.8000030517578, c * 240, c * 175.8000030517578, c * 239, c * 175.8000030517578);
  g[G](c * 254, c * 200.8000030517578, c * 222, c * 211.8000030517578, c * 202, c * 212.8000030517578);
  g[G](c * 168, c * 213.8000030517578, c * 151, c * 190.8000030517578, c * 163, c * 176.8000030517578);
  g[X]();
  jc(g, undefined, e[3], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 198, c * 161.4000015258789);
  g[G](c * 198, c * 186.9000015258789, c * 198, c * 186.9000015258789, c * 198, c * 212.4000015258789);
  g[G](c * 201, c * 212.4000015258789, c * 201, c * 212.4000015258789, c * 204, c * 212.4000015258789);
  g[G](c * 204, c * 186.9000015258789, c * 204, c * 186.9000015258789, c * 204, c * 161.4000015258789);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 161, c * 194);
  g[G](c * 188, c * 169, c * 231, c * 179, c * 241, c * 194);
  g[G](c * 239.5, c * 196, c * 239.5, c * 196, c * 238, c * 198);
  g[G](c * 221, c * 179, c * 182, c * 182, c * 165, c * 198);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 157, c * 188.80000019073486);
  g[G](c * 162, c * 150.80000019073486, c * 241, c * 150.80000019073486, c * 245, c * 188.80000019073486);
  g[G](c * 242, c * 224.80000019073486, c * 162, c * 228.80000019073486, c * 157, c * 188.80000019073486);
  g[G](c * 159, c * 188.80000019073486, c * 159, c * 188.80000019073486, c * 161, c * 188.80000019073486);
  g[G](c * 168, c * 216.80000019073486, c * 231, c * 218.80000019073486, c * 241, c * 188.80000019073486);
  g[G](c * 236, c * 156.80000019073486, c * 169, c * 152.80000019073486, c * 161, c * 188.80000019073486);
  g[X]();
  jc(g, e[0], e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 156, c * 188);
  g[G](c * 160, c * 164, c * 183, c * 159, c * 201, c * 158);
  g[G](c * 232, c * 159, c * 244, c * 174, c * 246, c * 188);
  g[G](c * 245, c * 212, c * 213, c * 219, c * 201, c * 218);
  g[G](c * 181, c * 221, c * 158, c * 207, c * 156, c * 190);
  g[X]();
  jc(g, undefined, e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 162, c * 189);
  g[G](c * 166, c * 170, c * 185, c * 165, c * 201, c * 164);
  g[G](c * 227, c * 165, c * 240, c * 178, c * 239, c * 188);
  g[G](c * 239, c * 204, c * 210, c * 210, c * 201, c * 210);
  g[G](c * 182, c * 211, c * 166, c * 200, c * 162, c * 190);
  g[X]();
  jc(g, undefined, e[1], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 131, c * 262);
  g[G](c * 136, c * 241, c * 144, c * 236, c * 158, c * 233);
  g[G](c * 200.5, c * 233, c * 229, c * 232, c * 243, c * 233);
  g[G](c * 259, c * 235, c * 267, c * 248, c * 269, c * 260);
  g[G](c * 269, c * 266.5, c * 269, c * 266.5, c * 269, c * 273);
  g[G](c * 265, c * 290, c * 251, c * 297, c * 242, c * 298);
  g[G](c * 202, c * 298, c * 202, c * 298, c * 162, c * 298);
  g[G](c * 148, c * 298, c * 136, c * 289, c * 132, c * 273);
  g[G](c * 131.5, c * 268, c * 131.5, c * 268, c * 131, c * 263);
  g[G](c * 135, c * 263, c * 135, c * 263, c * 139, c * 263);
  g[G](c * 139, c * 281, c * 151, c * 287, c * 160, c * 290);
  g[G](c * 200.5, c * 290, c * 200.5, c * 290, c * 241, c * 290);
  g[G](c * 252, c * 290, c * 257, c * 281, c * 262, c * 271);
  g[G](c * 261.5, c * 267, c * 261.5, c * 267, c * 261, c * 263);
  g[G](c * 260, c * 249, c * 251, c * 242, c * 241, c * 241);
  g[G](c * 240.5, c * 240.5, c * 240.5, c * 240.5, c * 240, c * 240);
  g[G](c * 200, c * 240, c * 200, c * 240, c * 160, c * 240);
  g[G](c * 145, c * 244, c * 142, c * 250, c * 139, c * 264);
  g[X]();
  jc(g, e[0], e[0], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 130, c * 264);
  g[G](c * 132, c * 244, c * 144, c * 235, c * 157, c * 232);
  g[G](c * 245, c * 232, c * 201, c * 232, c * 245, c * 232);
  g[G](c * 264, c * 235, c * 269, c * 251, c * 270, c * 264);
  g[G](c * 272, c * 291, c * 248, c * 299, c * 242, c * 299);
  g[G](c * 200, c * 299, c * 200, c * 299, c * 158, c * 299);
  g[G](c * 139, c * 298, c * 130, c * 276, c * 130, c * 265);
  g[X]();
  jc(g, undefined, e[1], c * 2);
  return f;
}
function Ld(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 96.5, c * 277.34375);
  g[G](c * 197.5, c * 259.84375, c * 197.5, c * 259.84375, c * 298.5, c * 242.34375);
  g[G](c * 311.5, c * 231.34375, c * 307.5, c * 168.34375, c * 298.5, c * 150.34375);
  g[G](c * 198, c * 170.34375, c * 198, c * 170.34375, c * 97.5, c * 190.34375);
  g[X]();
  jc(g, e[1], e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 98.5, c * 214.34375);
  g[G](c * 199, c * 196.34375, c * 199, c * 196.34375, c * 299.5, c * 178.34375);
  g[X]();
  jc(g, undefined, e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 98.5, c * 247.34375);
  g[G](c * 201.5, c * 229.34375, c * 201.5, c * 229.34375, c * 304.5, c * 211.34375);
  g[X]();
  jc(g, undefined, e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 97.5, c * 189.34375);
  g[G](c * 97, c * 199.84375, c * 97, c * 199.84375, c * 96.5, c * 210.34375);
  g[G](c * 110.5, c * 204.34375, c * 110.5, c * 204.34375, c * 124.5, c * 198.34375);
  g[G](c * 137.5, c * 203.84375, c * 137.5, c * 203.84375, c * 150.5, c * 209.34375);
  g[G](c * 172, c * 197.84375, c * 172, c * 197.84375, c * 193.5, c * 186.34375);
  g[G](c * 211.5, c * 189.84375, c * 211.5, c * 189.84375, c * 229.5, c * 193.34375);
  g[G](c * 240.5, c * 193.34375, c * 240.5, c * 193.34375, c * 251.5, c * 193.34375);
  g[G](c * 261, c * 182.84375, c * 261, c * 182.84375, c * 270.5, c * 172.34375);
  g[G](c * 287.5, c * 169.34375, c * 287.5, c * 169.34375, c * 304.5, c * 166.34375);
  g[G](c * 304.5, c * 156.34375, c * 300.5, c * 145.34375, c * 298.5, c * 147.34375);
  g[X]();
  jc(g, e[3], e[4], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 300.5, c * 147.34375);
  g[G](c * 293.5, c * 121.34375, c * 278.5, c * 106.34375, c * 256.5, c * 101.34375);
  g[G](c * 176.5, c * 145.34375, c * 176.5, c * 145.34375, c * 96.5, c * 189.34375);
  g[X]();
  jc(g, e[5], e[6], c * 12);
  lc(g, c * 252.5, c * 129.34375, c * 18.027756377319946);
  jc(g, e[7]);
  lc(g, c * 248.5, c * 121.34375, c * 8.246211251235321);
  jc(g, e[8]);
  return f;
}
function Md(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 10, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 100.5, c * 126.34375);
  g[G](c * 151.5, c * 104.34375, c * 279.5, c * 188.34375, c * 297.5, c * 292.34375);
  g[G](c * 222.5, c * 307.34375, c * 106.5, c * 196.34375, c * 100.5, c * 127.34375);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 106.5, c * 131.34375);
  g[G](c * 140.5, c * 142.34375, c * 225.5, c * 184.34375, c * 290.5, c * 287.34375);
  g[G](c * 270.5, c * 188.34375, c * 152.5, c * 118.34375, c * 107.5, c * 131.34375);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 157.5, c * 137.34375);
  g[G](c * 161.5, c * 138.34375, c * 164.5, c * 140.34375, c * 168.5, c * 142.34375);
  g[G](c * 165.5, c * 156.34375, c * 141.5, c * 176.34375, c * 126.5, c * 179.34375);
  g[G](c * 123.5, c * 173.34375, c * 120.5, c * 169.34375, c * 120.5, c * 169.34375);
  g[G](c * 141.5, c * 161.34375, c * 156.5, c * 145.34375, c * 155.5, c * 136.34375);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 196.5, c * 151.34375);
  g[G](c * 211.5, c * 158.34375, c * 224.5, c * 171.34375, c * 229.5, c * 176.34375);
  g[G](c * 246.5, c * 163.34375, c * 259.5, c * 166.34375, c * 272.5, c * 168.34375);
  g[G](c * 254.5, c * 146.34375, c * 214.5, c * 145.34375, c * 198.5, c * 151.34375);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 154.5, c * 222.34375);
  g[G](c * 164.5, c * 234.34375, c * 173.5, c * 242.34375, c * 178.5, c * 245.34375);
  g[G](c * 174.5, c * 265.34375, c * 180.5, c * 274.34375, c * 186.5, c * 283.34375);
  g[G](c * 165.5, c * 277.34375, c * 151.5, c * 245.34375, c * 155.5, c * 224.34375);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 279.5, c * 294.34375);
  g[G](c * 286.5, c * 285.84375, c * 286.5, c * 285.84375, c * 293.5, c * 277.34375);
  g[G](c * 315.5, c * 280.34375, c * 315.5, c * 280.34375, c * 337.5, c * 283.34375);
  g[G](c * 340.5, c * 311.34375, c * 317.5, c * 326.34375, c * 307.5, c * 331.34375);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](c * -10, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 100.5, c * 126.34375);
  g[G](c * 151.5, c * 104.34375, c * 279.5, c * 188.34375, c * 297.5, c * 292.34375);
  g[G](c * 222.5, c * 307.34375, c * 106.5, c * 196.34375, c * 100.5, c * 127.34375);
  g[X]();
  jc(g, e[1], e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 106.5, c * 131.34375);
  g[G](c * 140.5, c * 142.34375, c * 225.5, c * 184.34375, c * 290.5, c * 287.34375);
  g[G](c * 270.5, c * 188.34375, c * 152.5, c * 118.34375, c * 107.5, c * 131.34375);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 157.5, c * 137.34375);
  g[G](c * 161.5, c * 138.34375, c * 164.5, c * 140.34375, c * 168.5, c * 142.34375);
  g[G](c * 165.5, c * 156.34375, c * 141.5, c * 176.34375, c * 126.5, c * 179.34375);
  g[G](c * 123.5, c * 173.34375, c * 120.5, c * 169.34375, c * 120.5, c * 169.34375);
  g[G](c * 141.5, c * 161.34375, c * 156.5, c * 145.34375, c * 155.5, c * 136.34375);
  g[X]();
  jc(g, e[4]);
  lc(g, c * 125.5, c * 140.34375, c * 11.180339887498949);
  jc(g, e[5]);
  lc(g, c * 122.5, c * 135.34375, c * 5.0990195135927845);
  jc(g, e[6]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 196.5, c * 151.34375);
  g[G](c * 211.5, c * 158.34375, c * 224.5, c * 171.34375, c * 229.5, c * 176.34375);
  g[G](c * 246.5, c * 163.34375, c * 259.5, c * 166.34375, c * 272.5, c * 168.34375);
  g[G](c * 254.5, c * 146.34375, c * 214.5, c * 145.34375, c * 198.5, c * 151.34375);
  g[X]();
  jc(g, e[7], e[8], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 154.5, c * 222.34375);
  g[G](c * 164.5, c * 234.34375, c * 173.5, c * 242.34375, c * 178.5, c * 245.34375);
  g[G](c * 174.5, c * 265.34375, c * 180.5, c * 274.34375, c * 186.5, c * 283.34375);
  g[G](c * 165.5, c * 277.34375, c * 151.5, c * 245.34375, c * 155.5, c * 224.34375);
  g[X]();
  jc(g, e[7], e[8], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 279.5, c * 294.34375);
  g[G](c * 286.5, c * 285.84375, c * 286.5, c * 285.84375, c * 293.5, c * 277.34375);
  g[G](c * 315.5, c * 280.34375, c * 315.5, c * 280.34375, c * 337.5, c * 283.34375);
  g[G](c * 340.5, c * 311.34375, c * 317.5, c * 326.34375, c * 307.5, c * 331.34375);
  g[X]();
  jc(g, e[7], e[8], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 296.5, c * 287.34375);
  g[G](c * 311.5, c * 291.34375, c * 311.5, c * 291.34375, c * 326.5, c * 295.34375);
  g[X]();
  jc(g, undefined, e[9], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 294.5, c * 289.34375);
  g[G](c * 308.5, c * 297.34375, c * 308.5, c * 297.34375, c * 322.5, c * 305.34375);
  g[X]();
  jc(g, undefined, e[9], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 294.5, c * 291.34375);
  g[G](c * 304, c * 303.34375, c * 304, c * 303.34375, c * 313.5, c * 315.34375);
  g[X]();
  jc(g, undefined, e[9], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 226.5, c * 161.34375);
  g[G](c * 230.5, c * 160.34375, c * 236.5, c * 158.34375, c * 238.5, c * 161.34375);
  g[G](c * 238.5, c * 157.34375, c * 228.5, c * 159.34375, c * 227.5, c * 161.34375);
  g[X]();
  jc(g, undefined, e[9], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 167.5, c * 248.34375);
  g[G](c * 165.5, c * 251.34375, c * 168.5, c * 256.34375, c * 168.5, c * 253.34375);
  g[G](c * 166.5, c * 252.34375, c * 168.5, c * 246.34375, c * 166.5, c * 247.34375);
  g[X]();
  jc(g, undefined, e[9], c * 3);
  return f;
}
function Nd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 309;
  f.height = c * 287;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 10, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 34.5, c * 38.53125);
  g[G](c * 91.5, c * 30.53125, c * 138.5, c * 68.53125, c * 169.5, c * 93.53125);
  g[G](c * 208.5, c * 128.53125, c * 226.5, c * 157.53125, c * 233.5, c * 209.53125);
  g[G](c * 195.5, c * 218.53125, c * 138.5, c * 191.53125, c * 105.5, c * 157.53125);
  g[G](c * 54.5, c * 112.53125, c * 41.5, c * 80.53125, c * 33.5, c * 38.53125);
  g[X]();
  jc(g, e[0], e[0], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 143.5, c * 74.53125);
  g[G](c * 164.5, c * 73.53125, c * 159, c * 74.53125, c * 174.5, c * 74.53125);
  g[G](c * 186, c * 86.53125, c * 186, c * 86.53125, c * 197.5, c * 98.53125);
  g[G](c * 186, c * 97.03125, c * 186, c * 97.03125, c * 174.5, c * 95.53125);
  g[X]();
  jc(g, e[0], e[0], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87.5, c * 142.53125);
  g[G](c * 92, c * 160.03125, c * 92, c * 160.03125, c * 96.5, c * 177.53125);
  g[G](c * 108, c * 181.53125, c * 108, c * 181.53125, c * 119.5, c * 185.53125);
  g[G](c * 116.5, c * 175.53125, c * 116.5, c * 175.53125, c * 113.5, c * 165.53125);
  g[X]();
  jc(g, e[0], e[0], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 236.5, c * 189.53125);
  g[G](c * 274.5, c * 197.53125, c * 255.5, c * 194.03125, c * 274.5, c * 198.53125);
  g[G](c * 272.5, c * 236.53125, c * 261.5, c * 237.53125, c * 242.5, c * 248.53125);
  g[G](c * 230.5, c * 231.03125, c * 230.5, c * 231.03125, c * 218.5, c * 213.53125);
  g[X]();
  jc(g, e[0], e[0], c * 10);
  g[ua] = 1;
  g[Ia](c * -10, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 34.5, c * 38.53125);
  g[G](c * 91.5, c * 30.53125, c * 138.5, c * 68.53125, c * 169.5, c * 93.53125);
  g[G](c * 208.5, c * 128.53125, c * 226.5, c * 157.53125, c * 233.5, c * 209.53125);
  g[G](c * 195.5, c * 218.53125, c * 138.5, c * 191.53125, c * 105.5, c * 157.53125);
  g[G](c * 54.5, c * 112.53125, c * 41.5, c * 80.53125, c * 33.5, c * 38.53125);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 143.5, c * 74.53125);
  g[G](c * 164.5, c * 73.53125, c * 159, c * 74.53125, c * 174.5, c * 74.53125);
  g[G](c * 186, c * 86.53125, c * 186, c * 86.53125, c * 197.5, c * 98.53125);
  g[G](c * 186, c * 97.03125, c * 186, c * 97.03125, c * 174.5, c * 95.53125);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87.5, c * 142.53125);
  g[G](c * 92, c * 160.03125, c * 92, c * 160.03125, c * 96.5, c * 177.53125);
  g[G](c * 108, c * 181.53125, c * 108, c * 181.53125, c * 119.5, c * 185.53125);
  g[G](c * 116.5, c * 175.53125, c * 116.5, c * 175.53125, c * 113.5, c * 165.53125);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 236.5, c * 189.53125);
  g[G](c * 274.5, c * 197.53125, c * 255.5, c * 194.03125, c * 274.5, c * 198.53125);
  g[G](c * 272.5, c * 236.53125, c * 261.5, c * 237.53125, c * 242.5, c * 248.53125);
  g[G](c * 230.5, c * 231.03125, c * 230.5, c * 231.03125, c * 218.5, c * 213.53125);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 109.5, c * 51.53125);
  g[G](c * 107.5, c * 92.53125, c * 91.5, c * 95.53125, c * 59.5, c * 101.53125);
  jc(g, e[1], e[2], c * 7);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72.5, c * 51.53125);
  g[G](c * 71, c * 64.53125, c * 69.5, c * 76.53125, c * 69.5, c * 77.53125);
  g[X]();
  jc(g, e[1], e[2], c * 7);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 84.5, c * 63.53125);
  g[G](c * 70.5, c * 65.03125, c * 70.5, c * 65.03125, c * 56.5, c * 66.53125);
  g[X]();
  jc(g, e[1], e[2], c * 7);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 125.5, c * 84.53125);
  g[G](c * 125.5, c * 110.03125, c * 125.5, c * 110.03125, c * 125.5, c * 135.53125);
  g[X]();
  jc(g, e[1], e[2], c * 7);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 149.5, c * 108.53125);
  g[G](c * 150, c * 137.03125, c * 150, c * 137.03125, c * 150.5, c * 165.53125);
  g[X]();
  jc(g, e[1], e[2], c * 7);
  return f;
}
function Od(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  var i = c * 130;
  var k = c * 142;
  var m = i / 2;
  var n = k / 2;
  f.width = i;
  f.height = k;
  g[Ia](m, n + c * 7);
  g[ua] = d ? 0.5 : 1;
  lc(g, 0, 0, c * 60);
  jc(g, e[0]);
  g[Ia](0, c * -7);
  g[ua] = 1;
  lc(g, 0, 0, c * 60);
  jc(g, e[1], e[2], c * 4);
  lc(g, 0, 0, c * 40);
  jc(g, e[3]);
  lc(g, 0, 0, c * 25);
  jc(g, e[4], e[5], c * 8);
  return f;
}
function Pd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 130;
  f.height = c * 142;
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 65, c * 80);
  i[ra](0.2);
  nc(i, 9, c * 60, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 65, c * 71);
  i[ra](0.2);
  nc(i, 9, c * 60, c * 10);
  jc(i, e[1], e[2], 4);
  i[ra](-0.32);
  nc(i, 9, c * 38, c * 10);
  jc(i, e[3], e[4], 4);
  i[ra](0.68);
  nc(i, 9, c * 20, c * 8);
  jc(i, e[5], e[6], 6);
  i[Qa]();
  return f;
}
function Qd(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 372;
  e.height = c * 375;
  f[ua] = 0.5;
  f[Ia](c * 15, c * 15);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 313.0000305175781, c * 76.58523559570312);
  f[G](c * 308.0000305175781, c * 130.58523559570312, c * 279.0000305175781, c * 158.58523559570312, c * 254.00003051757812, c * 175.58523559570312);
  f[G](c * 287.0000305175781, c * 182.58523559570312, c * 274.0000305175781, c * 181.08523559570312, c * 294.0000305175781, c * 186.58523559570312);
  f[G](c * 293.5000305175781, c * 196.08523559570312, c * 293.5000305175781, c * 196.08523559570312, c * 293.0000305175781, c * 205.58523559570312);
  f[G](c * 304.0000305175781, c * 201.08523559570312, c * 304.0000305175781, c * 201.08523559570312, c * 315.0000305175781, c * 196.58523559570312);
  f[G](c * 350.0000305175781, c * 219.58523559570312, c * 343.0000305175781, c * 221.58523559570312, c * 351.0000305175781, c * 230.58523559570312);
  f[G](c * 296.0000305175781, c * 260.5852355957031, c * 264.0000305175781, c * 256.5852355957031, c * 220.00003051757812, c * 236.58523559570312);
  f[G](c * 233.00003051757812, c * 266.5852355957031, c * 232.00003051757812, c * 279.5852355957031, c * 231.00003051757812, c * 295.5852355957031);
  f[G](c * 222.00003051757812, c * 297.5852355957031, c * 222.00003051757812, c * 297.5852355957031, c * 213.00003051757812, c * 299.5852355957031);
  f[G](c * 219.50003051757812, c * 308.0852355957031, c * 219.50003051757812, c * 308.0852355957031, c * 226.00003051757812, c * 316.5852355957031);
  f[G](c * 223.00003051757812, c * 344.5852355957031, c * 216.00003051757812, c * 350.5852355957031, c * 209.00003051757812, c * 363.5852355957031);
  f[G](c * 154.00003051757812, c * 318.5852355957031, c * 156.00003051757812, c * 268.5852355957031, c * 160.00003051757812, c * 238.58523559570312);
  f[G](c * 135.00003051757812, c * 268.5852355957031, c * 125.00003051757812, c * 267.5852355957031, c * 112.00003051757812, c * 272.5852355957031);
  f[G](c * 104.50003051757812, c * 266.5852355957031, c * 104.50003051757812, c * 266.5852355957031, c * 97.00003051757812, c * 260.5852355957031);
  f[G](c * 93.00003051757812, c * 271.0852355957031, c * 93.00003051757812, c * 271.0852355957031, c * 89.00003051757812, c * 281.5852355957031);
  f[G](c * 66.00003051757812, c * 288.5852355957031, c * 59.000030517578125, c * 288.5852355957031, c * 39.000030517578125, c * 285.5852355957031);
  f[G](c * 56.000030517578125, c * 216.58523559570312, c * 91.00003051757812, c * 204.58523559570312, c * 129.00003051757812, c * 189.58523559570312);
  f[G](c * 90.00003051757812, c * 176.58523559570312, c * 89.00003051757812, c * 173.58523559570312, c * 79.00003051757812, c * 166.58523559570312);
  f[G](c * 82.00003051757812, c * 155.08523559570312, c * 82.00003051757812, c * 155.08523559570312, c * 85.00003051757812, c * 143.58523559570312);
  f[G](c * 75.50003051757812, c * 147.58523559570312, c * 75.50003051757812, c * 147.58523559570312, c * 66.00003051757812, c * 151.58523559570312);
  f[G](c * 44.000030517578125, c * 133.58523559570312, c * 41.000030517578125, c * 124.58523559570312, c * 34.000030517578125, c * 102.58523559570312);
  f[G](c * 100.00003051757812, c * 81.58523559570312, c * 134.00003051757812, c * 118.58523559570312, c * 150.00003051757812, c * 128.58523559570312);
  f[G](c * 144.00003051757812, c * 102.58523559570312, c * 147.00003051757812, c * 90.58523559570312, c * 150.00003051757812, c * 80.58523559570312);
  f[G](c * 159.50003051757812, c * 79.08523559570312, c * 159.50003051757812, c * 79.08523559570312, c * 169.00003051757812, c * 77.58523559570312);
  f[G](c * 163.00003051757812, c * 72.58523559570312, c * 163.00003051757812, c * 72.58523559570312, c * 157.00003051757812, c * 67.58523559570312);
  f[G](c * 162.00003051757812, c * 42.585235595703125, c * 169.00003051757812, c * 29.585235595703125, c * 182.00003051757812, c * 14.585235595703125);
  f[G](c * 219.00003051757812, c * 48.585235595703125, c * 222.00003051757812, c * 92.58523559570312, c * 218.00003051757812, c * 112.58523559570312);
  f[G](c * 239.00003051757812, c * 95.58523559570312, c * 242.00003051757812, c * 97.58523559570312, c * 249.00003051757812, c * 94.58523559570312);
  f[G](c * 255.00003051757812, c * 103.08523559570312, c * 255.00003051757812, c * 103.08523559570312, c * 261.0000305175781, c * 111.58523559570312);
  f[G](c * 261.5000305175781, c * 99.58523559570312, c * 261.5000305175781, c * 99.58523559570312, c * 262.0000305175781, c * 87.58523559570312);
  f[G](c * 282.0000305175781, c * 77.58523559570312, c * 301.0000305175781, c * 74.58523559570312, c * 314.0000305175781, c * 76.58523559570312);
  f[X]();
  jc(f, d[0]);
  f[ua] = 1;
  f[Ia](c * -15, c * -15);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 313.0000305175781, c * 76.58523559570312);
  f[G](c * 308.0000305175781, c * 130.58523559570312, c * 279.0000305175781, c * 158.58523559570312, c * 254.00003051757812, c * 175.58523559570312);
  f[G](c * 287.0000305175781, c * 182.58523559570312, c * 274.0000305175781, c * 181.08523559570312, c * 294.0000305175781, c * 186.58523559570312);
  f[G](c * 293.5000305175781, c * 196.08523559570312, c * 293.5000305175781, c * 196.08523559570312, c * 293.0000305175781, c * 205.58523559570312);
  f[G](c * 304.0000305175781, c * 201.08523559570312, c * 304.0000305175781, c * 201.08523559570312, c * 315.0000305175781, c * 196.58523559570312);
  f[G](c * 350.0000305175781, c * 219.58523559570312, c * 343.0000305175781, c * 221.58523559570312, c * 351.0000305175781, c * 230.58523559570312);
  f[G](c * 296.0000305175781, c * 260.5852355957031, c * 264.0000305175781, c * 256.5852355957031, c * 220.00003051757812, c * 236.58523559570312);
  f[G](c * 233.00003051757812, c * 266.5852355957031, c * 232.00003051757812, c * 279.5852355957031, c * 231.00003051757812, c * 295.5852355957031);
  f[G](c * 222.00003051757812, c * 297.5852355957031, c * 222.00003051757812, c * 297.5852355957031, c * 213.00003051757812, c * 299.5852355957031);
  f[G](c * 219.50003051757812, c * 308.0852355957031, c * 219.50003051757812, c * 308.0852355957031, c * 226.00003051757812, c * 316.5852355957031);
  f[G](c * 223.00003051757812, c * 344.5852355957031, c * 216.00003051757812, c * 350.5852355957031, c * 209.00003051757812, c * 363.5852355957031);
  f[G](c * 154.00003051757812, c * 318.5852355957031, c * 156.00003051757812, c * 268.5852355957031, c * 160.00003051757812, c * 238.58523559570312);
  f[G](c * 135.00003051757812, c * 268.5852355957031, c * 125.00003051757812, c * 267.5852355957031, c * 112.00003051757812, c * 272.5852355957031);
  f[G](c * 104.50003051757812, c * 266.5852355957031, c * 104.50003051757812, c * 266.5852355957031, c * 97.00003051757812, c * 260.5852355957031);
  f[G](c * 93.00003051757812, c * 271.0852355957031, c * 93.00003051757812, c * 271.0852355957031, c * 89.00003051757812, c * 281.5852355957031);
  f[G](c * 66.00003051757812, c * 288.5852355957031, c * 59.000030517578125, c * 288.5852355957031, c * 39.000030517578125, c * 285.5852355957031);
  f[G](c * 56.000030517578125, c * 216.58523559570312, c * 91.00003051757812, c * 204.58523559570312, c * 129.00003051757812, c * 189.58523559570312);
  f[G](c * 90.00003051757812, c * 176.58523559570312, c * 89.00003051757812, c * 173.58523559570312, c * 79.00003051757812, c * 166.58523559570312);
  f[G](c * 82.00003051757812, c * 155.08523559570312, c * 82.00003051757812, c * 155.08523559570312, c * 85.00003051757812, c * 143.58523559570312);
  f[G](c * 75.50003051757812, c * 147.58523559570312, c * 75.50003051757812, c * 147.58523559570312, c * 66.00003051757812, c * 151.58523559570312);
  f[G](c * 44.000030517578125, c * 133.58523559570312, c * 41.000030517578125, c * 124.58523559570312, c * 34.000030517578125, c * 102.58523559570312);
  f[G](c * 100.00003051757812, c * 81.58523559570312, c * 134.00003051757812, c * 118.58523559570312, c * 150.00003051757812, c * 128.58523559570312);
  f[G](c * 144.00003051757812, c * 102.58523559570312, c * 147.00003051757812, c * 90.58523559570312, c * 150.00003051757812, c * 80.58523559570312);
  f[G](c * 159.50003051757812, c * 79.08523559570312, c * 159.50003051757812, c * 79.08523559570312, c * 169.00003051757812, c * 77.58523559570312);
  f[G](c * 163.00003051757812, c * 72.58523559570312, c * 163.00003051757812, c * 72.58523559570312, c * 157.00003051757812, c * 67.58523559570312);
  f[G](c * 162.00003051757812, c * 42.585235595703125, c * 169.00003051757812, c * 29.585235595703125, c * 182.00003051757812, c * 14.585235595703125);
  f[G](c * 219.00003051757812, c * 48.585235595703125, c * 222.00003051757812, c * 92.58523559570312, c * 218.00003051757812, c * 112.58523559570312);
  f[G](c * 239.00003051757812, c * 95.58523559570312, c * 242.00003051757812, c * 97.58523559570312, c * 249.00003051757812, c * 94.58523559570312);
  f[G](c * 255.00003051757812, c * 103.08523559570312, c * 255.00003051757812, c * 103.08523559570312, c * 261.0000305175781, c * 111.58523559570312);
  f[G](c * 261.5000305175781, c * 99.58523559570312, c * 261.5000305175781, c * 99.58523559570312, c * 262.0000305175781, c * 87.58523559570312);
  f[G](c * 282.0000305175781, c * 77.58523559570312, c * 301.0000305175781, c * 74.58523559570312, c * 314.0000305175781, c * 76.58523559570312);
  f[X]();
  jc(f, d[1], d[2], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 186.00003051757812, c * 192.94886779785156);
  f[G](c * 185.00003051757812, c * 66.94886779785156, c * 184.50003051757812, c * 104.94886779785156, c * 183.00003051757812, c * 16.948867797851562);
  f[G](c * 216.00003051757812, c * 47.94886779785156, c * 219.00003051757812, c * 80.94886779785156, c * 218.00003051757812, c * 113.94886779785156);
  f[G](c * 209.00003051757812, c * 165.94886779785156, c * 200.00003051757812, c * 176.94886779785156, c * 189.00003051757812, c * 192.94886779785156);
  f[X]();
  jc(f, d[3], d[3], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 190.00003051757812, c * 191.94886779785156);
  f[G](c * 207.00003051757812, c * 348.94886779785156, c * 205.00003051757812, c * 323.94886779785156, c * 209.00003051757812, c * 358.94886779785156);
  f[G](c * 171.00003051757812, c * 334.94886779785156, c * 167.00003051757812, c * 302.94886779785156, c * 161.00003051757812, c * 268.94886779785156);
  f[G](c * 160.00003051757812, c * 218.94886779785156, c * 181.00003051757812, c * 191.94886779785156, c * 189.00003051757812, c * 186.94886779785156);
  f[X]();
  jc(f, d[3], d[3], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 194.00003051757812, c * 195.94886779785156);
  f[G](c * 116.00003051757812, c * 150.94886779785156, c * 116.00003051757812, c * 150.94886779785156, c * 38.000030517578125, c * 105.94886779785156);
  f[G](c * 67.00003051757812, c * 90.94886779785156, c * 96.00003051757812, c * 99.94886779785156, c * 123.00003051757812, c * 111.94886779785156);
  f[G](c * 183.00003051757812, c * 152.94886779785156, c * 179.00003051757812, c * 180.94886779785156, c * 193.00003051757812, c * 194.94886779785156);
  f[X]();
  jc(f, d[3], d[3], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 189.00003051757812, c * 190.94886779785156);
  f[G](c * 250.00003051757812, c * 133.94886779785156, c * 311.0000305175781, c * 78.94886779785156, c * 311.0000305175781, c * 76.94886779785156);
  f[G](c * 306.0000305175781, c * 127.94886779785156, c * 283.0000305175781, c * 148.94886779785156, c * 261.0000305175781, c * 166.94886779785156);
  f[G](c * 220.00003051757812, c * 197.94886779785156, c * 191.00003051757812, c * 194.94886779785156, c * 189.00003051757812, c * 195.94886779785156);
  f[X]();
  jc(f, d[3], d[3], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 189.00003051757812, c * 194.94886779785156);
  f[G](c * 268.5000305175781, c * 211.94886779785156, c * 268.5000305175781, c * 211.94886779785156, c * 348.0000305175781, c * 228.94886779785156);
  f[G](c * 316.0000305175781, c * 247.94886779785156, c * 298.0000305175781, c * 256.94886779785156, c * 250.00003051757812, c * 246.94886779785156);
  f[G](c * 197.00003051757812, c * 229.94886779785156, c * 189.00003051757812, c * 202.94886779785156, c * 188.00003051757812, c * 199.94886779785156);
  f[X]();
  jc(f, d[3], d[3], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 192.00003051757812, c * 191.94886779785156);
  f[G](c * 116.50003051757812, c * 238.44886779785156, c * 116.50003051757812, c * 238.44886779785156, c * 41.000030517578125, c * 284.94886779785156);
  f[G](c * 49.000030517578125, c * 252.94886779785156, c * 56.000030517578125, c * 242.94886779785156, c * 80.00003051757812, c * 215.94886779785156);
  f[G](c * 125.00003051757812, c * 181.94886779785156, c * 174.00003051757812, c * 183.94886779785156, c * 192.00003051757812, c * 191.94886779785156);
  f[X]();
  jc(f, d[3], d[3], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 313.0000305175781, c * 76.58523559570312);
  f[G](c * 308.0000305175781, c * 130.58523559570312, c * 279.0000305175781, c * 158.58523559570312, c * 254.00003051757812, c * 175.58523559570312);
  f[G](c * 287.0000305175781, c * 182.58523559570312, c * 274.0000305175781, c * 181.08523559570312, c * 294.0000305175781, c * 186.58523559570312);
  f[G](c * 293.5000305175781, c * 196.08523559570312, c * 293.5000305175781, c * 196.08523559570312, c * 293.0000305175781, c * 205.58523559570312);
  f[G](c * 304.0000305175781, c * 201.08523559570312, c * 304.0000305175781, c * 201.08523559570312, c * 315.0000305175781, c * 196.58523559570312);
  f[G](c * 350.0000305175781, c * 219.58523559570312, c * 343.0000305175781, c * 221.58523559570312, c * 351.0000305175781, c * 230.58523559570312);
  f[G](c * 296.0000305175781, c * 260.5852355957031, c * 264.0000305175781, c * 256.5852355957031, c * 220.00003051757812, c * 236.58523559570312);
  f[G](c * 233.00003051757812, c * 266.5852355957031, c * 232.00003051757812, c * 279.5852355957031, c * 231.00003051757812, c * 295.5852355957031);
  f[G](c * 222.00003051757812, c * 297.5852355957031, c * 222.00003051757812, c * 297.5852355957031, c * 213.00003051757812, c * 299.5852355957031);
  f[G](c * 219.50003051757812, c * 308.0852355957031, c * 219.50003051757812, c * 308.0852355957031, c * 226.00003051757812, c * 316.5852355957031);
  f[G](c * 223.00003051757812, c * 344.5852355957031, c * 216.00003051757812, c * 350.5852355957031, c * 209.00003051757812, c * 363.5852355957031);
  f[G](c * 154.00003051757812, c * 318.5852355957031, c * 156.00003051757812, c * 268.5852355957031, c * 160.00003051757812, c * 238.58523559570312);
  f[G](c * 135.00003051757812, c * 268.5852355957031, c * 125.00003051757812, c * 267.5852355957031, c * 112.00003051757812, c * 272.5852355957031);
  f[G](c * 104.50003051757812, c * 266.5852355957031, c * 104.50003051757812, c * 266.5852355957031, c * 97.00003051757812, c * 260.5852355957031);
  f[G](c * 93.00003051757812, c * 271.0852355957031, c * 93.00003051757812, c * 271.0852355957031, c * 89.00003051757812, c * 281.5852355957031);
  f[G](c * 66.00003051757812, c * 288.5852355957031, c * 59.000030517578125, c * 288.5852355957031, c * 39.000030517578125, c * 285.5852355957031);
  f[G](c * 56.000030517578125, c * 216.58523559570312, c * 91.00003051757812, c * 204.58523559570312, c * 129.00003051757812, c * 189.58523559570312);
  f[G](c * 90.00003051757812, c * 176.58523559570312, c * 89.00003051757812, c * 173.58523559570312, c * 79.00003051757812, c * 166.58523559570312);
  f[G](c * 82.00003051757812, c * 155.08523559570312, c * 82.00003051757812, c * 155.08523559570312, c * 85.00003051757812, c * 143.58523559570312);
  f[G](c * 75.50003051757812, c * 147.58523559570312, c * 75.50003051757812, c * 147.58523559570312, c * 66.00003051757812, c * 151.58523559570312);
  f[G](c * 44.000030517578125, c * 133.58523559570312, c * 41.000030517578125, c * 124.58523559570312, c * 34.000030517578125, c * 102.58523559570312);
  f[G](c * 100.00003051757812, c * 81.58523559570312, c * 134.00003051757812, c * 118.58523559570312, c * 150.00003051757812, c * 128.58523559570312);
  f[G](c * 144.00003051757812, c * 102.58523559570312, c * 147.00003051757812, c * 90.58523559570312, c * 150.00003051757812, c * 80.58523559570312);
  f[G](c * 159.50003051757812, c * 79.08523559570312, c * 159.50003051757812, c * 79.08523559570312, c * 169.00003051757812, c * 77.58523559570312);
  f[G](c * 163.00003051757812, c * 72.58523559570312, c * 163.00003051757812, c * 72.58523559570312, c * 157.00003051757812, c * 67.58523559570312);
  f[G](c * 162.00003051757812, c * 42.585235595703125, c * 169.00003051757812, c * 29.585235595703125, c * 182.00003051757812, c * 14.585235595703125);
  f[G](c * 219.00003051757812, c * 48.585235595703125, c * 222.00003051757812, c * 92.58523559570312, c * 218.00003051757812, c * 112.58523559570312);
  f[G](c * 239.00003051757812, c * 95.58523559570312, c * 242.00003051757812, c * 97.58523559570312, c * 249.00003051757812, c * 94.58523559570312);
  f[G](c * 255.00003051757812, c * 103.08523559570312, c * 255.00003051757812, c * 103.08523559570312, c * 261.0000305175781, c * 111.58523559570312);
  f[G](c * 261.5000305175781, c * 99.58523559570312, c * 261.5000305175781, c * 99.58523559570312, c * 262.0000305175781, c * 87.58523559570312);
  f[G](c * 282.0000305175781, c * 77.58523559570312, c * 301.0000305175781, c * 74.58523559570312, c * 314.0000305175781, c * 76.58523559570312);
  f[X]();
  jc(f, undefined, d[2], c * 4);
  return e;
}
function Rd(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 248;
  f.height = c * 128;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 137, c * 7);
  g[G](c * 169, c * 14, c * 212, c * 9, c * 241, c * 5);
  g[G](c * 211, c * 63, c * 158, c * 92, c * 103, c * 109);
  g[G](c * 73, c * 126, c * 54, c * 124, c * 6, c * 99);
  g[G](c * 82, c * 63, c * 113, c * 35, c * 137, c * 8);
  g[X]();
  jc(g, e[0], e[1], c * 14);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 73, c * 124);
  g[G](c * 111, c * 126, c * 162, c * 97, c * 203, c * 61);
  g[G](c * 156, c * 98, c * 131, c * 106, c * 105, c * 109);
  g[G](c * 99, c * 121, c * 87, c * 124, c * 72, c * 124);
  g[X]();
  jc(g, e[2], e[3], c * 1);
  return f;
}
function Sd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 130;
  f.height = c * 148;
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 65, c * 85);
  i[ra](1.4);
  nc(i, 7, c * 60, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 65, c * 74);
  i[ra](1.4);
  nc(i, 7, c * 60, c * 10);
  jc(i, e[1], e[2], 4);
  i[ra](0.64);
  nc(i, 7, c * 40, c * 10);
  jc(i, e[3], e[4], 4);
  i[ra](0.12);
  nc(i, 7, c * 23, c * 5);
  i[Qa]();
  jc(i, e[5]);
  return f;
}
function Td(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 125;
  f.height = c * 139;
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 63, c * 79);
  i[ra](1);
  nc(i, 8, c * 60, c * 10);
  jc(i, e[0]);
  i[Qa]();
  i[ua] = 1;
  i[g]();
  i[Ia](c * 63, c * 69);
  i[ra](1);
  nc(i, 8, c * 60, c * 10);
  jc(i, e[1], e[2], 4);
  i[ra](0.56);
  nc(i, 8, c * 40, c * 10);
  jc(i, e[3], e[4], 4);
  i[ra](0.28);
  nc(i, 8, c * 28, c * 8);
  jc(i, e[5]);
  i[Qa]();
  return f;
}
function Ud(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 90;
  f.height = c * 101;
  i[Ia](c * 0, c * 5);
  if (dc === 0) {
    i[ua] = d ? 0.5 : 1;
    lc(i, c * 44, c * 55, c * 41);
    jc(i, e[0]);
  }
  i[ua] = 1;
  lc(i, c * 44, c * 45, c * 41);
  jc(i, e[1], e[2], c * 4);
  lc(i, c * 44, c * 45, c * 31);
  jc(i, e[3]);
  i[g]();
  i[Ia](c * 45, c * 45);
  kc(i, c * -9, c * -25.5, c * 18, c * 51, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  i[g]();
  i[Ia](c * 45, c * 45);
  kc(i, c * -26, c * -9, c * 52, c * 18, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  lc(i, c * 45, c * 29, c * 7);
  jc(i, e[5]);
  lc(i, c * 45, c * 61, c * 7);
  jc(i, e[5]);
  lc(i, c * 28, c * 45, c * 7);
  jc(i, e[5]);
  lc(i, c * 62, c * 45, c * 7);
  jc(i, e[5]);
  return f;
}
function Vd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 90;
  f.height = c * 98;
  i[Ia](0, c * 4);
  if (dc === 0) {
    i[ua] = d ? 0.5 : 1;
    i[g]();
    i[Ia](c * 44, c * 50);
    i[ra](1.4);
    nc(i, 7, c * 41, c * 10);
    i[Qa]();
    jc(i, e[0]);
  }
  i[ua] = 1;
  i[g]();
  i[Ia](c * 44, c * 44);
  i[ra](1.4);
  nc(i, 7, c * 41, c * 10);
  jc(i, e[1], e[2], c * 4);
  nc(i, 7, c * 35, c * 10);
  jc(i, e[3], e[4], c * 4);
  nc(i, 7, c * 23, c * 5);
  i[Qa]();
  jc(i, e[5]);
  i[g]();
  i[Ia](c * 45, c * 45);
  i[ra](0);
  kc(i, c * -9, c * -25.5, c * 18, c * 51, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  i[g]();
  i[Ia](c * 45, c * 45);
  i[ra](0);
  kc(i, c * -26, c * -9, c * 52, c * 18, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  lc(i, c * 45, c * 29, c * 7);
  jc(i, e[5]);
  lc(i, c * 45, c * 61, c * 7);
  jc(i, e[5]);
  lc(i, c * 28, c * 45, c * 7);
  jc(i, e[5]);
  lc(i, c * 62, c * 45, c * 7);
  jc(i, e[5]);
  return f;
}
function Wd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 90;
  f.height = c * 98;
  i[Ia](0, c * 4);
  if (dc === 0) {
    i[ua] = d ? 0.5 : 1;
    i[g]();
    i[Ia](c * 44, c * 50);
    i[ra](1);
    nc(i, 8, c * 41, c * 10);
    jc(i, e[0]);
    i[Qa]();
  }
  i[ua] = 1;
  i[g]();
  i[Ia](c * 44, c * 44);
  i[ra](1);
  nc(i, 8, c * 41, c * 10);
  jc(i, e[1], e[2], c * 4);
  i[ra](0.56);
  nc(i, 8, c * 33, c * 10);
  jc(i, e[3], e[4], c * 4);
  i[ra](0.28);
  nc(i, 8, c * 24, c * 8);
  jc(i, e[5]);
  i[Qa]();
  i[g]();
  i[Ia](c * 45, c * 45);
  i[ra](0);
  kc(i, c * -9, c * -25.5, c * 18, c * 51, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  i[g]();
  i[Ia](c * 45, c * 45);
  i[ra](0);
  kc(i, c * -26, c * -9, c * 52, c * 18, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  lc(i, c * 45, c * 29, c * 7);
  jc(i, e[5]);
  lc(i, c * 45, c * 61, c * 7);
  jc(i, e[5]);
  lc(i, c * 28, c * 45, c * 7);
  jc(i, e[5]);
  lc(i, c * 62, c * 45, c * 7);
  jc(i, e[5]);
  return f;
}
function Xd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 300;
  f.height = c * 300;
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 150, c * 160);
  i[ra](6.28);
  nc(i, 6, c * 146, c * 30);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 150, c * 150);
  i[ra](6.28);
  nc(i, 6, c * 146, c * 30);
  i[Qa]();
  jc(i, e[1], e[2], c * 8);
  i[g]();
  i[Ia](c * 150, c * 150);
  i[ra](0);
  nc(i, 6, c * 105, c * 30);
  i[Qa]();
  jc(i, e[3], e[3], c * 8);
  i[g]();
  i[Ia](c * 150, c * 150);
  i[ra](0);
  nc(i, 6, c * 66, c * 30);
  i[Qa]();
  jc(i, e[4], e[2], c * 8);
  i[g]();
  i[Ia](c * 150, c * 150);
  i[ra](0);
  nc(i, 6, c * 31, c * 30);
  i[Qa]();
  jc(i, e[5], e[6], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 150, c * 207);
  i[G](c * 150, c * 151, c * 150, c * 101, c * 150, c * 94);
  i[X]();
  jc(i, undefined, e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 118, c * 100);
  i[G](c * 118, c * 205, c * 118, c * 207, c * 118, c * 200);
  i[X]();
  jc(i, undefined, e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 183, c * 100);
  i[G](c * 183, c * 203, c * 183, c * 203, c * 183, c * 200);
  i[X]();
  jc(i, undefined, e[2], c * 8);
  return f;
}
function Yd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 300;
  f.height = c * 300;
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 150, c * 160);
  i[ra](6.28);
  nc(i, 6, c * 146, c * 30);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 150, c * 150);
  i[ra](6.28);
  nc(i, 6, c * 146, c * 30);
  i[Qa]();
  jc(i, e[1], e[2], c * 8);
  i[g]();
  i[Ia](c * 150, c * 150);
  i[ra](0);
  nc(i, 6, c * 105, c * 30);
  i[Qa]();
  jc(i, e[3], e[3], c * 8);
  i[g]();
  i[Ia](c * 150, c * 150);
  i[ra](0);
  nc(i, 6, c * 66, c * 30);
  i[Qa]();
  jc(i, e[4], e[2], c * 8);
  i[g]();
  i[Ia](c * 131, c * 116);
  nc(i, 7, c * 17, c * 8);
  i[Qa]();
  jc(i, e[6]);
  i[g]();
  i[Ia](c * 163, c * 168);
  nc(i, 7, c * 25, c * 8);
  i[Qa]();
  jc(i, e[6]);
  i[g]();
  i[Ia](c * 117, c * 151);
  nc(i, 7, c * 11, c * 8);
  i[Qa]();
  jc(i, e[6]);
  i[g]();
  i[Ia](c * 167, c * 122);
  nc(i, 7, c * 12, c * 8);
  i[Qa]();
  jc(i, e[6]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 150, c * 207);
  i[G](c * 150, c * 151, c * 150, c * 101, c * 150, c * 94);
  i[X]();
  jc(i, undefined, e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 118, c * 100);
  i[G](c * 118, c * 205, c * 118, c * 207, c * 118, c * 200);
  i[X]();
  jc(i, undefined, e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 183, c * 100);
  i[G](c * 183, c * 203, c * 183, c * 203, c * 183, c * 200);
  i[X]();
  jc(i, undefined, e[2], c * 8);
  return f;
}
function Zd(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 90;
  f.height = c * 98;
  i[Ia](0, c * 4);
  if (dc === 0) {
    i[ua] = d ? 0.5 : 1;
    i[g]();
    i[Ia](c * 44, c * 50);
    i[ra](0.2);
    nc(i, 9, c * 41, c * 10);
    i[Qa]();
    jc(i, e[0]);
  }
  i[ua] = 1;
  i[g]();
  i[Ia](c * 44, c * 44);
  i[ra](0.2);
  nc(i, 9, c * 41, c * 10);
  jc(i, e[1], e[2], c * 4);
  i[ra](-0.32);
  nc(i, 9, c * 32, c * 10);
  jc(i, e[3], e[4], c * 4);
  i[ra](0.68);
  nc(i, 9, c * 23, c * 8);
  jc(i, e[5], e[6], c * 6);
  i[Qa]();
  i[g]();
  i[Ia](c * 45, c * 45);
  i[ra](0);
  kc(i, c * -9, c * -25.5, c * 18, c * 51, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  i[g]();
  i[Ia](c * 45, c * 45);
  i[ra](0);
  kc(i, c * -26, c * -9, c * 52, c * 18, c * 30);
  i[Qa]();
  jc(i, e[4], e[4], c * 2);
  lc(i, c * 45, c * 29, c * 7);
  jc(i, e[5]);
  lc(i, c * 45, c * 61, c * 7);
  jc(i, e[5]);
  lc(i, c * 28, c * 45, c * 7);
  jc(i, e[5]);
  lc(i, c * 62, c * 45, c * 7);
  jc(i, e[5]);
  return f;
}
function $d(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 135;
  f.height = c * 120;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 3.5, c * 55.25);
  g[G](c * 3.5, c * 114.25, c * 2.5, c * 109.25, c * 3.5, c * 112.25);
  g[G](c * 5.5, c * 119.25, c * 8.5, c * 119.25, c * 11.5, c * 119.25);
  g[G](c * 15.5, c * 114.25, c * 13.5, c * 95.25, c * 14.5, c * 82.25);
  g[X]();
  jc(g, e[0], e[1], c * 7);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 6.5, c * 43.25);
  g[G](c * 3.5, c * 27.25, c * 7.5, c * 20.25, c * 25.5, c * 11.25);
  g[G](c * 45.5, c * -0.75, c * 73.5, c * 1.25, c * 107.5, c * 10.25);
  g[G](c * 131.5, c * 21.25, c * 125.5, c * 34.25, c * 125.5, c * 36.25);
  g[X]();
  jc(g, e[0], e[1], c * 7);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 120.5, c * 62.25);
  g[G](c * 121.5, c * 95.25, c * 120.5, c * 80.25, c * 120.5, c * 100.25);
  g[G](c * 118.5, c * 119.25, c * 123.5, c * 118.25, c * 129.5, c * 113.25);
  g[G](c * 133.5, c * 107.25, c * 130.5, c * 97.25, c * 130.5, c * 87.25);
  g[G](c * 129.5, c * 56.25, c * 130, c * 70.75, c * 129.5, c * 54.25);
  g[X]();
  jc(g, e[0], e[1], c * 7);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 17.5, c * 27);
  g[G](c * 48.5, c * 5, c * 93.5, c * 14, c * 118.5, c * 26);
  g[G](c * 132.5, c * 35, c * 133.5, c * 52, c * 132.5, c * 68);
  g[G](c * 125.5, c * 87, c * 116.5, c * 84, c * 96.5, c * 75);
  g[G](c * 60.5, c * 66, c * 52.5, c * 74, c * 37.5, c * 78);
  g[G](c * 2.5, c * 86, c * 3.5, c * 78, c * 1.5, c * 61);
  g[G](c * 1.5, c * 37, c * 9.5, c * 32, c * 15.5, c * 28);
  g[X]();
  jc(g, e[2], e[3], c * 7);
  return f;
}
function _d(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 501;
  f.height = c * 309;
  g[Ia](0, c * 6);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 126, c * 184);
  g[G](c * 169, c * 196, c * 194, c * 198, c * 227, c * 198);
  g[G](c * 235, c * 222, c * 236, c * 223, c * 241, c * 226);
  g[G](c * 245, c * 228, c * 257, c * 228, c * 263, c * 226);
  g[G](c * 267, c * 225, c * 270, c * 211, c * 275, c * 198);
  g[G](c * 332, c * 194, c * 347, c * 192, c * 372, c * 188);
  g[G](c * 366, c * 174.5, c * 366, c * 174.5, c * 360, c * 161);
  g[G](c * 253.5, c * 162, c * 253.5, c * 162, c * 147, c * 163);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 100, c * 116);
  g[G](c * 90, c * 101, c * 96, c * 89, c * 106, c * 83);
  g[G](c * 86, c * 79, c * 86, c * 52, c * 93, c * 38);
  g[G](c * 99, c * 51, c * 107, c * 57, c * 122, c * 63);
  g[G](c * 130, c * 53, c * 141, c * 46, c * 161, c * 46);
  g[G](c * 157, c * 31, c * 158, c * 20, c * 169, c * 6);
  g[G](c * 171, c * 24, c * 186, c * 33, c * 198, c * 45);
  g[G](c * 252, c * 45, c * 252, c * 45, c * 306, c * 45);
  g[G](c * 323, c * 33, c * 332, c * 21, c * 335, c * 7);
  g[G](c * 349, c * 21, c * 347, c * 36, c * 345, c * 46);
  g[G](c * 364, c * 46, c * 369, c * 48, c * 377, c * 63);
  g[G](c * 398, c * 58, c * 403, c * 49, c * 409, c * 40);
  g[G](c * 419, c * 57, c * 411, c * 79, c * 398, c * 85);
  g[G](c * 405, c * 100, c * 405, c * 106, c * 401, c * 118);
  g[G](c * 332.5, c * 128.5, c * 332.5, c * 128.5, c * 264, c * 139);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 122, c * 191);
  g[G](c * 123, c * 237, c * 135, c * 245, c * 153, c * 259);
  g[G](c * 167, c * 269, c * 158, c * 281, c * 118, c * 276);
  g[G](c * 104, c * 273, c * 98, c * 268, c * 93, c * 242);
  g[G](c * 89, c * 220, c * 92, c * 201, c * 102, c * 179);
  g[X]();
  jc(g, e[3], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 403, c * 182);
  g[G](c * 414, c * 215, c * 412, c * 232, c * 403, c * 260);
  g[G](c * 395, c * 274, c * 375, c * 272, c * 356, c * 270);
  g[G](c * 345, c * 268, c * 339, c * 262, c * 354, c * 252);
  g[G](c * 370, c * 242, c * 380, c * 225, c * 384, c * 184);
  g[X]();
  jc(g, e[3], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 155, c * 157);
  g[G](c * 146, c * 189, c * 137, c * 198, c * 114, c * 219);
  g[G](c * 104, c * 212, c * 98, c * 203, c * 89, c * 189);
  g[G](c * 82, c * 178, c * 91, c * 164, c * 93, c * 136);
  g[X]();
  jc(g, e[4], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 347, c * 162);
  g[G](c * 357, c * 195, c * 376, c * 209, c * 387, c * 217);
  g[G](c * 409, c * 201, c * 420, c * 181, c * 416, c * 166);
  g[G](c * 410, c * 150, c * 412, c * 149, c * 408, c * 130);
  g[X]();
  jc(g, e[4], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 86, c * 134);
  g[G](c * 79, c * 102, c * 92, c * 84, c * 108, c * 92);
  g[G](c * 149, c * 108, c * 184, c * 111, c * 242, c * 111);
  g[G](c * 294, c * 108, c * 341, c * 105, c * 386, c * 98);
  g[G](c * 412, c * 91, c * 417, c * 86, c * 415, c * 133);
  g[G](c * 413, c * 160, c * 413, c * 160, c * 368, c * 174);
  g[G](c * 308, c * 184, c * 291, c * 185, c * 270, c * 186);
  g[G](c * 264, c * 206, c * 262, c * 215, c * 253, c * 215);
  g[G](c * 239, c * 217, c * 239, c * 211, c * 231, c * 186);
  g[G](c * 178, c * 184, c * 156, c * 179, c * 112, c * 162);
  g[G](c * 87, c * 151, c * 90, c * 144, c * 87, c * 137);
  g[X]();
  jc(g, e[4], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 63, c * 98);
  g[G](c * 84, c * 121, c * 109, c * 102, c * 124, c * 117);
  g[G](c * 138, c * 136, c * 123, c * 165, c * 94, c * 150);
  g[G](c * 66, c * 131, c * 64, c * 115, c * 63, c * 99);
  g[X]();
  jc(g, e[3], e[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 449, c * 97);
  g[G](c * 446, c * 143, c * 415, c * 151, c * 402, c * 155);
  g[G](c * 386, c * 157, c * 373, c * 133, c * 391, c * 116);
  g[G](c * 402, c * 106, c * 432, c * 124, c * 449, c * 97);
  g[X]();
  jc(g, e[3], e[2], c * 10);
  return f;
}
function ae(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 304;
  f.height = c * 278;
  g[Ia](c * 10, c * 25);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 128, c * 137);
  g[G](c * 155, c * 144, c * 223, c * 143, c * 256, c * 122);
  g[G](c * 249, c * 180, c * 210, c * 227, c * 164, c * 242);
  g[G](c * 74, c * 213, c * 99, c * 166, c * 127, c * 138);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 284, c * 52);
  g[G](c * 126, c * 112, c * 89, c * 177, c * 170, c * 241);
  g[G](c * 103, c * 275, c * 20, c * 239, c * 12, c * 159);
  g[G](c * 5, c * 76, c * 75, c * 4, c * 165, c * 13);
  g[G](c * 233, c * 15, c * 260, c * 33, c * 284, c * 52);
  g[X]();
  jc(g, e[0]);
  g[Ia](c * -10, c * -25);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 128, c * 137);
  g[G](c * 155, c * 144, c * 223, c * 143, c * 256, c * 122);
  g[G](c * 249, c * 180, c * 210, c * 227, c * 164, c * 242);
  g[G](c * 74, c * 213, c * 99, c * 166, c * 127, c * 138);
  g[X]();
  jc(g, e[1], e[2], c * 15);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 284, c * 52);
  g[G](c * 126, c * 112, c * 89, c * 177, c * 170, c * 241);
  g[G](c * 103, c * 275, c * 20, c * 239, c * 12, c * 159);
  g[G](c * 5, c * 76, c * 75, c * 4, c * 165, c * 13);
  g[G](c * 233, c * 15, c * 260, c * 33, c * 284, c * 52);
  g[X]();
  jc(g, e[3], e[4], c * 15);
  return f;
}
function be(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 175;
  f.height = c * 169;
  i[ua] = 0.5;
  i[Ia](0, c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 19, c * 139);
  i[G](c * 18, c * 163, c * 22, c * 156, c * 53, c * 157);
  i[G](c * 97.5, c * 157, c * 97.5, c * 157, c * 142, c * 157);
  i[G](c * 150, c * 157, c * 153, c * 156, c * 154, c * 142);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -3);
  i[g]();
  i[Ia](c * 86.5, c * 81.5);
  kc(i, c * -66.5, c * -65.5, c * 133, c * 131, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  i[g]();
  i[Ia](c * 84.5, c * 79);
  kc(i, c * -50.5, c * -49, c * 101, c * 98, c * 10);
  i[Qa]();
  jc(i, e[3], e[2], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 42, c * 54);
  i[G](c * 37, c * 48, c * 39, c * 44, c * 38, c * 41);
  i[G](c * 42, c * 40, c * 45, c * 40, c * 50, c * 41);
  i[G](c * 85, c * 36, c * 98, c * 37, c * 116, c * 42);
  i[G](c * 132, c * 39, c * 132, c * 39, c * 133, c * 56);
  i[G](c * 136, c * 73, c * 136, c * 84, c * 132, c * 106);
  i[G](c * 47, c * 113, c * 85.5, c * 106, c * 39, c * 106);
  i[G](c * 32, c * 81, c * 38, c * 60, c * 42, c * 55);
  i[X]();
  jc(i, e[4], e[5], c * 5);
  i[g]();
  i[Ia](c * 28, c * 24);
  i[ra](0);
  kc(i, c * -14, c * -14, c * 28, c * 28, c * 4);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  i[g]();
  i[Ia](c * 143, c * 23);
  i[ra](0);
  kc(i, c * -14, c * -14, c * 28, c * 28, c * 4);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 55, c * 80);
  i[G](c * 73, c * 78, c * 84, c * 74, c * 100, c * 64);
  i[G](c * 111, c * 57, c * 125, c * 67, c * 108, c * 84);
  i[G](c * 96, c * 95, c * 86, c * 96, c * 70, c * 88);
  i[G](c * 62.5, c * 84, c * 62.5, c * 84, c * 55, c * 80);
  i[X]();
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 17, c * 112);
  i[G](c * 14, c * 146, c * 27, c * 152, c * 37, c * 149);
  i[G](c * 78, c * 155, c * 128, c * 150, c * 146, c * 150);
  i[G](c * 158, c * 144, c * 158, c * 121, c * 153, c * 114);
  i[X]();
  jc(i, e[8], e[9], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 127, c * 111);
  i[G](c * 133, c * 136, c * 115, c * 149, c * 88, c * 150);
  i[G](c * 119.5, c * 151, c * 119.5, c * 151, c * 151, c * 152);
  i[G](c * 159, c * 136, c * 155, c * 126, c * 154, c * 113);
  i[X]();
  jc(i, e[9]);
  i[ua] = 0.5;
  i[Ia](0, c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 15, c * 117);
  i[G](c * 34, c * 109, c * 61, c * 106, c * 94, c * 109);
  i[G](c * 126, c * 110, c * 142, c * 113, c * 154, c * 119);
  i[G](c * 154, c * 123, c * 154, c * 123, c * 154, c * 127);
  i[G](c * 127, c * 118, c * 15, c * 122, c * 18, c * 129);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 14, c * 127);
  i[G](c * 13, c * 117, c * 12, c * 109, c * 15, c * 103);
  i[G](c * 16, c * 95, c * 21, c * 92, c * 60, c * 93);
  i[G](c * 91, c * 93, c * 118, c * 93, c * 143, c * 96);
  i[G](c * 151, c * 96, c * 155, c * 99, c * 156, c * 112);
  i[G](c * 157, c * 124, c * 157, c * 127, c * 156, c * 128);
  i[G](c * 138, c * 112, c * 100, c * 118, c * 84, c * 118);
  i[G](c * 28, c * 118, c * 20, c * 120, c * 16, c * 127);
  i[X]();
  jc(i, e[4], e[5], c * 5);
  i[g]();
  i[Ia](c * 27.5, c * 138.5);
  kc(i, c * -13.5, c * -14.5, c * 27, c * 29, c * 4);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  i[g]();
  i[Ia](c * 143.5, c * 137);
  kc(i, c * -13.5, c * -14, c * 27, c * 28, c * 4);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  return f;
}
function ce(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 175;
  f.height = c * 169;
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 17, c * 112);
  i[G](c * 14, c * 146, c * 27, c * 152, c * 37, c * 149);
  i[G](c * 78, c * 155, c * 128, c * 150, c * 146, c * 150);
  i[G](c * 158, c * 144, c * 158, c * 121, c * 153, c * 114);
  i[X]();
  jc(i, e[8], e[9], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 127, c * 111);
  i[G](c * 133, c * 136, c * 115, c * 149, c * 88, c * 150);
  i[G](c * 119.5, c * 151, c * 119.5, c * 151, c * 151, c * 152);
  i[G](c * 159, c * 136, c * 155, c * 126, c * 154, c * 113);
  i[X]();
  jc(i, e[9]);
  i[ua] = 0.5;
  i[Ia](0, c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 15, c * 117);
  i[G](c * 34, c * 109, c * 61, c * 106, c * 94, c * 109);
  i[G](c * 126, c * 110, c * 142, c * 113, c * 154, c * 119);
  i[G](c * 154, c * 123, c * 154, c * 123, c * 154, c * 127);
  i[G](c * 127, c * 118, c * 15, c * 122, c * 18, c * 129);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 14, c * 127);
  i[G](c * 13, c * 117, c * 12, c * 109, c * 15, c * 103);
  i[G](c * 16, c * 95, c * 21, c * 92, c * 60, c * 93);
  i[G](c * 91, c * 93, c * 118, c * 93, c * 143, c * 96);
  i[G](c * 151, c * 96, c * 155, c * 99, c * 156, c * 112);
  i[G](c * 157, c * 124, c * 157, c * 127, c * 156, c * 128);
  i[G](c * 138, c * 112, c * 100, c * 118, c * 84, c * 118);
  i[G](c * 28, c * 118, c * 20, c * 120, c * 16, c * 127);
  i[X]();
  jc(i, e[4], e[5], c * 5);
  i[g]();
  i[Ia](c * 27.5, c * 138.5);
  kc(i, c * -13.5, c * -14.5, c * 27, c * 29, c * 4);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  i[g]();
  i[Ia](c * 143.5, c * 137);
  kc(i, c * -13.5, c * -14, c * 27, c * 28, c * 4);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  return f;
}
function de(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 115;
  f.height = c * 585;
  i[I](-1, 1);
  i[Ia](c * -110, 0);
  i[Ia](c * 10, c * 10);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 51.5, c * 342);
  kc(i, c * -14.5, c * -225, c * 29, c * 450, c * 20);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 54, c * 83);
  i[G](c * 70, c * 69, c * 78, c * 62, c * 82, c * 40);
  i[G](c * 93, c * 48, c * 103, c * 64, c * 95, c * 102);
  i[G](c * 60, c * 114, c * 53, c * 103, c * 54, c * 85);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 95, c * 97);
  i[G](c * 56, c * 102, c * 43, c * 77, c * 71, c * 6);
  i[G](c * 34, c * 10, c * 6, c * 43, c * 5, c * 76);
  i[G](c * 4, c * 98, c * 15, c * 130, c * 64, c * 130);
  i[G](c * 76, c * 129, c * 95, c * 113, c * 97, c * 97);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 55, c * 176);
  i[G](c * 74, c * 175, c * 82, c * 169, c * 96, c * 155);
  i[G](c * 103, c * 183, c * 95, c * 214, c * 54, c * 219);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 50, c * 176);
  i[G](c * 25, c * 177, c * 16, c * 164, c * 7, c * 156);
  i[G](c * 0, c * 186, c * 10, c * 201, c * 43, c * 220);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 403);
  i[G](c * 47, c * 412, c * 58, c * 412, c * 67, c * 403);
  i[G](c * 66.5, c * 434, c * 66.5, c * 434, c * 66, c * 465);
  i[G](c * 56, c * 480, c * 40, c * 472, c * 36, c * 465);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 59, c * 67);
  i[G](c * 47, c * 97, c * 18, c * 117, c * 11, c * 110);
  i[G](c * 11, c * 115, c * 15, c * 122, c * 23, c * 124);
  i[G](c * 46, c * 118, c * 52, c * 113, c * 62, c * 86);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 30, c * 125);
  i[G](c * 47, c * 136, c * 57, c * 134, c * 77, c * 127);
  i[G](c * 71, c * 158, c * 71, c * 159, c * 66, c * 159);
  i[G](c * 50.5, c * 156.5, c * 50.5, c * 156.5, c * 35, c * 154);
  i[G](c * 31, c * 145, c * 31, c * 136, c * 31, c * 125);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 171);
  i[G](c * 32, c * 221, c * 43, c * 233, c * 70, c * 247);
  i[G](c * 75, c * 234, c * 75, c * 230, c * 72, c * 221);
  i[G](c * 48, c * 206, c * 54, c * 188, c * 50, c * 176);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 60, c * 68);
  i[G](c * 63, c * 69, c * 65, c * 71, c * 67, c * 77);
  i[G](c * 61, c * 123, c * 52, c * 137, c * 42, c * 150);
  i[G](c * 38, c * 151, c * 38, c * 151, c * 34, c * 152);
  i[G](c * 33, c * 146.5, c * 33, c * 146.5, c * 32, c * 141);
  i[G](c * 49, c * 118, c * 63, c * 87, c * 59, c * 68);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 71, c * 172);
  i[G](c * 56, c * 222, c * 49, c * 234, c * 35, c * 248);
  i[G](c * 30, c * 236, c * 30, c * 230, c * 31, c * 217);
  i[G](c * 44, c * 202, c * 49, c * 191, c * 52, c * 172);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 151);
  i[G](c * 27, c * 165, c * 31, c * 173, c * 36, c * 178);
  i[G](c * 56, c * 185, c * 73, c * 184, c * 71, c * 170);
  i[G](c * 72, c * 154, c * 71, c * 154, c * 63, c * 155);
  i[X]();
  jc(i, e[0]);
  i[Ia](c * -10, c * -10);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 51.5, c * 342);
  kc(i, c * -14.5, c * -225, c * 29, c * 450, c * 20);
  i[Qa]();
  jc(i, e[1], e[2], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 54, c * 83);
  i[G](c * 70, c * 69, c * 78, c * 62, c * 82, c * 40);
  i[G](c * 93, c * 48, c * 103, c * 64, c * 95, c * 102);
  i[G](c * 60, c * 114, c * 53, c * 103, c * 54, c * 85);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 95, c * 97);
  i[G](c * 56, c * 102, c * 43, c * 77, c * 71, c * 6);
  i[G](c * 34, c * 10, c * 6, c * 43, c * 5, c * 76);
  i[G](c * 4, c * 98, c * 15, c * 130, c * 64, c * 130);
  i[G](c * 76, c * 129, c * 95, c * 113, c * 97, c * 97);
  i[X]();
  jc(i, e[5], e[6], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 403);
  i[G](c * 47, c * 412, c * 58, c * 412, c * 67, c * 403);
  i[G](c * 66.5, c * 434, c * 66.5, c * 434, c * 66, c * 465);
  i[G](c * 56, c * 480, c * 40, c * 472, c * 36, c * 465);
  i[X]();
  jc(i, e[7], e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 37, c * 427);
  i[G](c * 47, c * 435, c * 55, c * 435, c * 67, c * 427);
  jc(i, undefined, e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 36, c * 448);
  i[G](c * 46, c * 454, c * 54, c * 457, c * 65, c * 449);
  jc(i, undefined, e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 55, c * 176);
  i[G](c * 74, c * 175, c * 82, c * 169, c * 96, c * 155);
  i[G](c * 103, c * 183, c * 95, c * 214, c * 54, c * 219);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 50, c * 176);
  i[G](c * 25, c * 177, c * 16, c * 164, c * 7, c * 156);
  i[G](c * 0, c * 186, c * 10, c * 201, c * 43, c * 220);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 59, c * 67);
  i[G](c * 47, c * 97, c * 18, c * 117, c * 11, c * 110);
  i[G](c * 11, c * 115, c * 15, c * 122, c * 23, c * 124);
  i[G](c * 46, c * 118, c * 52, c * 113, c * 62, c * 86);
  i[X]();
  jc(i, e[7], e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 30, c * 125);
  i[G](c * 47, c * 136, c * 57, c * 134, c * 77, c * 127);
  i[G](c * 71, c * 158, c * 71, c * 159, c * 66, c * 159);
  i[G](c * 50.5, c * 156.5, c * 50.5, c * 156.5, c * 35, c * 154);
  i[G](c * 31, c * 145, c * 31, c * 136, c * 31, c * 125);
  i[X]();
  jc(i, e[7], e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 171);
  i[G](c * 32, c * 221, c * 43, c * 233, c * 70, c * 247);
  i[G](c * 75, c * 234, c * 75, c * 230, c * 72, c * 221);
  i[G](c * 48, c * 206, c * 54, c * 188, c * 50, c * 176);
  i[X]();
  jc(i, e[7], e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 60, c * 68);
  i[G](c * 63, c * 69, c * 65, c * 71, c * 67, c * 77);
  i[G](c * 61, c * 123, c * 52, c * 137, c * 42, c * 150);
  i[G](c * 38, c * 151, c * 38, c * 151, c * 34, c * 152);
  i[G](c * 33, c * 146.5, c * 33, c * 146.5, c * 32, c * 141);
  i[G](c * 49, c * 118, c * 63, c * 87, c * 59, c * 68);
  i[X]();
  jc(i, e[7], e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 71, c * 172);
  i[G](c * 56, c * 222, c * 49, c * 234, c * 35, c * 248);
  i[G](c * 30, c * 236, c * 30, c * 230, c * 31, c * 217);
  i[G](c * 44, c * 202, c * 49, c * 191, c * 52, c * 172);
  i[X]();
  jc(i, e[7], e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 151);
  i[G](c * 27, c * 165, c * 31, c * 173, c * 36, c * 178);
  i[G](c * 56, c * 185, c * 73, c * 184, c * 71, c * 170);
  i[G](c * 72, c * 154, c * 71, c * 154, c * 63, c * 155);
  i[X]();
  jc(i, e[7], e[8], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 53, c * 113);
  i[G](c * 65, c * 140, c * 75, c * 166, c * 52, c * 169);
  i[G](c * 29, c * 168, c * 41, c * 143, c * 53, c * 112);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  return f;
}
function ee(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 81;
  f.height = c * 626;
  g[Ia](c * 20, c * 20);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 55, c * 565);
  g[G](c * 56, c * 586, c * 53, c * 591, c * 40, c * 592);
  g[G](c * 28, c * 591, c * 27, c * 583, c * 28, c * 557);
  g[G](c * 27.5, c * 346, c * 27.5, c * 346, c * 27, c * 135);
  g[G](c * 26, c * 74, c * 36, c * 26, c * 41, c * 15);
  g[G](c * 54, c * 51, c * 54, c * 81, c * 55, c * 128);
  g[X]();
  jc(g, e[0]);
  g[Ia](c * -20, c * -20);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 55, c * 565);
  g[G](c * 56, c * 586, c * 53, c * 591, c * 40, c * 592);
  g[G](c * 28, c * 591, c * 27, c * 583, c * 28, c * 557);
  g[G](c * 27.5, c * 346, c * 27.5, c * 346, c * 27, c * 135);
  g[G](c * 26, c * 74, c * 36, c * 26, c * 41, c * 15);
  g[G](c * 54, c * 51, c * 54, c * 81, c * 55, c * 128);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 27, c * 129);
  g[G](c * 32, c * 135, c * 48, c * 136, c * 53, c * 129);
  g[G](c * 56, c * 97, c * 53, c * 82, c * 52, c * 64);
  g[G](c * 49, c * 33, c * 44, c * 27, c * 41, c * 21);
  g[G](c * 31, c * 40, c * 28, c * 84, c * 27, c * 127);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 55, c * 565);
  g[G](c * 56, c * 586, c * 53, c * 591, c * 40, c * 592);
  g[G](c * 28, c * 591, c * 27, c * 583, c * 28, c * 557);
  g[G](c * 27.5, c * 346, c * 27.5, c * 346, c * 27, c * 135);
  g[G](c * 26, c * 74, c * 36, c * 26, c * 41, c * 15);
  g[G](c * 54, c * 51, c * 54, c * 81, c * 55, c * 128);
  g[X]();
  jc(g, undefined, e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 28, c * 475);
  g[G](c * 38, c * 482, c * 48, c * 480, c * 54, c * 474);
  g[G](c * 54, c * 509.5, c * 54, c * 509.5, c * 54, c * 545);
  g[G](c * 46, c * 554, c * 36, c * 552, c * 28, c * 545);
  g[X]();
  jc(g, e[4], e[5], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 28, c * 496);
  g[G](c * 39, c * 506, c * 49, c * 503, c * 54, c * 496);
  jc(g, undefined, e[5], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 28, c * 521);
  g[G](c * 41, c * 529, c * 49, c * 524, c * 54, c * 520);
  jc(g, undefined, e[5], c * 8);
  return f;
}
function fe(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 100;
  f.height = c * 648;
  i[Ia](c * 20, c * 20);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 50.5, c * 349.5);
  kc(i, c * -13.5, c * -249.5, c * 27, c * 499, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 36, c * 538);
  i[G](c * 49.5, c * 538, c * 49.5, c * 538, c * 63, c * 538);
  i[G](c * 63.5, c * 568, c * 63.5, c * 568, c * 64, c * 598);
  i[G](c * 50, c * 598, c * 50, c * 598, c * 36, c * 598);
  i[G](c * 36, c * 568.5, c * 36, c * 568.5, c * 36, c * 539);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 36, c * 554);
  i[G](c * 45, c * 561, c * 56, c * 558, c * 63, c * 554);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 32, c * 569);
  i[G](c * 44, c * 576, c * 58, c * 574, c * 68, c * 569);
  i[G](c * 68, c * 584, c * 68, c * 584, c * 68, c * 599);
  i[G](c * 68, c * 608, c * 65, c * 618, c * 49, c * 617);
  i[G](c * 34, c * 617, c * 32, c * 610, c * 32, c * 598);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 41, c * 581);
  i[G](c * 48, c * 584, c * 55, c * 583, c * 60, c * 581);
  i[G](c * 60, c * 589.5, c * 60, c * 589.5, c * 60, c * 598);
  i[G](c * 60, c * 604, c * 59, c * 609, c * 48, c * 608);
  i[G](c * 40, c * 607, c * 40, c * 606, c * 41, c * 581);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 31, c * 106);
  i[G](c * 31, c * 124.5, c * 31, c * 124.5, c * 31, c * 143);
  i[G](c * 31, c * 163, c * 38, c * 169, c * 48, c * 168);
  i[G](c * 57, c * 168, c * 67, c * 165, c * 67, c * 148);
  i[G](c * 67, c * 123.5, c * 67, c * 123.5, c * 67, c * 99);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 49, c * 27);
  i[G](c * 64, c * 62.5, c * 64, c * 62.5, c * 79, c * 98);
  i[G](c * 74, c * 113, c * 63, c * 121, c * 50, c * 122);
  i[G](c * 35, c * 123, c * 22, c * 109, c * 20, c * 98);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 49, c * 43);
  i[G](c * 61, c * 70, c * 61, c * 70, c * 73, c * 97);
  i[G](c * 66, c * 116, c * 43, c * 122, c * 26, c * 99);
  i[X]();
  jc(i, e[0]);
  i[Ia](c * -20, c * -20);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 50.5, c * 349.5);
  kc(i, c * -13.5, c * -249.5, c * 27, c * 499, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 36, c * 538);
  i[G](c * 49.5, c * 538, c * 49.5, c * 538, c * 63, c * 538);
  i[G](c * 63.5, c * 568, c * 63.5, c * 568, c * 64, c * 598);
  i[G](c * 50, c * 598, c * 50, c * 598, c * 36, c * 598);
  i[G](c * 36, c * 568.5, c * 36, c * 568.5, c * 36, c * 539);
  i[X]();
  jc(i, e[3], e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 36, c * 554);
  i[G](c * 45, c * 561, c * 56, c * 558, c * 63, c * 554);
  i[X]();
  jc(i, undefined, e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 32, c * 569);
  i[G](c * 44, c * 576, c * 58, c * 574, c * 68, c * 569);
  i[G](c * 68, c * 584, c * 68, c * 584, c * 68, c * 599);
  i[G](c * 68, c * 608, c * 65, c * 618, c * 49, c * 617);
  i[G](c * 34, c * 617, c * 32, c * 610, c * 32, c * 598);
  i[X]();
  jc(i, e[5], e[6], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 41, c * 581);
  i[G](c * 48, c * 584, c * 55, c * 583, c * 60, c * 581);
  i[G](c * 60, c * 589.5, c * 60, c * 589.5, c * 60, c * 598);
  i[G](c * 60, c * 604, c * 59, c * 609, c * 48, c * 608);
  i[G](c * 40, c * 607, c * 40, c * 606, c * 41, c * 581);
  i[X]();
  jc(i, e[7]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 31, c * 106);
  i[G](c * 31, c * 124.5, c * 31, c * 124.5, c * 31, c * 143);
  i[G](c * 31, c * 163, c * 38, c * 169, c * 48, c * 168);
  i[G](c * 57, c * 168, c * 67, c * 165, c * 67, c * 148);
  i[G](c * 67, c * 123.5, c * 67, c * 123.5, c * 67, c * 99);
  i[X]();
  jc(i, e[5], e[6], c * 8);
  i[g]();
  i[Ia](c * -46, c * -50);
  i[I](2, 2);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 51, c * 80);
  i[G](c * 51, c * 89.5, c * 51, c * 89.5, c * 51, c * 99);
  i[G](c * 49, c * 103, c * 46, c * 105, c * 44, c * 99);
  i[G](c * 44, c * 88.5, c * 44, c * 88.5, c * 44, c * 78);
  i[X]();
  jc(i, e[8]);
  i[Qa]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 49, c * 27);
  i[G](c * 64, c * 62.5, c * 64, c * 62.5, c * 79, c * 98);
  i[G](c * 74, c * 113, c * 63, c * 121, c * 50, c * 122);
  i[G](c * 35, c * 123, c * 22, c * 109, c * 20, c * 98);
  i[X]();
  jc(i, e[8], e[9], c * 8);
  i[I](2, 2);
  i[Ia](c * -23, c * -20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 57, c * 69);
  i[G](c * 50, c * 76, c * 43, c * 75, c * 38, c * 69);
  i[G](c * 43, c * 57, c * 43, c * 57, c * 48, c * 45);
  i[X]();
  jc(i, e[10]);
  return f;
}
function ge(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 88;
  f.height = c * 647;
  i[Ia](c * 20, c * 20);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 45, c * 384.5);
  kc(i, c * -15, c * -216.5, c * 30, c * 433, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 27, c * 572);
  i[G](c * 44, c * 580, c * 55, c * 576, c * 62, c * 572);
  i[G](c * 65, c * 585.5, c * 65, c * 585.5, c * 68, c * 599);
  i[G](c * 71, c * 612, c * 68, c * 618, c * 34, c * 616);
  i[G](c * 14, c * 615, c * 19, c * 607, c * 27, c * 573);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 32, c * 587);
  i[G](c * 39, c * 590, c * 48, c * 588, c * 54, c * 587);
  i[G](c * 57, c * 604, c * 59, c * 609, c * 46, c * 609);
  i[G](c * 27, c * 609, c * 28, c * 605, c * 33, c * 588);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 31, c * 113);
  i[G](c * 27, c * 139, c * 27, c * 139, c * 23, c * 165);
  i[G](c * 18, c * 187, c * 39, c * 195, c * 57, c * 186);
  i[G](c * 68, c * 180, c * 65, c * 171, c * 62, c * 153);
  i[G](c * 58.5, c * 131, c * 58.5, c * 131, c * 55, c * 109);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 39, c * 139);
  i[G](c * 43, c * 139, c * 43, c * 139, c * 47, c * 139);
  i[G](c * 51, c * 158, c * 56, c * 176, c * 44, c * 175);
  i[G](c * 33, c * 177, c * 34, c * 167, c * 39, c * 140);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 29);
  i[G](c * 57, c * 63, c * 57, c * 63, c * 70, c * 97);
  i[G](c * 60, c * 111, c * 60, c * 111, c * 50, c * 125);
  i[G](c * 45, c * 128, c * 41, c * 128, c * 35, c * 124);
  i[G](c * 26.5, c * 110, c * 26.5, c * 110, c * 18, c * 96);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 54);
  i[G](c * 50, c * 72, c * 50, c * 72, c * 56, c * 90);
  i[G](c * 58, c * 94, c * 59, c * 98, c * 53, c * 105);
  i[G](c * 47, c * 113, c * 43, c * 113, c * 36, c * 103);
  i[G](c * 29, c * 96, c * 31, c * 94, c * 35, c * 83);
  i[X]();
  jc(i, e[0]);
  i[Ia](c * -20, c * -20);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 45, c * 384.5);
  kc(i, c * -15, c * -216.5, c * 30, c * 433, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 27, c * 572);
  i[G](c * 44, c * 580, c * 55, c * 576, c * 62, c * 572);
  i[G](c * 65, c * 585.5, c * 65, c * 585.5, c * 68, c * 599);
  i[G](c * 71, c * 612, c * 68, c * 618, c * 34, c * 616);
  i[G](c * 14, c * 615, c * 19, c * 607, c * 27, c * 573);
  i[X]();
  jc(i, e[3], e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 32, c * 587);
  i[G](c * 39, c * 590, c * 48, c * 588, c * 54, c * 587);
  i[G](c * 57, c * 604, c * 59, c * 609, c * 46, c * 609);
  i[G](c * 27, c * 609, c * 28, c * 605, c * 33, c * 588);
  i[X]();
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 31, c * 113);
  i[G](c * 27, c * 139, c * 27, c * 139, c * 23, c * 165);
  i[G](c * 18, c * 187, c * 39, c * 195, c * 57, c * 186);
  i[G](c * 68, c * 180, c * 65, c * 171, c * 62, c * 153);
  i[G](c * 58.5, c * 131, c * 58.5, c * 131, c * 55, c * 109);
  i[X]();
  jc(i, e[3], e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 39, c * 139);
  i[G](c * 43, c * 139, c * 43, c * 139, c * 47, c * 139);
  i[G](c * 51, c * 158, c * 56, c * 176, c * 44, c * 175);
  i[G](c * 33, c * 177, c * 34, c * 167, c * 39, c * 140);
  i[X]();
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 29);
  i[G](c * 57, c * 63, c * 57, c * 63, c * 70, c * 97);
  i[G](c * 60, c * 111, c * 60, c * 111, c * 50, c * 125);
  i[G](c * 45, c * 128, c * 41, c * 128, c * 35, c * 124);
  i[G](c * 26.5, c * 110, c * 26.5, c * 110, c * 18, c * 96);
  i[X]();
  jc(i, e[6], e[7], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 54);
  i[G](c * 50, c * 72, c * 50, c * 72, c * 56, c * 90);
  i[G](c * 58, c * 94, c * 59, c * 98, c * 53, c * 105);
  i[G](c * 47, c * 113, c * 43, c * 113, c * 36, c * 103);
  i[G](c * 29, c * 96, c * 31, c * 94, c * 35, c * 83);
  i[X]();
  jc(i, e[8]);
  return f;
}
function he(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 106;
  f.height = c * 681;
  i[Ia](c * 20, c * 20);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 52.5, c * 395);
  i[ra](0);
  kc(i, c * -11.5, c * -226, c * 23, c * 452, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 588);
  i[G](c * 47, c * 596, c * 61, c * 594, c * 69, c * 588);
  i[G](c * 79, c * 615, c * 78, c * 632, c * 59, c * 643);
  i[G](c * 41, c * 650, c * 27, c * 632, c * 30, c * 610);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 135);
  i[G](c * 61.5, c * 142, c * 61.5, c * 142, c * 71, c * 149);
  i[G](c * 69.5, c * 166, c * 69.5, c * 166, c * 68, c * 183);
  i[G](c * 60.5, c * 187.5, c * 60.5, c * 187.5, c * 53, c * 192);
  i[G](c * 45, c * 187.5, c * 45, c * 187.5, c * 37, c * 183);
  i[G](c * 35.5, c * 167, c * 35.5, c * 167, c * 34, c * 151);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 64, c * 150);
  i[G](c * 63, c * 164, c * 63, c * 164, c * 62, c * 178);
  i[G](c * 58, c * 181, c * 58, c * 181, c * 54, c * 184);
  i[G](c * 48.5, c * 181.5, c * 48.5, c * 181.5, c * 43, c * 179);
  i[G](c * 42, c * 164.5, c * 42, c * 164.5, c * 41, c * 150);
  i[G](c * 46, c * 152.5, c * 46, c * 152.5, c * 51, c * 155);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 39);
  i[G](c * 65.5, c * 82, c * 65.5, c * 82, c * 79, c * 125);
  i[G](c * 66, c * 137.5, c * 66, c * 137.5, c * 53, c * 150);
  i[G](c * 39, c * 138, c * 39, c * 138, c * 25, c * 126);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 64);
  i[G](c * 60, c * 92.5, c * 60, c * 92.5, c * 68, c * 121);
  i[G](c * 61, c * 127.5, c * 61, c * 127.5, c * 54, c * 134);
  i[G](c * 46.5, c * 127.5, c * 46.5, c * 127.5, c * 39, c * 121);
  i[X]();
  jc(i, e[0]);
  i[Ia](c * -20, c * -20);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 52.5, c * 395);
  i[ra](0);
  kc(i, c * -11.5, c * -226, c * 23, c * 452, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 588);
  i[G](c * 47, c * 596, c * 61, c * 594, c * 69, c * 588);
  i[G](c * 79, c * 615, c * 78, c * 632, c * 59, c * 643);
  i[G](c * 41, c * 650, c * 27, c * 632, c * 30, c * 610);
  i[X]();
  jc(i, e[3], e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 135);
  i[G](c * 61.5, c * 142, c * 61.5, c * 142, c * 71, c * 149);
  i[G](c * 69.5, c * 166, c * 69.5, c * 166, c * 68, c * 183);
  i[G](c * 60.5, c * 187.5, c * 60.5, c * 187.5, c * 53, c * 192);
  i[G](c * 45, c * 187.5, c * 45, c * 187.5, c * 37, c * 183);
  i[G](c * 35.5, c * 167, c * 35.5, c * 167, c * 34, c * 151);
  i[X]();
  jc(i, e[3], e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 64, c * 150);
  i[G](c * 63, c * 164, c * 63, c * 164, c * 62, c * 178);
  i[G](c * 58, c * 181, c * 58, c * 181, c * 54, c * 184);
  i[G](c * 48.5, c * 181.5, c * 48.5, c * 181.5, c * 43, c * 179);
  i[G](c * 42, c * 164.5, c * 42, c * 164.5, c * 41, c * 150);
  i[G](c * 46, c * 152.5, c * 46, c * 152.5, c * 51, c * 155);
  i[X]();
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 39);
  i[G](c * 65.5, c * 82, c * 65.5, c * 82, c * 79, c * 125);
  i[G](c * 66, c * 137.5, c * 66, c * 137.5, c * 53, c * 150);
  i[G](c * 39, c * 138, c * 39, c * 138, c * 25, c * 126);
  i[X]();
  jc(i, e[6], e[7], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 64);
  i[G](c * 60, c * 92.5, c * 60, c * 92.5, c * 68, c * 121);
  i[G](c * 61, c * 127.5, c * 61, c * 127.5, c * 54, c * 134);
  i[G](c * 46.5, c * 127.5, c * 46.5, c * 127.5, c * 39, c * 121);
  i[X]();
  jc(i, e[8]);
  return f;
}
function ie(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 108;
  f.height = c * 669;
  i[Ia](c * 20, c * 20);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 54, c * 389.5);
  kc(i, c * -15, c * -228.5, c * 30, c * 457, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 579);
  i[G](c * 47, c * 587, c * 61, c * 584, c * 71, c * 579);
  i[G](c * 75, c * 597.5, c * 75, c * 597.5, c * 79, c * 616);
  i[G](c * 66.5, c * 628, c * 66.5, c * 628, c * 54, c * 640);
  i[G](c * 41, c * 628.5, c * 41, c * 628.5, c * 28, c * 617);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 30, c * 141);
  i[G](c * 40, c * 136, c * 40, c * 136, c * 50, c * 131);
  i[G](c * 63, c * 136, c * 63, c * 136, c * 76, c * 141);
  i[G](c * 72.5, c * 161.5, c * 72.5, c * 161.5, c * 69, c * 182);
  i[G](c * 61.5, c * 186.5, c * 61.5, c * 186.5, c * 54, c * 191);
  i[G](c * 45, c * 186.5, c * 45, c * 186.5, c * 36, c * 182);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 42, c * 152);
  i[G](c * 53, c * 152, c * 53, c * 152, c * 64, c * 152);
  i[G](c * 62, c * 171, c * 62, c * 176, c * 55, c * 177);
  i[G](c * 42, c * 176, c * 45, c * 174, c * 42, c * 152);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 28);
  i[G](c * 67.5, c * 55, c * 67.5, c * 55, c * 83, c * 82);
  i[G](c * 80, c * 106.5, c * 80, c * 106.5, c * 77, c * 131);
  i[G](c * 58, c * 147, c * 44, c * 141, c * 29, c * 131);
  i[G](c * 26.5, c * 106.5, c * 26.5, c * 106.5, c * 24, c * 82);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 53, c * 53);
  i[G](c * 61, c * 70, c * 61, c * 70, c * 69, c * 87);
  i[G](c * 67, c * 106, c * 67, c * 106, c * 65, c * 125);
  i[G](c * 54, c * 130, c * 51, c * 130, c * 41, c * 125);
  i[G](c * 39, c * 105, c * 39, c * 105, c * 37, c * 85);
  i[X]();
  jc(i, e[0]);
  i[Ia](c * -20, c * -20);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 54, c * 389.5);
  i[ra](0);
  kc(i, c * -15, c * -228.5, c * 30, c * 457, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 579);
  i[G](c * 47, c * 587, c * 61, c * 584, c * 71, c * 579);
  i[G](c * 75, c * 597.5, c * 75, c * 597.5, c * 79, c * 616);
  i[G](c * 66.5, c * 628, c * 66.5, c * 628, c * 54, c * 640);
  i[G](c * 41, c * 628.5, c * 41, c * 628.5, c * 28, c * 617);
  i[X]();
  jc(i, e[3], e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 30, c * 141);
  i[G](c * 40, c * 136, c * 40, c * 136, c * 50, c * 131);
  i[G](c * 63, c * 136, c * 63, c * 136, c * 76, c * 141);
  i[G](c * 72.5, c * 161.5, c * 72.5, c * 161.5, c * 69, c * 182);
  i[G](c * 61.5, c * 186.5, c * 61.5, c * 186.5, c * 54, c * 191);
  i[G](c * 45, c * 186.5, c * 45, c * 186.5, c * 36, c * 182);
  i[X]();
  jc(i, e[3], e[4], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 42, c * 152);
  i[G](c * 53, c * 152, c * 53, c * 152, c * 64, c * 152);
  i[G](c * 62, c * 171, c * 62, c * 176, c * 55, c * 177);
  i[G](c * 42, c * 176, c * 45, c * 174, c * 42, c * 152);
  i[X]();
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 28);
  i[G](c * 67.5, c * 55, c * 67.5, c * 55, c * 83, c * 82);
  i[G](c * 80, c * 106.5, c * 80, c * 106.5, c * 77, c * 131);
  i[G](c * 58, c * 147, c * 44, c * 141, c * 29, c * 131);
  i[G](c * 26.5, c * 106.5, c * 26.5, c * 106.5, c * 24, c * 82);
  i[X]();
  jc(i, e[6], e[7], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 53, c * 53);
  i[G](c * 61, c * 70, c * 61, c * 70, c * 69, c * 87);
  i[G](c * 67, c * 106, c * 67, c * 106, c * 65, c * 125);
  i[G](c * 54, c * 130, c * 51, c * 130, c * 41, c * 125);
  i[G](c * 39, c * 105, c * 39, c * 105, c * 37, c * 85);
  i[X]();
  jc(i, e[8]);
  return f;
}
function je(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 43;
  f.height = c * 209;
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 21, c * 102.5);
  kc(i, c * -4, c * -76.5, c * 8, c * 163, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Ia](0, c * 10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 20, c * 10);
  i[G](c * 25, c * 25.5, c * 25, c * 25.5, c * 30, c * 41);
  i[G](c * 25.5, c * 38.5, c * 25.5, c * 38.5, c * 21, c * 36);
  i[G](c * 16, c * 38.5, c * 16, c * 38.5, c * 11, c * 41);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 21, c * 1);
  i[G](c * 28, c * 18, c * 28, c * 18, c * 35, c * 35);
  i[G](c * 28.5, c * 32, c * 28.5, c * 32, c * 22, c * 29);
  i[G](c * 14.5, c * 32.5, c * 14.5, c * 32.5, c * 7, c * 36);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 14, c * 146);
  i[G](c * 21, c * 146, c * 21, c * 146, c * 28, c * 146);
  i[G](c * 27.5, c * 147.5, c * 27.5, c * 147.5, c * 27, c * 149);
  i[G](c * 27, c * 160, c * 27, c * 160, c * 27, c * 171);
  i[G](c * 27.5, c * 171.5, c * 27.5, c * 171.5, c * 28, c * 172);
  i[G](c * 21, c * 172, c * 21, c * 172, c * 14, c * 172);
  i[G](c * 14, c * 171.5, c * 14, c * 171.5, c * 14, c * 171);
  i[G](c * 14.5, c * 171.5, c * 14.5, c * 171.5, c * 15, c * 172);
  i[G](c * 15, c * 160.5, c * 15, c * 160.5, c * 15, c * 149);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 21, c * 6);
  i[G](c * 26.5, c * 18.5, c * 26.5, c * 18.5, c * 32, c * 31);
  i[G](c * 27, c * 29, c * 27, c * 29, c * 22, c * 27);
  i[X]();
  jc(i, e[0]);
  i[Ia](0, c * -20);
  i[ua] = 1;
  i[Ia](0, c * 10);
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 21, c * 102.5);
  kc(i, c * -4, c * -76.5, c * 8, c * 163, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[Ia](0, c * 10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 20, c * 10);
  i[G](c * 25, c * 25.5, c * 25, c * 25.5, c * 30, c * 41);
  i[G](c * 25.5, c * 38.5, c * 25.5, c * 38.5, c * 21, c * 36);
  i[G](c * 16, c * 38.5, c * 16, c * 38.5, c * 11, c * 41);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 21, c * 1);
  i[G](c * 28, c * 18, c * 28, c * 18, c * 35, c * 35);
  i[G](c * 28.5, c * 32, c * 28.5, c * 32, c * 22, c * 29);
  i[G](c * 14.5, c * 32.5, c * 14.5, c * 32.5, c * 7, c * 36);
  i[X]();
  jc(i, e[5], e[6], c * 4);
  i[Ia](0, c * 0);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 14, c * 146);
  i[G](c * 21, c * 146, c * 21, c * 146, c * 28, c * 146);
  i[G](c * 27.5, c * 147.5, c * 27.5, c * 147.5, c * 27, c * 149);
  i[G](c * 27, c * 160, c * 27, c * 160, c * 27, c * 171);
  i[G](c * 27.5, c * 171.5, c * 27.5, c * 171.5, c * 28, c * 172);
  i[G](c * 21, c * 172, c * 21, c * 172, c * 14, c * 172);
  i[G](c * 14, c * 171.5, c * 14, c * 171.5, c * 14, c * 171);
  i[G](c * 14.5, c * 171.5, c * 14.5, c * 171.5, c * 15, c * 172);
  i[G](c * 15, c * 160.5, c * 15, c * 160.5, c * 15, c * 149);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 21, c * 6);
  i[G](c * 26.5, c * 18.5, c * 26.5, c * 18.5, c * 32, c * 31);
  i[G](c * 27, c * 29, c * 27, c * 29, c * 22, c * 27);
  i[X]();
  jc(i, e[8]);
  return f;
}
function ke(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 200;
  f.height = c * 200;
  i[g]();
  i[Ia](c * 112, c * 158);
  kc(i, c * -86.5, c * -86, c * 150, c * 35, c * 20);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 170, c * 100);
  kc(i, c * -86.5, c * -86, c * 35, c * 150, c * 20);
  i[Qa]();
  jc(i, e[0]);
  return f;
}
function le(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 165;
  f.height = c * 123;
  i[g]();
  i[Ia](c * 81, c * 65);
  kc(i, c * -78, c * -54.5, c * 156, c * 109, c * 20);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 81, c * 58);
  kc(i, c * -78, c * -54.5, c * 156, c * 109, c * 20);
  i[Qa]();
  jc(i, e[1], e[2], 4);
  i[g]();
  i[Ia](c * 81, c * 58);
  kc(i, c * -69, c * -47, c * 138, c * 93, c * 15);
  i[Qa]();
  jc(i, e[3], e[4], 4);
  i[g]();
  i[Ia](c * 79, c * 54);
  kc(i, c * -34, c * -40, c * 68, c * 88, c * 13);
  i[Qa]();
  jc(i, undefined, e[5], 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 13);
  i[G](c * 43.5, c * 55, c * 43.5, c * 55, c * 43, c * 101);
  i[X]();
  jc(i, undefined, e[6], 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 115, c * 13);
  i[G](c * 115, c * 56, c * 115, c * 56, c * 115, c * 101);
  i[X]();
  jc(i, undefined, e[6], 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 35, c * 6);
  i[G](c * 35, c * 56, c * 36, c * 109, c * 35, c * 110);
  i[X]();
  jc(i, undefined, e[7], 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 123, c * 6);
  i[G](c * 123, c * 56, c * 123, c * 56, c * 123, c * 110);
  i[X]();
  jc(i, undefined, e[7], 4);
  i[g]();
  i[Ia](c * 79, c * 113);
  kc(i, c * -18, c * -2, c * 36, c * 4, c * 20);
  i[Qa]();
  jc(i, undefined, e[8], 4);
  i[g]();
  i[Ia](c * 75, c * 118);
  kc(i, c * -6, c * -2.5, c * 20, c * 5, c * 20);
  i[Qa]();
  jc(i, e[8]);
  return f;
}
function me(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 92;
  f.height = c * 108;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 31, c * 10);
  g[G](c * 37, c * 2, c * 49, c * 0, c * 61, c * 15);
  g[G](c * 81, c * 31, c * 78, c * 25, c * 79, c * 37);
  g[G](c * 76, c * 44, c * 81, c * 56, c * 85, c * 63);
  g[G](c * 91, c * 71, c * 90, c * 78, c * 83, c * 84);
  g[G](c * 60, c * 98, c * 67, c * 95, c * 57, c * 102);
  g[G](c * 47, c * 106, c * 43, c * 106, c * 31, c * 98);
  g[G](c * 22, c * 91, c * 17, c * 89, c * 7, c * 84);
  g[G](c * 1, c * 77, c * 4, c * 73, c * 7, c * 60);
  g[G](c * 11, c * 50, c * 5, c * 32, c * 15, c * 27);
  g[G](c * 26, c * 18, c * 26, c * 24, c * 31, c * 10);
  g[X]();
  jc(g, e[0], e[1], 4);
  return f;
}
function ne(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 151;
  f.height = c * 80;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 133, c * 54);
  g[G](c * 136, c * 18, c * 129, c * 18, c * 114, c * 13);
  g[G](c * 51, c * 0, c * 36, c * 16, c * 34, c * 16);
  g[G](c * 8, c * 28, c * 22, c * 56, c * 21, c * 57);
  g[X]();
  jc(g, e[2], e[3], 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 130, c * 40);
  g[G](c * 132, c * 35, c * 132, c * 30, c * 132, c * 29);
  g[G](c * 145, c * 38, c * 144, c * 43, c * 137, c * 54);
  g[X]();
  jc(g, e[0], e[1], 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 20, c * 33);
  g[G](c * 24, c * 44, c * 215, c * 39, c * 23, c * 44);
  g[G](c * 19, c * 49, c * 19, c * 49, c * 15, c * 54);
  g[G](c * 4, c * 43, c * 10, c * 35, c * 20, c * 32);
  g[X]();
  jc(g, e[0], e[1], 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 18, c * 52);
  g[G](c * 24, c * 31, c * 34, c * 25, c * 75, c * 23);
  g[G](c * 130, c * 24, c * 129, c * 32, c * 134, c * 51);
  g[G](c * 138, c * 70, c * 126, c * 72, c * 90, c * 73);
  g[G](c * 18, c * 72, c * 15, c * 68, c * 18, c * 54);
  g[X]();
  jc(g, e[0], e[1], 4);
  return f;
}
function oe(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 138;
  f.height = c * 133;
  g[ua] = d ? 0.3 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 26, c * 79.640625);
  g[G](c * 13, c * 84.640625, c * 9, c * 86.640625, c * 7, c * 78.640625);
  g[G](c * 6, c * 69.640625, c * 15, c * 67.640625, c * 31, c * 62.640625);
  g[G](c * 63, c * 55.640625, c * 85, c * 57.640625, c * 104, c * 63.640625);
  g[G](c * 131, c * 69.640625, c * 132, c * 71.640625, c * 131, c * 78.640625);
  g[G](c * 131, c * 91.640625, c * 112, c * 80.640625, c * 91, c * 75.640625);
  g[G](c * 51, c * 70.640625, c * 45, c * 74.640625, c * 28, c * 78.640625);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 8, c * 82.640625);
  g[G](c * 40, c * 107.640625, c * 53, c * 104.640625, c * 67, c * 106.640625);
  g[G](c * 101, c * 103.640625, c * 117, c * 93.640625, c * 127, c * 84.640625);
  g[G](c * 135, c * 95.640625, c * 131, c * 107.640625, c * 110, c * 118.640625);
  g[G](c * 78, c * 129.640625, c * 67, c * 130.640625, c * 27, c * 119.640625);
  g[G](c * 0, c * 105.640625, c * 8, c * 83.640625, c * 10, c * 84.640625);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 8, c * 73.640625);
  g[G](c * 7, c * 23.640625, c * 33, c * 19.640625, c * 71, c * 17.640625);
  g[G](c * 129, c * 19.640625, c * 130, c * 45.640625, c * 130, c * 76.640625);
  g[G](c * 90, c * 63.640625, c * 85, c * 63.640625, c * 73, c * 63.640625);
  g[G](c * 38, c * 63.640625, c * 33, c * 66.640625, c * 8, c * 73.640625);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72, c * 28.640625);
  g[G](c * 51, c * 25.640625, c * 56, c * 7.640625, c * 70, c * 5.640625);
  g[G](c * 94, c * 7.640625, c * 87, c * 29.640625, c * 72, c * 28.640625);
  g[X]();
  jc(g, e[3], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 51, c * 26.640625);
  g[G](c * 42, c * 29.640625, c * 43, c * 31.640625, c * 42, c * 37.640625);
  jc(g, undefined, e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 90, c * 26.640625);
  g[G](c * 100, c * 28.640625, c * 98, c * 34.640625, c * 99, c * 38.640625);
  jc(g, undefined, e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 26, c * 79.640625);
  g[G](c * 13, c * 84.640625, c * 9, c * 86.640625, c * 7, c * 78.640625);
  g[G](c * 6, c * 69.640625, c * 15, c * 67.640625, c * 31, c * 62.640625);
  g[G](c * 63, c * 55.640625, c * 85, c * 57.640625, c * 104, c * 63.640625);
  g[G](c * 131, c * 69.640625, c * 132, c * 71.640625, c * 131, c * 78.640625);
  g[G](c * 131, c * 91.640625, c * 112, c * 80.640625, c * 91, c * 75.640625);
  g[G](c * 51, c * 70.640625, c * 45, c * 74.640625, c * 28, c * 78.640625);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 8, c * 82.640625);
  g[G](c * 40, c * 107.640625, c * 53, c * 104.640625, c * 67, c * 106.640625);
  g[G](c * 101, c * 103.640625, c * 117, c * 93.640625, c * 127, c * 84.640625);
  g[G](c * 135, c * 95.640625, c * 131, c * 107.640625, c * 110, c * 118.640625);
  g[G](c * 78, c * 129.640625, c * 67, c * 130.640625, c * 27, c * 119.640625);
  g[G](c * 0, c * 105.640625, c * 8, c * 83.640625, c * 10, c * 84.640625);
  g[X]();
  jc(g, e[3], e[4], c * 4);
  return f;
}
function pe(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  var k = c * 170;
  var m = c * 172;
  var n = k / 2;
  var o = m / 2;
  f.width = k;
  f.height = m;
  i[Ia](n, o + c * 7);
  i[ua] = d ? 0.5 : 0;
  lc(i, 0, 0, c * 60);
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -7);
  i[g]();
  for (var q = 0; q < 10; q++) {
    i[ra](Math[D] / 5);
    i[g]();
    i[Ia](c * 65, 0);
    nc(i, 3, c * 20, c * 4);
    jc(i, e[1], e[2], c * 4);
    i[Qa]();
  }
  i[Qa]();
  lc(i, 0, 0, c * 60);
  jc(i, e[3], e[4], c * 4);
  lc(i, 0, 0, c * 40);
  jc(i, e[5]);
  lc(i, 0, 0, c * 25);
  jc(i, e[6], e[7], c * 8);
  return f;
}
function qe(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 170;
  f.height = c * 170;
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 5);
  i[g]();
  i[Ia](c * 85, c * 88);
  i[ra](1.4);
  nc(i, 7, c * 60, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * 85, c * 80);
  for (var k = 0; k < 10; k++) {
    i[ra](Math[D] / 5);
    i[g]();
    i[Ia](c * 65, 0);
    nc(i, 3, c * 21, c * 4);
    jc(i, e[1], e[2], c * 4);
    i[Qa]();
  }
  i[g]();
  i[Ia](c * 0, c * 0);
  i[ra](1.4);
  nc(i, 7, c * 60, c * 10);
  jc(i, e[3], e[4], c * 4);
  i[ra](0.64);
  nc(i, 7, c * 40, c * 10);
  jc(i, e[5], e[6], c * 4);
  i[ra](0.12);
  nc(i, 7, c * 23, c * 5);
  i[Qa]();
  jc(i, e[7]);
  return f;
}
function re(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 170;
  f.height = c * 170;
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 3);
  i[g]();
  i[Ia](c * 85, c * 95);
  i[ra](1.4);
  nc(i, 7, c * 60, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * 85, c * 82);
  for (var k = 0; k < 10; k++) {
    i[ra](Math[D] / 5);
    i[g]();
    i[Ia](c * 65, 0);
    nc(i, 3, c * 21, c * 4);
    jc(i, e[1], e[2], c * 4);
    i[Qa]();
  }
  i[g]();
  i[Ia](c * 0, c * 0);
  i[ra](1);
  nc(i, 8, c * 60, c * 10);
  jc(i, e[3], e[4], c * 4);
  i[ra](0.56);
  nc(i, 8, c * 40, c * 10);
  jc(i, e[5], e[6], c * 4);
  i[ra](0.28);
  nc(i, 8, c * 28, c * 8);
  jc(i, e[7]);
  i[Qa]();
  return f;
}
function se(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 170;
  f.height = c * 170;
  i[Ia](0, c * 3);
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 85, c * 95);
  i[ra](1.4);
  nc(i, 7, c * 60, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * 85, c * 82);
  for (var k = 0; k < 10; k++) {
    i[ra](Math[D] / 5);
    i[g]();
    i[Ia](c * 65, 0);
    nc(i, 3, c * 21, c * 4);
    jc(i, e[1], e[2], c * 4);
    i[Qa]();
  }
  i[g]();
  i[Ia](c * 0, c * 0);
  i[ra](0.2);
  nc(i, 9, c * 60, c * 10);
  jc(i, e[3], e[4], c * 4);
  i[ra](-0.32);
  nc(i, 9, c * 38, c * 10);
  jc(i, e[5], e[6], c * 4);
  i[ra](0.68);
  nc(i, 9, c * 20, c * 8);
  jc(i, e[7], e[8], c * 6);
  i[Qa]();
  return f;
}
function te(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 69;
  f.height = c * 120;
  i[ua] = d ? 0.5 : 1;
  i[g]();
  i[Ia](c * 30, c * 84);
  kc(i, c * -6, c * -66.5, c * 8, c * 100, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 30, c * 45);
  kc(i, c * -9.5, c * -6.5, c * 16, c * 13, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 30, c * 17);
  kc(i, c * -7.5, c * -5.5, c * 12, c * 11, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 30, c * 31);
  kc(i, c * -26, c * -14.5, c * 52, c * 29, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 36, c * 79.140625);
  kc(i, c * -6, c * -66.5, c * 8, c * 100, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 3);
  i[g]();
  i[Ia](c * 35, c * 40.140625);
  kc(i, c * -9.5, c * -6.5, c * 16, c * 13, c * 10);
  i[Qa]();
  jc(i, e[3], e[4], c * 3);
  i[g]();
  i[Ia](c * 35, c * 12.140625);
  kc(i, c * -7.5, c * -5.5, c * 12, c * 11, c * 10);
  i[Qa]();
  jc(i, e[3], e[4], c * 3);
  i[g]();
  i[Ia](c * 34.5, c * 26.140625);
  kc(i, c * -26, c * -14.5, c * 52, c * 29, c * 5);
  i[Qa]();
  jc(i, e[3], e[4], c * 3);
  return f;
}
function ue(c, d, e) {
  var f = (g = document[p]("canvas"))[T]("2d");
  if (e == 0) {
    g.width = c * 566;
    g.height = c * 429;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 312.625, c * 39.046875);
    f[G](c * 456.625, c * 60.046875, c * 521.625, c * 134.046875, c * 528.625, c * 199.046875);
    f[G](c * 540.625, c * 298.046875, c * 491.625, c * 364.046875, c * 405.625, c * 394.046875);
    f[G](c * 270.625, c * 429.046875, c * 182.625, c * 395.046875, c * 100.625, c * 344.046875);
    f[G](c * 15.625, c * 283.046875, c * 20.625, c * 195.046875, c * 33.625, c * 158.046875);
    f[G](c * 56.625, c * 80.046875, c * 102.625, c * 46.046875, c * 183.625, c * 33.046875);
    f[G](c * 225.625, c * 25.046875, c * 270.625, c * 30.046875, c * 312.625, c * 39.046875);
    f[X]();
    jc(f, d[0]);
  } else if (e == 1) {
    f = (g = document[p]("canvas"))[T]("2d");
    g.width = c * 511;
    g.height = c * 408;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 141.625, c * 49.296875);
    f[G](c * 225.625, c * 10.296875, c * 320.625, c * 16.296875, c * 390.625, c * 39.296875);
    f[G](c * 476.625, c * 71.296875, c * 483.625, c * 142.296875, c * 486.625, c * 197.296875);
    f[G](c * 491.625, c * 289.296875, c * 462.625, c * 317.296875, c * 417.625, c * 351.296875);
    f[G](c * 367.625, c * 385.296875, c * 313.625, c * 404.296875, c * 218.625, c * 395.296875);
    f[G](c * 108.625, c * 381.296875, c * 81.625, c * 350.296875, c * 52.625, c * 305.296875);
    f[G](c * 16.625, c * 244.296875, c * 23.625, c * 171.296875, c * 37.625, c * 145.296875);
    f[G](c * 65.625, c * 84.296875, c * 97.625, c * 74.296875, c * 141.625, c * 49.296875);
    f[X]();
    jc(f, d[0]);
  } else if (e == 2) {
    var g;
    f = (g = document[p]("canvas"))[T]("2d");
    g.width = c * 504;
    g.height = c * 408;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 153.625, c * 46.296875);
    f[G](c * 271.625, c * 17.296875, c * 345.625, c * 35.296875, c * 410.625, c * 71.296875);
    f[G](c * 473.625, c * 109.296875, c * 478.625, c * 167.296875, c * 473.625, c * 205.296875);
    f[G](c * 462.625, c * 295.296875, c * 438.625, c * 316.296875, c * 388.625, c * 345.296875);
    f[G](c * 331.625, c * 374.296875, c * 273.625, c * 392.296875, c * 180.625, c * 387.296875);
    f[G](c * 111.625, c * 380.296875, c * 86.625, c * 360.296875, c * 51.625, c * 309.296875);
    f[G](c * 23.625, c * 267.296875, c * 25.625, c * 226.296875, c * 27.625, c * 175.296875);
    f[G](c * 37.625, c * 99.296875, c * 88.625, c * 57.296875, c * 153.625, c * 46.296875);
    f[X]();
    jc(f, d[0]);
  }
  return g;
}
function ve(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 450;
  f.height = c * 260;
  g[Ia](c * 10, c * 10);
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 20, c * 20);
  kc(g, 0, 0, c * 400, c * 220, c * 30);
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -20, c * -20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 9, c * 5);
  g[G](c * 381, c * 2, c * 197, c * 4.5, c * 385, c * 4);
  g[G](c * 397, c * 4, c * 401, c * 4, c * 399, c * 23);
  g[G](c * 367, c * 27, c * 367, c * 27, c * 335, c * 31);
  g[G](c * 366.5, c * 33.5, c * 366.5, c * 33.5, c * 398, c * 36);
  g[G](c * 398, c * 41.5, c * 398, c * 41.5, c * 398, c * 47);
  g[G](c * 398, c * 56, c * 399, c * 56, c * 386, c * 56);
  g[G](c * 200.5, c * 56.5, c * 200.5, c * 56.5, c * 15, c * 57);
  g[G](c * 2, c * 55, c * 4, c * 52, c * 4, c * 43);
  g[G](c * 4, c * 30.5, c * 4, c * 30.5, c * 4, c * 18);
  g[G](c * 16, c * 18.5, c * 16, c * 18.5, c * 28, c * 19);
  g[G](c * 18.5, c * 12, c * 18.5, c * 12, c * 9, c * 5);
  g[X]();
  jc(g, e[2], e[1], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 5, c * 70);
  g[G](c * 5, c * 58, c * 5, c * 55, c * 17, c * 57);
  g[G](c * 203, c * 57, c * 203, c * 57, c * 389, c * 57);
  g[G](c * 400, c * 57, c * 400, c * 59, c * 400, c * 69);
  g[G](c * 400.5, c * 83.5, c * 400.5, c * 83.5, c * 401, c * 98);
  g[G](c * 402, c * 108, c * 401, c * 108, c * 388, c * 108);
  g[G](c * 201.5, c * 108, c * 201.5, c * 108, c * 15, c * 108);
  g[G](c * 1, c * 106, c * 5, c * 106, c * 5, c * 87);
  g[G](c * 33, c * 84.5, c * 33, c * 84.5, c * 61, c * 82);
  g[G](c * 33.5, c * 76.5, c * 33.5, c * 76.5, c * 6, c * 71);
  g[X]();
  jc(g, e[3], e[1], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 19, c * 158);
  g[G](c * 2, c * 159, c * 4, c * 156, c * 5, c * 118);
  g[G](c * 4, c * 110, c * 6, c * 107, c * 26, c * 109);
  g[G](c * 206.5, c * 109, c * 206.5, c * 109, c * 387, c * 109);
  g[G](c * 400, c * 108, c * 400, c * 108, c * 398, c * 127);
  g[G](c * 384.5, c * 130, c * 384.5, c * 130, c * 371, c * 133);
  g[G](c * 385.5, c * 138, c * 385.5, c * 138, c * 400, c * 143);
  g[G](c * 402, c * 156, c * 402, c * 162, c * 385, c * 160);
  g[X]();
  jc(g, e[2], e[1], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 4, c * 183);
  g[G](c * 1, c * 163, c * 4, c * 158, c * 28, c * 161);
  g[G](c * 207.5, c * 161, c * 207.5, c * 161, c * 387, c * 161);
  g[G](c * 401, c * 159, c * 400, c * 164, c * 400, c * 177);
  g[G](c * 364.5, c * 184, c * 364.5, c * 184, c * 329, c * 191);
  g[G](c * 364.5, c * 192.5, c * 364.5, c * 192.5, c * 400, c * 194);
  g[G](c * 403, c * 209, c * 401, c * 214, c * 385, c * 213);
  g[G](c * 201.5, c * 213, c * 201.5, c * 213, c * 18, c * 213);
  g[G](c * 3, c * 213, c * 2, c * 213, c * 4, c * 198);
  g[G](c * 12.5, c * 193, c * 12.5, c * 193, c * 21, c * 188);
  g[X]();
  jc(g, e[3], e[1], c * 12);
  lc(g, c * 41, c * 30, c * 14.7648230602334);
  jc(g, e[3], e[1], c * 12);
  lc(g, c * 369, c * 30, c * 15.556349186104045);
  jc(g, e[3], e[1], c * 12);
  lc(g, c * 364, c * 190, c * 15.620499351813308);
  jc(g, e[3], e[1], c * 12);
  lc(g, c * 41, c * 186, c * 15.556349186104045);
  jc(g, e[3], e[1], c * 12);
  return f;
}
function we(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 450;
  f.height = c * 260;
  g[Ia](c * 10, c * 10);
  if (e == 1 || e == 2) {
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 9, c * 5);
    g[G](c * 381, c * 2, c * 197, c * 4.5, c * 385, c * 4);
    g[G](c * 397, c * 4, c * 401, c * 4, c * 399, c * 23);
    g[G](c * 367, c * 27, c * 367, c * 27, c * 335, c * 31);
    g[G](c * 366.5, c * 33.5, c * 366.5, c * 33.5, c * 398, c * 36);
    g[G](c * 398, c * 41.5, c * 398, c * 41.5, c * 398, c * 47);
    g[G](c * 398, c * 56, c * 399, c * 56, c * 386, c * 56);
    g[G](c * 200.5, c * 56.5, c * 200.5, c * 56.5, c * 15, c * 57);
    g[G](c * 2, c * 55, c * 4, c * 52, c * 4, c * 43);
    g[G](c * 4, c * 30.5, c * 4, c * 30.5, c * 4, c * 18);
    g[G](c * 16, c * 18.5, c * 16, c * 18.5, c * 28, c * 19);
    g[G](c * 18.5, c * 12, c * 18.5, c * 12, c * 9, c * 5);
    g[X]();
    jc(g, d[3], d[3], c * 32);
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 5, c * 70);
    g[G](c * 5, c * 58, c * 5, c * 55, c * 17, c * 57);
    g[G](c * 203, c * 57, c * 203, c * 57, c * 389, c * 57);
    g[G](c * 400, c * 57, c * 400, c * 59, c * 400, c * 69);
    g[G](c * 400.5, c * 83.5, c * 400.5, c * 83.5, c * 401, c * 98);
    g[G](c * 402, c * 108, c * 401, c * 108, c * 388, c * 108);
    g[G](c * 201.5, c * 108, c * 201.5, c * 108, c * 15, c * 108);
    g[G](c * 1, c * 106, c * 5, c * 106, c * 5, c * 87);
    g[G](c * 33, c * 84.5, c * 33, c * 84.5, c * 61, c * 82);
    g[G](c * 33.5, c * 76.5, c * 33.5, c * 76.5, c * 6, c * 71);
    g[X]();
    jc(g, d[3], d[3], c * 32);
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 19, c * 158);
    g[G](c * 2, c * 159, c * 4, c * 156, c * 5, c * 118);
    g[G](c * 4, c * 110, c * 6, c * 107, c * 26, c * 109);
    g[G](c * 206.5, c * 109, c * 206.5, c * 109, c * 387, c * 109);
    g[G](c * 400, c * 108, c * 400, c * 108, c * 398, c * 127);
    g[G](c * 384.5, c * 130, c * 384.5, c * 130, c * 371, c * 133);
    g[G](c * 385.5, c * 138, c * 385.5, c * 138, c * 400, c * 143);
    g[G](c * 402, c * 156, c * 402, c * 162, c * 385, c * 160);
    g[X]();
    jc(g, d[3], d[3], c * 32);
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 4, c * 183);
    g[G](c * 1, c * 163, c * 4, c * 158, c * 28, c * 161);
    g[G](c * 207.5, c * 161, c * 207.5, c * 161, c * 387, c * 161);
    g[G](c * 401, c * 159, c * 400, c * 164, c * 400, c * 177);
    g[G](c * 364.5, c * 184, c * 364.5, c * 184, c * 329, c * 191);
    g[G](c * 364.5, c * 192.5, c * 364.5, c * 192.5, c * 400, c * 194);
    g[G](c * 403, c * 209, c * 401, c * 214, c * 385, c * 213);
    g[G](c * 201.5, c * 213, c * 201.5, c * 213, c * 18, c * 213);
    g[G](c * 3, c * 213, c * 2, c * 213, c * 4, c * 198);
    g[G](c * 12.5, c * 193, c * 12.5, c * 193, c * 21, c * 188);
    g[X]();
    jc(g, d[3], d[3], c * 32);
    lc(g, c * 41, c * 30, c * 14.7648230602334);
    jc(g, d[3], d[3], c * 32);
    lc(g, c * 369, c * 30, c * 15.556349186104045);
    jc(g, d[3], d[3], c * 32);
    lc(g, c * 364, c * 190, c * 15.620499351813308);
    jc(g, d[3], d[3], c * 32);
    lc(g, c * 41, c * 186, c * 15.556349186104045);
    jc(g, d[3], d[3], c * 32);
  }
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 9, c * 5);
  g[G](c * 381, c * 2, c * 197, c * 4.5, c * 385, c * 4);
  g[G](c * 397, c * 4, c * 401, c * 4, c * 399, c * 23);
  g[G](c * 367, c * 27, c * 367, c * 27, c * 335, c * 31);
  g[G](c * 366.5, c * 33.5, c * 366.5, c * 33.5, c * 398, c * 36);
  g[G](c * 398, c * 41.5, c * 398, c * 41.5, c * 398, c * 47);
  g[G](c * 398, c * 56, c * 399, c * 56, c * 386, c * 56);
  g[G](c * 200.5, c * 56.5, c * 200.5, c * 56.5, c * 15, c * 57);
  g[G](c * 2, c * 55, c * 4, c * 52, c * 4, c * 43);
  g[G](c * 4, c * 30.5, c * 4, c * 30.5, c * 4, c * 18);
  g[G](c * 16, c * 18.5, c * 16, c * 18.5, c * 28, c * 19);
  g[G](c * 18.5, c * 12, c * 18.5, c * 12, c * 9, c * 5);
  g[X]();
  jc(g, d[1], d[0], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 5, c * 70);
  g[G](c * 5, c * 58, c * 5, c * 55, c * 17, c * 57);
  g[G](c * 203, c * 57, c * 203, c * 57, c * 389, c * 57);
  g[G](c * 400, c * 57, c * 400, c * 59, c * 400, c * 69);
  g[G](c * 400.5, c * 83.5, c * 400.5, c * 83.5, c * 401, c * 98);
  g[G](c * 402, c * 108, c * 401, c * 108, c * 388, c * 108);
  g[G](c * 201.5, c * 108, c * 201.5, c * 108, c * 15, c * 108);
  g[G](c * 1, c * 106, c * 5, c * 106, c * 5, c * 87);
  g[G](c * 33, c * 84.5, c * 33, c * 84.5, c * 61, c * 82);
  g[G](c * 33.5, c * 76.5, c * 33.5, c * 76.5, c * 6, c * 71);
  g[X]();
  jc(g, d[2], d[0], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 19, c * 158);
  g[G](c * 2, c * 159, c * 4, c * 156, c * 5, c * 118);
  g[G](c * 4, c * 110, c * 6, c * 107, c * 26, c * 109);
  g[G](c * 206.5, c * 109, c * 206.5, c * 109, c * 387, c * 109);
  g[G](c * 400, c * 108, c * 400, c * 108, c * 398, c * 127);
  g[G](c * 384.5, c * 130, c * 384.5, c * 130, c * 371, c * 133);
  g[G](c * 385.5, c * 138, c * 385.5, c * 138, c * 400, c * 143);
  g[G](c * 402, c * 156, c * 402, c * 162, c * 385, c * 160);
  g[X]();
  jc(g, d[1], d[0], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 4, c * 183);
  g[G](c * 1, c * 163, c * 4, c * 158, c * 28, c * 161);
  g[G](c * 207.5, c * 161, c * 207.5, c * 161, c * 387, c * 161);
  g[G](c * 401, c * 159, c * 400, c * 164, c * 400, c * 177);
  g[G](c * 364.5, c * 184, c * 364.5, c * 184, c * 329, c * 191);
  g[G](c * 364.5, c * 192.5, c * 364.5, c * 192.5, c * 400, c * 194);
  g[G](c * 403, c * 209, c * 401, c * 214, c * 385, c * 213);
  g[G](c * 201.5, c * 213, c * 201.5, c * 213, c * 18, c * 213);
  g[G](c * 3, c * 213, c * 2, c * 213, c * 4, c * 198);
  g[G](c * 12.5, c * 193, c * 12.5, c * 193, c * 21, c * 188);
  g[X]();
  jc(g, d[2], d[0], c * 12);
  lc(g, c * 41, c * 30, c * 14.7648230602334);
  jc(g, d[2], d[0], c * 12);
  lc(g, c * 369, c * 30, c * 15.556349186104045);
  jc(g, d[2], d[0], c * 12);
  lc(g, c * 364, c * 190, c * 15.620499351813308);
  jc(g, d[2], d[0], c * 12);
  lc(g, c * 41, c * 186, c * 15.556349186104045);
  jc(g, d[2], d[0], c * 12);
  return f;
}
function xe(c, d, e, f) {
  var i = document[p]("canvas");
  var k = i[T]("2d");
  i.width = c * 450;
  i.height = c * 260;
  var m = ve(c * 1, true, e);
  k[r](m, c * 0, c * 0);
  if (f == 1) {
    k[Ia](c * 100, c * 0);
    lc(k, c * 113, c * 120, c * 66);
    jc(k, undefined, e[4], c * 13);
    m = kd(c * 0.65, true, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]);
    k[ra](0.7);
    k[r](m, c * 133, c * -64);
    k[ra](-0.7);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 70, c * 70);
    k[G](c * 113, c * 120.5, c * 113, c * 120.5, c * 156, c * 171);
    k[X]();
    jc(k, undefined, e[4], c * 13);
  } else if (f == 2) {
    k[Ia](c * 100, c * 0);
    lc(k, c * 113, c * 120, c * 66);
    jc(k, undefined, e[4], c * 13);
    k[Ia](c * 30, c * 40);
    k[g]();
    k[Ia](c * 83.5, c * 66.5);
    kc(k, c * -40.5, c * -29.5, c * 81, c * 59, c * 15);
    k[Qa]();
    jc(k, "#dff2f7", "#187484", c * 7);
    lc(k, c * 22, c * 82, c * 12);
    jc(k, "#dff2f7", "#187484", c * 7);
    lc(k, c * 145, c * 82, c * 12);
    jc(k, "#dff2f7", "#187484", c * 7);
    m = Ed(c * 0.5, true, ["#80500b", "#7c4908"]);
    k[r](m, c * 10, c * 85);
    m = Ed(c * 0.5, true, ["#80500b", "#7c4908"]);
    k[r](m, c * 50, c * 85);
    m = Ed(c * 0.5, true, ["#80500b", "#7c4908"]);
    k[r](m, c * 90, c * 85);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 90, c * 105);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 90, c * 105);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 30, c * 125);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 50, c * 115);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 30, c * 100);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 80, c * 120);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 110, c * 125);
    m = Fd(c * 1, 0, ["#3d2a6e", "#8255b5"]);
    k[r](m, c * 120, c * 105);
  } else if (f == 3) {
    k[Ia](c * 100, c * 0);
    lc(k, c * 113, c * 120, c * 66);
    jc(k, undefined, e[4], c * 13);
    k[Ia](c * 40, c * 50);
    k[g]();
    k[Ia](c * 71, c * 69);
    kc(k, c * -30, c * -42, c * 60, c * 84, c * 10);
    k[Qa]();
    jc(k, undefined, e[5], c * 4);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 42, c * 28);
    k[G](c * 60, c * 31, c * 60, c * 31, c * 78, c * 34);
    k[G](c * 82, c * 34, c * 84, c * 37, c * 83, c * 45);
    k[G](c * 83, c * 80, c * 83, c * 80, c * 83, c * 115);
    k[G](c * 83, c * 120, c * 80, c * 122, c * 73, c * 120);
    k[G](c * 42, c * 111, c * 43, c * 109, c * 41, c * 102);
    k[G](c * 41, c * 71, c * 41, c * 71, c * 41, c * 40);
    k[X]();
    jc(k, e[5], e[5], c * 4);
    k[Ia](c * -40, c * -50);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 70, c * 70);
    k[G](c * 113, c * 120.5, c * 113, c * 120.5, c * 156, c * 171);
    k[X]();
    jc(k, undefined, e[4], c * 13);
  } else if (f == 4) {
    k[I](1, 1);
    k[Ia](c * 70, c * 50);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 23, c * 6);
    k[G](c * 25.5, c * 56, c * 25.5, c * 56, c * 28, c * 106);
    jc(k, undefined, e[5], c * 14);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 59, c * 10);
    k[G](c * 61, c * 51.5, c * 61, c * 51.5, c * 63, c * 93);
    jc(k, undefined, e[5], c * 14);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 7, c * 55);
    k[G](c * 33.5, c * 55, c * 33.5, c * 55, c * 60, c * 55);
    jc(k, undefined, e[5], c * 14);
    k[Ia](c * 10, c * 0);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 123, c * 16);
    k[G](c * 103, c * 16.5, c * 103, c * 16.5, c * 83, c * 17);
    k[G](c * 83.5, c * 61, c * 83.5, c * 61, c * 84, c * 105);
    k[G](c * 106, c * 105, c * 106, c * 105, c * 128, c * 105);
    jc(k, undefined, e[5], c * 14);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 72, c * 63);
    k[G](c * 88.5, c * 62.5, c * 88.5, c * 62.5, c * 105, c * 62);
    jc(k, undefined, e[5], c * 14);
    k[Ia](c * 10, c * 10);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 141, c * 8);
    k[G](c * 143, c * 50, c * 143, c * 50, c * 145, c * 92);
    k[G](c * 169, c * 88.5, c * 169, c * 88.5, c * 193, c * 85);
    jc(k, undefined, e[5], c * 14);
    k[Ia](c * 10, c * -10);
    k[Y]();
    k[Ga] = "round";
    k[ea] = "round";
    k[K](c * 205, c * 124);
    k[G](c * 205, c * 69, c * 205, c * 69, c * 205, c * 14);
    k[G](c * 239, c * 15, c * 250, c * 37, c * 249, c * 49);
    k[G](c * 251, c * 65, c * 242, c * 76, c * 206, c * 75);
    jc(k, undefined, e[5], c * 14);
  }
  return i;
}
function ye(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 345;
  f.height = c * 250;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105, c * 58);
  g[G](c * 100.5, c * 43, c * 100.5, c * 43, c * 96, c * 28);
  g[G](c * 119.5, c * 33.5, c * 119.5, c * 33.5, c * 143, c * 39);
  g[G](c * 170, c * 37, c * 177, c * 37, c * 188, c * 40);
  g[G](c * 213, c * 33.5, c * 213, c * 33.5, c * 238, c * 27);
  g[G](c * 231, c * 52, c * 234, c * 42.5, c * 230, c * 58);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 108, c * 51);
  g[G](c * 91, c * 55, c * 85, c * 44, c * 86, c * 29);
  g[G](c * 62, c * 50, c * 78, c * 69, c * 92, c * 75);
  g[X]();
  jc(g, e[3], e[4], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 249, c * 27);
  g[G](c * 273, c * 49, c * 262, c * 68, c * 246, c * 77);
  g[G](c * 231, c * 59, c * 236, c * 66.5, c * 226, c * 56);
  g[G](c * 243, c * 53, c * 252, c * 43, c * 249, c * 28);
  g[X]();
  jc(g, e[3], e[4], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87, c * 78);
  g[G](c * 87, c * 59, c * 98, c * 46, c * 127, c * 48);
  g[G](c * 176, c * 48.5, c * 176, c * 48.5, c * 225, c * 49);
  g[G](c * 243, c * 49, c * 253, c * 59, c * 253, c * 76);
  g[G](c * 211, c * 85.5, c * 211, c * 85.5, c * 169, c * 95);
  g[X]();
  jc(g, e[5], e[6], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 56, c * 105);
  g[G](c * 56, c * 92, c * 59, c * 86, c * 65, c * 73);
  g[G](c * 62.5, c * 61.5, c * 62.5, c * 61.5, c * 60, c * 50);
  g[G](c * 99.5, c * 64.5, c * 99.5, c * 64.5, c * 139, c * 79);
  g[G](c * 164, c * 77, c * 177, c * 76, c * 203, c * 78);
  g[G](c * 242, c * 63.5, c * 242, c * 63.5, c * 281, c * 49);
  g[G](c * 279, c * 60.5, c * 279, c * 60.5, c * 277, c * 72);
  g[G](c * 286, c * 88, c * 286, c * 96, c * 287, c * 104);
  g[G](c * 228.5, c * 127, c * 228.5, c * 127, c * 170, c * 150);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 48, c * 130);
  g[G](c * 61, c * 155, c * 63, c * 165, c * 56, c * 171);
  g[G](c * 48, c * 177, c * 40, c * 171, c * 38, c * 178);
  g[G](c * 33, c * 180, c * 37, c * 188, c * 47, c * 208);
  g[G](c * 52, c * 221, c * 55, c * 222, c * 75, c * 229);
  g[G](c * 91, c * 213, c * 98, c * 212, c * 112, c * 219);
  g[G](c * 167, c * 225, c * 187, c * 224, c * 222, c * 220);
  g[G](c * 244, c * 214, c * 247, c * 213, c * 263, c * 229);
  g[G](c * 295, c * 220, c * 291, c * 215, c * 301, c * 194);
  g[G](c * 308, c * 178, c * 309, c * 176, c * 302, c * 173);
  g[G](c * 290, c * 177, c * 289, c * 177, c * 283, c * 169);
  g[G](c * 279, c * 163, c * 279, c * 161, c * 290, c * 130);
  g[G](c * 270, c * 127, c * 270, c * 127, c * 250, c * 124);
  g[G](c * 209, c * 137.5, c * 209, c * 137.5, c * 168, c * 151);
  g[G](c * 121, c * 135, c * 121, c * 135, c * 74, c * 119);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  g[Sa] = "destination-out";
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 133, c * 158);
  g[G](c * 152, c * 193, c * 158, c * 205, c * 140, c * 203);
  g[G](c * 99, c * 195, c * 96, c * 189, c * 86, c * 173);
  g[G](c * 80, c * 159, c * 88, c * 145, c * 104, c * 141);
  g[X]();
  jc(g, e[7], e[8], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 215, c * 146);
  g[G](c * 204, c * 167, c * 204, c * 167, c * 193, c * 188);
  g[G](c * 187, c * 201, c * 191, c * 209, c * 213, c * 201);
  g[G](c * 247, c * 192, c * 253, c * 181, c * 257, c * 169);
  g[G](c * 260, c * 157, c * 254, c * 149, c * 243, c * 141);
  g[X]();
  jc(g, e[7], e[8], c * 8);
  g[Sa] = "source-over";
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 133, c * 158);
  g[G](c * 152, c * 193, c * 158, c * 205, c * 140, c * 203);
  g[G](c * 99, c * 195, c * 96, c * 189, c * 86, c * 173);
  g[G](c * 80, c * 159, c * 88, c * 145, c * 104, c * 141);
  g[X]();
  jc(g, undefined, e[8], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 215, c * 146);
  g[G](c * 204, c * 167, c * 204, c * 167, c * 193, c * 188);
  g[G](c * 187, c * 201, c * 191, c * 209, c * 213, c * 201);
  g[G](c * 247, c * 192, c * 253, c * 181, c * 257, c * 169);
  g[G](c * 260, c * 157, c * 254, c * 149, c * 243, c * 141);
  g[X]();
  jc(g, undefined, e[8], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 39, c * 66);
  g[G](c * 57, c * 107, c * 63, c * 96, c * 120, c * 106);
  g[G](c * 154, c * 112, c * 163, c * 116, c * 174, c * 135);
  g[G](c * 180, c * 109, c * 191, c * 113, c * 237, c * 103);
  g[G](c * 276, c * 100, c * 289, c * 94, c * 301, c * 67);
  g[G](c * 317, c * 112, c * 301, c * 141, c * 274, c * 139);
  g[G](c * 204, c * 166, c * 197, c * 169, c * 173, c * 183);
  g[G](c * 170, c * 183, c * 170, c * 183, c * 167, c * 183);
  g[G](c * 132, c * 160, c * 112, c * 156, c * 73, c * 141);
  g[G](c * 43, c * 146, c * 27, c * 120, c * 39, c * 66);
  g[X]();
  jc(g, e[7], e[8], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 115, c * 185);
  g[G](c * 115, c * 200, c * 118, c * 206, c * 124, c * 212);
  g[G](c * 133, c * 223, c * 132, c * 231, c * 121, c * 230);
  g[G](c * 108, c * 226, c * 108, c * 215, c * 107, c * 209);
  g[G](c * 106, c * 201, c * 110, c * 196, c * 114, c * 185);
  g[X]();
  jc(g, e[3], e[4], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 226, c * 186);
  g[G](c * 234, c * 201, c * 238, c * 209, c * 228, c * 225);
  g[G](c * 223, c * 233, c * 213, c * 233, c * 211, c * 226);
  g[G](c * 206, c * 219, c * 217, c * 216, c * 221, c * 207);
  g[G](c * 225, c * 196, c * 225, c * 191, c * 226, c * 186);
  g[X]();
  jc(g, e[3], e[4], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 172, c * 110);
  g[G](c * 189, c * 153, c * 192, c * 160, c * 188, c * 175);
  g[G](c * 183, c * 190, c * 176, c * 197, c * 165, c * 191);
  g[G](c * 153, c * 181, c * 152, c * 166, c * 157, c * 151);
  g[G](c * 164.5, c * 131, c * 164.5, c * 131, c * 172, c * 111);
  g[X]();
  jc(g, e[3], e[4], c * 8);
  return f;
}
function ze(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 149;
  e.height = c * 153;
  f[ua] = 0.5;
  lc(f, c * 74.5, c * 85, c * 66);
  jc(f, d[0]);
  f[ua] = 1;
  lc(f, c * 75.5, c * 72.5, c * 67);
  jc(f, d[1], d[2], c * 4);
  lc(f, c * 75.5, c * 73.5, c * 54);
  jc(f, d[3]);
  f[ua] = 0.5;
  lc(f, c * 74.5, c * 80.5, c * 39);
  jc(f, d[4]);
  f[ua] = 1;
  lc(f, c * 74.5, c * 74.5, c * 37);
  jc(f, d[5]);
  return e;
}
function Ae(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 173;
  e.height = c * 178;
  f[ua] = 0.5;
  lc(f, c * 86.5, c * 98, c * 80);
  jc(f, d[0]);
  f[ua] = 1;
  lc(f, c * 86.5, c * 89, c * 81);
  jc(f, d[1], d[2], c * 4);
  lc(f, c * 86.5, c * 86, c * 59);
  jc(f, d[3], d[4], c * 4);
  f[ua] = 0.5;
  lc(f, c * 86.5, c * 95, c * 34);
  jc(f, d[0]);
  f[ua] = 1;
  lc(f, c * 86.5, c * 89, c * 34);
  jc(f, d[5]);
  return e;
}
function Be(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 253;
  e.height = c * 260;
  f[ua] = 0.5;
  lc(f, c * 126.5, c * 134, c * 119);
  jc(f, d[0]);
  f[ua] = 1;
  lc(f, c * 126.5, c * 124, c * 119);
  jc(f, d[1], d[2], c * 4);
  lc(f, c * 126.5, c * 127, c * 100);
  jc(f, d[3]);
  f[ua] = 0.5;
  lc(f, c * 126.5, c * 135, c * 81);
  jc(f, d[0]);
  f[ua] = 1;
  lc(f, c * 126.5, c * 125, c * 84);
  jc(f, d[4], d[5], c * 4);
  lc(f, c * 126.5, c * 125, c * 61);
  jc(f, d[6], d[7], c * 4);
  f[ua] = 0.5;
  lc(f, c * 126.5, c * 134, c * 40);
  jc(f, d[8]);
  f[ua] = 1;
  lc(f, c * 126.5, c * 125, c * 40);
  jc(f, d[9]);
  return e;
}
function Ce(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 139;
  f.height = c * 135;
  g[Ia](0, c * 10);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 32, c * 77);
  g[G](c * 6, c * 41, c * 6, c * 33, c * 12, c * 27);
  g[G](c * 27, c * 6, c * 28, c * 6, c * 37, c * 6);
  g[G](c * 62, c * 3, c * 64, c * 5, c * 67, c * 13);
  g[G](c * 80, c * 36, c * 73.5, c * 25, c * 80, c * 37);
  g[G](c * 73.5, c * 54, c * 65, c * 74, c * 67, c * 71);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 65, c * 37);
  g[G](c * 105, c * 40, c * 113, c * 39, c * 117, c * 48);
  g[G](c * 126, c * 70, c * 128, c * 72, c * 124, c * 80);
  g[G](c * 112, c * 101, c * 110, c * 104, c * 99, c * 104);
  g[G](c * 59, c * 100, c * 55, c * 99, c * 56, c * 99);
  g[G](c * 47.5, c * 79, c * 45, c * 66, c * 39, c * 59);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 30, c * 63);
  g[G](c * 5, c * 99, c * 5, c * 101, c * 8, c * 103);
  g[G](c * 19, c * 123, c * 22, c * 125, c * 28, c * 126);
  g[G](c * 57, c * 127, c * 55, c * 127, c * 58, c * 120);
  g[G](c * 82, c * 86, c * 83, c * 78, c * 82, c * 87);
  g[X]();
  jc(g, e[0]);
  g[Ia](0, c * -10);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 32, c * 77);
  g[G](c * 6, c * 41, c * 6, c * 33, c * 12, c * 27);
  g[G](c * 27, c * 6, c * 28, c * 6, c * 37, c * 6);
  g[G](c * 62, c * 3, c * 64, c * 5, c * 67, c * 13);
  g[G](c * 80, c * 36, c * 73.5, c * 25, c * 80, c * 37);
  g[G](c * 73.5, c * 54, c * 65, c * 74, c * 67, c * 71);
  g[X]();
  jc(g, e[1]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 65, c * 37);
  g[G](c * 105, c * 40, c * 113, c * 39, c * 117, c * 48);
  g[G](c * 126, c * 70, c * 128, c * 72, c * 124, c * 80);
  g[G](c * 112, c * 101, c * 110, c * 104, c * 99, c * 104);
  g[G](c * 59, c * 100, c * 55, c * 99, c * 56, c * 99);
  g[G](c * 47.5, c * 79, c * 45, c * 66, c * 39, c * 59);
  g[X]();
  jc(g, e[1]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 30, c * 63);
  g[G](c * 5, c * 99, c * 5, c * 101, c * 8, c * 103);
  g[G](c * 19, c * 123, c * 22, c * 125, c * 28, c * 126);
  g[G](c * 57, c * 127, c * 55, c * 127, c * 58, c * 120);
  g[G](c * 82, c * 86, c * 83, c * 78, c * 82, c * 87);
  g[X]();
  jc(g, e[1]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 80, c * 38);
  g[G](c * 72.5, c * 52, c * 72.5, c * 52, c * 65, c * 66);
  g[G](c * 47.5, c * 37, c * 47.5, c * 37, c * 30, c * 7);
  g[G](c * 48, c * 4, c * 57, c * 4, c * 64, c * 10);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 65, c * 65);
  g[G](c * 125, c * 73, c * 95.5, c * 69, c * 126, c * 73);
  g[G](c * 119, c * 98, c * 106, c * 104, c * 98, c * 103);
  g[G](c * 84.5, c * 102, c * 84.5, c * 102, c * 71, c * 101);
  g[G](c * 64, c * 86, c * 64, c * 86, c * 57, c * 70);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 27, c * 69);
  g[G](c * 64, c * 65, c * 46, c * 67, c * 65, c * 65);
  g[G](c * 43.5, c * 94, c * 43.5, c * 94, c * 22, c * 123);
  g[G](c * 8, c * 103, c * 8, c * 103, c * 9, c * 103);
  g[G](c * 5, c * 98, c * 11, c * 89, c * 26, c * 70);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 26, c * 69);
  g[G](c * 65, c * 60, c * 45, c * 65, c * 64, c * 60);
  g[G](c * 63, c * 65, c * 63, c * 65, c * 62, c * 70);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 80, c * 38);
  g[G](c * 68, c * 70, c * 75, c * 53, c * 70, c * 68);
  g[G](c * 65, c * 67, c * 65, c * 67, c * 60, c * 65);
  g[X]();
  jc(g, e[2]);
  return f;
}
function De(c, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 100;
  f.height = c * 100;
  g[ua] = 0.5;
  g[d] = e[0];
  g[pa](0, 0, f.width, f.height);
  return f;
}
function Ee(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 120;
  e.height = c * 300;
  f[Ia](c * -80, -20);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 200.5, c * 14.953125);
  f[G](c * 203, c * 171.953125, c * 203, c * 171.953125, c * 205.5, c * 328.953125);
  f[G](c * 188.5, c * 257.953125, c * 164.5, c * 216.953125, c * 166.5, c * 176.953125);
  f[G](c * 168.5, c * 133.953125, c * 198.5, c * 98.953125, c * 200.5, c * 14.953125);
  f[X]();
  jc(f, d[0]);
  return e;
}
function Fe(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 120;
  e.height = c * 300;
  f[Ia](c * -200, c * -40);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 344, c * 18.40625);
  f[G](c * 345, c * 361.40625, c * 344, c * 191.40625, c * 344, c * 364.40625);
  f[G](c * 261, c * 275.40625, c * 274, c * 259.40625, c * 229, c * 213.40625);
  f[G](c * 199, c * 187.40625, c * 222, c * 133.40625, c * 273, c * 100.40625);
  f[G](c * 321, c * 71.40625, c * 327, c * 34.40625, c * 344, c * 18.40625);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 335, c * 38.072906494140625);
  f[G](c * 307, c * 62.072906494140625, c * 291, c * 60.072906494140625, c * 262, c * 68.07290649414062);
  f[G](c * 223, c * 80.07290649414062, c * 225, c * 111.07290649414062, c * 264, c * 139.07290649414062);
  f[X]();
  jc(f, d[0]);
  return e;
}
function Ge(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 120;
  e.height = c * 320;
  f[Ia](c * -60, c * -15);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 188.5, c * 3.953125);
  f[G](c * 188.5, c * 171.453125, c * 188.5, c * 171.453125, c * 188.5, c * 338.953125);
  f[G](c * 162.5, c * 268.953125, c * 145.5, c * 265.953125, c * 116.5, c * 244.953125);
  f[G](c * 67.5, c * 204.953125, c * 87.5, c * 160.953125, c * 113.5, c * 125.953125);
  f[G](c * 141.5, c * 90.953125, c * 176.5, c * 56.953125, c * 188.5, c * 3.953125);
  f[X]();
  jc(f, d[0]);
  return e;
}
function He(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 120;
  e.height = c * 330;
  f[Ia](c * -60, c * -10);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 188.5, c * 7.953125);
  f[G](c * 188.5, c * 334.953125, c * 188.5, c * 332.953125, c * 188.5, c * 339.953125);
  f[G](c * 166.5, c * 295.953125, c * 145.5, c * 295.953125, c * 139.5, c * 282.953125);
  f[G](c * 124.5, c * 244.953125, c * 139.5, c * 243.953125, c * 131.5, c * 212.953125);
  f[G](c * 118.5, c * 161.953125, c * 69.5, c * 156.953125, c * 74.5, c * 92.953125);
  f[G](c * 85.5, c * 41.953125, c * 158.5, c * 49.953125, c * 188.5, c * 7.953125);
  f[X]();
  jc(f, d[0]);
  return e;
}
function Ie(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 48;
  e.height = c * 47;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 7.1875, c * 25.434661865234375);
  f[G](c * 11.1875, c * 13.434661865234375, c * 18.1875, c * 8.434661865234375, c * 32.1875, c * 10.434661865234375);
  f[G](c * 45.1875, c * 14.434661865234375, c * 41.1875, c * 24.434661865234375, c * 36.1875, c * 30.434661865234375);
  f[G](c * 22.1875, c * 42.434661865234375, c * 2.1875, c * 41.434661865234375, c * 7.1875, c * 25.434661865234375);
  f[X]();
  jc(f, d[0]);
  return e;
}
function Je(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 120;
  e.height = c * 280;
  f[Ia](c * -100, c * -20);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 228.5, c * 331.953125);
  f[G](c * 228.5, c * 12.953125, c * 228.5, c * 171.453125, c * 228.5, c * 10.953125);
  f[G](c * 196.5, c * 76.953125, c * 206.5, c * 78.953125, c * 191.5, c * 114.953125);
  f[G](c * 162.5, c * 170.953125, c * 206.5, c * 220.953125, c * 210.5, c * 251.953125);
  f[G](c * 218.5, c * 287.953125, c * 220.5, c * 291.953125, c * 228.5, c * 331.953125);
  f[X]();
  jc(f, d[0]);
  return e;
}
function Ke(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 33;
  e.height = c * 35;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 12.75, c * 7.1328125);
  f[G](c * 26.75, c * 8.1328125, c * 27.75, c * 14.1328125, c * 24.75, c * 23.1328125);
  f[G](c * 19.75, c * 31.1328125, c * 15.75, c * 33.1328125, c * 6.75, c * 26.1328125);
  f[G](c * 0.75, c * 19.1328125, c * 4.75, c * 8.1328125, c * 12.75, c * 7.1328125);
  f[X]();
  jc(f, d[0]);
  return e;
}
function Le(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 20;
  e.height = c * 35;
  kc(f, 0, 0, 20, 35, 7);
  jc(f, d[0]);
  return e;
}
function Me(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 161;
  e.height = c * 190;
  f[ua] = 0.5;
  f[Ia](0, 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 9, c * 93);
  f[G](c * 17, c * 95, c * 19, c * 95, c * 21, c * 95);
  f[G](c * 9, c * 83, c * 17, c * 93, c * 4, c * 76);
  f[G](c * 11, c * 75, c * 11, c * 75, c * 18, c * 75);
  f[G](c * 13, c * 67, c * 13, c * 67, c * 7, c * 59);
  f[G](c * 14, c * 59, c * 14, c * 59, c * 21, c * 59);
  f[G](c * 46, c * 35, c * 35, c * 45, c * 49, c * 31);
  f[G](c * 53, c * 24, c * 51, c * 21, c * 51, c * 16);
  f[G](c * 63, c * 23, c * 63, c * 24, c * 69, c * 29);
  f[G](c * 76, c * 7, c * 75, c * 11, c * 76, c * 6);
  f[G](c * 81, c * 12, c * 84, c * 18, c * 89, c * 27);
  f[G](c * 95, c * 25, c * 100, c * 16, c * 105, c * 14);
  f[G](c * 103, c * 25, c * 111, c * 33, c * 110, c * 34);
  f[G](c * 123, c * 48, c * 123, c * 48, c * 136, c * 62);
  f[G](c * 142, c * 60, c * 147, c * 59, c * 155, c * 58);
  f[G](c * 147, c * 65, c * 147, c * 65, c * 139, c * 73);
  f[G](c * 145, c * 73, c * 145, c * 73, c * 151, c * 73);
  f[G](c * 145, c * 80, c * 145, c * 80, c * 138, c * 87);
  f[G](c * 144, c * 88, c * 144, c * 88, c * 150, c * 89);
  f[G](c * 125, c * 103, c * 125, c * 125, c * 113, c * 141);
  f[G](c * 92, c * 178, c * 85, c * 177, c * 76, c * 178);
  f[G](c * 64, c * 179, c * 51, c * 164, c * 35, c * 131);
  f[G](c * 18, c * 95, c * 13, c * 99, c * 8, c * 93);
  f[X]();
  jc(f, d[0]);
  f[ua] = 1;
  f[Ia](0, -8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 9, c * 93);
  f[G](c * 17, c * 95, c * 19, c * 95, c * 21, c * 95);
  f[G](c * 9, c * 83, c * 17, c * 93, c * 4, c * 76);
  f[G](c * 11, c * 75, c * 11, c * 75, c * 18, c * 75);
  f[G](c * 13, c * 67, c * 13, c * 67, c * 7, c * 59);
  f[G](c * 14, c * 59, c * 14, c * 59, c * 21, c * 59);
  f[G](c * 46, c * 35, c * 35, c * 45, c * 49, c * 31);
  f[G](c * 53, c * 24, c * 51, c * 21, c * 51, c * 16);
  f[G](c * 63, c * 23, c * 63, c * 24, c * 69, c * 29);
  f[G](c * 76, c * 7, c * 75, c * 11, c * 76, c * 6);
  f[G](c * 81, c * 12, c * 84, c * 18, c * 89, c * 27);
  f[G](c * 95, c * 25, c * 100, c * 16, c * 105, c * 14);
  f[G](c * 103, c * 25, c * 111, c * 33, c * 110, c * 34);
  f[G](c * 123, c * 48, c * 123, c * 48, c * 136, c * 62);
  f[G](c * 142, c * 60, c * 147, c * 59, c * 155, c * 58);
  f[G](c * 147, c * 65, c * 147, c * 65, c * 139, c * 73);
  f[G](c * 145, c * 73, c * 145, c * 73, c * 151, c * 73);
  f[G](c * 145, c * 80, c * 145, c * 80, c * 138, c * 87);
  f[G](c * 144, c * 88, c * 144, c * 88, c * 150, c * 89);
  f[G](c * 125, c * 103, c * 125, c * 125, c * 113, c * 141);
  f[G](c * 92, c * 178, c * 85, c * 177, c * 76, c * 178);
  f[G](c * 64, c * 179, c * 51, c * 164, c * 35, c * 131);
  f[G](c * 18, c * 95, c * 13, c * 99, c * 8, c * 93);
  f[X]();
  jc(f, d[1]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 28, c * 63);
  f[G](c * 23, c * 54, c * 24, c * 47, c * 26, c * 37);
  f[G](c * 28, c * 29, c * 31, c * 31, c * 41, c * 35);
  f[G](c * 52, c * 45, c * 55, c * 51, c * 57, c * 53);
  f[G](c * 50, c * 50, c * 44, c * 47, c * 43, c * 48);
  f[G](c * 43, c * 52, c * 43, c * 52, c * 42, c * 57);
  f[G](c * 38, c * 54, c * 38, c * 54, c * 33, c * 51);
  f[G](c * 34, c * 56, c * 34, c * 56, c * 34, c * 61);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 99, c * 55);
  f[G](c * 107, c * 43, c * 113, c * 39, c * 121, c * 34);
  f[G](c * 130, c * 29, c * 130, c * 34, c * 130, c * 42);
  f[G](c * 131, c * 57, c * 128, c * 61, c * 129, c * 63);
  f[G](c * 124, c * 62, c * 124, c * 62, c * 119, c * 61);
  f[G](c * 119, c * 56, c * 120, c * 61, c * 118, c * 52);
  f[G](c * 115, c * 55, c * 111, c * 59, c * 111, c * 58);
  f[G](c * 110, c * 54, c * 109, c * 57, c * 109, c * 51);
  f[X]();
  jc(f, d[3]);
  lc(f, c * 103, c * 110, c * 11);
  jc(f, d[4]);
  lc(f, c * 55, c * 111, c * 11);
  jc(f, d[4]);
  lc(f, c * 99, c * 107, c * 5);
  jc(f, d[1]);
  lc(f, c * 51, c * 108, c * 5);
  jc(f, d[1]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 31, c * 121);
  f[G](c * 45, c * 128, c * 51, c * 133, c * 53, c * 141);
  f[G](c * 59, c * 161, c * 70, c * 173, c * 80, c * 169);
  f[G](c * 89, c * 172, c * 99, c * 149, c * 107, c * 133);
  f[G](c * 114, c * 122, c * 119, c * 123, c * 124, c * 119);
  f[G](c * 109, c * 148, c * 117, c * 133, c * 109, c * 147);
  f[G](c * 87, c * 180, c * 84, c * 179, c * 76, c * 178);
  f[G](c * 49, c * 173, c * 44, c * 149, c * 31, c * 121);
  f[X]();
  jc(f, d[5]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[Ia](-2, 0);
  f[K](c * 71, c * 162);
  f[G](c * 80, c * 155, c * 85, c * 159, c * 89, c * 164);
  f[G](c * 90, c * 171, c * 86, c * 173, c * 79, c * 173);
  f[G](c * 67, c * 172, c * 67, c * 168, c * 71, c * 162);
  f[X]();
  jc(f, d[3]);
  f[Ia](2, 0);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 9, c * 93);
  f[G](c * 17, c * 95, c * 19, c * 95, c * 21, c * 95);
  f[G](c * 9, c * 83, c * 17, c * 93, c * 4, c * 76);
  f[G](c * 11, c * 75, c * 11, c * 75, c * 18, c * 75);
  f[G](c * 13, c * 67, c * 13, c * 67, c * 7, c * 59);
  f[G](c * 14, c * 59, c * 14, c * 59, c * 21, c * 59);
  f[G](c * 46, c * 35, c * 35, c * 45, c * 49, c * 31);
  f[G](c * 53, c * 24, c * 51, c * 21, c * 51, c * 16);
  f[G](c * 63, c * 23, c * 63, c * 24, c * 69, c * 29);
  f[G](c * 76, c * 7, c * 75, c * 11, c * 76, c * 6);
  f[G](c * 81, c * 12, c * 84, c * 18, c * 89, c * 27);
  f[G](c * 95, c * 25, c * 100, c * 16, c * 105, c * 14);
  f[G](c * 103, c * 25, c * 111, c * 33, c * 110, c * 34);
  f[G](c * 123, c * 48, c * 123, c * 48, c * 136, c * 62);
  f[G](c * 142, c * 60, c * 147, c * 59, c * 155, c * 58);
  f[G](c * 147, c * 65, c * 147, c * 65, c * 139, c * 73);
  f[G](c * 145, c * 73, c * 145, c * 73, c * 151, c * 73);
  f[G](c * 145, c * 80, c * 145, c * 80, c * 138, c * 87);
  f[G](c * 144, c * 88, c * 144, c * 88, c * 150, c * 89);
  f[G](c * 125, c * 103, c * 125, c * 125, c * 113, c * 141);
  f[G](c * 92, c * 178, c * 85, c * 177, c * 76, c * 178);
  f[G](c * 64, c * 179, c * 51, c * 164, c * 35, c * 131);
  f[G](c * 18, c * 95, c * 13, c * 99, c * 8, c * 93);
  f[X]();
  jc(f, undefined, d[2], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 25, c * 63);
  f[G](c * 16, c * 58, c * 17, c * 51, c * 17, c * 33);
  f[G](c * 19, c * 12, c * 21, c * 12, c * 32, c * 17);
  f[G](c * 63, c * 31, c * 66, c * 45, c * 66, c * 54);
  jc(f, d[1], d[2], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 91, c * 53);
  f[G](c * 91, c * 40, c * 98, c * 33, c * 121, c * 20);
  f[G](c * 137, c * 12, c * 137, c * 16, c * 139, c * 27);
  f[G](c * 141, c * 49, c * 140, c * 57, c * 134, c * 64);
  jc(f, d[1], d[2], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 31, c * 63);
  f[G](c * 23, c * 54, c * 24, c * 47, c * 26, c * 37);
  f[G](c * 28, c * 29, c * 31, c * 31, c * 41, c * 35);
  f[G](c * 52, c * 45, c * 55, c * 51, c * 57, c * 53);
  f[G](c * 50, c * 50, c * 44, c * 47, c * 43, c * 48);
  f[G](c * 43, c * 52, c * 43, c * 52, c * 42, c * 57);
  f[G](c * 38, c * 54, c * 38, c * 54, c * 33, c * 51);
  f[G](c * 34, c * 56, c * 34, c * 56, c * 34, c * 61);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 99, c * 55);
  f[G](c * 107, c * 43, c * 113, c * 39, c * 121, c * 34);
  f[G](c * 130, c * 29, c * 130, c * 34, c * 130, c * 42);
  f[G](c * 131, c * 57, c * 128, c * 61, c * 129, c * 63);
  f[G](c * 124, c * 62, c * 124, c * 62, c * 119, c * 61);
  f[G](c * 119, c * 56, c * 120, c * 61, c * 118, c * 52);
  f[G](c * 115, c * 55, c * 111, c * 59, c * 111, c * 58);
  f[G](c * 110, c * 54, c * 109, c * 57, c * 109, c * 51);
  f[X]();
  jc(f, d[3]);
  return e;
}
function Ne(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 147;
  e.height = c * 172;
  f[ua] = 0.5;
  f[Ia](0, c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 8, c * 50);
  f[G](c * 15, c * 16, c * 49, c * 6, c * 67, c * 6);
  f[G](c * 121, c * 3, c * 128, c * 32, c * 135, c * 48);
  f[G](c * 146, c * 96, c * 124, c * 131, c * 96, c * 135);
  f[G](c * 96, c * 158, c * 79, c * 156, c * 75, c * 156);
  f[G](c * 50, c * 154, c * 53, c * 150, c * 52, c * 135);
  f[G](c * 2, c * 127, c * 3, c * 87, c * 8, c * 50);
  f[X]();
  jc(f, d[0]);
  f[Ia](0, c * -8);
  f[ua] = 1;
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 8, c * 50);
  f[G](c * 15, c * 16, c * 49, c * 6, c * 67, c * 6);
  f[G](c * 121, c * 3, c * 128, c * 32, c * 135, c * 48);
  f[G](c * 146, c * 96, c * 124, c * 131, c * 96, c * 135);
  f[G](c * 96, c * 158, c * 79, c * 156, c * 75, c * 156);
  f[G](c * 50, c * 154, c * 53, c * 150, c * 52, c * 135);
  f[G](c * 2, c * 127, c * 3, c * 87, c * 8, c * 50);
  f[X]();
  jc(f, d[1], d[2], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 14, c * 57);
  f[G](c * 2, c * 50, c * 5, c * 22, c * 24, c * 22);
  f[G](c * 41, c * 21, c * 54, c * 32, c * 55, c * 48);
  jc(f, d[1], d[2], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 93, c * 47);
  f[G](c * 94, c * 24, c * 116, c * 21, c * 120, c * 20);
  f[G](c * 144, c * 17, c * 146, c * 52, c * 133, c * 58);
  jc(f, d[1], d[2], c * 4);
  lc(f, c * 51, c * 91, c * 9);
  jc(f, d[3]);
  lc(f, c * 95, c * 91, c * 9);
  jc(f, d[3]);
  lc(f, c * 91, c * 89, c * 4);
  jc(f, d[4]);
  lc(f, c * 47, c * 89, c * 4);
  jc(f, d[4]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 54, c * 133);
  f[G](c * 56, c * 108, c * 64, c * 99, c * 73, c * 98);
  f[G](c * 86, c * 97, c * 91, c * 119, c * 93, c * 133);
  f[G](c * 94, c * 155, c * 90, c * 150, c * 74, c * 155);
  f[G](c * 50, c * 152, c * 55, c * 145, c * 54, c * 134);
  f[X]();
  jc(f, d[5]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 65.25, c * 135);
  f[G](c * 75.25, c * 128, c * 83.25, c * 133, c * 83.25, c * 138);
  f[G](c * 88.25, c * 148, c * 61.25, c * 149, c * 64.25, c * 137);
  f[X]();
  jc(f, d[6]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 74, c * 145);
  f[G](c * 74, c * 148, c * 74, c * 148, c * 74, c * 151);
  f[X]();
  jc(f, undefined, d[6], c * 2);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 19, c * 58);
  f[G](c * 10, c * 38, c * 18, c * 33, c * 28, c * 34);
  f[G](c * 41, c * 39, c * 45, c * 45, c * 50, c * 51);
  f[X]();
  jc(f, d[6]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 100, c * 51);
  f[G](c * 106, c * 36, c * 119, c * 31, c * 128, c * 36);
  f[G](c * 137, c * 49, c * 128, c * 58, c * 128, c * 60);
  f[X]();
  jc(f, d[6]);
  return e;
}
function Oe(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 271;
  e.height = c * 366;
  f[ua] = 0.5;
  f[Ia](0, c * 10);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 133, c * 99);
  f[G](c * 186, c * 123, c * 199, c * 152, c * 209, c * 169);
  f[G](c * 228, c * 205, c * 224, c * 245, c * 190, c * 276);
  f[G](c * 161, c * 296, c * 99, c * 292, c * 79, c * 274);
  f[G](c * 49, c * 253, c * 47, c * 214, c * 50, c * 197);
  f[G](c * 61, c * 143, c * 102, c * 113, c * 131, c * 99);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 73, c * 270);
  f[G](c * 79, c * 280, c * 77, c * 280, c * 78, c * 287);
  f[G](c * 78, c * 290, c * 83, c * 291, c * 82, c * 299);
  f[G](c * 81, c * 301, c * 87, c * 301, c * 92, c * 314);
  f[G](c * 94, c * 319, c * 100, c * 321, c * 107, c * 320);
  f[G](c * 111, c * 323, c * 114, c * 324, c * 119, c * 320);
  f[G](c * 137, c * 321, c * 146, c * 323, c * 139, c * 320);
  f[G](c * 141, c * 324, c * 150, c * 324, c * 153, c * 320);
  f[G](c * 168, c * 319, c * 171, c * 316, c * 173, c * 307);
  f[G](c * 180, c * 305, c * 180, c * 301, c * 178, c * 296);
  f[G](c * 183, c * 296, c * 185, c * 289, c * 188, c * 279);
  f[G](c * 171, c * 286, c * 149, c * 290, c * 132, c * 289);
  f[G](c * 101, c * 290, c * 86, c * 280, c * 74, c * 271);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 76, c * 252);
  f[G](c * 85, c * 294, c * 96, c * 314, c * 103, c * 314);
  f[G](c * 106, c * 316, c * 151, c * 314, c * 156, c * 314);
  f[G](c * 169, c * 317, c * 182, c * 285, c * 191, c * 256);
  f[G](c * 134.5, c * 254, c * 134.5, c * 254, c * 78, c * 252);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 84, c * 257);
  f[G](c * 122, c * 273, c * 146, c * 268, c * 179, c * 261);
  f[G](c * 190, c * 258, c * 187, c * 266, c * 178, c * 272);
  f[G](c * 160, c * 284, c * 123, c * 282, c * 100, c * 277);
  f[G](c * 73, c * 260, c * 79, c * 257, c * 84, c * 257);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 125, c * 65);
  f[G](c * 133, c * 45, c * 136, c * 42, c * 141, c * 55);
  f[G](c * 151, c * 96, c * 164, c * 117, c * 175, c * 134);
  f[G](c * 203, c * 181, c * 207, c * 182, c * 208, c * 215);
  f[G](c * 206, c * 240, c * 205, c * 246, c * 184, c * 258);
  f[G](c * 161, c * 267, c * 131, c * 272, c * 86, c * 258);
  f[G](c * 67, c * 252, c * 68, c * 239, c * 64, c * 216);
  f[G](c * 62, c * 194, c * 72, c * 169, c * 92, c * 142);
  f[G](c * 106, c * 121, c * 114, c * 101, c * 125, c * 65);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 115, c * 37);
  f[G](c * 116, c * 28, c * 119, c * 27, c * 126, c * 37);
  f[G](c * 134, c * 48, c * 134, c * 49, c * 132, c * 59);
  f[G](c * 131, c * 67, c * 127, c * 65, c * 120, c * 56);
  f[G](c * 114, c * 49, c * 113, c * 43, c * 115, c * 38);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 146, c * 34);
  f[G](c * 152, c * 28, c * 155, c * 27, c * 157, c * 39);
  f[G](c * 157, c * 45, c * 157, c * 49, c * 150, c * 56);
  f[G](c * 141, c * 66, c * 138, c * 66, c * 138, c * 57);
  f[G](c * 137, c * 50, c * 137, c * 47, c * 141, c * 42);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 143, c * 69);
  f[G](c * 148, c * 56, c * 156, c * 50, c * 158, c * 58);
  f[G](c * 159, c * 64, c * 160, c * 67, c * 153, c * 77);
  f[G](c * 148, c * 83, c * 145, c * 84, c * 143, c * 77);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 149, c * 92);
  f[G](c * 149, c * 89, c * 151, c * 84, c * 156, c * 79);
  f[G](c * 161, c * 73, c * 163, c * 78, c * 162, c * 86);
  f[G](c * 161, c * 91, c * 155, c * 99, c * 152, c * 98);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 111, c * 61);
  f[G](c * 114, c * 51, c * 117, c * 51, c * 124, c * 64);
  f[G](c * 128, c * 68, c * 128, c * 76, c * 126, c * 79);
  f[G](c * 123, c * 84, c * 122, c * 82, c * 115, c * 74);
  f[G](c * 112, c * 67, c * 115, c * 74, c * 115, c * 74);
  f[G](c * 111, c * 68, c * 111, c * 66, c * 111, c * 62);
  f[X]();
  jc(f, d[0]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 107, c * 81);
  f[G](c * 108, c * 74, c * 112, c * 73, c * 118, c * 84);
  f[G](c * 122, c * 88, c * 122, c * 93, c * 121, c * 98);
  f[G](c * 114, c * 98, c * 113, c * 98, c * 109, c * 90);
  f[G](c * 107, c * 87, c * 106, c * 85, c * 107, c * 82);
  f[X]();
  jc(f, d[0]);
  f[ua] = 1;
  f[Ia](0, c * -10);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 133, c * 99);
  f[G](c * 186, c * 123, c * 199, c * 152, c * 209, c * 169);
  f[G](c * 228, c * 205, c * 224, c * 245, c * 190, c * 276);
  f[G](c * 161, c * 296, c * 99, c * 292, c * 79, c * 274);
  f[G](c * 49, c * 253, c * 47, c * 214, c * 50, c * 197);
  f[G](c * 61, c * 143, c * 102, c * 113, c * 131, c * 99);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 73, c * 270);
  f[G](c * 79, c * 280, c * 77, c * 280, c * 78, c * 287);
  f[G](c * 78, c * 290, c * 83, c * 291, c * 82, c * 299);
  f[G](c * 81, c * 301, c * 87, c * 301, c * 92, c * 314);
  f[G](c * 94, c * 319, c * 100, c * 321, c * 107, c * 320);
  f[G](c * 111, c * 323, c * 114, c * 324, c * 119, c * 320);
  f[G](c * 137, c * 321, c * 146, c * 323, c * 139, c * 320);
  f[G](c * 141, c * 324, c * 150, c * 324, c * 153, c * 320);
  f[G](c * 168, c * 319, c * 171, c * 316, c * 173, c * 307);
  f[G](c * 180, c * 305, c * 180, c * 301, c * 178, c * 296);
  f[G](c * 183, c * 296, c * 185, c * 289, c * 188, c * 279);
  f[G](c * 171, c * 286, c * 149, c * 290, c * 132, c * 289);
  f[G](c * 101, c * 290, c * 86, c * 280, c * 74, c * 271);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 76, c * 252);
  f[G](c * 85, c * 294, c * 96, c * 314, c * 103, c * 314);
  f[G](c * 106, c * 316, c * 151, c * 314, c * 156, c * 314);
  f[G](c * 169, c * 317, c * 182, c * 285, c * 191, c * 256);
  f[G](c * 134.5, c * 254, c * 134.5, c * 254, c * 78, c * 252);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 84, c * 257);
  f[G](c * 122, c * 273, c * 146, c * 268, c * 179, c * 261);
  f[G](c * 190, c * 258, c * 187, c * 266, c * 178, c * 272);
  f[G](c * 160, c * 284, c * 123, c * 282, c * 100, c * 277);
  f[G](c * 73, c * 260, c * 79, c * 257, c * 84, c * 257);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 125, c * 65);
  f[G](c * 133, c * 45, c * 136, c * 42, c * 141, c * 55);
  f[G](c * 151, c * 96, c * 164, c * 117, c * 175, c * 134);
  f[G](c * 203, c * 181, c * 207, c * 182, c * 208, c * 215);
  f[G](c * 206, c * 240, c * 205, c * 246, c * 184, c * 258);
  f[G](c * 161, c * 267, c * 131, c * 272, c * 86, c * 258);
  f[G](c * 67, c * 252, c * 68, c * 239, c * 64, c * 216);
  f[G](c * 62, c * 194, c * 72, c * 169, c * 92, c * 142);
  f[G](c * 106, c * 121, c * 114, c * 101, c * 125, c * 65);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 115, c * 37);
  f[G](c * 116, c * 28, c * 119, c * 27, c * 126, c * 37);
  f[G](c * 134, c * 48, c * 134, c * 49, c * 132, c * 59);
  f[G](c * 131, c * 67, c * 127, c * 65, c * 120, c * 56);
  f[G](c * 114, c * 49, c * 113, c * 43, c * 115, c * 38);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 146, c * 34);
  f[G](c * 152, c * 28, c * 155, c * 27, c * 157, c * 39);
  f[G](c * 157, c * 45, c * 157, c * 49, c * 150, c * 56);
  f[G](c * 141, c * 66, c * 138, c * 66, c * 138, c * 57);
  f[G](c * 137, c * 50, c * 137, c * 47, c * 141, c * 42);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 143, c * 69);
  f[G](c * 148, c * 56, c * 156, c * 50, c * 158, c * 58);
  f[G](c * 159, c * 64, c * 160, c * 67, c * 153, c * 77);
  f[G](c * 148, c * 83, c * 145, c * 84, c * 143, c * 77);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 149, c * 92);
  f[G](c * 149, c * 89, c * 151, c * 84, c * 156, c * 79);
  f[G](c * 161, c * 73, c * 163, c * 78, c * 162, c * 86);
  f[G](c * 161, c * 91, c * 155, c * 99, c * 152, c * 98);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 111, c * 61);
  f[G](c * 114, c * 51, c * 117, c * 51, c * 124, c * 64);
  f[G](c * 128, c * 68, c * 128, c * 76, c * 126, c * 79);
  f[G](c * 123, c * 84, c * 122, c * 82, c * 115, c * 74);
  f[G](c * 112, c * 67, c * 115, c * 74, c * 115, c * 74);
  f[G](c * 111, c * 68, c * 111, c * 66, c * 111, c * 62);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 107, c * 81);
  f[G](c * 108, c * 74, c * 112, c * 73, c * 118, c * 84);
  f[G](c * 122, c * 88, c * 122, c * 93, c * 121, c * 98);
  f[G](c * 114, c * 98, c * 113, c * 98, c * 109, c * 90);
  f[G](c * 107, c * 87, c * 106, c * 85, c * 107, c * 82);
  f[X]();
  jc(f, d[3], d[3], c * 8);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 133, c * 99);
  f[G](c * 186, c * 123, c * 199, c * 152, c * 209, c * 169);
  f[G](c * 228, c * 205, c * 224, c * 245, c * 190, c * 276);
  f[G](c * 161, c * 296, c * 99, c * 292, c * 79, c * 274);
  f[G](c * 49, c * 253, c * 47, c * 214, c * 50, c * 197);
  f[G](c * 61, c * 143, c * 102, c * 113, c * 131, c * 99);
  f[X]();
  jc(f, d[1]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 73, c * 270);
  f[G](c * 79, c * 280, c * 77, c * 280, c * 78, c * 287);
  f[G](c * 78, c * 290, c * 83, c * 291, c * 82, c * 299);
  f[G](c * 81, c * 301, c * 87, c * 301, c * 92, c * 314);
  f[G](c * 94, c * 319, c * 100, c * 321, c * 107, c * 320);
  f[G](c * 111, c * 323, c * 114, c * 324, c * 119, c * 320);
  f[G](c * 137, c * 321, c * 146, c * 323, c * 139, c * 320);
  f[G](c * 141, c * 324, c * 150, c * 324, c * 153, c * 320);
  f[G](c * 168, c * 319, c * 171, c * 316, c * 173, c * 307);
  f[G](c * 180, c * 305, c * 180, c * 301, c * 178, c * 296);
  f[G](c * 183, c * 296, c * 185, c * 289, c * 188, c * 279);
  f[G](c * 171, c * 286, c * 149, c * 290, c * 132, c * 289);
  f[G](c * 101, c * 290, c * 86, c * 280, c * 74, c * 271);
  f[X]();
  jc(f, d[5]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 76, c * 252);
  f[G](c * 85, c * 294, c * 96, c * 314, c * 103, c * 314);
  f[G](c * 106, c * 316, c * 151, c * 314, c * 156, c * 314);
  f[G](c * 169, c * 317, c * 182, c * 285, c * 191, c * 256);
  f[G](c * 134.5, c * 254, c * 134.5, c * 254, c * 78, c * 252);
  f[X]();
  jc(f, d[2]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 84, c * 257);
  f[G](c * 122, c * 273, c * 146, c * 268, c * 179, c * 261);
  f[G](c * 190, c * 258, c * 187, c * 266, c * 178, c * 272);
  f[G](c * 160, c * 284, c * 123, c * 282, c * 100, c * 277);
  f[G](c * 73, c * 260, c * 79, c * 257, c * 84, c * 257);
  f[X]();
  jc(f, d[1]);
  lc(f, c * 102, c * 269, c * 11);
  jc(f, d[3]);
  lc(f, c * 98, c * 266, c * 5);
  jc(f, d[6]);
  lc(f, c * 168, c * 269, c * 11);
  jc(f, d[3]);
  lc(f, c * 164, c * 266, c * 5);
  jc(f, d[6]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 125, c * 65);
  f[G](c * 133, c * 45, c * 136, c * 42, c * 141, c * 55);
  f[G](c * 151, c * 96, c * 164, c * 117, c * 175, c * 134);
  f[G](c * 203, c * 181, c * 207, c * 182, c * 208, c * 215);
  f[G](c * 206, c * 240, c * 205, c * 246, c * 184, c * 258);
  f[G](c * 161, c * 267, c * 131, c * 272, c * 86, c * 258);
  f[G](c * 67, c * 252, c * 68, c * 239, c * 64, c * 216);
  f[G](c * 62, c * 194, c * 72, c * 169, c * 92, c * 142);
  f[G](c * 106, c * 121, c * 114, c * 101, c * 125, c * 65);
  f[X]();
  jc(f, d[2]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 115, c * 235);
  f[G](c * 118, c * 258, c * 137, c * 268, c * 148, c * 246);
  f[G](c * 156, c * 228, c * 152, c * 169, c * 150, c * 140);
  f[G](c * 147, c * 87, c * 143, c * 69, c * 142, c * 60);
  f[G](c * 136, c * 44, c * 132, c * 43, c * 127, c * 62);
  f[G](c * 119, c * 116, c * 119, c * 140, c * 116, c * 166);
  f[G](c * 113, c * 202, c * 113, c * 223, c * 115, c * 233);
  f[X]();
  jc(f, d[4]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 132, c * 219);
  f[G](c * 140, c * 229, c * 142, c * 231, c * 145, c * 237);
  f[G](c * 145, c * 245, c * 139, c * 249, c * 133, c * 249);
  f[G](c * 123, c * 248, c * 123, c * 243, c * 121, c * 239);
  f[G](c * 126, c * 227, c * 129, c * 223, c * 132, c * 219);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 133, c * 179);
  f[G](c * 140, c * 188.5, c * 140, c * 188.5, c * 147, c * 198);
  f[G](c * 148, c * 209, c * 142, c * 214, c * 133, c * 214);
  f[G](c * 121, c * 211, c * 121, c * 207, c * 120, c * 200);
  f[G](c * 126.5, c * 189.5, c * 126.5, c * 189.5, c * 133, c * 179);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 133, c * 143);
  f[G](c * 139, c * 151.5, c * 139, c * 151.5, c * 145, c * 160);
  f[G](c * 143, c * 167, c * 140, c * 170, c * 134, c * 170);
  f[G](c * 128, c * 169, c * 124, c * 167, c * 123, c * 161);
  f[G](c * 128, c * 152, c * 128, c * 152, c * 133, c * 143);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 133, c * 115);
  f[G](c * 137.5, c * 121.5, c * 137.5, c * 121.5, c * 142, c * 128);
  f[G](c * 141, c * 133, c * 138, c * 135, c * 133, c * 135);
  f[G](c * 129, c * 135, c * 125, c * 132, c * 125, c * 129);
  f[G](c * 129, c * 122, c * 129, c * 122, c * 133, c * 115);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 133, c * 94);
  f[G](c * 136.5, c * 98.5, c * 136.5, c * 98.5, c * 140, c * 103);
  f[G](c * 139, c * 109, c * 137, c * 109, c * 133, c * 110);
  f[G](c * 127, c * 108, c * 129, c * 107, c * 127, c * 105);
  f[G](c * 130, c * 99.5, c * 130, c * 99.5, c * 133, c * 94);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 130, c * 279);
  f[G](c * 136.5, c * 287.5, c * 136.5, c * 287.5, c * 143, c * 296);
  f[G](c * 143, c * 302, c * 139, c * 309, c * 131, c * 308);
  f[G](c * 123, c * 306, c * 121, c * 303, c * 120, c * 297);
  f[G](c * 125.5, c * 288.5, c * 125.5, c * 288.5, c * 131, c * 280);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 147, c * 303);
  f[G](c * 151, c * 311, c * 151, c * 319, c * 147, c * 321);
  f[G](c * 138, c * 320, c * 145, c * 308, c * 147, c * 303);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 115, c * 303);
  f[G](c * 115, c * 312, c * 118, c * 319, c * 115, c * 319);
  f[G](c * 112, c * 324, c * 109, c * 318, c * 109, c * 314);
  f[G](c * 109, c * 308, c * 112, c * 303, c * 115, c * 303);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 89, c * 280);
  f[G](c * 83, c * 279, c * 80, c * 281, c * 81, c * 286);
  f[G](c * 83, c * 290, c * 84, c * 290, c * 87, c * 286);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 94, c * 290);
  f[G](c * 93, c * 294, c * 90, c * 303, c * 86, c * 298);
  f[G](c * 84, c * 295, c * 84, c * 291, c * 89, c * 291);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 163, c * 295);
  f[G](c * 175, c * 294, c * 176, c * 296, c * 175, c * 301);
  f[G](c * 174, c * 305, c * 171, c * 305, c * 166, c * 300);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 172, c * 286);
  f[G](c * 180, c * 285, c * 181, c * 285, c * 180, c * 291);
  f[G](c * 176, c * 295, c * 174, c * 294, c * 172, c * 286);
  f[X]();
  jc(f, d[8]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 115, c * 37);
  f[G](c * 116, c * 28, c * 119, c * 27, c * 126, c * 37);
  f[G](c * 134, c * 48, c * 134, c * 49, c * 132, c * 59);
  f[G](c * 131, c * 67, c * 127, c * 65, c * 120, c * 56);
  f[G](c * 114, c * 49, c * 113, c * 43, c * 115, c * 38);
  f[X]();
  jc(f, d[7]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 146, c * 34);
  f[G](c * 152, c * 28, c * 155, c * 27, c * 157, c * 39);
  f[G](c * 157, c * 45, c * 157, c * 49, c * 150, c * 56);
  f[G](c * 141, c * 66, c * 138, c * 66, c * 138, c * 57);
  f[G](c * 137, c * 50, c * 137, c * 47, c * 141, c * 42);
  f[X]();
  jc(f, d[7]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 143, c * 69);
  f[G](c * 148, c * 56, c * 156, c * 50, c * 158, c * 58);
  f[G](c * 159, c * 64, c * 160, c * 67, c * 153, c * 77);
  f[G](c * 148, c * 83, c * 145, c * 84, c * 143, c * 77);
  f[X]();
  jc(f, d[7]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 149, c * 92);
  f[G](c * 149, c * 89, c * 151, c * 84, c * 156, c * 79);
  f[G](c * 161, c * 73, c * 163, c * 78, c * 162, c * 86);
  f[G](c * 161, c * 91, c * 155, c * 99, c * 152, c * 98);
  f[X]();
  jc(f, d[7]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 111, c * 61);
  f[G](c * 114, c * 51, c * 117, c * 51, c * 124, c * 64);
  f[G](c * 128, c * 68, c * 128, c * 76, c * 126, c * 79);
  f[G](c * 123, c * 84, c * 122, c * 82, c * 115, c * 74);
  f[G](c * 112, c * 67, c * 115, c * 74, c * 115, c * 74);
  f[G](c * 111, c * 68, c * 111, c * 66, c * 111, c * 62);
  f[X]();
  jc(f, d[7]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 107, c * 81);
  f[G](c * 108, c * 74, c * 112, c * 73, c * 118, c * 84);
  f[G](c * 122, c * 88, c * 122, c * 93, c * 121, c * 98);
  f[G](c * 114, c * 98, c * 113, c * 98, c * 109, c * 90);
  f[G](c * 107, c * 87, c * 106, c * 85, c * 107, c * 82);
  f[X]();
  jc(f, d[7]);
  return e;
}
function Pe(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 85;
  e.height = c * 145;
  f[Ia](c * -20, c * -95);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 50, c * 105);
  f[G](c * 52, c * 119, c * 64, c * 137, c * 71, c * 146);
  f[G](c * 71, c * 161, c * 74, c * 169, c * 79, c * 179);
  f[G](c * 68, c * 192, c * 70, c * 204, c * 69, c * 216);
  f[G](c * 50, c * 189.5, c * 50, c * 189.5, c * 31, c * 163);
  f[X]();
  jc(f, d[1]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 44, c * 106);
  f[G](c * 49, c * 90, c * 58, c * 104, c * 51, c * 121);
  f[G](c * 45, c * 143, c * 41, c * 151, c * 37, c * 162);
  f[G](c * 48, c * 180, c * 58, c * 188, c * 76, c * 205);
  f[G](c * 104, c * 209, c * 105, c * 229, c * 92, c * 235);
  f[G](c * 76, c * 239, c * 75, c * 232, c * 56, c * 213);
  f[G](c * 31, c * 187, c * 28, c * 176, c * 23, c * 162);
  f[G](c * 38, c * 131, c * 40, c * 120, c * 44, c * 106);
  f[X]();
  jc(f, d[2], d[3], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 30, c * 159);
  f[G](c * 46, c * 157, c * 59, c * 152, c * 68, c * 148);
  f[G](c * 63, c * 155, c * 52, c * 160, c * 44, c * 164);
  f[G](c * 59, c * 169, c * 66, c * 174, c * 75, c * 178);
  f[G](c * 58, c * 178, c * 49, c * 175, c * 37, c * 174);
  f[X]();
  jc(f, d[2]);
  return e;
}
function Qe(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 85;
  e.height = c * 145;
  f[Ia](c * -165, c * -95);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 217, c * 103);
  f[G](c * 209, c * 129, c * 203, c * 137, c * 195, c * 146);
  f[G](c * 195, c * 159, c * 194, c * 167, c * 189, c * 178);
  f[G](c * 193, c * 186, c * 196, c * 195, c * 198, c * 216);
  f[G](c * 217.5, c * 189.5, c * 217.5, c * 189.5, c * 237, c * 163);
  f[X]();
  jc(f, d[1]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 231, c * 163);
  f[G](c * 221, c * 139, c * 218, c * 128, c * 215, c * 114);
  f[G](c * 213, c * 102, c * 220, c * 92, c * 222, c * 107);
  f[G](c * 224, c * 118, c * 233, c * 138, c * 244, c * 161);
  f[G](c * 235, c * 188, c * 224, c * 198, c * 204, c * 221);
  f[G](c * 190, c * 233, c * 190, c * 235, c * 180, c * 235);
  f[G](c * 167, c * 235, c * 164, c * 216, c * 175, c * 211);
  f[G](c * 176, c * 208, c * 181, c * 207, c * 191, c * 205);
  f[G](c * 213, c * 186, c * 218, c * 180, c * 230, c * 163);
  f[X]();
  jc(f, d[2], d[3], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 234, c * 154);
  f[G](c * 227, c * 156, c * 222, c * 156, c * 199, c * 148);
  f[G](c * 201, c * 151, c * 216, c * 159, c * 224, c * 162);
  f[G](c * 209, c * 169.5, c * 209, c * 169.5, c * 194, c * 177);
  f[G](c * 213.5, c * 175, c * 213.5, c * 175, c * 233, c * 173);
  f[X]();
  jc(f, d[2]);
  return e;
}
function Re(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 187;
  f.height = c * 119;
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[Ia](0, 3);
  g[K](c * 53, c * 45);
  g[G](c * 3, c * 60, c * 11, c * 72, c * 19, c * 81);
  g[G](c * 28, c * 82, c * 24, c * 81, c * 29, c * 82);
  g[G](c * 26, c * 87, c * 28, c * 84, c * 28, c * 87);
  g[G](c * 63, c * 101, c * 92, c * 100, c * 138, c * 93);
  g[G](c * 172, c * 87, c * 180, c * 72, c * 168, c * 62);
  g[G](c * 154, c * 51, c * 150, c * 50, c * 148, c * 49);
  g[G](c * 132, c * 42, c * 90, c * 40, c * 55, c * 45);
  g[X]();
  jc(g, e[5]);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[Ia](0, -3);
  g[K](c * 53, c * 45);
  g[G](c * 3, c * 60, c * 11, c * 72, c * 19, c * 81);
  g[G](c * 28, c * 82, c * 24, c * 81, c * 29, c * 82);
  g[G](c * 26, c * 87, c * 28, c * 84, c * 28, c * 87);
  g[G](c * 63, c * 101, c * 92, c * 100, c * 138, c * 93);
  g[G](c * 172, c * 87, c * 180, c * 72, c * 168, c * 62);
  g[G](c * 154, c * 51, c * 150, c * 50, c * 148, c * 49);
  g[G](c * 132, c * 42, c * 90, c * 40, c * 55, c * 45);
  g[X]();
  jc(g, e[0], e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 151, c * 60);
  g[G](c * 140, c * 36, c * 137, c * 32, c * 124, c * 29);
  g[G](c * 98, c * 22, c * 80, c * 24, c * 62, c * 28);
  g[G](c * 42, c * 35, c * 38, c * 46, c * 34, c * 58);
  g[G](c * 53, c * 74, c * 76, c * 76, c * 91, c * 78);
  g[X]();
  jc(g, e[0], e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 37, c * 53);
  g[G](c * 30, c * 56, c * 29, c * 67, c * 30, c * 68);
  g[G](c * 94, c * 108, c * 150, c * 76, c * 155, c * 70);
  g[G](c * 154, c * 60, c * 151, c * 54, c * 149, c * 53);
  g[G](c * 101, c * 74, c * 66, c * 66, c * 37, c * 53);
  g[X]();
  jc(g, e[2], e[3], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 100, c * 36);
  g[G](c * 92, c * 25, c * 86, c * 28, c * 82, c * 34);
  g[G](c * 88, c * 40, c * 93, c * 40, c * 98, c * 36);
  g[X]();
  jc(g, e[0], e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 80, c * 43);
  g[G](c * 69, c * 46, c * 67, c * 52, c * 69, c * 58);
  jc(g, undefined, e[1], c * 4);
  lc(g, c * 58, c * 50, c * 5);
  jc(g, e[4]);
  lc(g, c * 43, c * 65, c * 5);
  jc(g, e[4]);
  lc(g, c * 58, c * 73, c * 5);
  jc(g, e[4]);
  lc(g, c * 58, c * 50, c * 2);
  jc(g, e[5]);
  lc(g, c * 43, c * 65, c * 2);
  jc(g, e[5]);
  lc(g, c * 58, c * 73, c * 2);
  jc(g, e[5]);
  return f;
}
function Se(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 180;
  f.height = c * 120;
  i[Ia](c * -65, c * -35);
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 150.5, c * 63.84375);
  kc(i, c * -67, c * -16.5, c * 134, c * 33, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 80.5, c * 75.34375);
  i[G](c * 83, c * 106.34375, c * 83, c * 106.34375, c * 85.5, c * 137.34375);
  i[G](c * 93, c * 135.84375, c * 93, c * 135.84375, c * 100.5, c * 134.34375);
  i[G](c * 99.5, c * 100.84375, c * 99.5, c * 100.84375, c * 98.5, c * 67.34375);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 206.5, c * 71.34375);
  i[G](c * 203.5, c * 104.34375, c * 203.5, c * 104.34375, c * 200.5, c * 137.34375);
  i[G](c * 208.5, c * 137.34375, c * 208.5, c * 137.34375, c * 216.5, c * 137.34375);
  i[G](c * 219, c * 102.84375, c * 219, c * 102.84375, c * 221.5, c * 68.34375);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 136.5, c * 75.34375);
  i[G](c * 139, c * 94.34375, c * 139, c * 94.34375, c * 141.5, c * 113.34375);
  i[G](c * 149.5, c * 115.34375, c * 149.5, c * 115.34375, c * 157.5, c * 117.34375);
  i[G](c * 162, c * 97.34375, c * 162, c * 97.34375, c * 166.5, c * 77.34375);
  i[X]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 152.5, c * 80.84375);
  i[ra](3.12);
  kc(i, c * -73, c * -20.5, c * 146, c * 41, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 150.5, c * 63.84375);
  kc(i, c * -67, c * -16.5, c * 134, c * 33, c * 5);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 80.5, c * 75.34375);
  i[G](c * 83, c * 106.34375, c * 83, c * 106.34375, c * 85.5, c * 137.34375);
  i[G](c * 93, c * 135.84375, c * 93, c * 135.84375, c * 100.5, c * 134.34375);
  i[G](c * 99.5, c * 100.84375, c * 99.5, c * 100.84375, c * 98.5, c * 67.34375);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 206.5, c * 71.34375);
  i[G](c * 203.5, c * 104.34375, c * 203.5, c * 104.34375, c * 200.5, c * 137.34375);
  i[G](c * 208.5, c * 137.34375, c * 208.5, c * 137.34375, c * 216.5, c * 137.34375);
  i[G](c * 219, c * 102.84375, c * 219, c * 102.84375, c * 221.5, c * 68.34375);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 136.5, c * 75.34375);
  i[G](c * 139, c * 94.34375, c * 139, c * 94.34375, c * 141.5, c * 113.34375);
  i[G](c * 149.5, c * 115.34375, c * 149.5, c * 115.34375, c * 157.5, c * 117.34375);
  i[G](c * 162, c * 97.34375, c * 162, c * 97.34375, c * 166.5, c * 77.34375);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[g]();
  i[Ia](c * 152.5, c * 80.84375);
  i[ra](3.12);
  kc(i, c * -73, c * -20.5, c * 146, c * 41, c * 5);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 83.5, c * 73.34375);
  i[G](c * 93.5, c * 70.34375, c * 105.5, c * 70.34375, c * 124.5, c * 72.34375);
  i[G](c * 132.5, c * 78.34375, c * 162.5, c * 80.34375, c * 176.5, c * 76.34375);
  i[G](c * 194.5, c * 69.34375, c * 192.5, c * 68.34375, c * 199.5, c * 63.34375);
  i[G](c * 204.5, c * 63.34375, c * 204.5, c * 63.34375, c * 209.5, c * 63.34375);
  i[G](c * 153.5, c * 82.34375, c * 157.5, c * 85.34375, c * 209.5, c * 63.34375);
  i[G](c * 194.5, c * 88.34375, c * 162.5, c * 87.34375, c * 149.5, c * 88.34375);
  i[G](c * 129.5, c * 81.34375, c * 103.5, c * 75.34375, c * 83.5, c * 82.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 137.5, c * 65.34375);
  i[G](c * 150.5, c * 76.34375, c * 170.5, c * 71.34375, c * 174.5, c * 65.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 221.5, c * 85.34375);
  i[G](c * 211.5, c * 79.34375, c * 191.5, c * 88.34375, c * 181.5, c * 96.34375);
  i[G](c * 201.5, c * 96.34375, c * 201.5, c * 96.34375, c * 221.5, c * 96.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 84.5, c * 89.34375);
  i[G](c * 102.5, c * 87.34375, c * 112.5, c * 88.34375, c * 119.5, c * 97.34375);
  i[G](c * 102, c * 98.34375, c * 102, c * 98.34375, c * 84.5, c * 99.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 208.5, c * 104.34375);
  i[G](c * 208.5, c * 110.34375, c * 208.5, c * 110.34375, c * 208.5, c * 116.34375);
  i[G](c * 211.5, c * 110.34375, c * 211.5, c * 110.34375, c * 214.5, c * 104.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 87.5, c * 117.34375);
  i[G](c * 92, c * 118.84375, c * 92, c * 118.84375, c * 96.5, c * 120.34375);
  i[G](c * 93, c * 123.84375, c * 93, c * 123.84375, c * 89.5, c * 127.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 107.5, c * 51.34375);
  i[G](c * 122.5, c * 54.34375, c * 122.5, c * 54.34375, c * 137.5, c * 57.34375);
  i[G](c * 118, c * 57.34375, c * 118, c * 57.34375, c * 98.5, c * 57.34375);
  i[G](c * 94.5, c * 54.84375, c * 94.5, c * 54.84375, c * 90.5, c * 52.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 170.5, c * 52.34375);
  i[G](c * 179.5, c * 51.84375, c * 179.5, c * 51.84375, c * 188.5, c * 51.34375);
  i[G](c * 187.5, c * 53.84375, c * 187.5, c * 53.84375, c * 186.5, c * 56.34375);
  i[G](c * 177, c * 56.34375, c * 177, c * 56.34375, c * 167.5, c * 56.34375);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 80.5, c * 69.34375);
  i[G](c * 86.5, c * 70.34375, c * 86.5, c * 70.34375, c * 92.5, c * 71.34375);
  i[G](c * 86, c * 73.34375, c * 86, c * 73.34375, c * 79.5, c * 75.34375);
  i[X]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 222.5, c * 75.34375);
  i[G](c * 214.5, c * 76.34375, c * 214.5, c * 76.34375, c * 206.5, c * 77.34375);
  i[G](c * 216.5, c * 79.34375, c * 216.5, c * 79.34375, c * 226.5, c * 81.34375);
  i[X]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 116.5, c * 100.34375);
  i[G](c * 128, c * 97.34375, c * 128, c * 97.34375, c * 139.5, c * 94.34375);
  i[G](c * 140, c * 96.84375, c * 140, c * 96.84375, c * 140.5, c * 99.34375);
  i[X]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 112.5, c * 48.34375);
  i[G](c * 115.5, c * 50.84375, c * 115.5, c * 50.84375, c * 118.5, c * 53.34375);
  i[G](c * 131, c * 50.84375, c * 131, c * 50.84375, c * 143.5, c * 48.34375);
  i[X]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 216.5, c * 109.34375);
  i[G](c * 213, c * 114.84375, c * 213, c * 114.84375, c * 209.5, c * 120.34375);
  i[G](c * 212, c * 118.84375, c * 212, c * 118.84375, c * 214.5, c * 117.34375);
  i[X]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 86.5, c * 133.34375);
  i[G](c * 89, c * 127.34375, c * 89, c * 127.34375, c * 91.5, c * 121.34375);
  i[G](c * 92.5, c * 127.34375, c * 92.5, c * 127.34375, c * 93.5, c * 133.34375);
  i[X]();
  jc(i, e[2]);
  return f;
}
function Te(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 175;
  f.height = c * 106;
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 28, c * 67);
  i[G](c * 55, c * 80, c * 126, c * 74, c * 144, c * 68);
  i[G](c * 144.5, c * 75, c * 144.5, c * 75, c * 145, c * 82);
  i[G](c * 114, c * 94, c * 47, c * 91, c * 28, c * 82);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 145, c * 75);
  i[G](c * 143, c * 51, c * 133, c * 29, c * 100, c * 27);
  i[G](c * 52, c * 21, c * 37, c * 37, c * 31, c * 54);
  i[G](c * 23, c * 78, c * 28, c * 77, c * 36, c * 79);
  i[G](c * 80, c * 87, c * 120, c * 81, c * 145, c * 76);
  i[X]();
  jc(i, e[1]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 38, c * 46);
  i[G](c * 52, c * 37, c * 69, c * 36, c * 85, c * 36);
  i[G](c * 118, c * 38, c * 129, c * 42, c * 137, c * 48);
  i[G](c * 135, c * 45, c * 135, c * 45, c * 133, c * 42);
  i[G](c * 124, c * 32, c * 116, c * 28, c * 88, c * 25);
  i[G](c * 47, c * 28, c * 40, c * 32, c * 36, c * 44);
  i[X]();
  jc(i, e[5]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 145, c * 75);
  i[G](c * 143, c * 51, c * 133, c * 29, c * 100, c * 27);
  i[G](c * 52, c * 21, c * 37, c * 37, c * 31, c * 54);
  i[G](c * 23, c * 78, c * 28, c * 77, c * 36, c * 79);
  i[G](c * 80, c * 87, c * 120, c * 81, c * 145, c * 76);
  i[X]();
  jc(i, undefined, e[2], c * 4);
  i[Ia](0, c * -3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 28, c * 67);
  i[G](c * 55, c * 80, c * 126, c * 74, c * 144, c * 68);
  i[G](c * 144.5, c * 75, c * 144.5, c * 75, c * 145, c * 82);
  i[G](c * 114, c * 94, c * 47, c * 91, c * 28, c * 82);
  i[X]();
  jc(i, e[10], e[10], c * 4);
  i[Ia](0, c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 131, c * 43);
  i[G](c * 145, c * 40, c * 148, c * 32, c * 147, c * 17);
  i[G](c * 166, c * 39, c * 155, c * 62, c * 140, c * 67);
  i[G](c * 128, c * 65, c * 128, c * 52, c * 131, c * 45);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 41, c * 43);
  i[G](c * 30, c * 42, c * 24, c * 33, c * 25, c * 17);
  i[G](c * 7, c * 34, c * 17, c * 63, c * 33, c * 66);
  i[G](c * 45, c * 59, c * 44, c * 53, c * 42, c * 44);
  i[X]();
  jc(i, e[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 24, c * 19);
  i[G](c * 24, c * 35, c * 35, c * 42, c * 42, c * 44);
  i[G](c * 43, c * 51, c * 43, c * 48, c * 43, c * 56);
  i[G](c * 25, c * 47, c * 17, c * 36, c * 23, c * 20);
  i[X]();
  jc(i, e[6]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 148, c * 18);
  i[G](c * 159, c * 44, c * 139, c * 52, c * 130, c * 55);
  i[G](c * 129, c * 48, c * 129, c * 46, c * 131, c * 43);
  i[G](c * 144, c * 37, c * 148, c * 35, c * 147, c * 18);
  i[X]();
  jc(i, e[6]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 131, c * 43);
  i[G](c * 145, c * 40, c * 148, c * 32, c * 147, c * 17);
  i[G](c * 166, c * 39, c * 155, c * 62, c * 140, c * 67);
  i[G](c * 128, c * 65, c * 128, c * 52, c * 131, c * 45);
  i[X]();
  jc(i, undefined, e[4], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 41, c * 43);
  i[G](c * 30, c * 42, c * 24, c * 33, c * 25, c * 17);
  i[G](c * 7, c * 34, c * 17, c * 63, c * 33, c * 66);
  i[G](c * 45, c * 59, c * 44, c * 53, c * 42, c * 44);
  i[X]();
  jc(i, undefined, e[4], c * 4);
  i[g]();
  i[Ia](c * 87, c * 34.5);
  i[ra](0);
  kc(i, c * -8, c * -10.5, c * 16, c * 21, c * 10);
  i[Qa]();
  jc(i, e[7], e[2], c * 4);
  i[g]();
  i[Ia](c * 87, c * 57);
  i[ra](0);
  kc(i, c * -8, c * -23, c * 16, c * 46, c * 10);
  i[Qa]();
  jc(i, e[8], e[2], c * 4);
  lc(i, c * 87, c * 39, c * 4.123105625617661);
  jc(i, e[9], e[2], c * 4);
  lc(i, c * 87, c * 60, c * 4.242640687119285);
  jc(i, e[9], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 28, c * 67);
  i[G](c * 55, c * 80, c * 126, c * 74, c * 144, c * 68);
  i[G](c * 144.5, c * 75, c * 144.5, c * 75, c * 145, c * 82);
  i[G](c * 114, c * 94, c * 47, c * 91, c * 28, c * 82);
  i[X]();
  jc(i, e[8], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 27, c * 69);
  i[G](c * 13, c * 77, c * 16, c * 74, c * 27, c * 80);
  i[X]();
  jc(i, e[9], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 145, c * 70);
  i[G](c * 149.5, c * 72, c * 149.5, c * 72, c * 154, c * 74);
  i[G](c * 150, c * 77, c * 150, c * 77, c * 146, c * 80);
  i[X]();
  jc(i, e[9], e[2], c * 4);
  lc(i, c * 50, c * 80, c * 5);
  jc(i, e[9], e[2], c * 4);
  lc(i, c * 86.01141357421875, c * 81.76705932617188, c * 5);
  jc(i, e[9], e[2], c * 4);
  lc(i, c * 119.01141357421875, c * 80.13069152832031, c * 5);
  jc(i, e[9], e[2], c * 4);
  return f;
}
function Ue(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 142;
  f.height = c * 118;
  i[g]();
  i[Ia](c * 70.16665649414062, c * 38.20831298828125);
  kc(i, c * -58.5, c * -27.5, c * 117, c * 55, c * 20);
  i[Qa]();
  jc(i, e[0], e[1], c * 4);
  i[g]();
  i[Ia](c * 70, c * 42.70831298828125);
  kc(i, c * -61, c * -20, c * 122, c * 40, c * 20);
  i[Qa]();
  jc(i, e[2], e[1], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 123, c * 70.375);
  i[G](c * 115, c * 99.375, c * 119, c * 85.375, c * 115, c * 100.375);
  i[G](c * 112, c * 116.375, c * 117, c * 109.375, c * 131, c * 100.375);
  i[G](c * 131, c * 83.375, c * 131, c * 83.375, c * 131, c * 66.375);
  i[X]();
  jc(i, e[2], e[1], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 11, c * 68.375);
  i[G](c * 11.166656494140625, c * 84.375, c * 9, c * 99.375, c * 10, c * 100.375);
  i[G](c * 35, c * 113.375, c * 27, c * 110.375, c * 25, c * 95.375);
  i[G](c * 16, c * 68.375, c * 17, c * 69.375, c * 17, c * 68.375);
  i[X]();
  jc(i, e[2], e[1], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 46, c * 32.375);
  i[G](c * 43, c * 8.375, c * 45, c * 7.375, c * 56, c * 6.375);
  i[G](c * 105, c * 4.375, c * 102, c * 6.375, c * 97, c * 32.375);
  i[G](c * 138, c * 43.375, c * 133, c * 45.375, c * 133, c * 58.375);
  i[G](c * 133, c * 85.375, c * 125, c * 74.375, c * 111, c * 70.375);
  i[G](c * 70, c * 69.875, c * 29, c * 69.375, c * 29, c * 69.375);
  i[G](c * 7, c * 84.375, c * 7, c * 70.375, c * 7, c * 59.375);
  i[G](c * 6, c * 28.375, c * 32, c * 39.375, c * 44, c * 32.375);
  i[X]();
  jc(i, e[2], e[1], c * 4);
  lc(i, c * 71, c * 44.375, c * 16.55294535724685);
  jc(i, e[2], e[1], c * 4);
  lc(i, c * 71, c * 43.70831298828125, c * 8.94427190999916);
  jc(i, e[2], e[1], c * 4);
  return f;
}
function Ve(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 142;
  f.height = c * 118;
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 111, c * 27.3671875);
  i[G](c * 128, c * 9.3671875, c * 125, c * 13.3671875, c * 126, c * 21.3671875);
  i[G](c * 126, c * 33.3671875, c * 119, c * 43.3671875, c * 118, c * 42.3671875);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 31, c * 23.3671875);
  i[G](c * 17, c * 15.3671875, c * 16, c * 14.3671875, c * 17, c * 20.3671875);
  i[G](c * 22, c * 33.3671875, c * 20, c * 27.3671875, c * 24, c * 34.3671875);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[g]();
  i[Ia](c * 70.5, c * 34.8671875);
  i[ra](0);
  kc(i, c * -49.5, c * -21.5, c * 99, c * 43, c * 15);
  i[Qa]();
  jc(i, e[0], e[1], c * 4);
  i[g]();
  i[Ia](c * 71, c * 40.8671875);
  i[ra](0);
  kc(i, c * -49, c * -12.5, c * 98, c * 25, c * 15);
  i[Qa]();
  jc(i, e[2], e[1], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 19.800003051757812, c * 75.95625305175781);
  i[G](c * 19.300003051757812, c * 82.95625305175781, c * 19.300003051757812, c * 82.95625305175781, c * 18.800003051757812, c * 89.95625305175781);
  i[G](c * 38.80000305175781, c * 115.95625305175781, c * 37.80000305175781, c * 104.95625305175781, c * 31.800003051757812, c * 91.95625305175781);
  i[X]();
  jc(i, e[2], e[1], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 119.80000305175781, c * 75.95625305175781);
  i[G](c * 120.80000305175781, c * 82.95625305175781, c * 120.80000305175781, c * 82.95625305175781, c * 121.80000305175781, c * 89.95625305175781);
  i[G](c * 101.80000305175781, c * 111.95625305175781, c * 99.80000305175781, c * 111.95625305175781, c * 112.80000305175781, c * 81.95625305175781);
  i[X]();
  jc(i, e[2], e[1], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 17.800003051757812, c * 49.15625);
  i[G](c * 17.800003051757812, c * 64.15625, c * 17.800003051757812, c * 64.15625, c * 17.800003051757812, c * 79.15625);
  i[G](c * 23.300003051757812, c * 85.15625, c * 23.300003051757812, c * 85.15625, c * 28.800003051757812, c * 91.15625);
  i[G](c * 36.80000305175781, c * 96.15625, c * 32.80000305175781, c * 91.15625, c * 28.800003051757812, c * 77.15625);
  i[G](c * 33.80000305175781, c * 65.15625, c * 33.80000305175781, c * 65.15625, c * 38.80000305175781, c * 53.15625);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 123.80000305175781, c * 53.95625305175781);
  i[G](c * 121.80000305175781, c * 77.95625305175781, c * 121.80000305175781, c * 74.95625305175781, c * 121.80000305175781, c * 78.95625305175781);
  i[G](c * 115.80000305175781, c * 84.95625305175781, c * 115.80000305175781, c * 84.95625305175781, c * 109.80000305175781, c * 90.95625305175781);
  i[G](c * 102.80000305175781, c * 93.95625305175781, c * 105.80000305175781, c * 86.95625305175781, c * 110.80000305175781, c * 76.95625305175781);
  i[G](c * 107.30000305175781, c * 65.45625305175781, c * 103.80000305175781, c * 53.95625305175781, c * 103.80000305175781, c * 53.95625305175781);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 18, c * 56.3671875);
  i[G](c * 70, c * 56.8671875, c * 70, c * 56.8671875, c * 122, c * 57.3671875);
  i[G](c * 137, c * 20.3671875, c * 137, c * 16.3671875, c * 126, c * 22.3671875);
  i[G](c * 115.5, c * 34.3671875, c * 115.5, c * 34.3671875, c * 105, c * 46.3671875);
  i[G](c * 70.5, c * 46.3671875, c * 70.5, c * 46.3671875, c * 36, c * 46.3671875);
  i[G](c * 4, c * 14.3671875, c * 7, c * 18.3671875, c * 8, c * 27.3671875);
  i[G](c * 12.5, c * 41.8671875, c * 12.5, c * 41.8671875, c * 17, c * 56.3671875);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[g]();
  i[Ia](c * 68.30000305175781, c * 41.45625305175781);
  i[ra](0.76);
  kc(i, c * -20.5, c * -20.5, c * 41, c * 41, c * 10);
  i[Qa]();
  jc(i, undefined, e[5], c * 4);
  i[g]();
  i[Ia](c * 68.80000305175781, c * 44.45625305175781);
  i[ra](0.76);
  kc(i, c * -21, c * -20.5, c * 42, c * 41, c * 10);
  i[Qa]();
  jc(i, e[3], e[4], c * 4);
  i[g]();
  i[Ia](c * 69.80000305175781, c * 44.556243896484375);
  i[ra](0.76);
  kc(i, c * -10, c * -10, c * 20, c * 20, c * 5);
  i[Qa]();
  jc(i, e[6], e[7], c * 4);
  return f;
}
function We(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 145;
  f.height = c * 120;
  i[Y]();
  i[I](0.6, 0.6);
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * 18, c * -8);
  i[K](c * 101, c * 72);
  i[G](c * 144, c * 69, c * 149, c * 58, c * 162, c * 49);
  i[G](c * 174, c * 31, c * 173, c * 38, c * 172, c * 45);
  i[G](c * 168, c * 73, c * 158, c * 75, c * 152, c * 78);
  i[G](c * 106, c * 89, c * 107, c * 91, c * 107, c * 94);
  i[G](c * 107, c * 100, c * 107, c * 107, c * 107, c * 107);
  i[G](c * 99, c * 112, c * 98, c * 110, c * 93, c * 107);
  i[G](c * 94, c * 107, c * 93, c * 107, c * 93, c * 107);
  i[G](c * 93, c * 100, c * 93, c * 100, c * 92, c * 94);
  i[G](c * 92, c * 89, c * 90, c * 90, c * 73, c * 86);
  i[G](c * 45, c * 81, c * 40, c * 77, c * 35, c * 68);
  i[G](c * 23, c * 36, c * 28, c * 34, c * 36, c * 46);
  i[G](c * 45, c * 58, c * 83, c * 72, c * 98, c * 72);
  i[X]();
  jc(i, e[4], e[5], c * 4);
  i[Y]();
  i[I](1.1, 1.1);
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * -9, c * 4);
  i[K](c * 101, c * 72);
  i[G](c * 144, c * 69, c * 149, c * 58, c * 162, c * 49);
  i[G](c * 174, c * 31, c * 173, c * 38, c * 172, c * 45);
  i[G](c * 168, c * 73, c * 158, c * 75, c * 152, c * 78);
  i[G](c * 106, c * 89, c * 107, c * 91, c * 107, c * 94);
  i[G](c * 107, c * 100, c * 107, c * 107, c * 107, c * 107);
  i[G](c * 99, c * 112, c * 98, c * 110, c * 93, c * 107);
  i[G](c * 94, c * 107, c * 93, c * 107, c * 93, c * 107);
  i[G](c * 93, c * 100, c * 93, c * 100, c * 92, c * 94);
  i[G](c * 92, c * 89, c * 90, c * 90, c * 73, c * 86);
  i[G](c * 45, c * 81, c * 40, c * 77, c * 35, c * 68);
  i[G](c * 23, c * 36, c * 28, c * 34, c * 36, c * 46);
  i[G](c * 45, c * 58, c * 83, c * 72, c * 98, c * 72);
  i[X]();
  jc(i, e[4], e[5], c * 4);
  i[I](1.1, 1.1);
  i[Ia](c * -9, c * 4);
  i[g]();
  i[Ia](c * 100, c * 73.06874084472656);
  i[ra](0);
  kc(i, c * -61, c * -38.5, c * 122, c * 40, c * 20);
  i[Qa]();
  jc(i, e[1], e[2], c * 4);
  i[g]();
  i[Ia](c * 100, c * 71.36874389648438);
  i[ra](0);
  kc(i, c * -60.5, c * -18, c * 121, c * 30, c * 20);
  i[Qa]();
  jc(i, e[3], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 144, c * 80);
  i[G](c * 152, c * 100, c * 152, c * 101, c * 153, c * 102);
  i[G](c * 159, c * 100, c * 159, c * 100, c * 160, c * 100);
  i[G](c * 161, c * 84, c * 161, c * 84, c * 162, c * 68);
  i[X]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 57, c * 75);
  i[G](c * 48, c * 101, c * 53, c * 89, c * 48, c * 102);
  i[G](c * 44, c * 100, c * 44, c * 100, c * 39, c * 97);
  i[G](c * 39, c * 83, c * 39, c * 83, c * 39, c * 69);
  i[X]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 101, c * 72);
  i[G](c * 144, c * 69, c * 149, c * 58, c * 162, c * 49);
  i[G](c * 174, c * 31, c * 173, c * 38, c * 172, c * 45);
  i[G](c * 168, c * 73, c * 158, c * 75, c * 152, c * 78);
  i[G](c * 106, c * 89, c * 107, c * 91, c * 107, c * 94);
  i[G](c * 107, c * 100, c * 107, c * 107, c * 107, c * 107);
  i[G](c * 99, c * 112, c * 98, c * 110, c * 93, c * 107);
  i[G](c * 94, c * 107, c * 93, c * 107, c * 93, c * 107);
  i[G](c * 93, c * 100, c * 93, c * 100, c * 92, c * 94);
  i[G](c * 92, c * 89, c * 90, c * 90, c * 73, c * 86);
  i[G](c * 45, c * 81, c * 40, c * 77, c * 35, c * 68);
  i[G](c * 23, c * 36, c * 28, c * 34, c * 36, c * 46);
  i[G](c * 45, c * 58, c * 83, c * 72, c * 98, c * 72);
  i[X]();
  jc(i, e[4], e[5], c * 4);
  i[Ia](0, 0);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 115.5, c * 116.07290649414062);
  i[G](c * 159.5, c * 99.07290649414062, c * 159.5, c * 98.07290649414062, c * 159.5, c * 98.07290649414062);
  i[G](c * 155.5, c * 116.07290649414062, c * 159.5, c * 116.07290649414062, c * 159.5, c * 118.07290649414062);
  i[G](c * 147.5, c * 130.07290649414062, c * 136.5, c * 132.07290649414062, c * 115.5, c * 138.07290649414062);
  i[X]();
  jc(i, e[3], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 39.5, c * 96.07290649414062);
  i[G](c * 85.5, c * 114.07290649414062, c * 62.5, c * 105.57290649414062, c * 85.5, c * 115.07290649414062);
  i[G](c * 85.5, c * 125.57290649414062, c * 85.5, c * 125.57290649414062, c * 85.5, c * 136.07290649414062);
  i[G](c * 51.5, c * 129.07290649414062, c * 51.5, c * 125.07290649414062, c * 41.5, c * 118.07290649414062);
  i[G](c * 44.5, c * 106.07290649414062, c * 42.5, c * 103.07290649414062, c * 40.5, c * 96.07290649414062);
  i[X]();
  jc(i, e[3], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 86, c * 80);
  i[G](c * 97, c * 88, c * 106, c * 84, c * 112, c * 80);
  i[G](c * 112, c * 62, c * 106, c * 59, c * 99, c * 54);
  i[G](c * 86, c * 62, c * 86, c * 73, c * 86, c * 80);
  i[X]();
  jc(i, e[3], e[2], c * 4);
  i[I](0.5, 0.5);
  i[Ia](c * 100, c * 71);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 86, c * 80);
  i[G](c * 97, c * 88, c * 106, c * 84, c * 112, c * 80);
  i[G](c * 112, c * 62, c * 106, c * 59, c * 99, c * 54);
  i[G](c * 86, c * 62, c * 86, c * 73, c * 86, c * 80);
  i[X]();
  jc(i, e[6], e[2], c * 4);
  return f;
}
function Xe(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  i[g]();
  i[Ia](c * 204, c * 195.0833282470703);
  i[ra](10.16);
  kc(i, c * -97.5, c * -134.5, c * 195, c * 269, c * 10);
  i[Qa]();
  jc(i, e[0], e[1], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 58.5, c * 226.5833282470703);
  i[G](c * 120.5, c * 281.5833282470703, c * 120.5, c * 281.5833282470703, c * 182.5, c * 336.5833282470703);
  i[G](c * 263, c * 248.5833282470703, c * 263, c * 248.5833282470703, c * 343.5, c * 160.5833282470703);
  i[G](c * 280.5, c * 104.58332824707031, c * 280.5, c * 104.58332824707031, c * 217.5, c * 48.58332824707031);
  i[X]();
  jc(i, e[2], e[3], c * 4);
  i[g]();
  i[Ia](c * 197, c * 169.0833282470703);
  i[ra](10.16);
  kc(i, c * -93.5, c * -126.5, c * 187, c * 253, c * 10);
  i[Qa]();
  jc(i, e[4], e[1], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 226.5, c * 24.583328247070312);
  i[G](c * 58.5, c * 207.5833282470703, c * 143, c * 116.58332824707031, c * 59.5, c * 208.5833282470703);
  i[X]();
  jc(i, undefined, e[1], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 46.133331298828125, c * 202.64999389648438);
  i[G](c * 46.133331298828125, c * 215.64999389648438, c * 46.133331298828125, c * 215.64999389648438, c * 46.133331298828125, c * 228.64999389648438);
  i[X]();
  jc(i, e[4], e[1], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 55.133331298828125, c * 211.64999389648438);
  i[G](c * 55.133331298828125, c * 225.14999389648438, c * 55.133331298828125, c * 225.14999389648438, c * 55.133331298828125, c * 238.64999389648438);
  i[G](c * 50.133331298828125, c * 235.64999389648438, c * 50.133331298828125, c * 235.64999389648438, c * 45.133331298828125, c * 232.64999389648438);
  i[G](c * 45.133331298828125, c * 216.64999389648438, c * 45.133331298828125, c * 216.64999389648438, c * 45.133331298828125, c * 200.64999389648438);
  i[X]();
  jc(i, e[4], e[1], c * 8);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 46.133331298828125, c * 198.39999389648438);
  i[G](c * 46.133331298828125, c * 199.89999389648438, c * 46.133331298828125, c * 199.89999389648438, c * 46.133331298828125, c * 201.39999389648438);
  i[X]();
  jc(i, e[4], e[1], c * 8);
  i[g]();
  i[Ia](c * 249.63333129882812, c * 120.89999389648438);
  i[ra](7.04);
  kc(i, c * -58.5, c * -32, c * 117, c * 64, c * 10);
  i[Qa]();
  jc(i, e[5]);
  return f;
}
function Ye(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 170;
  f.height = c * 170;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * -10, c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72.5, c * 4.109375);
  g[G](c * 117, c * 9.609375, c * 117, c * 9.609375, c * 161.5, c * 15.109375);
  g[G](c * 134.5, c * 106.109375, c * 110.5, c * 130.109375, c * 63.5, c * 145.109375);
  g[G](c * 33.5, c * 120.609375, c * 33.5, c * 120.609375, c * 3.5, c * 96.109375);
  g[G](c * 82.5, c * 75.109375, c * 69.5, c * 29.109375, c * 71.5, c * 6.109375);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * 10, c * -10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72.5, c * 4.109375);
  g[G](c * 117, c * 9.609375, c * 117, c * 9.609375, c * 161.5, c * 15.109375);
  g[G](c * 134.5, c * 106.109375, c * 110.5, c * 130.109375, c * 63.5, c * 145.109375);
  g[G](c * 33.5, c * 120.609375, c * 33.5, c * 120.609375, c * 3.5, c * 96.109375);
  g[G](c * 82.5, c * 75.109375, c * 69.5, c * 29.109375, c * 71.5, c * 6.109375);
  g[X]();
  jc(g, e[1], e[2], c * 10);
  return f;
}
function Ze(c, d, e) {
  var f = (i = document[p]("canvas"))[T]("2d");
  i.width = c * 47;
  i.height = c * 60;
  var i;
  f = (i = document[p]("canvas"))[T]("2d");
  i.width = c * 47;
  i.height = c * 60;
  lc(f, c * 23.5, c * 20.734375, c * 15.132745950421556);
  jc(f, undefined, e[2], c * 4);
  lc(f, c * 23.5, c * 20.734375, c * 18.601075237738275);
  jc(f, undefined, e[1], c * 4);
  lc(f, c * 23.5, c * 20.734375, c * 11.40175425099138);
  jc(f, undefined, e[1], c * 4);
  f[g]();
  f[Ia](c * 23, c * 38.734375);
  f[ra](0);
  kc(f, c * -21.5, c * -19, c * 43, c * 38, c * 10);
  f[Qa]();
  jc(f, e[2], e[1], c * 4);
  f[g]();
  f[Ia](c * 23.5, c * 43.734375);
  f[ra](0.5235987755982988);
  nc(f, 3, c * 8.06225774829855, c * 0);
  f[Qa]();
  jc(f, e[3]);
  lc(f, c * 23.5, c * 35.734375, c * 7.0710678118654755);
  jc(f, e[3]);
  return i;
}
function $e(c, d, e, f) {
  var i = document[p]("canvas");
  var k = i[T]("2d");
  i.width = c * 501;
  i.height = c * 564;
  k[I](0.5, 0.5);
  k[Ia](c * 240, c * 255);
  k[ra](f);
  k[ua] = d ? 0.5 : 0.2;
  lc(k, c * 174, c * 87.984375, c * 20.8806130178211);
  jc(k, e[0], e[0], c * 8);
  lc(k, c * 174, c * 87.984375, c * 12.165525060596439);
  jc(k, e[0], e[0], c * 8);
  lc(k, c * 174, c * 87.484375, c * 6);
  jc(k, e[0]);
  lc(k, c * 30, c * 87.984375, c * 20.8806130178211);
  jc(k, e[0], e[0], c * 4);
  lc(k, c * 30, c * 87.984375, c * 12.165525060596439);
  jc(k, e[0], e[0], c * 4);
  lc(k, c * 30, c * 87.484375, c * 6);
  jc(k, e[0]);
  lc(k, c * 100, c * 30, c * 20.8806130178211);
  jc(k, e[0], e[0], c * 4);
  lc(k, c * 100, c * 30, c * 12.165525060596439);
  jc(k, e[0], e[0], c * 4);
  lc(k, c * 100, c * 30, c * 6);
  jc(k, e[0]);
  lc(k, c * 100, c * 130, c * 20.8806130178211);
  jc(k, e[0], e[0], c * 4);
  lc(k, c * 100, c * 130, c * 12.165525060596439);
  jc(k, e[0], e[0], c * 4);
  lc(k, c * 100, c * 130, c * 6);
  jc(k, e[0]);
  k[g]();
  k[Ia](c * 102, c * 81.984375);
  k[ra](0);
  kc(k, c * -74, c * -57, c * 148, c * 114, c * 23);
  k[Qa]();
  jc(k, e[0], e[0], c * 4);
  k[g]();
  k[Ia](c * 101, c * 64.984375);
  k[ra](0);
  kc(k, c * -33, c * -10, c * 66, c * 20, c * 15);
  k[Qa]();
  jc(k, e[0], e[0], c * 4);
  k[g]();
  k[Ia](c * 102, c * 63.484375);
  k[ra](0);
  kc(k, c * -9, c * -27.5, c * 18, c * 55, c * 15);
  k[Qa]();
  k[Ia](5, -5);
  k[ua] = 1;
  lc(k, c * 174, c * 87.984375, c * 20.8806130178211);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 174, c * 87.984375, c * 12.165525060596439);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 174, c * 87.484375, c * 6);
  jc(k, e[2]);
  lc(k, c * 30, c * 87.984375, c * 20.8806130178211);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 30, c * 87.984375, c * 12.165525060596439);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 30, c * 87.484375, c * 6);
  jc(k, e[2]);
  lc(k, c * 102, c * 30, c * 20.8806130178211);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 102, c * 30, c * 12.165525060596439);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 102, c * 30, c * 6);
  jc(k, e[1]);
  lc(k, c * 102, c * 130, c * 20.8806130178211);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 102, c * 130, c * 12.165525060596439);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 102, c * 130, c * 6);
  jc(k, e[1]);
  k[g]();
  k[Ia](c * 102, c * 81.984375);
  kc(k, c * -74, c * -57, c * 148, c * 114, c * 23);
  k[Qa]();
  jc(k, e[1], e[3], c * 8);
  k[g]();
  k[Ia](c * 101, c * 64.984375);
  kc(k, c * -33, c * -10, c * 66, c * 20, c * 15);
  k[Qa]();
  jc(k, e[2], e[1], c * 8);
  k[g]();
  k[Ia](c * 102, c * 63.484375);
  kc(k, c * -9, c * -27.5, c * 18, c * 55, c * 15);
  k[Qa]();
  jc(k, e[2], e[1], c * 8);
  lc(k, c * 135, c * 107.36605834960938, c * 21.095023109728988);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 135, c * 107.36605834960938, c * 13);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 135, c * 107.36605834960938, c * 6.082762530298219);
  jc(k, e[2]);
  lc(k, c * 70, c * 107.36605834960938, c * 21.095023109728988);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 70, c * 107.36605834960938, c * 13);
  jc(k, e[1], e[3], c * 8);
  lc(k, c * 70, c * 107.36605834960938, c * 6.082762530298219);
  jc(k, e[2]);
  return i;
}
function _e(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 95;
  f.height = c * 85;
  if (e == 0) {
    i[Ia](c * 7, c * 15);
    i[I](0.9, 0.9);
    i[g]();
    kc(i, c * 0, c * 5, c * 90, c * 60, 10);
    jc(i, d[0]);
    i[Sa] = "destination-out";
    lc(i, c * 25, c * 40, c * 10);
    i[xa]();
    lc(i, c * 65, c * 40, c * 10);
    i[xa]();
    i[Qa]();
    i[g]();
    kc(i, 0, 0, c * 90, c * 60, c * 10);
    jc(i, d[1]);
    i[Sa] = "destination-out";
    lc(i, c * 25, c * 40, c * 10);
    i[xa]();
    lc(i, c * 65, c * 40, c * 10);
    i[xa]();
    i[Qa]();
  } else if (e == 1) {
    i[I](0.8, 0.8);
    i[Ia](c * 15, c * 33);
    i[g]();
    i[I](0.56, 0.56);
    i[Ia](c * -39, c * -60);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 32.5, c * 50.642852783203125);
    i[G](c * 83, c * 69.64285278320312, c * 83, c * 69.64285278320312, c * 133.5, c * 88.64285278320312);
    i[G](c * 93, c * 92.64285278320312, c * 93, c * 92.64285278320312, c * 52.5, c * 96.64285278320312);
    i[G](c * 30.5, c * 100.64285278320312, c * 36.5, c * 94.64285278320312, c * 32.5, c * 84.64285278320312);
    i[G](c * 21.5, c * 45.642852783203125, c * 24.5, c * 48.642852783203125, c * 31.5, c * 50.642852783203125);
    i[X]();
    jc(i, d[1]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 116.5, c * 85.64285278320312);
    i[G](c * 160.5, c * 67.14285278320312, c * 160.5, c * 67.14285278320312, c * 204.5, c * 48.642852783203125);
    i[G](c * 220.5, c * 42.642852783203125, c * 208.5, c * 68.64285278320312, c * 205.5, c * 85.64285278320312);
    i[G](c * 202.5, c * 98.64285278320312, c * 199.5, c * 98.64285278320312, c * 188.5, c * 100.64285278320312);
    i[X]();
    jc(i, d[1]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 166.5, c * 68.64285278320312);
    i[G](c * 147.5, c * 72.64285278320312, c * 145.5, c * 73.64285278320312, c * 142.5, c * 62.642852783203125);
    i[G](c * 121.5, c * 12.642852783203125, c * 122.5, c * 5.642852783203125, c * 117.5, c * 15.642852783203125);
    i[G](c * 105.5, c * 40.642852783203125, c * 105.5, c * 40.642852783203125, c * 93.5, c * 65.64285278320312);
    i[G](c * 89.5, c * 74.64285278320312, c * 84.5, c * 72.64285278320312, c * 73.5, c * 74.64285278320312);
    i[G](c * 98, c * 87.64285278320312, c * 98, c * 87.64285278320312, c * 122.5, c * 100.64285278320312);
    i[X]();
    jc(i, d[1]);
    i[Qa]();
    i[g]();
    kc(i, 0, c * 15, c * 90, c * 50, c * 10);
    jc(i, d[0]);
    kc(i, 0, c * 10, c * 90, c * 50, c * 10);
    jc(i, d[1]);
    i[Sa] = "destination-out";
    lc(i, c * 25, c * 40, c * 10);
    i[xa]();
    lc(i, c * 65, c * 40, c * 10);
    i[xa]();
    i[Qa]();
  }
  return f;
}
function af(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 120;
  f.height = c * 100;
  kc(g, c * 10, c * 10, c * 95, c * 80, c * 10);
  jc(g, d[2]);
  kc(g, c * 10, c * 5, c * 95, c * 80, c * 10);
  jc(g, d[3], d[4], c * 4);
  if (e == 0) {
    var i = _e(c * 0.75, d, 0);
    g[r](i, c * 22, c * 18);
  } else if (e == 1) {
    i = _e(c * 0.75, d, 1);
    g[r](i, c * 22, c * 18);
  }
  return f;
}
function bf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 185;
  f.height = c * 164;
  g[Ia](0, 0);
  var i = function (c, d, e) {
    var f = document[p]("canvas");
    var g = f[T]("2d");
    f.width = c * 201;
    f.height = c * 164;
    g[Ia](0, c * 5);
    g[ua] = d ? 0.5 : 1;
    lc(g, c * 100.5, c * 82, c * 74.92746655359852);
    jc(g, e[0], e[0], c * 4);
    lc(g, c * 100.5, c * 82, c * 65.9417374971317);
    jc(g, e[0], e[0], c * 4);
    g[Ia](0, -5);
    g[ua] = 1;
    lc(g, c * 100.5, c * 82, c * 74.92746655359852);
    jc(g, e[1], e[3], c * 4);
    lc(g, c * 100.5, c * 82, c * 65.9417374971317);
    jc(g, e[1], e[2], c * 4);
    lc(g, c * 100.5, c * 82, c * 35.9417374971317);
    jc(g, e[1], e[2], c * 20);
    lc(g, c * 100.5, c * 82, c * 15.9417374971317);
    jc(g, e[1], e[2], c * 6);
    return f;
  }(c, d, e);
  g[r](i, c * -10, c * 0);
  i = $e(c, d, e, 0);
  g[r](i, c * -83, c * -40);
  i = $e(c, d, e, Math[D] / 1.4);
  g[r](i, c * -15, c * -88);
  i = $e(c, d, e, Math[D] / -1.4);
  g[r](i, c * 15, c * -8);
  return f;
}
function cf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 450;
  f.height = c * 790;
  i[Ia](c * 5, c * 5);
  i[ua] = 0;
  lc(i, c * 178.5, c * 172.828125, c * 150);
  jc(i, undefined, e[0], c * 65);
  lc(i, c * 178.5, c * 172.828125, c * 150);
  jc(i, undefined, e[0], c * 55);
  i[X]();
  i[g]();
  i[Ia](c * 177, c * 512.328125);
  kc(i, c * -25, c * -202.5, c * 65, c * 405, c * 25);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 136, c * 581.828125);
  kc(i, c * -39, c * -23, c * 78, c * 46, c * 25);
  i[Qa]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 135.5, c * 663.828125);
  kc(i, c * -39.5, c * -22, c * 79, c * 44, c * 25);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 114, c * 594.828125);
  i[G](c * 175, c * 596.828125, c * 163, c * 596.828125, c * 172, c * 594.828125);
  i[G](c * 171.5, c * 633.828125, c * 171.5, c * 633.828125, c * 171, c * 672.828125);
  i[G](c * 110, c * 673.828125, c * 140.5, c * 673.328125, c * 110, c * 673.828125);
  i[G](c * 110.5, c * 661.828125, c * 110.5, c * 661.828125, c * 111, c * 649.828125);
  i[G](c * 157, c * 633.828125, c * 134, c * 607.828125, c * 114, c * 594.828125);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](0, c * 5);
  i[K](c * 140, c * 294.828125);
  i[G](c * 212, c * 295.828125, c * 176.5, c * 295.328125, c * 213, c * 295.828125);
  i[G](c * 201.5, c * 325.328125, c * 201.5, c * 325.328125, c * 190, c * 354.828125);
  i[G](c * 175.5, c * 355.828125, c * 175.5, c * 355.828125, c * 161, c * 356.828125);
  i[G](c * 154.5, c * 328.828125, c * 154.5, c * 328.828125, c * 148, c * 300.828125);
  i[X]();
  jc(i, e[0]);
  i[Ia](3, c * -5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 159, c * 679.828125);
  i[G](c * 180, c * 665.828125, c * 155, c * 675.828125, c * 151, c * 671.828125);
  i[G](c * 154.5, c * 685.328125, c * 154.5, c * 685.328125, c * 158, c * 698.828125);
  i[G](c * 171, c * 699.828125, c * 171, c * 699.828125, c * 184, c * 700.828125);
  i[X]();
  jc(i, e[0]);
  i[g]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 157, c * 548.828125);
  i[G](c * 157, c * 561.828125, c * 157, c * 561.828125, c * 157, c * 574.828125);
  i[G](c * 132.5, c * 580.828125, c * 132.5, c * 580.828125, c * 108, c * 586.828125);
  i[G](c * 112, c * 599.828125, c * 111, c * 593.828125, c * 112, c * 599.828125);
  i[G](c * 159, c * 603.828125, c * 126.5, c * 601.328125, c * 141, c * 602.828125);
  i[G](c * 145, c * 641.828125, c * 143.5, c * 623.828125, c * 146, c * 644.828125);
  i[G](c * 129.5, c * 645.328125, c * 129.5, c * 645.328125, c * 113, c * 645.828125);
  i[G](c * 107.5, c * 652.828125, c * 107.5, c * 652.828125, c * 102, c * 659.828125);
  i[G](c * 104, c * 669.328125, c * 104, c * 669.328125, c * 106, c * 678.828125);
  i[G](c * 145, c * 679.328125, c * 145, c * 679.328125, c * 184, c * 679.828125);
  i[G](c * 185, c * 615.828125, c * 185, c * 615.828125, c * 186, c * 551.828125);
  i[G](c * 172.5, c * 551.328125, c * 172.5, c * 551.328125, c * 159, c * 550.828125);
  i[X]();
  jc(i, e[0], e[0], c * 7);
  i[Qa]();
  i[ua] = 1;
  i[Ia](c * 15, c * 35);
  lc(i, c * 178.5, c * 172.828125, c * 150);
  jc(i, undefined, e[2], c * 95);
  lc(i, c * 178.5, c * 172.828125, c * 150);
  jc(i, undefined, e[1], c * 55);
  i[X]();
  i[g]();
  i[Ia](c * 177, c * 512.328125);
  kc(i, c * -25, c * -202.5, c * 65, c * 405, c * 25);
  i[Qa]();
  jc(i, e[1], e[2], c * 20);
  i[g]();
  i[Ia](c * 136, c * 581.828125);
  kc(i, c * -39, c * -23, c * 78, c * 46, c * 25);
  i[Qa]();
  jc(i, e[1], e[2], c * 20);
  i[g]();
  i[Ia](c * 135.5, c * 663.828125);
  kc(i, c * -39.5, c * -22, c * 79, c * 44, c * 25);
  i[Qa]();
  jc(i, e[1], e[2], c * 20);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 114, c * 594.828125);
  i[G](c * 175, c * 596.828125, c * 163, c * 596.828125, c * 172, c * 594.828125);
  i[G](c * 171.5, c * 633.828125, c * 171.5, c * 633.828125, c * 171, c * 672.828125);
  i[G](c * 110, c * 673.828125, c * 140.5, c * 673.328125, c * 110, c * 673.828125);
  i[G](c * 110.5, c * 661.828125, c * 110.5, c * 661.828125, c * 111, c * 649.828125);
  i[G](c * 157, c * 633.828125, c * 134, c * 607.828125, c * 114, c * 594.828125);
  i[X]();
  jc(i, e[1]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](0, c * 5);
  i[K](c * 123, c * 294.828125);
  i[G](c * 212, c * 295.828125, c * 190.5, c * 295.328125, c * 250, c * 295.828125);
  i[G](c * 231.5, c * 325.328125, c * 231.5, c * 325.328125, c * 220, c * 354.828125);
  i[G](c * 175.5, c * 355.828125, c * 175.5, c * 355.828125, c * 140, c * 356.828125);
  i[G](c * 123.5, c * 328.828125, c * 123.5, c * 328.828125, c * 123, c * 294.828125);
  i[X]();
  jc(i, e[1]);
  i[Ia](0, c * -5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 159, c * 679.828125);
  i[G](c * 180, c * 665.828125, c * 155, c * 675.828125, c * 151, c * 671.828125);
  i[G](c * 154.5, c * 685.328125, c * 154.5, c * 685.328125, c * 158, c * 698.828125);
  i[G](c * 171, c * 699.828125, c * 171, c * 699.828125, c * 184, c * 700.828125);
  i[X]();
  jc(i, e[1]);
  i[g]();
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 157, c * 548.828125);
  i[G](c * 157, c * 561.828125, c * 157, c * 561.828125, c * 157, c * 574.828125);
  i[G](c * 132.5, c * 580.828125, c * 132.5, c * 580.828125, c * 108, c * 586.828125);
  i[G](c * 112, c * 599.828125, c * 111, c * 593.828125, c * 112, c * 599.828125);
  i[G](c * 159, c * 603.828125, c * 126.5, c * 601.328125, c * 141, c * 602.828125);
  i[G](c * 145, c * 641.828125, c * 143.5, c * 623.828125, c * 146, c * 644.828125);
  i[G](c * 129.5, c * 645.328125, c * 129.5, c * 645.328125, c * 113, c * 645.828125);
  i[G](c * 107.5, c * 652.828125, c * 107.5, c * 652.828125, c * 102, c * 659.828125);
  i[G](c * 104, c * 669.328125, c * 104, c * 669.328125, c * 106, c * 678.828125);
  i[G](c * 145, c * 679.328125, c * 145, c * 679.328125, c * 184, c * 679.828125);
  i[G](c * 185, c * 615.828125, c * 185, c * 615.828125, c * 186, c * 551.828125);
  i[G](c * 172.5, c * 551.328125, c * 172.5, c * 551.328125, c * 159, c * 550.828125);
  i[X]();
  jc(i, e[1], e[1], c * 7);
  i[Qa]();
  return f;
}
function df(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 202;
  f.height = c * 202;
  g[Ia](c * 2, c * 1);
  g[ua] = 0.3;
  lc(g, c * 98, c * 99, c * 100);
  jc(g, e[0]);
  g[ua] = 0.5;
  lc(g, c * 98, c * 99, c * 90);
  jc(g, e[1]);
  return f;
}
function ef(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 89;
  f.height = c * 89;
  i[g]();
  i[Ia](c * 44.5, c * 44.5);
  nc(i, 6, c * 40, c * 10);
  i[Qa]();
  jc(i, e[0], e[1], c * 5);
  i[g]();
  i[Ia](c * 44.5, c * 44.5);
  nc(i, 6, c * 25.11521001172521, c * 10);
  i[Qa]();
  jc(i, e[2], e[3], c * 5);
  return f;
}
function ff(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 88;
  f.height = c * 88;
  i[g]();
  i[Ia](c * 44, c * 44);
  i[ra](0.52);
  nc(i, 6, c * 43, c * 10);
  i[Qa]();
  jc(i, e[0], e[1], c * 3);
  return f;
}
function gf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 202;
  f.height = c * 202;
  i[Ia](c * 2, c * 1);
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 98, c * 41.15177917480469);
  i[ra](0.8);
  kc(i, c * -16, c * -16.5, c * 32, c * 33, c * 7);
  i[Qa]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 98, c * 22.5089111328125);
  i[G](c * 97.5, c * 41.5089111328125, c * 97.5, c * 41.5089111328125, c * 97, c * 60.5089111328125);
  jc(i, e[2]);
  i[g]();
  i[Ia](c * 147.5, c * 69.5089111328125);
  i[ra](0.2);
  kc(i, c * -15.5, c * -16, c * 31, c * 32, c * 7);
  i[Qa]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 163, c * 59.50892639160156);
  i[G](c * 147, c * 69.50892639160156, c * 127, c * 82.50892639160156, c * 131, c * 79.50892639160156);
  jc(i, e[2]);
  i[g]();
  i[Ia](c * 143.5, c * 128.2946319580078);
  i[ra](1.24);
  kc(i, c * -16.5, c * -17.5, c * 33, c * 35, c * 7);
  i[Qa]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 162, c * 135.93748474121094);
  i[G](c * 143.5, c * 128.43748474121094, c * 129, c * 120.93748474121094, c * 125, c * 120.93748474121094);
  jc(i, e[2]);
  i[g]();
  i[Ia](c * 99, c * 156.08035278320312);
  i[ra](0.84);
  kc(i, c * -18, c * -18, c * 36, c * 36, c * 7);
  i[Qa]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 98, c * 136.08035278320312);
  i[G](c * 98, c * 156.08035278320312, c * 98, c * 156.08035278320312, c * 98, c * 176.08035278320312);
  jc(i, e[2]);
  i[g]();
  i[Ia](c * 54, c * 72.22320556640625);
  i[ra](1.32);
  kc(i, c * -18, c * -19, c * 36, c * 38, c * 7);
  i[Qa]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 34, c * 60.79463195800781);
  i[G](c * 53.5, c * 72.29463195800781, c * 69, c * 79.79463195800781, c * 73, c * 83.79463195800781);
  jc(i, e[2]);
  i[g]();
  i[Ia](c * 49, c * 127.29463195800781);
  i[ra](1.76);
  kc(i, c * -20, c * -17.5, c * 40, c * 35, c * 7);
  i[Qa]();
  jc(i, e[2]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 30, c * 141.7946319580078);
  i[G](c * 47, c * 130.2946319580078, c * 64, c * 119.79463195800781, c * 64, c * 118.79463195800781);
  jc(i, e[2]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 98, c * 41.15177917480469);
  i[ra](0.8);
  kc(i, c * -16, c * -16.5, c * 32, c * 33, c * 7);
  i[Qa]();
  jc(i, e[3], e[4], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 98, c * 22.5089111328125);
  i[G](c * 97.5, c * 41.5089111328125, c * 97.5, c * 41.5089111328125, c * 97, c * 60.5089111328125);
  jc(i, undefined, e[4], c * 5);
  i[g]();
  i[Ia](c * 147.5, c * 69.5089111328125);
  i[ra](0.2);
  kc(i, c * -15.5, c * -16, c * 31, c * 32, c * 7);
  i[Qa]();
  jc(i, e[3], e[4], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 163, c * 59.50892639160156);
  i[G](c * 147, c * 69.50892639160156, c * 127, c * 82.50892639160156, c * 131, c * 79.50892639160156);
  jc(i, undefined, e[4], c * 5);
  i[g]();
  i[Ia](c * 143.5, c * 128.2946319580078);
  i[ra](1.24);
  kc(i, c * -16.5, c * -17.5, c * 33, c * 35, c * 7);
  i[Qa]();
  jc(i, e[3], e[4], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 162, c * 135.93748474121094);
  i[G](c * 143.5, c * 128.43748474121094, c * 129, c * 120.93748474121094, c * 125, c * 120.93748474121094);
  jc(i, undefined, e[4], c * 5);
  i[g]();
  i[Ia](c * 99, c * 156.08035278320312);
  i[ra](0.84);
  kc(i, c * -18, c * -18, c * 36, c * 36, c * 7);
  i[Qa]();
  jc(i, e[3], e[4], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 98, c * 136.08035278320312);
  i[G](c * 98, c * 156.08035278320312, c * 98, c * 156.08035278320312, c * 98, c * 176.08035278320312);
  jc(i, undefined, e[4], c * 5);
  i[g]();
  i[Ia](c * 54, c * 72.22320556640625);
  i[ra](1.32);
  kc(i, c * -18, c * -19, c * 36, c * 38, c * 7);
  i[Qa]();
  jc(i, e[3], e[4], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 34, c * 60.79463195800781);
  i[G](c * 53.5, c * 72.29463195800781, c * 69, c * 79.79463195800781, c * 73, c * 83.79463195800781);
  jc(i, undefined, e[4], c * 5);
  i[g]();
  i[Ia](c * 49, c * 127.29463195800781);
  i[ra](1.76);
  kc(i, c * -20, c * -17.5, c * 40, c * 35, c * 7);
  i[Qa]();
  jc(i, e[3], e[4], c * 5);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 30, c * 141.7946319580078);
  i[G](c * 47, c * 130.2946319580078, c * 64, c * 119.79463195800781, c * 64, c * 118.79463195800781);
  jc(i, undefined, e[4], c * 5);
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 98, c * 99);
  nc(i, 6, c * 70.28669492273468, c * 10);
  i[Qa]();
  jc(i, e[2]);
  i[g]();
  i[Ia](c * 98, c * 99);
  nc(i, 6, c * 56.455940020351264, c * 10);
  i[Qa]();
  jc(i, e[2]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 98, c * 99);
  nc(i, 6, c * 70.28669492273468, c * 10);
  i[Qa]();
  jc(i, e[5], e[6], c * 5);
  i[g]();
  i[Ia](c * 98, c * 99);
  nc(i, 6, c * 56.455940020351264, c * 10);
  i[Qa]();
  jc(i, e[7], e[8], c * 7);
  return f;
}
function hf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 161;
  f.height = c * 184;
  g[Ia](0, c * 10);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105.5, c * 34.609375);
  g[G](c * 48.5, c * 7.609375, c * 11.5, c * 58.609375, c * 20.5, c * 97.609375);
  g[G](c * 44.5, c * 161.609375, c * 70.5, c * 171.609375, c * 88.5, c * 156.609375);
  g[G](c * 120.5, c * 129.609375, c * 123.5, c * 105.609375, c * 128.5, c * 83.609375);
  g[G](c * 137.5, c * 79.609375, c * 141.5, c * 79.609375, c * 146.5, c * 81.609375);
  g[G](c * 153.5, c * 70.609375, c * 151.5, c * 65.609375, c * 148.5, c * 61.609375);
  g[G](c * 134.5, c * 60.609375, c * 131.5, c * 63.609375, c * 127.5, c * 66.609375);
  g[G](c * 127.5, c * 55.609375, c * 125.5, c * 54.609375, c * 120.5, c * 51.609375);
  g[G](c * 128.5, c * 42.609375, c * 136.5, c * 38.609375, c * 147.5, c * 39.609375);
  g[G](c * 152.5, c * 23.609375, c * 147.5, c * 21.609375, c * 140.5, c * 17.609375);
  g[G](c * 120.5, c * 17.609375, c * 114.5, c * 27.609375, c * 106.5, c * 35.609375);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 45.5, c * 144.609375);
  g[G](c * 35.5, c * 155.609375, c * 37, c * 152.109375, c * 28.5, c * 159.609375);
  g[G](c * 16.5, c * 154.609375, c * 16.5, c * 151.609375, c * 17.5, c * 141.609375);
  g[G](c * 25.5, c * 134.109375, c * 25.5, c * 134.109375, c * 33.5, c * 126.609375);
  jc(g, e[0]);
  g[Ia](0, c * -10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 45.5, c * 144.609375);
  g[G](c * 35.5, c * 155.609375, c * 37, c * 152.109375, c * 28.5, c * 159.609375);
  g[G](c * 16.5, c * 154.609375, c * 16.5, c * 151.609375, c * 17.5, c * 141.609375);
  g[G](c * 25.5, c * 134.109375, c * 25.5, c * 134.109375, c * 33.5, c * 126.609375);
  jc(g, e[1], e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105.5, c * 34.609375);
  g[G](c * 48.5, c * 7.609375, c * 11.5, c * 58.609375, c * 20.5, c * 97.609375);
  g[G](c * 44.5, c * 161.609375, c * 70.5, c * 171.609375, c * 88.5, c * 156.609375);
  g[G](c * 120.5, c * 129.609375, c * 123.5, c * 105.609375, c * 128.5, c * 83.609375);
  g[G](c * 137.5, c * 79.609375, c * 141.5, c * 79.609375, c * 146.5, c * 81.609375);
  g[G](c * 153.5, c * 70.609375, c * 151.5, c * 65.609375, c * 148.5, c * 61.609375);
  g[G](c * 134.5, c * 60.609375, c * 131.5, c * 63.609375, c * 127.5, c * 66.609375);
  g[G](c * 127.5, c * 55.609375, c * 125.5, c * 54.609375, c * 120.5, c * 51.609375);
  g[G](c * 128.5, c * 42.609375, c * 136.5, c * 38.609375, c * 147.5, c * 39.609375);
  g[G](c * 152.5, c * 23.609375, c * 147.5, c * 21.609375, c * 140.5, c * 17.609375);
  g[G](c * 120.5, c * 17.609375, c * 114.5, c * 27.609375, c * 106.5, c * 35.609375);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 104.5, c * 35.609375);
  g[G](c * 71.5, c * 36.609375, c * 57.5, c * 52.609375, c * 58.5, c * 81.609375);
  g[G](c * 59.5, c * 103.609375, c * 66.5, c * 107.609375, c * 66.5, c * 116.609375);
  g[G](c * 67.5, c * 128.609375, c * 65.5, c * 131.609375, c * 63.5, c * 137.609375);
  jc(g, undefined, e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 59.5, c * 72.609375);
  g[G](c * 38.5, c * 80.609375, c * 43.5, c * 81.609375, c * 37.5, c * 89.609375);
  jc(g, undefined, e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 60.5, c * 85.609375);
  g[G](c * 75.5, c * 91.609375, c * 76.5, c * 96.609375, c * 81.5, c * 104.609375);
  jc(g, undefined, e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 68.5, c * 122.609375);
  g[G](c * 79.5, c * 130.609375, c * 74.5, c * 128.609375, c * 80.5, c * 134.609375);
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 142.5, c * 18.609375);
  g[G](c * 151.5, c * 28.609375, c * 151.5, c * 32.609375, c * 146.5, c * 40.609375);
  g[G](c * 137.5, c * 26.609375, c * 138.5, c * 24.609375, c * 142.5, c * 19.609375);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 146.5, c * 61.50892639160156);
  g[G](c * 157.5, c * 69.50892639160156, c * 150.5, c * 79.50892639160156, c * 145.5, c * 81.50892639160156);
  g[G](c * 140.5, c * 65.50892639160156, c * 144.5, c * 64.50892639160156, c * 146.5, c * 62.50892639160156);
  g[X]();
  jc(g, e[3]);
  return f;
}
function jf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 104;
  f.height = c * 117;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 4, c * 90);
  g[G](c * 20, c * 99.5, c * 20, c * 99.5, c * 36, c * 109);
  g[G](c * 67, c * 92, c * 67, c * 92, c * 98, c * 75);
  g[G](c * 91, c * 27, c * 91, c * 27, c * 91, c * 28);
  g[G](c * 72.5, c * 16, c * 72.5, c * 16, c * 54, c * 4);
  g[G](c * 33.5, c * 10, c * 33.5, c * 10, c * 13, c * 16);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 6, c * 76);
  g[G](c * 13.5, c * 51.5, c * 13.5, c * 51.5, c * 21, c * 27);
  g[G](c * 37.5, c * 17, c * 37.5, c * 17, c * 54, c * 7);
  g[G](c * 33.5, c * 12.5, c * 33.5, c * 12.5, c * 13, c * 18);
  g[X]();
  jc(g, e[1]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 24, c * 62);
  g[G](c * 28.5, c * 53, c * 28.5, c * 53, c * 33, c * 44);
  g[G](c * 41.5, c * 41, c * 41.5, c * 41, c * 50, c * 38);
  g[G](c * 52.5, c * 35, c * 52.5, c * 35, c * 55, c * 32);
  g[G](c * 52, c * 30, c * 52, c * 30, c * 49, c * 28);
  g[G](c * 38, c * 31.5, c * 38, c * 31.5, c * 27, c * 35);
  g[X]();
  jc(g, e[1]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 36, c * 107);
  g[G](c * 66, c * 90.5, c * 66, c * 90.5, c * 96, c * 74);
  g[G](c * 93, c * 52.5, c * 93, c * 52.5, c * 90, c * 31);
  g[G](c * 87, c * 48, c * 87, c * 48, c * 84, c * 65);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 1, c * 89);
  g[G](c * 18, c * 100, c * 34, c * 110, c * 35, c * 111);
  g[G](c * 67, c * 93, c * 67, c * 93, c * 99, c * 75);
  g[G](c * 100, c * 78.5, c * 100, c * 78.5, c * 101, c * 82);
  g[G](c * 68, c * 99, c * 68, c * 99, c * 35, c * 116);
  g[G](c * 18, c * 106.5, c * 18, c * 106.5, c * 1, c * 97);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 36, c * 107);
  g[G](c * 66.5, c * 91.5, c * 66.5, c * 91.5, c * 97, c * 76);
  g[G](c * 94.5, c * 52, c * 94.5, c * 52, c * 92, c * 28);
  g[G](c * 73, c * 15.5, c * 73, c * 15.5, c * 54, c * 3);
  g[G](c * 33, c * 9.5, c * 33, c * 9.5, c * 12, c * 16);
  g[G](c * 8, c * 53, c * 8, c * 53, c * 4, c * 90);
  g[G](c * 18.5, c * 99, c * 18.5, c * 99, c * 33, c * 108);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 22, c * 71);
  g[G](c * 30, c * 76.5, c * 30, c * 76.5, c * 38, c * 82);
  g[G](c * 53, c * 72, c * 53, c * 72, c * 68, c * 62);
  g[G](c * 68, c * 52, c * 68, c * 52, c * 68, c * 42);
  g[G](c * 59.5, c * 35.5, c * 59.5, c * 35.5, c * 51, c * 29);
  g[G](c * 39.5, c * 32, c * 39.5, c * 32, c * 28, c * 35);
  g[G](c * 25, c * 52, c * 25, c * 52, c * 22, c * 69);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 5, c * 89);
  g[G](c * 20, c * 73, c * 12.5, c * 80.5, c * 20, c * 72);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 35, c * 102);
  g[G](c * 36, c * 92.5, c * 36, c * 92.5, c * 37, c * 83);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 68, c * 62);
  g[G](c * 81, c * 67.5, c * 81, c * 67.5, c * 94, c * 73);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 70, c * 41);
  g[G](c * 80, c * 35.5, c * 80, c * 35.5, c * 90, c * 30);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 28, c * 33);
  g[G](c * 21.5, c * 26.5, c * 21.5, c * 26.5, c * 15, c * 20);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 51, c * 28);
  g[G](c * 53, c * 17, c * 53, c * 17, c * 55, c * 6);
  g[X]();
  jc(g, undefined, e[4], c * 6);
  return f;
}
function kf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 105;
  f.height = c * 144;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * -5, c * 0);
  i[g]();
  i[Ia](c * 52.5, c * 91.5);
  kc(i, c * -4.5, c * -39, c * 9, c * 78, c * 5);
  i[Qa]();
  jc(i, e[0], e[0], c * 3);
  i[g]();
  i[Ia](c * 53, c * 36);
  kc(i, c * -29, c * -17.5, c * 58, c * 35, c * 5);
  i[Qa]();
  jc(i, e[0], e[0], c * 4);
  i[g]();
  i[Ia](c * 53.5, c * 35.5);
  kc(i, c * -26.5, c * -15, c * 53, c * 30, c * 5);
  i[Qa]();
  jc(i, e[0], e[0], c * 4);
  i[Ia](c * 5, c * 0);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 52.5, c * 91.5);
  kc(i, c * -4.5, c * -39, c * 9, c * 78, c * 5);
  i[Qa]();
  jc(i, e[1], e[2], c * 3);
  i[g]();
  i[Ia](c * 53, c * 36);
  kc(i, c * -29, c * -17.5, c * 58, c * 35, c * 5);
  i[Qa]();
  jc(i, e[3], e[4], c * 4);
  i[g]();
  i[Ia](c * 53.5, c * 35.5);
  kc(i, c * -26.5, c * -15, c * 53, c * 30, c * 5);
  i[Qa]();
  jc(i, e[5], e[6], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 49, c * 60.5);
  i[G](c * 44, c * 56.5, c * 44, c * 56.5, c * 39, c * 52.5);
  i[G](c * 39, c * 46.5, c * 39, c * 46.5, c * 39, c * 40.5);
  i[G](c * 44, c * 44, c * 44, c * 44, c * 49, c * 47.5);
  i[G](c * 49, c * 54, c * 49, c * 54, c * 49, c * 60.5);
  i[X]();
  jc(i, e[7], e[6], c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 66, c * 40.5);
  i[G](c * 66, c * 46.5, c * 66, c * 46.5, c * 66, c * 52.5);
  i[G](c * 60.5, c * 56.5, c * 60.5, c * 56.5, c * 55, c * 60.5);
  i[G](c * 56, c * 53, c * 56, c * 53, c * 57, c * 45.5);
  i[G](c * 61.5, c * 43, c * 61.5, c * 43, c * 66, c * 40.5);
  i[X]();
  jc(i, e[7], e[6], c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 33.5);
  i[G](c * 55.5, c * 41, c * 55.5, c * 41, c * 59, c * 48.5);
  i[G](c * 56, c * 58, c * 56, c * 58, c * 53, c * 67.5);
  i[G](c * 49, c * 58, c * 49, c * 58, c * 45, c * 48.5);
  i[G](c * 48.5, c * 41, c * 48.5, c * 41, c * 52, c * 33.5);
  i[X]();
  jc(i, e[9], e[8], c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 47.5);
  i[G](c * 54.5, c * 50.5, c * 54.5, c * 50.5, c * 57, c * 53.5);
  i[G](c * 55, c * 60, c * 55, c * 60, c * 53, c * 66.5);
  i[G](c * 50.5, c * 61, c * 50.5, c * 61, c * 48, c * 55.5);
  i[G](c * 50, c * 52, c * 50, c * 52, c * 52, c * 48.5);
  i[X]();
  jc(i, e[11], e[10], c * 3);
  return f;
}
function lf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 46;
  f.height = c * 140;
  i[I](c * -1, c * 1);
  i[Ia](c * -50, c * 40);
  i[Ia](c * -20, 0);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 10, 0);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 22.599990844726562, c * 85.94999694824219);
  i[G](c * 17.599990844726562, c * 83.94999694824219, c * 17.599990844726562, c * 83.94999694824219, c * 12.599990844726562, c * 81.94999694824219);
  i[G](c * 19.599990844726562, c * 73.94999694824219, c * 2.5999908447265625, c * 22.949996948242188, c * 33.59999084472656, c * 7.9499969482421875);
  i[G](c * 27.599990844726562, c * 28.949996948242188, c * 33.59999084472656, c * 26.949996948242188, c * 35.59999084472656, c * 32.94999694824219);
  i[G](c * 25.599990844726562, c * 59.94999694824219, c * 26.599990844726562, c * 69.94999694824219, c * 29.599990844726562, c * 82.94999694824219);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * -1, 0);
  i[K](c * 17.599990844726562, c * 89.75);
  i[G](c * 24.599990844726562, c * 99.75, c * 24.599990844726562, c * 101.75, c * 20.599990844726562, c * 111.75);
  i[G](c * 28.599990844726562, c * 110.75, c * 26.599990844726562, c * 112.75, c * 28.599990844726562, c * 111.75);
  i[G](c * 30.599990844726562, c * 96.75, c * 32.59999084472656, c * 96.75, c * 30.599990844726562, c * 87.75);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * 1, 0);
  i[K](c * 7.5999908447265625, c * 86.34999084472656);
  i[G](c * 12.599990844726562, c * 85.34999084472656, c * 14.599990844726562, c * 84.34999084472656, c * 13.599990844726562, c * 84.34999084472656);
  i[G](c * 21.599990844726562, c * 83.34999084472656, c * 21.599990844726562, c * 83.34999084472656, c * 29.599990844726562, c * 82.34999084472656);
  i[G](c * 33.59999084472656, c * 85.84999084472656, c * 33.59999084472656, c * 85.84999084472656, c * 37.59999084472656, c * 89.34999084472656);
  i[G](c * 34.09999084472656, c * 91.84999084472656, c * 34.09999084472656, c * 91.84999084472656, c * 30.599990844726562, c * 94.34999084472656);
  i[G](c * 21.099990844726562, c * 93.34999084472656, c * 21.099990844726562, c * 93.34999084472656, c * 11.599990844726562, c * 92.34999084472656);
  i[X]();
  jc(i, e[0]);
  i[g]();
  i[Ia](c * 23.599990844726562, c * 110.94999694824219);
  i[ra](0);
  kc(i, c * -7, c * -4, c * 14, c * 8, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Ia](c * 0, 0);
  i[ua] = 1;
  i[Ia](c * 10, 0);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 22.599990844726562, c * 85.94999694824219);
  i[G](c * 17.599990844726562, c * 83.94999694824219, c * 17.599990844726562, c * 83.94999694824219, c * 12.599990844726562, c * 81.94999694824219);
  i[G](c * 19.599990844726562, c * 73.94999694824219, c * 2.5999908447265625, c * 22.949996948242188, c * 33.59999084472656, c * 7.9499969482421875);
  i[G](c * 27.599990844726562, c * 28.949996948242188, c * 33.59999084472656, c * 26.949996948242188, c * 35.59999084472656, c * 32.94999694824219);
  i[G](c * 25.599990844726562, c * 59.94999694824219, c * 26.599990844726562, c * 69.94999694824219, c * 29.599990844726562, c * 82.94999694824219);
  i[X]();
  jc(i, e[3], e[4], c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * -1, 0);
  i[K](c * 17.599990844726562, c * 89.75);
  i[G](c * 24.599990844726562, c * 99.75, c * 24.599990844726562, c * 101.75, c * 20.599990844726562, c * 111.75);
  i[G](c * 28.599990844726562, c * 110.75, c * 26.599990844726562, c * 112.75, c * 28.599990844726562, c * 111.75);
  i[G](c * 30.599990844726562, c * 96.75, c * 32.59999084472656, c * 96.75, c * 30.599990844726562, c * 87.75);
  i[X]();
  jc(i, e[1], e[2], c * 3);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * 1, 0);
  i[K](c * 7.5999908447265625, c * 86.34999084472656);
  i[G](c * 12.599990844726562, c * 85.34999084472656, c * 14.599990844726562, c * 84.34999084472656, c * 13.599990844726562, c * 84.34999084472656);
  i[G](c * 21.599990844726562, c * 83.34999084472656, c * 21.599990844726562, c * 83.34999084472656, c * 29.599990844726562, c * 82.34999084472656);
  i[G](c * 33.59999084472656, c * 85.84999084472656, c * 33.59999084472656, c * 85.84999084472656, c * 37.59999084472656, c * 89.34999084472656);
  i[G](c * 34.09999084472656, c * 91.84999084472656, c * 34.09999084472656, c * 91.84999084472656, c * 30.599990844726562, c * 94.34999084472656);
  i[G](c * 21.099990844726562, c * 93.34999084472656, c * 21.099990844726562, c * 93.34999084472656, c * 11.599990844726562, c * 92.34999084472656);
  i[X]();
  jc(i, e[1], e[2], c * 3);
  i[g]();
  i[Ia](c * 23.599990844726562, c * 110.94999694824219);
  i[ra](0);
  kc(i, c * -7, c * -4, c * 14, c * 8, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 3);
  return f;
}
function mf(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  var g = c * 120;
  var i = c * 140;
  e.width = g;
  e.height = i;
  e.width = c * 130;
  e.height = c * 120;
  kc(f, c * 10, c * 12, c * 110, c * 90, c * 10);
  jc(f, d[0]);
  kc(f, c * 10, c * 5, c * 110, c * 90, c * 10);
  jc(f, d[1], d[2], c * 4);
  var k = oc(-Math[D] / 5, hd(c * 0.5, true, ["rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
  f[r](k, c * 12, c * 18);
  k = oc(Math[D] / 4, te(c * 0.55, true, ["rgba(255, 255, 255, 0)", "#FFF", "#FFF", "#FFF", "#FFF"]));
  f[r](k, c * 36, c * 16);
  return e;
}
function nf(d, e, f) {
  var g = document[p]("canvas");
  var i = g[T]("2d");
  g.width = d * 137;
  g.height = d * 129;
  i[ua] = 0.5;
  lc(i, d * 69, d * 64, d * 48.16637831516918);
  jc(i, f[1]);
  i[ua] = 0.7;
  lc(i, d * 69, d * 64, d * 38.23105625617661);
  jc(i, f[2]);
  i[ua] = 0.7;
  lc(i, d * 69, d * 64, d * 32.01562118716424);
  jc(i, f[2], f[3], d * 4);
  i[Y](c.AnimationTimeline.frick = true);
  i[Ga] = "round";
  i[ea] = "round";
  i[K](d * 72, d * 41);
  i[G](d * 52, d * 41, d * 48, d * 50, d * 45, d * 58);
  i[G](d * 43, d * 67, d * 45, d * 68, d * 46, d * 72);
  i[G](d * 52, d * 53, d * 60, d * 48, d * 72, d * 42);
  i[X]();
  jc(i, f[3]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](d * 93, d * 62);
  i[G](d * 95, d * 72, d * 90, d * 81, d * 81, d * 87);
  i[G](d * 74, d * 91, d * 69, d * 89, d * 64, d * 88);
  i[G](d * 77, d * 83, d * 84, d * 82, d * 92, d * 62);
  i[X]();
  jc(i, f[3]);
  return g;
}
function of(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 137;
  f.height = c * 129;
  g[ua] = 0.4;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 42.000030517578125, c * 41.17047119140625);
  g[G](c * 45.000030517578125, c * 38.17047119140625, c * 49.000030517578125, c * 37.17047119140625, c * 62.000030517578125, c * 38.17047119140625);
  g[G](c * 78.00003051757812, c * 38.17047119140625, c * 78.00003051757812, c * 38.17047119140625, c * 94.00003051757812, c * 38.17047119140625);
  g[G](c * 100.00003051757812, c * 38.17047119140625, c * 102.00003051757812, c * 38.17047119140625, c * 101.00003051757812, c * 47.17047119140625);
  g[G](c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 80.17047119140625);
  g[G](c * 102.00003051757812, c * 84.17047119140625, c * 100.00003051757812, c * 86.17047119140625, c * 95.00003051757812, c * 88.17047119140625);
  g[G](c * 84.00003051757812, c * 94.17047119140625, c * 89.00003051757812, c * 94.17047119140625, c * 79.00003051757812, c * 94.17047119140625);
  g[G](c * 59.500030517578125, c * 94.17047119140625, c * 59.500030517578125, c * 94.17047119140625, c * 40.000030517578125, c * 94.17047119140625);
  g[G](c * 33.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 86.17047119140625);
  g[G](c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 53.17047119140625);
  g[G](c * 33.000030517578125, c * 47.17047119140625, c * 34.000030517578125, c * 47.17047119140625, c * 40.000030517578125, c * 42.17047119140625);
  g[X]();
  jc(g, undefined, e[2], c * 40);
  g[ua] = 0.4;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 42.000030517578125, c * 41.17047119140625);
  g[G](c * 45.000030517578125, c * 38.17047119140625, c * 49.000030517578125, c * 37.17047119140625, c * 62.000030517578125, c * 38.17047119140625);
  g[G](c * 78.00003051757812, c * 38.17047119140625, c * 78.00003051757812, c * 38.17047119140625, c * 94.00003051757812, c * 38.17047119140625);
  g[G](c * 100.00003051757812, c * 38.17047119140625, c * 102.00003051757812, c * 38.17047119140625, c * 101.00003051757812, c * 47.17047119140625);
  g[G](c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 80.17047119140625);
  g[G](c * 102.00003051757812, c * 84.17047119140625, c * 100.00003051757812, c * 86.17047119140625, c * 95.00003051757812, c * 88.17047119140625);
  g[G](c * 84.00003051757812, c * 94.17047119140625, c * 89.00003051757812, c * 94.17047119140625, c * 79.00003051757812, c * 94.17047119140625);
  g[G](c * 59.500030517578125, c * 94.17047119140625, c * 59.500030517578125, c * 94.17047119140625, c * 40.000030517578125, c * 94.17047119140625);
  g[G](c * 33.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 86.17047119140625);
  g[G](c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 53.17047119140625);
  g[G](c * 33.000030517578125, c * 47.17047119140625, c * 34.000030517578125, c * 47.17047119140625, c * 40.000030517578125, c * 42.17047119140625);
  g[X]();
  jc(g, undefined, e[1], c * 20);
  g[ua] = 0.8;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 42.000030517578125, c * 41.17047119140625);
  g[G](c * 45.000030517578125, c * 38.17047119140625, c * 49.000030517578125, c * 37.17047119140625, c * 62.000030517578125, c * 38.17047119140625);
  g[G](c * 78.00003051757812, c * 38.17047119140625, c * 78.00003051757812, c * 38.17047119140625, c * 94.00003051757812, c * 38.17047119140625);
  g[G](c * 100.00003051757812, c * 38.17047119140625, c * 102.00003051757812, c * 38.17047119140625, c * 101.00003051757812, c * 47.17047119140625);
  g[G](c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 80.17047119140625);
  g[G](c * 102.00003051757812, c * 84.17047119140625, c * 100.00003051757812, c * 86.17047119140625, c * 95.00003051757812, c * 88.17047119140625);
  g[G](c * 84.00003051757812, c * 94.17047119140625, c * 89.00003051757812, c * 94.17047119140625, c * 79.00003051757812, c * 94.17047119140625);
  g[G](c * 59.500030517578125, c * 94.17047119140625, c * 59.500030517578125, c * 94.17047119140625, c * 40.000030517578125, c * 94.17047119140625);
  g[G](c * 33.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 86.17047119140625);
  g[G](c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 53.17047119140625);
  g[G](c * 33.000030517578125, c * 47.17047119140625, c * 34.000030517578125, c * 47.17047119140625, c * 40.000030517578125, c * 42.17047119140625);
  g[X]();
  jc(g, e[0], e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 51.000030517578125, c * 37.9886474609375);
  g[G](c * 51.000030517578125, c * 61.9886474609375, c * 51.000030517578125, c * 61.9886474609375, c * 51.000030517578125, c * 85.9886474609375);
  g[G](c * 75.50003051757812, c * 85.9886474609375, c * 75.50003051757812, c * 85.9886474609375, c * 100.00003051757812, c * 85.9886474609375);
  g[G](c * 100.00003051757812, c * 61.9886474609375, c * 100.00003051757812, c * 61.9886474609375, c * 100.00003051757812, c * 37.9886474609375);
  g[G](c * 76.00003051757812, c * 37.9886474609375, c * 76.00003051757812, c * 37.9886474609375, c * 52.000030517578125, c * 37.9886474609375);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 99.00003051757812, c * 38.9886474609375);
  g[G](c * 93.50003051757812, c * 44.9886474609375, c * 93.50003051757812, c * 44.9886474609375, c * 88.00003051757812, c * 50.9886474609375);
  g[G](c * 88.00003051757812, c * 72.4886474609375, c * 88.00003051757812, c * 72.4886474609375, c * 88.00003051757812, c * 93.9886474609375);
  g[G](c * 94.00003051757812, c * 90.4886474609375, c * 94.00003051757812, c * 90.4886474609375, c * 100.00003051757812, c * 86.9886474609375);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87.00003051757812, c * 49.625);
  g[G](c * 61.000030517578125, c * 49.625, c * 61.000030517578125, c * 49.625, c * 35.000030517578125, c * 49.625);
  g[G](c * 35.000030517578125, c * 70.625, c * 35.000030517578125, c * 70.625, c * 35.000030517578125, c * 91.625);
  g[G](c * 60.500030517578125, c * 91.625, c * 60.500030517578125, c * 91.625, c * 86.00003051757812, c * 91.625);
  g[G](c * 86.50003051757812, c * 70.625, c * 86.50003051757812, c * 70.625, c * 87.00003051757812, c * 49.625);
  g[X]();
  jc(g, e[1], e[3], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 47.000030517578125, c * 36.625);
  g[G](c * 73.00003051757812, c * 37.125, c * 73.00003051757812, c * 37.125, c * 99.00003051757812, c * 37.625);
  g[G](c * 93.50003051757812, c * 44.125, c * 93.50003051757812, c * 44.125, c * 88.00003051757812, c * 50.625);
  g[G](c * 60.500030517578125, c * 50.125, c * 60.500030517578125, c * 50.125, c * 33.000030517578125, c * 49.625);
  g[X]();
  jc(g, e[1], e[3], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 53.000030517578125, c * 52.625);
  g[G](c * 40.000030517578125, c * 54.625, c * 39.000030517578125, c * 59.625, c * 40.000030517578125, c * 67.625);
  g[G](c * 45.000030517578125, c * 59.625, c * 48.000030517578125, c * 58.625, c * 54.000030517578125, c * 53.625);
  g[X]();
  jc(g, e[3]);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 42.000030517578125, c * 41.17047119140625);
  g[G](c * 45.000030517578125, c * 38.17047119140625, c * 49.000030517578125, c * 37.17047119140625, c * 62.000030517578125, c * 38.17047119140625);
  g[G](c * 78.00003051757812, c * 38.17047119140625, c * 78.00003051757812, c * 38.17047119140625, c * 94.00003051757812, c * 38.17047119140625);
  g[G](c * 100.00003051757812, c * 38.17047119140625, c * 102.00003051757812, c * 38.17047119140625, c * 101.00003051757812, c * 47.17047119140625);
  g[G](c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 63.67047119140625, c * 101.00003051757812, c * 80.17047119140625);
  g[G](c * 102.00003051757812, c * 84.17047119140625, c * 100.00003051757812, c * 86.17047119140625, c * 95.00003051757812, c * 88.17047119140625);
  g[G](c * 84.00003051757812, c * 94.17047119140625, c * 89.00003051757812, c * 94.17047119140625, c * 79.00003051757812, c * 94.17047119140625);
  g[G](c * 59.500030517578125, c * 94.17047119140625, c * 59.500030517578125, c * 94.17047119140625, c * 40.000030517578125, c * 94.17047119140625);
  g[G](c * 33.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 94.17047119140625, c * 34.000030517578125, c * 86.17047119140625);
  g[G](c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 69.67047119140625, c * 34.000030517578125, c * 53.17047119140625);
  g[G](c * 33.000030517578125, c * 47.17047119140625, c * 34.000030517578125, c * 47.17047119140625, c * 40.000030517578125, c * 42.17047119140625);
  g[X]();
  jc(g, undefined, e[3], c * 4);
  return f;
}
function pf(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 376;
  e.height = c * 371;
  f[ua] = 0.5;
  f[Ia](c * 5, c * 5);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 191.633544921875, c * 123.98580932617188);
  f[G](c * 215.633544921875, c * 85.98580932617188, c * 187.633544921875, c * 71.98580932617188, c * 202.633544921875, c * 19.985809326171875);
  f[G](c * 231.633544921875, c * 68.98580932617188, c * 253.633544921875, c * 71.98580932617188, c * 256.633544921875, c * 93.98580932617188);
  f[G](c * 306.633544921875, c * 64.98580932617188, c * 319.633544921875, c * 61.985809326171875, c * 350.633544921875, c * 58.985809326171875);
  f[G](c * 280.633544921875, c * 86.98580932617188, c * 281.633544921875, c * 106.98580932617188, c * 268.633544921875, c * 130.98580932617188);
  f[G](c * 295.633544921875, c * 158.98580932617188, c * 328.633544921875, c * 155.98580932617188, c * 353.633544921875, c * 90.98580932617188);
  f[G](c * 371.633544921875, c * 158.98580932617188, c * 337.633544921875, c * 210.98580932617188, c * 286.633544921875, c * 209.98580932617188);
  f[G](c * 323.633544921875, c * 230.98580932617188, c * 317.633544921875, c * 274.9858093261719, c * 356.633544921875, c * 305.9858093261719);
  f[G](c * 288.633544921875, c * 297.9858093261719, c * 288.633544921875, c * 265.9858093261719, c * 275.633544921875, c * 266.9858093261719);
  f[G](c * 280.633544921875, c * 294.9858093261719, c * 315.633544921875, c * 306.9858093261719, c * 336.633544921875, c * 316.9858093261719);
  f[G](c * 295.633544921875, c * 318.9858093261719, c * 264.633544921875, c * 302.9858093261719, c * 254.633544921875, c * 289.9858093261719);
  f[G](c * 252.633544921875, c * 301.9858093261719, c * 224.633544921875, c * 315.9858093261719, c * 201.633544921875, c * 356.9858093261719);
  f[G](c * 195.633544921875, c * 313.9858093261719, c * 195.633544921875, c * 308.9858093261719, c * 196.633544921875, c * 307.9858093261719);
  f[G](c * 197.633544921875, c * 289.9858093261719, c * 207.633544921875, c * 283.9858093261719, c * 195.633544921875, c * 258.9858093261719);
  f[G](c * 182.633544921875, c * 282.9858093261719, c * 190.633544921875, c * 287.9858093261719, c * 193.633544921875, c * 297.9858093261719);
  f[G](c * 195.633544921875, c * 306.9858093261719, c * 191.633544921875, c * 334.9858093261719, c * 187.633544921875, c * 354.9858093261719);
  f[G](c * 165.633544921875, c * 320.9858093261719, c * 138.633544921875, c * 307.9858093261719, c * 135.633544921875, c * 288.9858093261719);
  f[G](c * 110.633544921875, c * 318.9858093261719, c * 68.633544921875, c * 323.9858093261719, c * 49.633544921875, c * 320.9858093261719);
  f[G](c * 88.633544921875, c * 308.9858093261719, c * 108.633544921875, c * 284.9858093261719, c * 118.633544921875, c * 258.9858093261719);
  f[G](c * 86.633544921875, c * 264.9858093261719, c * 75.633544921875, c * 310.9858093261719, c * 19.633544921875, c * 304.9858093261719);
  f[G](c * 54.633544921875, c * 276.9858093261719, c * 59.633544921875, c * 214.98580932617188, c * 105.633544921875, c * 205.98580932617188);
  f[G](c * 14.633544921875, c * 201.98580932617188, c * 24.633544921875, c * 141.98580932617188, c * 25.633544921875, c * 82.98580932617188);
  f[G](c * 49.633544921875, c * 168.98580932617188, c * 87.633544921875, c * 141.98580932617188, c * 112.633544921875, c * 123.98580932617188);
  f[G](c * 95.633544921875, c * 75.98580932617188, c * 70.633544921875, c * 68.98580932617188, c * 35.633544921875, c * 50.985809326171875);
  f[G](c * 70.633544921875, c * 53.985809326171875, c * 102.633544921875, c * 65.98580932617188, c * 125.633544921875, c * 84.98580932617188);
  f[G](c * 133.633544921875, c * 69.98580932617188, c * 166.633544921875, c * 42.985809326171875, c * 176.633544921875, c * 21.985809326171875);
  f[G](c * 185.633544921875, c * 49.985809326171875, c * 168.633544921875, c * 95.98580932617188, c * 191.633544921875, c * 121.98580932617188);
  f[X]();
  jc(f, d[0]);
  f[ua] = 1;
  f[Ia](c * -4, c * -5);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 191.633544921875, c * 123.98580932617188);
  f[G](c * 215.633544921875, c * 85.98580932617188, c * 187.633544921875, c * 71.98580932617188, c * 202.633544921875, c * 19.985809326171875);
  f[G](c * 231.633544921875, c * 68.98580932617188, c * 253.633544921875, c * 71.98580932617188, c * 256.633544921875, c * 93.98580932617188);
  f[G](c * 306.633544921875, c * 64.98580932617188, c * 319.633544921875, c * 61.985809326171875, c * 350.633544921875, c * 58.985809326171875);
  f[G](c * 280.633544921875, c * 86.98580932617188, c * 281.633544921875, c * 106.98580932617188, c * 268.633544921875, c * 130.98580932617188);
  f[G](c * 295.633544921875, c * 158.98580932617188, c * 328.633544921875, c * 155.98580932617188, c * 353.633544921875, c * 90.98580932617188);
  f[G](c * 371.633544921875, c * 158.98580932617188, c * 337.633544921875, c * 210.98580932617188, c * 286.633544921875, c * 209.98580932617188);
  f[G](c * 323.633544921875, c * 230.98580932617188, c * 317.633544921875, c * 274.9858093261719, c * 356.633544921875, c * 305.9858093261719);
  f[G](c * 288.633544921875, c * 297.9858093261719, c * 288.633544921875, c * 265.9858093261719, c * 275.633544921875, c * 266.9858093261719);
  f[G](c * 280.633544921875, c * 294.9858093261719, c * 315.633544921875, c * 306.9858093261719, c * 336.633544921875, c * 316.9858093261719);
  f[G](c * 295.633544921875, c * 318.9858093261719, c * 264.633544921875, c * 302.9858093261719, c * 254.633544921875, c * 289.9858093261719);
  f[G](c * 252.633544921875, c * 301.9858093261719, c * 224.633544921875, c * 315.9858093261719, c * 201.633544921875, c * 356.9858093261719);
  f[G](c * 195.633544921875, c * 313.9858093261719, c * 195.633544921875, c * 308.9858093261719, c * 196.633544921875, c * 307.9858093261719);
  f[G](c * 197.633544921875, c * 289.9858093261719, c * 207.633544921875, c * 283.9858093261719, c * 195.633544921875, c * 258.9858093261719);
  f[G](c * 182.633544921875, c * 282.9858093261719, c * 190.633544921875, c * 287.9858093261719, c * 193.633544921875, c * 297.9858093261719);
  f[G](c * 195.633544921875, c * 306.9858093261719, c * 191.633544921875, c * 334.9858093261719, c * 187.633544921875, c * 354.9858093261719);
  f[G](c * 165.633544921875, c * 320.9858093261719, c * 138.633544921875, c * 307.9858093261719, c * 135.633544921875, c * 288.9858093261719);
  f[G](c * 110.633544921875, c * 318.9858093261719, c * 68.633544921875, c * 323.9858093261719, c * 49.633544921875, c * 320.9858093261719);
  f[G](c * 88.633544921875, c * 308.9858093261719, c * 108.633544921875, c * 284.9858093261719, c * 118.633544921875, c * 258.9858093261719);
  f[G](c * 86.633544921875, c * 264.9858093261719, c * 75.633544921875, c * 310.9858093261719, c * 19.633544921875, c * 304.9858093261719);
  f[G](c * 54.633544921875, c * 276.9858093261719, c * 59.633544921875, c * 214.98580932617188, c * 105.633544921875, c * 205.98580932617188);
  f[G](c * 14.633544921875, c * 201.98580932617188, c * 24.633544921875, c * 141.98580932617188, c * 25.633544921875, c * 82.98580932617188);
  f[G](c * 49.633544921875, c * 168.98580932617188, c * 87.633544921875, c * 141.98580932617188, c * 112.633544921875, c * 123.98580932617188);
  f[G](c * 95.633544921875, c * 75.98580932617188, c * 70.633544921875, c * 68.98580932617188, c * 35.633544921875, c * 50.985809326171875);
  f[G](c * 70.633544921875, c * 53.985809326171875, c * 102.633544921875, c * 65.98580932617188, c * 125.633544921875, c * 84.98580932617188);
  f[G](c * 133.633544921875, c * 69.98580932617188, c * 166.633544921875, c * 42.985809326171875, c * 176.633544921875, c * 21.985809326171875);
  f[G](c * 185.633544921875, c * 49.985809326171875, c * 168.633544921875, c * 95.98580932617188, c * 191.633544921875, c * 121.98580932617188);
  f[X]();
  jc(f, undefined, d[1], c * 12);
  f[Ia](c * -1, c * 0);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 270.633544921875, c * 88.98580932617188);
  f[G](c * 296.633544921875, c * 65.98580932617188, c * 318.633544921875, c * 62.985809326171875, c * 348.633544921875, c * 57.985809326171875);
  f[G](c * 309.633544921875, c * 76.98580932617188, c * 291.633544921875, c * 88.98580932617188, c * 280.633544921875, c * 99.98580932617188);
  f[X]();
  jc(f, d[4], d[5], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 275.633544921875, c * 281.9858093261719);
  f[G](c * 303.633544921875, c * 308.9858093261719, c * 321.633544921875, c * 308.9858093261719, c * 335.633544921875, c * 315.9858093261719);
  f[G](c * 305.633544921875, c * 320.9858093261719, c * 278.633544921875, c * 307.9858093261719, c * 264.633544921875, c * 293.9858093261719);
  f[X]();
  jc(f, d[4], d[5], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 124.633544921875, c * 291.9858093261719);
  f[G](c * 106.633544921875, c * 316.9858093261719, c * 72.633544921875, c * 325.9858093261719, c * 53.633544921875, c * 319.9858093261719);
  f[G](c * 83.633544921875, c * 308.9858093261719, c * 97.633544921875, c * 298.9858093261719, c * 112.633544921875, c * 284.9858093261719);
  f[X]();
  jc(f, d[4], d[5], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 113.633544921875, c * 80.98580932617188);
  f[G](c * 91.633544921875, c * 54.985809326171875, c * 72.633544921875, c * 56.985809326171875, c * 36.633544921875, c * 49.985809326171875);
  f[G](c * 87.633544921875, c * 72.98580932617188, c * 95.633544921875, c * 82.98580932617188, c * 106.633544921875, c * 96.98580932617188);
  f[X]();
  jc(f, d[4], d[5], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 202.633544921875, c * 20.985809326171875);
  f[G](c * 219.633544921875, c * 49.985809326171875, c * 259.633544921875, c * 80.98580932617188, c * 255.633544921875, c * 92.98580932617188);
  f[G](c * 268.633544921875, c * 86.98580932617188, c * 265.633544921875, c * 87.98580932617188, c * 275.633544921875, c * 82.98580932617188);
  f[G](c * 283.633544921875, c * 87.98580932617188, c * 283.633544921875, c * 87.98580932617188, c * 291.633544921875, c * 92.98580932617188);
  f[G](c * 269.633544921875, c * 116.98580932617188, c * 270.633544921875, c * 124.98580932617188, c * 267.633544921875, c * 130.98580932617188);
  f[G](c * 307.633544921875, c * 168.98580932617188, c * 339.633544921875, c * 132.98580932617188, c * 352.633544921875, c * 93.98580932617188);
  f[G](c * 366.633544921875, c * 145.98580932617188, c * 345.633544921875, c * 207.98580932617188, c * 286.633544921875, c * 208.98580932617188);
  f[G](c * 315.633544921875, c * 223.98580932617188, c * 327.633544921875, c * 287.9858093261719, c * 355.633544921875, c * 305.9858093261719);
  f[G](c * 293.633544921875, c * 298.9858093261719, c * 293.633544921875, c * 275.9858093261719, c * 276.633544921875, c * 266.9858093261719);
  f[G](c * 274.633544921875, c * 282.9858093261719, c * 287.633544921875, c * 288.9858093261719, c * 295.633544921875, c * 296.9858093261719);
  f[G](c * 287.133544921875, c * 302.4858093261719, c * 287.133544921875, c * 302.4858093261719, c * 278.633544921875, c * 307.9858093261719);
  f[G](c * 261.633544921875, c * 297.9858093261719, c * 258.633544921875, c * 293.9858093261719, c * 255.633544921875, c * 290.9858093261719);
  f[G](c * 249.633544921875, c * 301.9858093261719, c * 225.633544921875, c * 320.9858093261719, c * 202.633544921875, c * 354.9858093261719);
  f[G](c * 195.633544921875, c * 318.9858093261719, c * 196.633544921875, c * 306.9858093261719, c * 198.633544921875, c * 300.9858093261719);
  f[G](c * 209.633544921875, c * 268.9858093261719, c * 199.633544921875, c * 266.9858093261719, c * 195.633544921875, c * 256.9858093261719);
  f[G](c * 183.633544921875, c * 274.9858093261719, c * 182.633544921875, c * 281.9858093261719, c * 192.633544921875, c * 305.9858093261719);
  f[G](c * 194.633544921875, c * 317.9858093261719, c * 191.633544921875, c * 336.9858093261719, c * 186.633544921875, c * 351.9858093261719);
  f[G](c * 166.633544921875, c * 318.9858093261719, c * 141.633544921875, c * 303.9858093261719, c * 136.633544921875, c * 286.9858093261719);
  f[G](c * 122.633544921875, c * 303.9858093261719, c * 115.633544921875, c * 305.9858093261719, c * 109.633544921875, c * 306.9858093261719);
  f[G](c * 101.133544921875, c * 301.9858093261719, c * 94.633544921875, c * 297.9858093261719, c * 92.633544921875, c * 296.9858093261719);
  f[G](c * 116.633544921875, c * 277.9858093261719, c * 116.633544921875, c * 266.9858093261719, c * 119.633544921875, c * 257.9858093261719);
  f[G](c * 107.633544921875, c * 257.9858093261719, c * 65.633544921875, c * 308.9858093261719, c * 24.633544921875, c * 303.9858093261719);
  f[G](c * 51.633544921875, c * 275.9858093261719, c * 64.633544921875, c * 220.98580932617188, c * 108.633544921875, c * 205.98580932617188);
  f[G](c * 14.633544921875, c * 198.98580932617188, c * 26.633544921875, c * 142.98580932617188, c * 25.633544921875, c * 86.98580932617188);
  f[G](c * 41.633544921875, c * 155.98580932617188, c * 81.633544921875, c * 148.98580932617188, c * 113.633544921875, c * 124.98580932617188);
  f[G](c * 102.633544921875, c * 93.98580932617188, c * 95.633544921875, c * 88.98580932617188, c * 89.633544921875, c * 81.98580932617188);
  f[G](c * 97.633544921875, c * 76.48580932617188, c * 97.633544921875, c * 76.48580932617188, c * 105.633544921875, c * 70.98580932617188);
  f[G](c * 120.633544921875, c * 78.98580932617188, c * 121.633544921875, c * 81.98580932617188, c * 124.633544921875, c * 86.98580932617188);
  f[G](c * 132.633544921875, c * 71.98580932617188, c * 160.633544921875, c * 56.985809326171875, c * 175.633544921875, c * 23.985809326171875);
  f[G](c * 182.633544921875, c * 53.985809326171875, c * 170.633544921875, c * 102.98580932617188, c * 191.633544921875, c * 125.98580932617188);
  f[G](c * 214.633544921875, c * 89.98580932617188, c * 192.633544921875, c * 58.985809326171875, c * 202.633544921875, c * 20.985809326171875);
  f[X]();
  jc(f, d[2], d[3], c * 5);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 203.633544921875, c * 21.985809326171875);
  f[G](c * 223.633544921875, c * 63.985809326171875, c * 227.633544921875, c * 72.98580932617188, c * 235.633544921875, c * 98.98580932617188);
  f[G](c * 241.633544921875, c * 123.98580932617188, c * 225.633544921875, c * 138.98580932617188, c * 196.633544921875, c * 122.98580932617188);
  f[G](c * 213.633544921875, c * 93.98580932617188, c * 199.633544921875, c * 49.985809326171875, c * 203.633544921875, c * 26.985809326171875);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 175.633544921875, c * 25.985809326171875);
  f[G](c * 176.633544921875, c * 51.985809326171875, c * 171.633544921875, c * 88.98580932617188, c * 186.633544921875, c * 121.98580932617188);
  f[G](c * 156.633544921875, c * 144.98580932617188, c * 139.633544921875, c * 120.98580932617188, c * 147.633544921875, c * 97.98580932617188);
  f[G](c * 152.633544921875, c * 77.98580932617188, c * 162.633544921875, c * 60.985809326171875, c * 176.633544921875, c * 25.985809326171875);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 26.633544921875, c * 96.98580932617188);
  f[G](c * 38.633544921875, c * 151.98580932617188, c * 61.633544921875, c * 161.98580932617188, c * 88.633544921875, c * 168.98580932617188);
  f[G](c * 117.633544921875, c * 177.98580932617188, c * 113.633544921875, c * 185.98580932617188, c * 106.633544921875, c * 204.98580932617188);
  f[G](c * 32.633544921875, c * 204.98580932617188, c * 25.633544921875, c * 149.98580932617188, c * 25.633544921875, c * 97.98580932617188);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 351.633544921875, c * 99.98580932617188);
  f[G](c * 365.633544921875, c * 161.98580932617188, c * 333.633544921875, c * 203.98580932617188, c * 287.633544921875, c * 207.98580932617188);
  f[G](c * 255.633544921875, c * 208.98580932617188, c * 266.633544921875, c * 174.98580932617188, c * 285.633544921875, c * 176.98580932617188);
  f[G](c * 313.633544921875, c * 178.98580932617188, c * 348.633544921875, c * 135.98580932617188, c * 353.633544921875, c * 99.98580932617188);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 350.633544921875, c * 302.9858093261719);
  f[G](c * 310.633544921875, c * 280.9858093261719, c * 314.633544921875, c * 244.98580932617188, c * 292.633544921875, c * 230.98580932617188);
  f[G](c * 272.633544921875, c * 215.98580932617188, c * 263.633544921875, c * 222.98580932617188, c * 256.633544921875, c * 236.98580932617188);
  f[G](c * 251.633544921875, c * 249.98580932617188, c * 264.633544921875, c * 255.98580932617188, c * 279.633544921875, c * 268.9858093261719);
  f[G](c * 306.633544921875, c * 295.9858093261719, c * 325.633544921875, c * 299.9858093261719, c * 349.633544921875, c * 302.9858093261719);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 95.633544921875, c * 224.98580932617188);
  f[G](c * 64.633544921875, c * 245.98580932617188, c * 62.633544921875, c * 280.9858093261719, c * 32.633544921875, c * 303.9858093261719);
  f[G](c * 59.633544921875, c * 301.9858093261719, c * 102.633544921875, c * 260.9858093261719, c * 116.633544921875, c * 255.98580932617188);
  f[G](c * 139.633544921875, c * 229.98580932617188, c * 108.633544921875, c * 209.98580932617188, c * 97.633544921875, c * 224.98580932617188);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 195.633544921875, c * 253.98580932617188);
  f[G](c * 209.633544921875, c * 282.9858093261719, c * 205.633544921875, c * 278.9858093261719, c * 199.633544921875, c * 307.9858093261719);
  f[G](c * 198.633544921875, c * 332.9858093261719, c * 201.633544921875, c * 340.9858093261719, c * 202.633544921875, c * 348.9858093261719);
  f[G](c * 215.633544921875, c * 313.9858093261719, c * 226.633544921875, c * 291.9858093261719, c * 235.633544921875, c * 270.9858093261719);
  f[G](c * 243.633544921875, c * 247.98580932617188, c * 219.633544921875, c * 235.98580932617188, c * 196.633544921875, c * 252.98580932617188);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 195.633544921875, c * 251.98580932617188);
  f[G](c * 176.633544921875, c * 275.9858093261719, c * 182.633544921875, c * 285.9858093261719, c * 191.633544921875, c * 308.9858093261719);
  f[G](c * 194.633544921875, c * 318.9858093261719, c * 190.633544921875, c * 334.9858093261719, c * 186.633544921875, c * 348.9858093261719);
  f[G](c * 175.633544921875, c * 307.9858093261719, c * 157.633544921875, c * 291.9858093261719, c * 155.633544921875, c * 272.9858093261719);
  f[G](c * 150.633544921875, c * 243.98580932617188, c * 170.633544921875, c * 236.98580932617188, c * 195.633544921875, c * 251.98580932617188);
  f[X]();
  jc(f, d[3]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 316, c * 186.8020782470703);
  f[G](c * 315, c * 173.8020782470703, c * 298, c * 177.8020782470703, c * 293, c * 183.8020782470703);
  f[G](c * 285, c * 195.8020782470703, c * 314, c * 197.8020782470703, c * 315, c * 187.8020782470703);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 340, c * 157.8020782470703);
  f[G](c * 327, c * 153.8020782470703, c * 321, c * 168.8020782470703, c * 330, c * 174.8020782470703);
  f[G](c * 341, c * 178.8020782470703, c * 347, c * 161.8020782470703, c * 341, c * 157.8020782470703);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 349, c * 136.8020782470703);
  f[G](c * 343, c * 135.8020782470703, c * 342, c * 139.8020782470703, c * 341, c * 147.8020782470703);
  f[G](c * 343, c * 155.8020782470703, c * 353, c * 143.8020782470703, c * 349, c * 137.8020782470703);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 278.75, c * 246.4375);
  f[G](c * 288.75, c * 242.4375, c * 301.75, c * 248.4375, c * 298.75, c * 262.4375);
  f[G](c * 293.75, c * 271.4375, c * 287.75, c * 271.4375, c * 278.75, c * 262.4375);
  f[G](c * 271.75, c * 255.4375, c * 274.75, c * 250.4375, c * 277.75, c * 247.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 310.75, c * 277.4375);
  f[G](c * 319.75, c * 280.4375, c * 322.75, c * 283.4375, c * 321.75, c * 289.4375);
  f[G](c * 319.75, c * 295.4375, c * 313.75, c * 291.4375, c * 308.75, c * 288.4375);
  f[G](c * 301.75, c * 281.4375, c * 306.75, c * 277.4375, c * 309.75, c * 277.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 217.75, c * 257.4375);
  f[G](c * 227.75, c * 269.4375, c * 220.75, c * 281.4375, c * 212.75, c * 280.4375);
  f[G](c * 206.75, c * 279.4375, c * 206.75, c * 269.4375, c * 204.75, c * 260.4375);
  f[G](c * 204.75, c * 254.4375, c * 211.75, c * 253.4375, c * 216.75, c * 256.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 211.75, c * 289.4375);
  f[G](c * 219.75, c * 292.4375, c * 213.75, c * 306.4375, c * 206.75, c * 307.4375);
  f[G](c * 199.75, c * 303.4375, c * 209.75, c * 287.4375, c * 210.75, c * 289.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 171.75, c * 256.4375);
  f[G](c * 162.75, c * 273.4375, c * 166.75, c * 278.4375, c * 175.75, c * 280.4375);
  f[G](c * 183.75, c * 278.4375, c * 185.75, c * 257.4375, c * 182.75, c * 255.4375);
  f[G](c * 176.75, c * 251.4375, c * 172.75, c * 253.4375, c * 172.75, c * 256.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 175.75, c * 289.9375);
  f[G](c * 183.75, c * 287.9375, c * 186.75, c * 301.9375, c * 182.75, c * 305.9375);
  f[G](c * 176.75, c * 307.9375, c * 171.75, c * 292.9375, c * 174.75, c * 290.9375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 205.75, c * 314.4375);
  f[G](c * 209.75, c * 316.4375, c * 210.75, c * 320.4375, c * 206.75, c * 323.4375);
  f[G](c * 201.75, c * 324.4375, c * 201.75, c * 314.4375, c * 204.75, c * 314.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 186.75, c * 313.4375);
  f[G](c * 181.75, c * 315.4375, c * 180.75, c * 321.4375, c * 185.75, c * 326.4375);
  f[G](c * 190.75, c * 327.4375, c * 190.75, c * 313.4375, c * 187.75, c * 314.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 103.75, c * 244.4375);
  f[G](c * 96.75, c * 239.4375, c * 83.75, c * 240.4375, c * 81.75, c * 255.4375);
  f[G](c * 80.75, c * 264.4375, c * 89.75, c * 269.4375, c * 99.75, c * 260.4375);
  f[G](c * 106.75, c * 254.4375, c * 106.75, c * 250.4375, c * 104.75, c * 245.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 86.75, c * 182.4375);
  f[G](c * 82.75, c * 170.4375, c * 66.75, c * 169.4375, c * 61.75, c * 181.4375);
  f[G](c * 58.75, c * 187.4375, c * 68.75, c * 194.4375, c * 75.75, c * 192.4375);
  f[G](c * 83.75, c * 192.4375, c * 86.75, c * 187.4375, c * 86.75, c * 183.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 44.75, c * 152.4375);
  f[G](c * 55.75, c * 159.4375, c * 54.75, c * 170.4375, c * 46.75, c * 171.4375);
  f[G](c * 39.75, c * 170.4375, c * 34.75, c * 151.4375, c * 43.75, c * 152.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 31.75, c * 130.4375);
  f[G](c * 35.75, c * 132.4375, c * 35.75, c * 131.4375, c * 37.75, c * 137.4375);
  f[G](c * 36.75, c * 144.4375, c * 36.75, c * 145.4375, c * 33.75, c * 144.4375);
  f[G](c * 26.75, c * 137.4375, c * 29.75, c * 131.4375, c * 31.75, c * 130.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 69.75, c * 274.4375);
  f[G](c * 62.75, c * 272.4375, c * 59.75, c * 277.4375, c * 57.75, c * 284.4375);
  f[G](c * 56.75, c * 290.4375, c * 63.75, c * 289.4375, c * 71.75, c * 282.4375);
  f[G](c * 75.75, c * 277.4375, c * 72.75, c * 275.4375, c * 69.75, c * 274.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 165.75, c * 95.4375);
  f[G](c * 177.75, c * 97.4375, c * 182.75, c * 115.4375, c * 173.75, c * 121.4375);
  f[G](c * 164.75, c * 126.4375, c * 149.75, c * 102.4375, c * 164.75, c * 96.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 216.75, c * 94.4375);
  f[G](c * 227.75, c * 99.4375, c * 223.75, c * 122.4375, c * 210.75, c * 119.4375);
  f[G](c * 203.75, c * 115.4375, c * 207.75, c * 93.4375, c * 216.75, c * 94.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 211.75, c * 68.4375);
  f[G](c * 218.75, c * 69.4375, c * 220.75, c * 77.4375, c * 216.75, c * 83.4375);
  f[G](c * 208.75, c * 89.4375, c * 205.75, c * 68.4375, c * 210.75, c * 68.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 169.75, c * 71.4375);
  f[G](c * 162.75, c * 72.4375, c * 159.75, c * 83.4375, c * 167.75, c * 88.4375);
  f[G](c * 174.75, c * 90.4375, c * 174.75, c * 72.4375, c * 170.75, c * 71.4375);
  f[X]();
  jc(f, d[6], d[7], c * 4);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 193.75, c * 160.4375);
  f[G](c * 215.75, c * 168.4375, c * 224.75, c * 180.4375, c * 229.75, c * 193.4375);
  f[G](c * 223.75, c * 211.4375, c * 205.75, c * 225.4375, c * 193.75, c * 229.4375);
  f[G](c * 167.75, c * 217.4375, c * 161.75, c * 205.4375, c * 156.75, c * 192.4375);
  f[G](c * 164.75, c * 175.4375, c * 176.75, c * 166.4375, c * 192.75, c * 160.4375);
  f[X]();
  jc(f, d[8], d[9], c * 3);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 189.1999969482422, c * 182.61249923706055);
  f[G](c * 190.1999969482422, c * 184.11249923706055, c * 190.1999969482422, c * 184.11249923706055, c * 191.1999969482422, c * 185.61249923706055);
  f[G](c * 192.1999969482422, c * 180.61249923706055, c * 192.1999969482422, c * 180.61249923706055, c * 193.1999969482422, c * 175.61249923706055);
  f[G](c * 195.6999969482422, c * 177.11249923706055, c * 195.6999969482422, c * 177.11249923706055, c * 198.1999969482422, c * 178.61249923706055);
  f[G](c * 198.1999969482422, c * 181.11249923706055, c * 198.1999969482422, c * 181.11249923706055, c * 198.1999969482422, c * 183.61249923706055);
  f[G](c * 201.6999969482422, c * 181.11249923706055, c * 201.6999969482422, c * 181.11249923706055, c * 205.1999969482422, c * 178.61249923706055);
  f[G](c * 206.6999969482422, c * 180.61249923706055, c * 206.6999969482422, c * 180.61249923706055, c * 208.1999969482422, c * 182.61249923706055);
  f[G](c * 206.1999969482422, c * 185.61249923706055, c * 206.1999969482422, c * 185.61249923706055, c * 204.1999969482422, c * 188.61249923706055);
  f[G](c * 208.6999969482422, c * 188.61249923706055, c * 208.6999969482422, c * 188.61249923706055, c * 213.1999969482422, c * 188.61249923706055);
  f[G](c * 213.1999969482422, c * 191.11249923706055, c * 213.1999969482422, c * 191.11249923706055, c * 213.1999969482422, c * 193.61249923706055);
  f[G](c * 209.6999969482422, c * 194.61249923706055, c * 209.6999969482422, c * 194.61249923706055, c * 206.1999969482422, c * 195.61249923706055);
  f[G](c * 210.1999969482422, c * 198.61249923706055, c * 210.1999969482422, c * 198.61249923706055, c * 214.1999969482422, c * 201.61249923706055);
  f[G](c * 212.1999969482422, c * 203.61249923706055, c * 212.1999969482422, c * 203.61249923706055, c * 210.1999969482422, c * 205.61249923706055);
  f[G](c * 207.1999969482422, c * 204.11249923706055, c * 207.1999969482422, c * 204.11249923706055, c * 204.1999969482422, c * 202.61249923706055);
  f[G](c * 205.6999969482422, c * 207.61249923706055, c * 205.6999969482422, c * 207.61249923706055, c * 207.1999969482422, c * 212.61249923706055);
  f[G](c * 204.6999969482422, c * 213.61249923706055, c * 204.6999969482422, c * 213.61249923706055, c * 202.1999969482422, c * 214.61249923706055);
  f[G](c * 200.1999969482422, c * 210.61249923706055, c * 200.1999969482422, c * 210.61249923706055, c * 198.1999969482422, c * 206.61249923706055);
  f[G](c * 196.6999969482422, c * 211.61249923706055, c * 196.6999969482422, c * 211.61249923706055, c * 195.1999969482422, c * 216.61249923706055);
  f[G](c * 192.6999969482422, c * 216.11249923706055, c * 192.6999969482422, c * 216.11249923706055, c * 190.1999969482422, c * 215.61249923706055);
  f[G](c * 190.1999969482422, c * 211.61249923706055, c * 190.1999969482422, c * 211.61249923706055, c * 190.1999969482422, c * 207.61249923706055);
  f[G](c * 186.1999969482422, c * 210.61249923706055, c * 186.1999969482422, c * 210.61249923706055, c * 182.1999969482422, c * 213.61249923706055);
  f[G](c * 181.1999969482422, c * 211.11249923706055, c * 181.1999969482422, c * 211.11249923706055, c * 180.1999969482422, c * 208.61249923706055);
  f[G](c * 183.1999969482422, c * 205.61249923706055, c * 183.1999969482422, c * 205.61249923706055, c * 186.1999969482422, c * 202.61249923706055);
  f[G](c * 180.6999969482422, c * 203.11249923706055, c * 180.6999969482422, c * 203.11249923706055, c * 175.1999969482422, c * 203.61249923706055);
  f[G](c * 174.6999969482422, c * 200.11249923706055, c * 174.6999969482422, c * 200.11249923706055, c * 174.1999969482422, c * 196.61249923706055);
  f[G](c * 177.1999969482422, c * 195.61249923706055, c * 177.1999969482422, c * 195.61249923706055, c * 180.1999969482422, c * 194.61249923706055);
  f[G](c * 177.1999969482422, c * 191.61249923706055, c * 177.1999969482422, c * 191.61249923706055, c * 174.1999969482422, c * 188.61249923706055);
  f[G](c * 175.6999969482422, c * 187.11249923706055, c * 175.6999969482422, c * 187.11249923706055, c * 177.1999969482422, c * 185.61249923706055);
  f[G](c * 180.6999969482422, c * 187.11249923706055, c * 180.6999969482422, c * 187.11249923706055, c * 184.1999969482422, c * 188.61249923706055);
  f[G](c * 182.6999969482422, c * 183.61249923706055, c * 182.6999969482422, c * 183.61249923706055, c * 181.1999969482422, c * 178.61249923706055);
  f[G](c * 183.1999969482422, c * 177.11249923706055, c * 183.1999969482422, c * 177.11249923706055, c * 185.1999969482422, c * 175.61249923706055);
  f[X]();
  jc(f, d[10]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 185.1999969482422, c * 173.8125);
  f[G](c * 187.1999969482422, c * 179.3125, c * 187.1999969482422, c * 179.3125, c * 189.1999969482422, c * 184.8125);
  f[G](c * 184.1999969482422, c * 181.8125, c * 184.1999969482422, c * 181.8125, c * 179.1999969482422, c * 178.8125);
  f[G](c * 181.1999969482422, c * 175.8125, c * 182.1999969482422, c * 174.8125, c * 185.1999969482422, c * 173.8125);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 192.1999969482422, c * 173.61249542236328);
  f[G](c * 194.1999969482422, c * 172.61249542236328, c * 196.1999969482422, c * 171.61249542236328, c * 199.1999969482422, c * 173.61249542236328);
  f[G](c * 197.6999969482422, c * 179.61249542236328, c * 197.6999969482422, c * 179.61249542236328, c * 196.1999969482422, c * 185.61249542236328);
  f[G](c * 194.1999969482422, c * 179.61249542236328, c * 194.1999969482422, c * 179.61249542236328, c * 192.1999969482422, c * 173.61249542236328);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 205.1999969482422, c * 176.2125015258789);
  f[G](c * 210.1999969482422, c * 178.2125015258789, c * 211.1999969482422, c * 179.2125015258789, c * 211.1999969482422, c * 181.2125015258789);
  f[G](c * 206.6999969482422, c * 184.7125015258789, c * 206.6999969482422, c * 184.7125015258789, c * 202.1999969482422, c * 188.2125015258789);
  f[G](c * 203.6999969482422, c * 182.2125015258789, c * 203.6999969482422, c * 182.2125015258789, c * 205.1999969482422, c * 176.2125015258789);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 214.1999969482422, c * 187.21249985694885);
  f[G](c * 216.1999969482422, c * 191.21249985694885, c * 216.1999969482422, c * 192.21249985694885, c * 215.1999969482422, c * 195.21249985694885);
  f[G](c * 206.1999969482422, c * 194.21249985694885, c * 205.1999969482422, c * 194.21249985694885, c * 205.1999969482422, c * 194.21249985694885);
  f[G](c * 209.6999969482422, c * 190.71249985694885, c * 209.6999969482422, c * 190.71249985694885, c * 214.1999969482422, c * 187.21249985694885);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 204.1999969482422, c * 201.8125);
  f[G](c * 209.1999969482422, c * 201.3125, c * 209.1999969482422, c * 201.3125, c * 214.1999969482422, c * 200.8125);
  f[G](c * 215.1999969482422, c * 204.8125, c * 214.1999969482422, c * 205.8125, c * 213.1999969482422, c * 208.8125);
  f[G](c * 208.6999969482422, c * 205.3125, c * 208.6999969482422, c * 205.3125, c * 204.1999969482422, c * 201.8125);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 199.1999969482422, c * 205.61249923706055);
  f[G](c * 207.1999969482422, c * 212.61249923706055, c * 203.6999969482422, c * 209.11249923706055, c * 208.1999969482422, c * 212.61249923706055);
  f[G](c * 206.1999969482422, c * 215.61249923706055, c * 204.1999969482422, c * 217.61249923706055, c * 203.1999969482422, c * 216.61249923706055);
  f[G](c * 201.1999969482422, c * 211.11249923706055, c * 201.1999969482422, c * 211.11249923706055, c * 199.1999969482422, c * 205.61249923706055);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 191.1999969482422, c * 207.01250076293945);
  f[G](c * 194.1999969482422, c * 213.01250076293945, c * 194.1999969482422, c * 216.01250076293945, c * 196.1999969482422, c * 218.01250076293945);
  f[G](c * 193.1999969482422, c * 220.01250076293945, c * 190.1999969482422, c * 220.01250076293945, c * 188.1999969482422, c * 218.01250076293945);
  f[G](c * 189.6999969482422, c * 213.01250076293945, c * 189.6999969482422, c * 213.01250076293945, c * 191.1999969482422, c * 208.01250076293945);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 186.1999969482422, c * 203.21249961853027);
  f[G](c * 184.1999969482422, c * 209.21249961853027, c * 184.1999969482422, c * 209.21249961853027, c * 182.1999969482422, c * 215.21249961853027);
  f[G](c * 177.1999969482422, c * 212.21249961853027, c * 176.1999969482422, c * 211.21249961853027, c * 177.1999969482422, c * 210.21249961853027);
  f[G](c * 181.6999969482422, c * 206.71249961853027, c * 181.6999969482422, c * 206.71249961853027, c * 186.1999969482422, c * 203.21249961853027);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 183.1999969482422, c * 196.8125);
  f[G](c * 177.1999969482422, c * 196.3125, c * 177.1999969482422, c * 196.3125, c * 171.1999969482422, c * 195.8125);
  f[G](c * 171.1999969482422, c * 199.8125, c * 171.1999969482422, c * 202.8125, c * 174.1999969482422, c * 204.8125);
  f[G](c * 178.6999969482422, c * 200.8125, c * 178.6999969482422, c * 200.8125, c * 183.1999969482422, c * 196.8125);
  f[X]();
  jc(f, d[11]);
  f[Y]();
  f[Ga] = "round";
  f[ea] = "round";
  f[K](c * 185.1999969482422, c * 190.21249771118164);
  f[G](c * 179.6999969482422, c * 186.71249771118164, c * 179.6999969482422, c * 186.71249771118164, c * 174.1999969482422, c * 183.21249771118164);
  f[G](c * 172.1999969482422, c * 186.21249771118164, c * 172.1999969482422, c * 187.21249771118164, c * 172.1999969482422, c * 190.21249771118164);
  f[G](c * 178.1999969482422, c * 190.21249771118164, c * 178.1999969482422, c * 190.21249771118164, c * 184.1999969482422, c * 190.21249771118164);
  f[X]();
  jc(f, d[11]);
  lc(f, c * 126.19999694824219, c * 169.8125, c * 8.94427190999916);
  jc(f, d[12]);
  lc(f, c * 123.19999694824219, c * 164.8125, c * 2.8284271247461903);
  jc(f, d[13]);
  lc(f, c * 253.1999969482422, c * 169.8125, c * 8.94427190999916);
  jc(f, d[12]);
  lc(f, c * 255.1999969482422, c * 164.8125, c * 2.23606797749979);
  jc(f, d[13]);
  return e;
}
function qf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  g[ua] = 1;
  g[Ia](c * 20, c * 20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 36.5, c * 278.0625);
  g[G](c * 67.5, c * 316.0625, c * 134.5, c * 334.0625, c * 199.5, c * 319.0625);
  g[G](c * 254.5, c * 304.0625, c * 346.5, c * 270.0625, c * 348.5, c * 237.0625);
  g[G](c * 359.5, c * 206.0625, c * 318.5, c * 129.0625, c * 262.5, c * 122.0625);
  g[G](c * 213.5, c * 115.0625, c * 166.5, c * 133.0625, c * 104.5, c * 166.0625);
  g[G](c * 54.5, c * 194.0625, c * 23.5, c * 241.0625, c * 36.5, c * 277.0625);
  g[X]();
  jc(g, e[0]);
  g[Ia](c * -20, c * -20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 36.5, c * 278.0625);
  g[G](c * 67.5, c * 316.0625, c * 134.5, c * 334.0625, c * 199.5, c * 319.0625);
  g[G](c * 254.5, c * 304.0625, c * 346.5, c * 270.0625, c * 348.5, c * 237.0625);
  g[G](c * 359.5, c * 206.0625, c * 318.5, c * 129.0625, c * 262.5, c * 122.0625);
  g[G](c * 213.5, c * 115.0625, c * 166.5, c * 133.0625, c * 104.5, c * 166.0625);
  g[G](c * 54.5, c * 194.0625, c * 23.5, c * 241.0625, c * 36.5, c * 277.0625);
  g[X]();
  jc(g, e[1], e[2], c * 19);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 214.5, c * 124.0625);
  g[G](c * 242.5, c * 125.0625, c * 272.5, c * 159.0625, c * 283.5, c * 184.0625);
  g[G](c * 277.5, c * 161.0625, c * 233.5, c * 128.0625, c * 219.5, c * 122.0625);
  g[X]();
  jc(g, undefined, e[2], c * 19);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 157.5, c * 145.0625);
  g[G](c * 176.5, c * 148.0625, c * 205.5, c * 176.0625, c * 212.5, c * 197.0625);
  g[G](c * 205.5, c * 178.0625, c * 177.5, c * 152.0625, c * 156.5, c * 142.0625);
  g[X]();
  jc(g, undefined, e[2], c * 19);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 103.5, c * 169.0625);
  g[G](c * 160.5, c * 166.0625, c * 228.5, c * 312.0625, c * 162.5, c * 323.0625);
  g[G](c * 128.5, c * 330.0625, c * 45.5, c * 312.0625, c * 34.5, c * 268.0625);
  g[G](c * 30.5, c * 238.0625, c * 44.5, c * 222.0625, c * 52.5, c * 211.0625);
  g[G](c * 82.5, c * 174.0625, c * 104.5, c * 166.0625, c * 119.5, c * 172.0625);
  g[X]();
  jc(g, e[3], e[2], c * 19);
  lc(g, c * 92.5, c * 216.0625, c * 13.892443989449804);
  jc(g, e[4]);
  lc(g, c * 68.5, c * 227.0625, c * 8.06225774829855);
  jc(g, e[4]);
  lc(g, c * 85.5, c * 240.0625, c * 6.708203932499369);
  jc(g, e[4]);
  lc(g, c * 147.5, c * 294.0625, c * 17.46424919657298);
  jc(g, e[4]);
  lc(g, c * 166.5, c * 273.0625, c * 6.708203932499369);
  jc(g, e[4]);
  lc(g, c * 114.5, c * 294.0625, c * 12.36931687685298);
  jc(g, e[4]);
  lc(g, c * 123.5, c * 220.0625, c * 5.830951894845301);
  jc(g, e[4]);
  lc(g, c * 114.5, c * 259.0625, c * 4.123105625617661);
  jc(g, e[4]);
  lc(g, c * 63.5, c * 265.0625, c * 5.385164807134504);
  jc(g, e[4]);
  lc(g, c * 148.5, c * 235.0625, c * 4.47213595499958);
  jc(g, e[4]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 194.5, c * 313.0625);
  g[G](c * 222.5, c * 306.0625, c * 319.5, c * 271.0625, c * 337.5, c * 241.0625);
  g[G](c * 274.5, c * 270.0625, c * 216.5, c * 288.0625, c * 199.5, c * 287.0625);
  g[G](c * 198.5, c * 302.0625, c * 195.5, c * 311.0625, c * 193.5, c * 312.0625);
  g[X]();
  jc(g, e[5]);
  return f;
}
function rf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 440;
  f.height = c * 388;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  lc(g, c * 220, c * 201, c * 170.41713528867922);
  jc(g, e[0], e[0], c * 6);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  lc(g, c * 220, c * 201, c * 170.41713528867922);
  jc(g, e[1], e[2], c * 6);
  lc(g, c * 220, c * 201, c * 130);
  jc(g, e[11], e[2], c * 6);
  lc(g, c * 222, c * 199, c * 120.74767078498864);
  jc(g, undefined, e[3], c * 40);
  lc(g, c * 220, c * 200, c * 95.44108130150245);
  jc(g, undefined, e[2], c * 15);
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  lc(g, c * 63, c * 136, c * 49.193495504995376);
  jc(g, e[0], e[0], c * 4);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  lc(g, c * 63, c * 136, c * 49.193495504995376);
  jc(g, e[8], e[2], c * 4);
  lc(g, c * 63, c * 137, c * 25.632011235952593);
  jc(g, e[7], e[2], c * 4);
  return f;
}
function sf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 440;
  f.height = c * 388;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  lc(g, c * 220, c * 201, c * 170.41713528867922);
  jc(g, e[0], e[0], c * 6);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  lc(g, c * 220, c * 201, c * 170.41713528867922);
  jc(g, e[1], e[2], c * 6);
  lc(g, c * 220, c * 201, c * 130);
  jc(g, e[11], e[2], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 218, c * 97);
  g[G](c * 219, c * 163, c * 201, c * 176, c * 191, c * 175);
  g[G](c * 176, c * 177, c * 168, c * 167, c * 160, c * 115);
  g[X]();
  jc(g, e[5], e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 224, c * 181);
  g[G](c * 225, c * 138, c * 246, c * 115, c * 263, c * 137);
  g[G](c * 282, c * 174, c * 279, c * 217, c * 265, c * 243);
  g[G](c * 253, c * 264, c * 240, c * 256, c * 233, c * 238);
  g[G](c * 221, c * 212, c * 225, c * 198, c * 224, c * 184);
  g[X]();
  jc(g, e[5], e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 169, c * 289);
  g[G](c * 161, c * 234, c * 168, c * 197, c * 187, c * 195);
  g[G](c * 219, c * 189, c * 222, c * 256, c * 216, c * 307);
  g[X]();
  jc(g, e[5], e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 143, c * 146);
  g[G](c * 161, c * 199, c * 151, c * 245, c * 138, c * 266);
  g[G](c * 120.5, c * 239.5, c * 120.5, c * 239.5, c * 103, c * 213);
  g[X]();
  jc(g, e[5], e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 283, c * 135);
  g[G](c * 277, c * 176, c * 298, c * 194, c * 315, c * 205);
  g[G](c * 323.5, c * 175, c * 323.5, c * 175, c * 332, c * 145);
  g[X]();
  jc(g, e[5], e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 318, c * 223);
  g[G](c * 290, c * 195, c * 271, c * 256, c * 283, c * 281);
  g[G](c * 303.5, c * 267, c * 303.5, c * 267, c * 324, c * 253);
  g[X]();
  jc(g, e[5], e[6], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 142, c * 223);
  g[G](c * 128, c * 213, c * 123, c * 214, c * 111, c * 223);
  g[X]();
  jc(g, e[10], e[10], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 251, c * 133);
  g[G](c * 269, c * 188, c * 262, c * 229, c * 251, c * 253);
  g[G](c * 288, c * 224, c * 273, c * 139, c * 252, c * 133);
  g[X]();
  jc(g, e[10], e[10], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 203, c * 102);
  g[G](c * 204, c * 136, c * 200, c * 159, c * 189, c * 174);
  g[G](c * 223, c * 164, c * 219, c * 87, c * 205, c * 83);
  g[X]();
  jc(g, e[10], e[10], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 196, c * 324);
  g[G](c * 209, c * 239, c * 200, c * 219, c * 192, c * 196);
  g[G](c * 229, c * 216, c * 219, c * 316, c * 198, c * 325);
  g[X]();
  jc(g, e[10], e[10], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 266, c * 166);
  g[G](c * 249, c * 154, c * 243, c * 161, c * 233, c * 167);
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 269, c * 192);
  g[G](c * 256, c * 183, c * 241, c * 186, c * 233, c * 192);
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 263, c * 217);
  g[G](c * 251, c * 211, c * 242, c * 213, c * 236, c * 218);
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 204, c * 141);
  g[G](c * 191, c * 131, c * 187, c * 133, c * 176, c * 141);
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 207, c * 230);
  g[G](c * 193, c * 222, c * 185, c * 224, c * 177, c * 231);
  jc(g, undefined, e[6], c * 6);
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 210, c * 258);
  g[G](c * 196, c * 247, c * 191, c * 250, c * 177, c * 259);
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 145, c * 196);
  g[G](c * 130, c * 186, c * 124, c * 187, c * 114, c * 195);
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 218, c * 97);
  g[G](c * 219, c * 163, c * 201, c * 176, c * 191, c * 175);
  g[G](c * 176, c * 177, c * 168, c * 167, c * 160, c * 115);
  g[X]();
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 224, c * 181);
  g[G](c * 225, c * 138, c * 246, c * 115, c * 263, c * 137);
  g[G](c * 282, c * 174, c * 279, c * 217, c * 265, c * 243);
  g[G](c * 253, c * 264, c * 240, c * 256, c * 233, c * 238);
  g[G](c * 221, c * 212, c * 225, c * 198, c * 224, c * 184);
  g[X]();
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 169, c * 289);
  g[G](c * 161, c * 234, c * 168, c * 197, c * 187, c * 195);
  g[G](c * 219, c * 189, c * 222, c * 256, c * 216, c * 307);
  g[X]();
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 143, c * 146);
  g[G](c * 161, c * 199, c * 151, c * 245, c * 138, c * 266);
  g[G](c * 120.5, c * 239.5, c * 120.5, c * 239.5, c * 103, c * 213);
  g[X]();
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 283, c * 135);
  g[G](c * 277, c * 176, c * 298, c * 194, c * 315, c * 205);
  g[G](c * 323.5, c * 175, c * 323.5, c * 175, c * 332, c * 145);
  g[X]();
  jc(g, undefined, e[6], c * 6);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 318, c * 223);
  g[G](c * 290, c * 195, c * 271, c * 256, c * 283, c * 281);
  g[G](c * 303.5, c * 267, c * 303.5, c * 267, c * 324, c * 253);
  g[X]();
  jc(g, undefined, e[6], c * 6);
  lc(g, c * 222, c * 199, c * 120.74767078498864);
  jc(g, undefined, e[3], c * 40);
  lc(g, c * 220, c * 200, c * 95.44108130150245);
  jc(g, undefined, e[2], c * 15);
  lc(g, c * 220, c * 201, c * 85);
  jc(g, undefined, e[4], c * 10);
  g[ua] = 0.5;
  lc(g, c * 220, c * 201, c * 82);
  jc(g, e[9]);
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  lc(g, c * 63, c * 136, c * 49.193495504995376);
  jc(g, e[0], e[0], c * 4);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  lc(g, c * 63, c * 136, c * 49.193495504995376);
  jc(g, e[8], e[2], c * 4);
  lc(g, c * 63, c * 137, c * 25.632011235952593);
  jc(g, e[7], e[2], c * 4);
  return f;
}
function tf(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 110;
  e.height = c * 110;
  f[ua] = 0.2;
  lc(f, c * 55, c * 55, c * 55);
  jc(f, d[0]);
  return e;
}
function uf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 102;
  f.height = c * 102;
  g[ua] = d ? 0.5 : 1;
  g[Ia](3, 3);
  kc(g, c * 24, c * 26, c * 70, c * 9, c * 10);
  jc(g, e[0]);
  kc(g, c * 26, c * 70, c * 70, c * 9, c * 10);
  jc(g, e[0]);
  kc(g, c * 5, c * 3, c * 22, c * 94, c * 5);
  jc(g, e[0]);
  kc(g, c * 40, c * 3, c * 22, c * 94, c * 5);
  jc(g, e[0]);
  kc(g, c * 75, c * 3, c * 22, c * 94, c * 5);
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](-3, -3);
  kc(g, c * 24, c * 26, c * 70, c * 9, c * 10);
  jc(g, e[1]);
  kc(g, c * 26, c * 70, c * 70, c * 9, c * 10);
  jc(g, e[1]);
  kc(g, c * 5, c * 3, c * 22, c * 94, c * 5);
  jc(g, e[2], e[3], c * 4);
  kc(g, c * 40, c * 3, c * 22, c * 94, c * 5);
  jc(g, e[2], e[3], c * 4);
  kc(g, c * 75, c * 3, c * 22, c * 94, c * 5);
  jc(g, e[2], e[3], c * 4);
  return f;
}
function vf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 496;
  f.height = c * 520;
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 19.000030517578125, c * 256.67613983154297);
  g[G](c * 1.000030517578125, c * 332.67613983154297, c * 23.000030517578125, c * 404.67613983154297, c * 95.00003051757812, c * 463.67613983154297);
  g[G](c * 128.00003051757812, c * 491.67613983154297, c * 165.00003051757812, c * 507.67613983154297, c * 194.00003051757812, c * 512.676139831543);
  g[G](c * 280.0000305175781, c * 517.676139831543, c * 291.0000305175781, c * 516.676139831543, c * 342.0000305175781, c * 497.67613983154297);
  g[G](c * 425.0000305175781, c * 454.67613983154297, c * 469.0000305175781, c * 392.67613983154297, c * 468.0000305175781, c * 300.67613983154297);
  g[G](c * 408.5000305175781, c * 365.17613983154297, c * 408.5000305175781, c * 365.17613983154297, c * 349.0000305175781, c * 429.67613983154297);
  g[G](c * 256.0000305175781, c * 473.67613983154297, c * 167.00003051757812, c * 459.67613983154297, c * 78.00003051757812, c * 384.67613983154297);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](0, c * -10);
  lc(g, c * 247.01138305664062, c * 249.3125, c * 161.4465855941215);
  jc(g, e[5], undefined, c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 65.00003051757812, c * 263.4034118652344);
  g[G](c * 109.00003051757812, c * 160.40341186523438, c * 185.00003051757812, c * 128.40341186523438, c * 222.00003051757812, c * 124.40341186523438);
  g[G](c * 277.0000305175781, c * 116.40341186523438, c * 339.0000305175781, c * 134.40341186523438, c * 379.0000305175781, c * 195.40341186523438);
  g[G](c * 409.0000305175781, c * 242.40341186523438, c * 416.0000305175781, c * 256.4034118652344, c * 428.0000305175781, c * 304.4034118652344);
  g[G](c * 457.0000305175781, c * 203.40341186523438, c * 449.0000305175781, c * 183.40341186523438, c * 438.0000305175781, c * 162.40341186523438);
  g[G](c * 381.0000305175781, c * 73.40341186523438, c * 360.0000305175781, c * 66.40341186523438, c * 257.0000305175781, c * 46.403411865234375);
  g[G](c * 191.00003051757812, c * 45.403411865234375, c * 142.00003051757812, c * 65.40341186523438, c * 101.00003051757812, c * 115.40341186523438);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  var i = function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 496;
    e.height = c * 520;
    f[ua] = 1;
    f[Ia](0, c * -10);
    lc(f, c * 247.01138305664062, c * 250.13068389892578, c * 232.81967270830015);
    jc(f, d[1], d[2], c * 14);
    f[Sa] = "destination-out";
    lc(f, c * 247.01138305664062, c * 249.3125, c * 161.4465855941215);
    jc(f, d[0], d[0], c * 14);
    f[Sa] = "source-over";
    return e;
  }(c, e);
  g[r](i, 0, 0);
  g[Ia](0, c * -10);
  lc(g, c * 247.01138305664062, c * 249.3125, c * 161.4465855941215);
  jc(g, undefined, e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 325.0113830566406, c * 13.767059326171875);
  g[G](c * 349.5113830566406, c * 25.767059326171875, c * 349.5113830566406, c * 25.767059326171875, c * 374.0113830566406, c * 37.767059326171875);
  g[G](c * 384.0113830566406, c * 44.767059326171875, c * 383.0113830566406, c * 50.767059326171875, c * 368.0113830566406, c * 68.76705932617188);
  g[G](c * 352.5113830566406, c * 91.26705932617188, c * 352.5113830566406, c * 91.26705932617188, c * 337.0113830566406, c * 113.76705932617188);
  g[G](c * 328.0113830566406, c * 119.76705932617188, c * 328.0113830566406, c * 121.76705932617188, c * 312.0113830566406, c * 112.76705932617188);
  g[G](c * 303.0113830566406, c * 108.26705932617188, c * 303.0113830566406, c * 108.26705932617188, c * 294.0113830566406, c * 103.76705932617188);
  g[G](c * 287.0113830566406, c * 99.76705932617188, c * 293.0113830566406, c * 84.76705932617188, c * 297.0113830566406, c * 67.76705932617188);
  g[G](c * 302.0113830566406, c * 47.767059326171875, c * 302.0113830566406, c * 47.767059326171875, c * 307.0113830566406, c * 27.767059326171875);
  g[G](c * 310.0113830566406, c * 15.767059326171875, c * 317.0113830566406, c * 12.767059326171875, c * 323.0113830566406, c * 13.767059326171875);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 325.0113830566406, c * 13.767059326171875);
  g[G](c * 349.5113830566406, c * 25.767059326171875, c * 349.5113830566406, c * 25.767059326171875, c * 374.0113830566406, c * 37.767059326171875);
  g[G](c * 384.0113830566406, c * 44.767059326171875, c * 383.0113830566406, c * 50.767059326171875, c * 368.0113830566406, c * 68.76705932617188);
  g[G](c * 352.5113830566406, c * 91.26705932617188, c * 352.5113830566406, c * 91.26705932617188, c * 337.0113830566406, c * 113.76705932617188);
  g[G](c * 328.0113830566406, c * 119.76705932617188, c * 328.0113830566406, c * 121.76705932617188, c * 312.0113830566406, c * 112.76705932617188);
  g[G](c * 303.0113830566406, c * 108.26705932617188, c * 303.0113830566406, c * 108.26705932617188, c * 294.0113830566406, c * 103.76705932617188);
  g[G](c * 287.0113830566406, c * 99.76705932617188, c * 293.0113830566406, c * 84.76705932617188, c * 297.0113830566406, c * 67.76705932617188);
  g[G](c * 302.0113830566406, c * 47.767059326171875, c * 302.0113830566406, c * 47.767059326171875, c * 307.0113830566406, c * 27.767059326171875);
  g[G](c * 310.0113830566406, c * 15.767059326171875, c * 317.0113830566406, c * 12.767059326171875, c * 323.0113830566406, c * 13.767059326171875);
  g[X]();
  jc(g, e[3], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 403.0113830566406, c * 89.76705932617188);
  g[G](c * 413.0113830566406, c * 76.76705932617188, c * 418.0113830566406, c * 79.76705932617188, c * 428.0113830566406, c * 92.76705932617188);
  g[G](c * 435.0113830566406, c * 99.76705932617188, c * 435.0113830566406, c * 99.76705932617188, c * 442.0113830566406, c * 106.76705932617188);
  g[G](c * 450.0113830566406, c * 116.76705932617188, c * 445.0113830566406, c * 119.76705932617188, c * 433.0113830566406, c * 128.76705932617188);
  g[G](c * 408.0113830566406, c * 146.26705932617188, c * 408.0113830566406, c * 146.26705932617188, c * 383.0113830566406, c * 163.76705932617188);
  g[G](c * 376.0113830566406, c * 166.76705932617188, c * 377.0113830566406, c * 165.76705932617188, c * 368.0113830566406, c * 156.76705932617188);
  g[G](c * 359.0113830566406, c * 144.76705932617188, c * 359.0113830566406, c * 142.76705932617188, c * 367.0113830566406, c * 133.76705932617188);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 403.0113830566406, c * 89.76705932617188);
  g[G](c * 413.0113830566406, c * 76.76705932617188, c * 418.0113830566406, c * 79.76705932617188, c * 428.0113830566406, c * 92.76705932617188);
  g[G](c * 435.0113830566406, c * 99.76705932617188, c * 435.0113830566406, c * 99.76705932617188, c * 442.0113830566406, c * 106.76705932617188);
  g[G](c * 450.0113830566406, c * 116.76705932617188, c * 445.0113830566406, c * 119.76705932617188, c * 433.0113830566406, c * 128.76705932617188);
  g[G](c * 408.0113830566406, c * 146.26705932617188, c * 408.0113830566406, c * 146.26705932617188, c * 383.0113830566406, c * 163.76705932617188);
  g[G](c * 376.0113830566406, c * 166.76705932617188, c * 377.0113830566406, c * 165.76705932617188, c * 368.0113830566406, c * 156.76705932617188);
  g[G](c * 359.0113830566406, c * 144.76705932617188, c * 359.0113830566406, c * 142.76705932617188, c * 367.0113830566406, c * 133.76705932617188);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 228.01138305664062, c * 1.767059326171875);
  g[G](c * 246.51138305664062, c * 3.267059326171875, c * 246.51138305664062, c * 3.267059326171875, c * 265.0113830566406, c * 4.767059326171875);
  g[G](c * 273.0113830566406, c * 5.767059326171875, c * 275.0113830566406, c * 11.767059326171875, c * 270.0113830566406, c * 27.767059326171875);
  g[G](c * 264.0113830566406, c * 54.267059326171875, c * 264.0113830566406, c * 54.267059326171875, c * 258.0113830566406, c * 80.76705932617188);
  g[G](c * 256.0113830566406, c * 92.76705932617188, c * 256.0113830566406, c * 94.76705932617188, c * 242.01138305664062, c * 93.76705932617188);
  g[G](c * 226.01138305664062, c * 95.76705932617188, c * 225.01138305664062, c * 91.76705932617188, c * 225.01138305664062, c * 80.76705932617188);
  g[G](c * 223.51138305664062, c * 50.267059326171875, c * 223.51138305664062, c * 50.267059326171875, c * 222.01138305664062, c * 19.767059326171875);
  g[G](c * 219.01138305664062, c * 8.767059326171875, c * 224.01138305664062, c * 4.767059326171875, c * 227.01138305664062, c * 2.767059326171875);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 228.01138305664062, c * 1.767059326171875);
  g[G](c * 246.51138305664062, c * 3.267059326171875, c * 246.51138305664062, c * 3.267059326171875, c * 265.0113830566406, c * 4.767059326171875);
  g[G](c * 273.0113830566406, c * 5.767059326171875, c * 275.0113830566406, c * 11.767059326171875, c * 270.0113830566406, c * 27.767059326171875);
  g[G](c * 264.0113830566406, c * 54.267059326171875, c * 264.0113830566406, c * 54.267059326171875, c * 258.0113830566406, c * 80.76705932617188);
  g[G](c * 256.0113830566406, c * 92.76705932617188, c * 256.0113830566406, c * 94.76705932617188, c * 242.01138305664062, c * 93.76705932617188);
  g[G](c * 226.01138305664062, c * 95.76705932617188, c * 225.01138305664062, c * 91.76705932617188, c * 225.01138305664062, c * 80.76705932617188);
  g[G](c * 223.51138305664062, c * 50.267059326171875, c * 223.51138305664062, c * 50.267059326171875, c * 222.01138305664062, c * 19.767059326171875);
  g[G](c * 219.01138305664062, c * 8.767059326171875, c * 224.01138305664062, c * 4.767059326171875, c * 227.01138305664062, c * 2.767059326171875);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 142.01138305664062, c * 25.767059326171875);
  g[G](c * 158.51138305664062, c * 19.767059326171875, c * 158.51138305664062, c * 19.767059326171875, c * 175.01138305664062, c * 13.767059326171875);
  g[G](c * 188.01138305664062, c * 11.767059326171875, c * 188.01138305664062, c * 16.767059326171875, c * 191.01138305664062, c * 29.767059326171875);
  g[G](c * 197.01138305664062, c * 60.267059326171875, c * 197.01138305664062, c * 60.267059326171875, c * 203.01138305664062, c * 90.76705932617188);
  g[G](c * 206.01138305664062, c * 102.76705932617188, c * 196.01138305664062, c * 99.76705932617188, c * 181.01138305664062, c * 105.76705932617188);
  g[G](c * 175.01138305664062, c * 108.76705932617188, c * 172.01138305664062, c * 104.76705932617188, c * 164.01138305664062, c * 84.76705932617188);
  g[G](c * 152.51138305664062, c * 63.267059326171875, c * 152.51138305664062, c * 63.267059326171875, c * 141.01138305664062, c * 41.767059326171875);
  g[G](c * 138.01138305664062, c * 35.767059326171875, c * 138.01138305664062, c * 29.767059326171875, c * 141.01138305664062, c * 27.767059326171875);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 142.01138305664062, c * 25.767059326171875);
  g[G](c * 158.51138305664062, c * 19.767059326171875, c * 158.51138305664062, c * 19.767059326171875, c * 175.01138305664062, c * 13.767059326171875);
  g[G](c * 188.01138305664062, c * 11.767059326171875, c * 188.01138305664062, c * 16.767059326171875, c * 191.01138305664062, c * 29.767059326171875);
  g[G](c * 197.01138305664062, c * 60.267059326171875, c * 197.01138305664062, c * 60.267059326171875, c * 203.01138305664062, c * 90.76705932617188);
  g[G](c * 206.01138305664062, c * 102.76705932617188, c * 196.01138305664062, c * 99.76705932617188, c * 181.01138305664062, c * 105.76705932617188);
  g[G](c * 175.01138305664062, c * 108.76705932617188, c * 172.01138305664062, c * 104.76705932617188, c * 164.01138305664062, c * 84.76705932617188);
  g[G](c * 152.51138305664062, c * 63.267059326171875, c * 152.51138305664062, c * 63.267059326171875, c * 141.01138305664062, c * 41.767059326171875);
  g[G](c * 138.01138305664062, c * 35.767059326171875, c * 138.01138305664062, c * 29.767059326171875, c * 141.01138305664062, c * 27.767059326171875);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 70.01138305664062, c * 76.76705932617188);
  g[G](c * 83.01138305664062, c * 64.26705932617188, c * 83.01138305664062, c * 64.26705932617188, c * 96.01138305664062, c * 51.767059326171875);
  g[G](c * 104.01138305664062, c * 44.767059326171875, c * 110.01138305664062, c * 51.767059326171875, c * 119.01138305664062, c * 66.76705932617188);
  g[G](c * 135.01138305664062, c * 88.26705932617188, c * 135.01138305664062, c * 88.26705932617188, c * 151.01138305664062, c * 109.76705932617188);
  g[G](c * 157.01138305664062, c * 119.76705932617188, c * 153.01138305664062, c * 122.76705932617188, c * 147.01138305664062, c * 129.76705932617188);
  g[G](c * 138.01138305664062, c * 140.76705932617188, c * 136.01138305664062, c * 140.76705932617188, c * 122.01138305664062, c * 127.76705932617188);
  g[G](c * 99.51138305664062, c * 110.26705932617188, c * 99.51138305664062, c * 110.26705932617188, c * 77.01138305664062, c * 92.76705932617188);
  g[G](c * 66.01138305664062, c * 83.76705932617188, c * 66.01138305664062, c * 82.76705932617188, c * 69.01138305664062, c * 78.76705932617188);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 70.01138305664062, c * 76.76705932617188);
  g[G](c * 83.01138305664062, c * 64.26705932617188, c * 83.01138305664062, c * 64.26705932617188, c * 96.01138305664062, c * 51.767059326171875);
  g[G](c * 104.01138305664062, c * 44.767059326171875, c * 110.01138305664062, c * 51.767059326171875, c * 119.01138305664062, c * 66.76705932617188);
  g[G](c * 135.01138305664062, c * 88.26705932617188, c * 135.01138305664062, c * 88.26705932617188, c * 151.01138305664062, c * 109.76705932617188);
  g[G](c * 157.01138305664062, c * 119.76705932617188, c * 153.01138305664062, c * 122.76705932617188, c * 147.01138305664062, c * 129.76705932617188);
  g[G](c * 138.01138305664062, c * 140.76705932617188, c * 136.01138305664062, c * 140.76705932617188, c * 122.01138305664062, c * 127.76705932617188);
  g[G](c * 99.51138305664062, c * 110.26705932617188, c * 99.51138305664062, c * 110.26705932617188, c * 77.01138305664062, c * 92.76705932617188);
  g[G](c * 66.01138305664062, c * 83.76705932617188, c * 66.01138305664062, c * 82.76705932617188, c * 69.01138305664062, c * 78.76705932617188);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 33.011383056640625, c * 126.76705932617188);
  g[G](c * 22.011383056640625, c * 149.76705932617188, c * 22.011383056640625, c * 149.76705932617188, c * 11.011383056640625, c * 172.76705932617188);
  g[G](c * 7.011383056640625, c * 184.76705932617188, c * 11.011383056640625, c * 189.76705932617188, c * 36.011383056640625, c * 195.76705932617188);
  g[G](c * 61.011383056640625, c * 202.26705932617188, c * 61.011383056640625, c * 202.26705932617188, c * 86.01138305664062, c * 208.76705932617188);
  g[G](c * 100.01138305664062, c * 214.76705932617188, c * 102.01138305664062, c * 203.76705932617188, c * 109.01138305664062, c * 189.76705932617188);
  g[G](c * 117.01138305664062, c * 171.76705932617188, c * 116.01138305664062, c * 166.76705932617188, c * 97.01138305664062, c * 156.76705932617188);
  g[G](c * 74.01138305664062, c * 140.76705932617188, c * 74.01138305664062, c * 140.76705932617188, c * 51.011383056640625, c * 124.76705932617188);
  g[G](c * 42.011383056640625, c * 118.76705932617188, c * 37.011383056640625, c * 119.76705932617188, c * 33.011383056640625, c * 126.76705932617188);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 33.011383056640625, c * 126.76705932617188);
  g[G](c * 22.011383056640625, c * 149.76705932617188, c * 22.011383056640625, c * 149.76705932617188, c * 11.011383056640625, c * 172.76705932617188);
  g[G](c * 7.011383056640625, c * 184.76705932617188, c * 11.011383056640625, c * 189.76705932617188, c * 36.011383056640625, c * 195.76705932617188);
  g[G](c * 61.011383056640625, c * 202.26705932617188, c * 61.011383056640625, c * 202.26705932617188, c * 86.01138305664062, c * 208.76705932617188);
  g[G](c * 100.01138305664062, c * 214.76705932617188, c * 102.01138305664062, c * 203.76705932617188, c * 109.01138305664062, c * 189.76705932617188);
  g[G](c * 117.01138305664062, c * 171.76705932617188, c * 116.01138305664062, c * 166.76705932617188, c * 97.01138305664062, c * 156.76705932617188);
  g[G](c * 74.01138305664062, c * 140.76705932617188, c * 74.01138305664062, c * 140.76705932617188, c * 51.011383056640625, c * 124.76705932617188);
  g[G](c * 42.011383056640625, c * 118.76705932617188, c * 37.011383056640625, c * 119.76705932617188, c * 33.011383056640625, c * 126.76705932617188);
  g[X]();
  jc(g, e[3], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 13.011383056640625, c * 229.76705932617188);
  g[G](c * 45.511383056640625, c * 233.76705932617188, c * 45.511383056640625, c * 233.76705932617188, c * 78.01138305664062, c * 237.76705932617188);
  g[G](c * 92.01138305664062, c * 239.76705932617188, c * 92.01138305664062, c * 246.76705932617188, c * 91.01138305664062, c * 257.7670593261719);
  g[G](c * 92.01138305664062, c * 275.7670593261719, c * 91.01138305664062, c * 274.7670593261719, c * 68.01138305664062, c * 276.7670593261719);
  g[G](c * 42.511383056640625, c * 279.7670593261719, c * 42.511383056640625, c * 279.7670593261719, c * 17.011383056640625, c * 282.7670593261719);
  g[G](c * 2.011383056640625, c * 282.7670593261719, c * 3.011383056640625, c * 276.7670593261719, c * 2.011383056640625, c * 260.7670593261719);
  g[G](c * 2.011383056640625, c * 231.76705932617188, c * 4.011383056640625, c * 232.76705932617188, c * 11.011383056640625, c * 230.76705932617188);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 13.011383056640625, c * 229.76705932617188);
  g[G](c * 45.511383056640625, c * 233.76705932617188, c * 45.511383056640625, c * 233.76705932617188, c * 78.01138305664062, c * 237.76705932617188);
  g[G](c * 92.01138305664062, c * 239.76705932617188, c * 92.01138305664062, c * 246.76705932617188, c * 91.01138305664062, c * 257.7670593261719);
  g[G](c * 92.01138305664062, c * 275.7670593261719, c * 91.01138305664062, c * 274.7670593261719, c * 68.01138305664062, c * 276.7670593261719);
  g[G](c * 42.511383056640625, c * 279.7670593261719, c * 42.511383056640625, c * 279.7670593261719, c * 17.011383056640625, c * 282.7670593261719);
  g[G](c * 2.011383056640625, c * 282.7670593261719, c * 3.011383056640625, c * 276.7670593261719, c * 2.011383056640625, c * 260.7670593261719);
  g[G](c * 2.011383056640625, c * 231.76705932617188, c * 4.011383056640625, c * 232.76705932617188, c * 11.011383056640625, c * 230.76705932617188);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 97.01138305664062, c * 329.7670593261719);
  g[G](c * 68.51138305664062, c * 343.7670593261719, c * 68.51138305664062, c * 343.7670593261719, c * 40.011383056640625, c * 357.7670593261719);
  g[G](c * 29.011383056640625, c * 360.7670593261719, c * 27.011383056640625, c * 361.7670593261719, c * 20.011383056640625, c * 346.7670593261719);
  g[G](c * 16.511383056640625, c * 336.2670593261719, c * 16.511383056640625, c * 336.2670593261719, c * 13.011383056640625, c * 325.7670593261719);
  g[G](c * 10.011383056640625, c * 307.7670593261719, c * 18.011383056640625, c * 312.7670593261719, c * 34.011383056640625, c * 306.7670593261719);
  g[G](c * 59.511383056640625, c * 302.2670593261719, c * 59.511383056640625, c * 302.2670593261719, c * 85.01138305664062, c * 297.7670593261719);
  g[G](c * 97.01138305664062, c * 294.7670593261719, c * 100.01138305664062, c * 297.7670593261719, c * 100.01138305664062, c * 307.7670593261719);
  g[G](c * 105.01138305664062, c * 326.7670593261719, c * 103.01138305664062, c * 325.7670593261719, c * 97.01138305664062, c * 329.7670593261719);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 97.01138305664062, c * 329.7670593261719);
  g[G](c * 68.51138305664062, c * 343.7670593261719, c * 68.51138305664062, c * 343.7670593261719, c * 40.011383056640625, c * 357.7670593261719);
  g[G](c * 29.011383056640625, c * 360.7670593261719, c * 27.011383056640625, c * 361.7670593261719, c * 20.011383056640625, c * 346.7670593261719);
  g[G](c * 16.511383056640625, c * 336.2670593261719, c * 16.511383056640625, c * 336.2670593261719, c * 13.011383056640625, c * 325.7670593261719);
  g[G](c * 10.011383056640625, c * 307.7670593261719, c * 18.011383056640625, c * 312.7670593261719, c * 34.011383056640625, c * 306.7670593261719);
  g[G](c * 59.511383056640625, c * 302.2670593261719, c * 59.511383056640625, c * 302.2670593261719, c * 85.01138305664062, c * 297.7670593261719);
  g[G](c * 97.01138305664062, c * 294.7670593261719, c * 100.01138305664062, c * 297.7670593261719, c * 100.01138305664062, c * 307.7670593261719);
  g[G](c * 105.01138305664062, c * 326.7670593261719, c * 103.01138305664062, c * 325.7670593261719, c * 97.01138305664062, c * 329.7670593261719);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 394.0113830566406, c * 181.76705932617188);
  g[G](c * 426.5113830566406, c * 166.76705932617188, c * 426.5113830566406, c * 166.76705932617188, c * 459.0113830566406, c * 151.76705932617188);
  g[G](c * 469.0113830566406, c * 152.76705932617188, c * 469.0113830566406, c * 155.76705932617188, c * 472.0113830566406, c * 165.76705932617188);
  g[G](c * 476.0113830566406, c * 177.26705932617188, c * 476.0113830566406, c * 177.26705932617188, c * 480.0113830566406, c * 188.76705932617188);
  g[G](c * 483.0113830566406, c * 199.76705932617188, c * 480.0113830566406, c * 200.76705932617188, c * 460.0113830566406, c * 205.76705932617188);
  g[G](c * 433.5113830566406, c * 210.26705932617188, c * 433.5113830566406, c * 210.26705932617188, c * 407.0113830566406, c * 214.76705932617188);
  g[G](c * 395.0113830566406, c * 218.76705932617188, c * 397.0113830566406, c * 211.76705932617188, c * 393.0113830566406, c * 202.76705932617188);
  g[G](c * 387.0113830566406, c * 188.76705932617188, c * 387.0113830566406, c * 187.76705932617188, c * 394.0113830566406, c * 181.76705932617188);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 394.0113830566406, c * 181.76705932617188);
  g[G](c * 426.5113830566406, c * 166.76705932617188, c * 426.5113830566406, c * 166.76705932617188, c * 459.0113830566406, c * 151.76705932617188);
  g[G](c * 469.0113830566406, c * 152.76705932617188, c * 469.0113830566406, c * 155.76705932617188, c * 472.0113830566406, c * 165.76705932617188);
  g[G](c * 476.0113830566406, c * 177.26705932617188, c * 476.0113830566406, c * 177.26705932617188, c * 480.0113830566406, c * 188.76705932617188);
  g[G](c * 483.0113830566406, c * 199.76705932617188, c * 480.0113830566406, c * 200.76705932617188, c * 460.0113830566406, c * 205.76705932617188);
  g[G](c * 433.5113830566406, c * 210.26705932617188, c * 433.5113830566406, c * 210.26705932617188, c * 407.0113830566406, c * 214.76705932617188);
  g[G](c * 395.0113830566406, c * 218.76705932617188, c * 397.0113830566406, c * 211.76705932617188, c * 393.0113830566406, c * 202.76705932617188);
  g[G](c * 387.0113830566406, c * 188.76705932617188, c * 387.0113830566406, c * 187.76705932617188, c * 394.0113830566406, c * 181.76705932617188);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 411.0113830566406, c * 234.76705932617188);
  g[G](c * 446.0113830566406, c * 233.26705932617188, c * 446.0113830566406, c * 233.26705932617188, c * 481.0113830566406, c * 231.76705932617188);
  g[G](c * 491.0113830566406, c * 232.76705932617188, c * 493.0113830566406, c * 239.76705932617188, c * 491.0113830566406, c * 251.76705932617188);
  g[G](c * 490.0113830566406, c * 263.7670593261719, c * 490.0113830566406, c * 263.7670593261719, c * 489.0113830566406, c * 275.7670593261719);
  g[G](c * 487.0113830566406, c * 283.7670593261719, c * 483.0113830566406, c * 284.7670593261719, c * 464.0113830566406, c * 280.7670593261719);
  g[G](c * 437.0113830566406, c * 273.7670593261719, c * 437.0113830566406, c * 273.7670593261719, c * 410.0113830566406, c * 266.7670593261719);
  g[G](c * 400.0113830566406, c * 261.7670593261719, c * 401.0113830566406, c * 259.7670593261719, c * 402.0113830566406, c * 249.76705932617188);
  g[G](c * 401.0113830566406, c * 237.76705932617188, c * 403.0113830566406, c * 235.76705932617188, c * 408.0113830566406, c * 234.76705932617188);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 411.0113830566406, c * 234.76705932617188);
  g[G](c * 446.0113830566406, c * 233.26705932617188, c * 446.0113830566406, c * 233.26705932617188, c * 481.0113830566406, c * 231.76705932617188);
  g[G](c * 491.0113830566406, c * 232.76705932617188, c * 493.0113830566406, c * 239.76705932617188, c * 491.0113830566406, c * 251.76705932617188);
  g[G](c * 490.0113830566406, c * 263.7670593261719, c * 490.0113830566406, c * 263.7670593261719, c * 489.0113830566406, c * 275.7670593261719);
  g[G](c * 487.0113830566406, c * 283.7670593261719, c * 483.0113830566406, c * 284.7670593261719, c * 464.0113830566406, c * 280.7670593261719);
  g[G](c * 437.0113830566406, c * 273.7670593261719, c * 437.0113830566406, c * 273.7670593261719, c * 410.0113830566406, c * 266.7670593261719);
  g[G](c * 400.0113830566406, c * 261.7670593261719, c * 401.0113830566406, c * 259.7670593261719, c * 402.0113830566406, c * 249.76705932617188);
  g[G](c * 401.0113830566406, c * 237.76705932617188, c * 403.0113830566406, c * 235.76705932617188, c * 408.0113830566406, c * 234.76705932617188);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 400.0113830566406, c * 290.7670593261719);
  g[G](c * 437.0113830566406, c * 301.2670593261719, c * 437.0113830566406, c * 301.2670593261719, c * 474.0113830566406, c * 311.7670593261719);
  g[G](c * 484.0113830566406, c * 319.7670593261719, c * 481.0113830566406, c * 322.7670593261719, c * 474.0113830566406, c * 335.7670593261719);
  g[G](c * 465.5113830566406, c * 354.7670593261719, c * 465.5113830566406, c * 354.7670593261719, c * 457.0113830566406, c * 373.7670593261719);
  g[G](c * 449.0113830566406, c * 386.7670593261719, c * 444.0113830566406, c * 384.7670593261719, c * 427.0113830566406, c * 370.7670593261719);
  g[G](c * 403.0113830566406, c * 354.7670593261719, c * 403.0113830566406, c * 354.7670593261719, c * 379.0113830566406, c * 338.7670593261719);
  g[G](c * 371.0113830566406, c * 327.7670593261719, c * 373.0113830566406, c * 323.7670593261719, c * 377.0113830566406, c * 313.7670593261719);
  g[G](c * 386.0113830566406, c * 292.7670593261719, c * 393.0113830566406, c * 288.7670593261719, c * 398.0113830566406, c * 291.7670593261719);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 400.0113830566406, c * 290.7670593261719);
  g[G](c * 437.0113830566406, c * 301.2670593261719, c * 437.0113830566406, c * 301.2670593261719, c * 474.0113830566406, c * 311.7670593261719);
  g[G](c * 484.0113830566406, c * 319.7670593261719, c * 481.0113830566406, c * 322.7670593261719, c * 474.0113830566406, c * 335.7670593261719);
  g[G](c * 465.5113830566406, c * 354.7670593261719, c * 465.5113830566406, c * 354.7670593261719, c * 457.0113830566406, c * 373.7670593261719);
  g[G](c * 449.0113830566406, c * 386.7670593261719, c * 444.0113830566406, c * 384.7670593261719, c * 427.0113830566406, c * 370.7670593261719);
  g[G](c * 403.0113830566406, c * 354.7670593261719, c * 403.0113830566406, c * 354.7670593261719, c * 379.0113830566406, c * 338.7670593261719);
  g[G](c * 371.0113830566406, c * 327.7670593261719, c * 373.0113830566406, c * 323.7670593261719, c * 377.0113830566406, c * 313.7670593261719);
  g[G](c * 386.0113830566406, c * 292.7670593261719, c * 393.0113830566406, c * 288.7670593261719, c * 398.0113830566406, c * 291.7670593261719);
  g[X]();
  jc(g, e[3], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 366.0113830566406, c * 361.2216033935547);
  g[G](c * 393.0113830566406, c * 383.2216033935547, c * 393.0113830566406, c * 383.2216033935547, c * 420.0113830566406, c * 405.2216033935547);
  g[G](c * 427.0113830566406, c * 414.2216033935547, c * 425.0113830566406, c * 417.2216033935547, c * 413.0113830566406, c * 428.2216033935547);
  g[G](c * 405.5113830566406, c * 435.2216033935547, c * 405.5113830566406, c * 435.2216033935547, c * 398.0113830566406, c * 442.2216033935547);
  g[G](c * 388.0113830566406, c * 451.2216033935547, c * 385.0113830566406, c * 445.2216033935547, c * 373.0113830566406, c * 428.2216033935547);
  g[G](c * 358.5113830566406, c * 408.2216033935547, c * 358.5113830566406, c * 408.2216033935547, c * 344.0113830566406, c * 388.2216033935547);
  g[G](c * 337.0113830566406, c * 378.2216033935547, c * 342.0113830566406, c * 377.2216033935547, c * 347.0113830566406, c * 371.2216033935547);
  g[G](c * 359.0113830566406, c * 359.2216033935547, c * 361.0113830566406, c * 358.2216033935547, c * 364.0113830566406, c * 361.2216033935547);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 366.0113830566406, c * 361.2216033935547);
  g[G](c * 393.0113830566406, c * 383.2216033935547, c * 393.0113830566406, c * 383.2216033935547, c * 420.0113830566406, c * 405.2216033935547);
  g[G](c * 427.0113830566406, c * 414.2216033935547, c * 425.0113830566406, c * 417.2216033935547, c * 413.0113830566406, c * 428.2216033935547);
  g[G](c * 405.5113830566406, c * 435.2216033935547, c * 405.5113830566406, c * 435.2216033935547, c * 398.0113830566406, c * 442.2216033935547);
  g[G](c * 388.0113830566406, c * 451.2216033935547, c * 385.0113830566406, c * 445.2216033935547, c * 373.0113830566406, c * 428.2216033935547);
  g[G](c * 358.5113830566406, c * 408.2216033935547, c * 358.5113830566406, c * 408.2216033935547, c * 344.0113830566406, c * 388.2216033935547);
  g[G](c * 337.0113830566406, c * 378.2216033935547, c * 342.0113830566406, c * 377.2216033935547, c * 347.0113830566406, c * 371.2216033935547);
  g[G](c * 359.0113830566406, c * 359.2216033935547, c * 361.0113830566406, c * 358.2216033935547, c * 364.0113830566406, c * 361.2216033935547);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 323.0113830566406, c * 393.2216033935547);
  g[G](c * 338.0113830566406, c * 424.7216033935547, c * 338.0113830566406, c * 424.7216033935547, c * 353.0113830566406, c * 456.2216033935547);
  g[G](c * 355.0113830566406, c * 467.2216033935547, c * 354.0113830566406, c * 469.2216033935547, c * 336.0113830566406, c * 475.2216033935547);
  g[G](c * 326.0113830566406, c * 478.2216033935547, c * 326.0113830566406, c * 478.2216033935547, c * 316.0113830566406, c * 481.2216033935547);
  g[G](c * 304.0113830566406, c * 484.2216033935547, c * 304.0113830566406, c * 477.2216033935547, c * 301.0113830566406, c * 454.2216033935547);
  g[G](c * 295.5113830566406, c * 429.2216033935547, c * 295.5113830566406, c * 429.2216033935547, c * 290.0113830566406, c * 404.2216033935547);
  g[G](c * 287.0113830566406, c * 396.2216033935547, c * 297.0113830566406, c * 394.2216033935547, c * 303.0113830566406, c * 392.2216033935547);
  g[G](c * 316.0113830566406, c * 387.2216033935547, c * 318.0113830566406, c * 387.2216033935547, c * 323.0113830566406, c * 394.2216033935547);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 323.0113830566406, c * 393.2216033935547);
  g[G](c * 338.0113830566406, c * 424.7216033935547, c * 338.0113830566406, c * 424.7216033935547, c * 353.0113830566406, c * 456.2216033935547);
  g[G](c * 355.0113830566406, c * 467.2216033935547, c * 354.0113830566406, c * 469.2216033935547, c * 336.0113830566406, c * 475.2216033935547);
  g[G](c * 326.0113830566406, c * 478.2216033935547, c * 326.0113830566406, c * 478.2216033935547, c * 316.0113830566406, c * 481.2216033935547);
  g[G](c * 304.0113830566406, c * 484.2216033935547, c * 304.0113830566406, c * 477.2216033935547, c * 301.0113830566406, c * 454.2216033935547);
  g[G](c * 295.5113830566406, c * 429.2216033935547, c * 295.5113830566406, c * 429.2216033935547, c * 290.0113830566406, c * 404.2216033935547);
  g[G](c * 287.0113830566406, c * 396.2216033935547, c * 297.0113830566406, c * 394.2216033935547, c * 303.0113830566406, c * 392.2216033935547);
  g[G](c * 316.0113830566406, c * 387.2216033935547, c * 318.0113830566406, c * 387.2216033935547, c * 323.0113830566406, c * 394.2216033935547);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 270.0113830566406, c * 413.2216033935547);
  g[G](c * 271.0113830566406, c * 445.7216033935547, c * 271.0113830566406, c * 445.7216033935547, c * 272.0113830566406, c * 478.2216033935547);
  g[G](c * 273.0113830566406, c * 490.2216033935547, c * 267.0113830566406, c * 493.2216033935547, c * 249.01138305664062, c * 490.2216033935547);
  g[G](c * 222.01138305664062, c * 492.2216033935547, c * 220.01138305664062, c * 485.2216033935547, c * 225.01138305664062, c * 467.2216033935547);
  g[G](c * 230.51138305664062, c * 440.2216033935547, c * 230.51138305664062, c * 440.2216033935547, c * 236.01138305664062, c * 413.2216033935547);
  g[G](c * 237.01138305664062, c * 405.2216033935547, c * 238.01138305664062, c * 404.2216033935547, c * 253.01138305664062, c * 403.2216033935547);
  g[G](c * 269.0113830566406, c * 405.2216033935547, c * 270.0113830566406, c * 407.2216033935547, c * 269.0113830566406, c * 412.2216033935547);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 270.0113830566406, c * 413.2216033935547);
  g[G](c * 271.0113830566406, c * 445.7216033935547, c * 271.0113830566406, c * 445.7216033935547, c * 272.0113830566406, c * 478.2216033935547);
  g[G](c * 273.0113830566406, c * 490.2216033935547, c * 267.0113830566406, c * 493.2216033935547, c * 249.01138305664062, c * 490.2216033935547);
  g[G](c * 222.01138305664062, c * 492.2216033935547, c * 220.01138305664062, c * 485.2216033935547, c * 225.01138305664062, c * 467.2216033935547);
  g[G](c * 230.51138305664062, c * 440.2216033935547, c * 230.51138305664062, c * 440.2216033935547, c * 236.01138305664062, c * 413.2216033935547);
  g[G](c * 237.01138305664062, c * 405.2216033935547, c * 238.01138305664062, c * 404.2216033935547, c * 253.01138305664062, c * 403.2216033935547);
  g[G](c * 269.0113830566406, c * 405.2216033935547, c * 270.0113830566406, c * 407.2216033935547, c * 269.0113830566406, c * 412.2216033935547);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 207.01138305664062, c * 406.2216033935547);
  g[G](c * 197.51138305664062, c * 440.7216033935547, c * 197.51138305664062, c * 440.7216033935547, c * 188.01138305664062, c * 475.2216033935547);
  g[G](c * 184.01138305664062, c * 485.2216033935547, c * 179.01138305664062, c * 491.2216033935547, c * 152.01138305664062, c * 477.2216033935547);
  g[G](c * 136.51138305664062, c * 469.7216033935547, c * 136.51138305664062, c * 469.7216033935547, c * 121.01138305664062, c * 462.2216033935547);
  g[G](c * 109.01138305664062, c * 453.2216033935547, c * 117.01138305664062, c * 447.2216033935547, c * 133.01138305664062, c * 427.2216033935547);
  g[G](c * 146.51138305664062, c * 406.7216033935547, c * 146.51138305664062, c * 406.7216033935547, c * 160.01138305664062, c * 386.2216033935547);
  g[G](c * 163.01138305664062, c * 377.2216033935547, c * 168.01138305664062, c * 378.2216033935547, c * 187.01138305664062, c * 387.2216033935547);
  g[G](c * 206.01138305664062, c * 395.2216033935547, c * 208.01138305664062, c * 398.2216033935547, c * 207.01138305664062, c * 405.2216033935547);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 207.01138305664062, c * 406.2216033935547);
  g[G](c * 197.51138305664062, c * 440.7216033935547, c * 197.51138305664062, c * 440.7216033935547, c * 188.01138305664062, c * 475.2216033935547);
  g[G](c * 184.01138305664062, c * 485.2216033935547, c * 179.01138305664062, c * 491.2216033935547, c * 152.01138305664062, c * 477.2216033935547);
  g[G](c * 136.51138305664062, c * 469.7216033935547, c * 136.51138305664062, c * 469.7216033935547, c * 121.01138305664062, c * 462.2216033935547);
  g[G](c * 109.01138305664062, c * 453.2216033935547, c * 117.01138305664062, c * 447.2216033935547, c * 133.01138305664062, c * 427.2216033935547);
  g[G](c * 146.51138305664062, c * 406.7216033935547, c * 146.51138305664062, c * 406.7216033935547, c * 160.01138305664062, c * 386.2216033935547);
  g[G](c * 163.01138305664062, c * 377.2216033935547, c * 168.01138305664062, c * 378.2216033935547, c * 187.01138305664062, c * 387.2216033935547);
  g[G](c * 206.01138305664062, c * 395.2216033935547, c * 208.01138305664062, c * 398.2216033935547, c * 207.01138305664062, c * 405.2216033935547);
  g[X]();
  jc(g, e[3], e[2], c * 12);
  g[ua] = d ? 0.5 : 1;
  g[Ia](0, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 130.01138305664062, c * 375.2216033935547);
  g[G](c * 109.51138305664062, c * 400.7216033935547, c * 109.51138305664062, c * 400.7216033935547, c * 89.01138305664062, c * 426.2216033935547);
  g[G](c * 82.01138305664062, c * 435.2216033935547, c * 77.01138305664062, c * 435.2216033935547, c * 62.011383056640625, c * 417.2216033935547);
  g[G](c * 43.011383056640625, c * 397.2216033935547, c * 47.011383056640625, c * 395.2216033935547, c * 62.011383056640625, c * 382.2216033935547);
  g[G](c * 84.01138305664062, c * 366.7216033935547, c * 84.01138305664062, c * 366.7216033935547, c * 106.01138305664062, c * 351.2216033935547);
  g[G](c * 116.01138305664062, c * 344.2216033935547, c * 120.01138305664062, c * 347.2216033935547, c * 127.01138305664062, c * 356.2216033935547);
  g[G](c * 137.01138305664062, c * 366.2216033935547, c * 137.01138305664062, c * 366.2216033935547, c * 131.01138305664062, c * 376.2216033935547);
  g[X]();
  jc(g, e[0], e[0], c * 12);
  g[ua] = 1;
  g[Ia](0, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 130.01138305664062, c * 375.2216033935547);
  g[G](c * 109.51138305664062, c * 400.7216033935547, c * 109.51138305664062, c * 400.7216033935547, c * 89.01138305664062, c * 426.2216033935547);
  g[G](c * 82.01138305664062, c * 435.2216033935547, c * 77.01138305664062, c * 435.2216033935547, c * 62.011383056640625, c * 417.2216033935547);
  g[G](c * 43.011383056640625, c * 397.2216033935547, c * 47.011383056640625, c * 395.2216033935547, c * 62.011383056640625, c * 382.2216033935547);
  g[G](c * 84.01138305664062, c * 366.7216033935547, c * 84.01138305664062, c * 366.7216033935547, c * 106.01138305664062, c * 351.2216033935547);
  g[G](c * 116.01138305664062, c * 344.2216033935547, c * 120.01138305664062, c * 347.2216033935547, c * 127.01138305664062, c * 356.2216033935547);
  g[G](c * 137.01138305664062, c * 366.2216033935547, c * 137.01138305664062, c * 366.2216033935547, c * 131.01138305664062, c * 376.2216033935547);
  g[X]();
  jc(g, e[4], e[2], c * 12);
  return f;
}
function wf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 218;
  f.height = c * 185;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 64, c * 53.135406494140625);
  g[G](c * 92, c * 17.135406494140625, c * 116, c * 11.135406494140625, c * 158, c * 53.135406494140625);
  g[G](c * 178, c * 74.13540649414062, c * 181, c * 81.13540649414062, c * 196, c * 101.13540649414062);
  g[G](c * 214, c * 127.13540649414062, c * 192, c * 138.13540649414062, c * 173, c * 149.13540649414062);
  g[G](c * 137, c * 166.13540649414062, c * 74, c * 170.13540649414062, c * 36, c * 141.13540649414062);
  g[G](c * 13, c * 127.13540649414062, c * 20, c * 119.13540649414062, c * 30, c * 103.13540649414062);
  g[G](c * 48, c * 71.13540649414062, c * 54, c * 67.13540649414062, c * 63, c * 54.135406494140625);
  g[X]();
  jc(g, e[0], e[1], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 107, c * 25.135406494140625);
  g[G](c * 62, c * 90.13540649414062, c * 54, c * 129.13540649414062, c * 53, c * 151.13540649414062);
  g[G](c * 39.5, c * 142.13540649414062, c * 39.5, c * 142.13540649414062, c * 26, c * 133.13540649414062);
  g[G](c * 23.5, c * 128.63540649414062, c * 23.5, c * 128.63540649414062, c * 21, c * 124.13540649414062);
  g[G](c * 22, c * 113.13540649414062, c * 31, c * 99.13540649414062, c * 40, c * 88.13540649414062);
  g[G](c * 54.5, c * 67.13540649414062, c * 54.5, c * 67.13540649414062, c * 69, c * 46.135406494140625);
  g[G](c * 80.5, c * 36.635406494140625, c * 80.5, c * 36.635406494140625, c * 92, c * 27.135406494140625);
  g[X]();
  jc(g, e[1]);
  return f;
}
function xf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 167;
  f.height = c * 136;
  i[ua] = 0.5;
  i[g]();
  i[Ia](c * 76.71426391601562, c * 67.85713195800781);
  kc(i, c * -57.5, c * -54.5, c * 115, c * 109, c * 15);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 0.8;
  i[g]();
  i[Ia](c * 76.71426391601562, c * 67.85713195800781);
  kc(i, c * -57.5, c * -54.5, c * 115, c * 109, c * 15);
  i[Qa]();
  jc(i, undefined, e[1], c * 7);
  i[ua] = 0.5;
  i[g]();
  i[Ia](c * 91.21426391601562, c * 67.35713195800781);
  kc(i, c * -56, c * -55, c * 115, c * 109, c * 15);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[g]();
  i[Ia](c * 91.21426391601562, c * 67.35713195800781);
  kc(i, c * -56, c * -55, c * 115, c * 109, c * 15);
  i[Qa]();
  jc(i, undefined, e[1], c * 7);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 131.21426391601562, c * 70.35713195800781);
  i[G](c * 133.21426391601562, c * 95.35713195800781, c * 128.21426391601562, c * 109.35713195800781, c * 108.21426391601562, c * 108.35713195800781);
  jc(i, undefined, e[1], c * 10);
  return f;
}
function yf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 163;
  f.height = c * 163;
  i[g]();
  i[Ia](c * 82.5, c * 81.1015625);
  i[ra](0);
  kc(i, c * -65.5, c * -66, c * 131, c * 131, c * 5);
  i[Qa]();
  jc(i, e[1]);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 80, c * 17.1015625);
  kc(i, c * -64, c * -4.5, c * 129, c * 9, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 80, c * 17.1015625);
  kc(i, c * -64, c * -4.5, c * 129, c * 9, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 145.5, c * 83.6015625);
  kc(i, c * -4.5, c * -61, c * 9, c * 129, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 145.5, c * 83.6015625);
  kc(i, c * -4.5, c * -61, c * 9, c * 129, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 17.5, c * 82.6015625);
  kc(i, c * -4.5, c * -65, c * 9, c * 129, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 17.5, c * 82.6015625);
  kc(i, c * -4.5, c * -65, c * 9, c * 129, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 80.5, c * 145.6015625);
  kc(i, c * -65.5, c * -4, c * 129, c * 9, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 80.5, c * 145.6015625);
  kc(i, c * -65.5, c * -4, c * 129, c * 9, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 17, c * 18.1015625);
  kc(i, c * -11, c * -11.5, c * 22, c * 22, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 17, c * 18.1015625);
  kc(i, c * -11, c * -11.5, c * 22, c * 22, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 145.5, c * 16.6015625);
  kc(i, c * -10.5, c * -11.5, c * 21, c * 22, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 145.5, c * 16.6015625);
  kc(i, c * -10.5, c * -11.5, c * 21, c * 22, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 145.5, c * 144.1015625);
  kc(i, c * -10.5, c * -11, c * 22, c * 22, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 145.5, c * 144.1015625);
  kc(i, c * -10.5, c * -11, c * 22, c * 22, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  i[Ia](c * 17.5, c * 145.1015625);
  kc(i, c * -11.5, c * -12, c * 22, c * 22, c * 5);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  i[Ia](c * 17.5, c * 145.1015625);
  kc(i, c * -11.5, c * -12, c * 22, c * 22, c * 5);
  i[Qa]();
  jc(i, e[2], e[3], c * 3);
  return f;
}
function zf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 168;
  f.height = c * 100;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 10, c * 5);
  i[g]();
  i[Ia](c * 24.5, c * 44.30000305175781);
  kc(i, c * -19.5, c * -8.5, c * 39, c * 17, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 115, c * 37.80000305175781);
  i[G](c * 142, c * 37.80000305175781, c * 140, c * 37.80000305175781, c * 141, c * 37.80000305175781);
  i[G](c * 147, c * 28.800003051757812, c * 149, c * 26.800003051757812, c * 153, c * 32.80000305175781);
  i[G](c * 160, c * 42.80000305175781, c * 157, c * 50.80000305175781, c * 153, c * 58.80000305175781);
  i[G](c * 148, c * 62.80000305175781, c * 147, c * 59.80000305175781, c * 143, c * 52.80000305175781);
  i[G](c * 129, c * 52.80000305175781, c * 129, c * 52.80000305175781, c * 115, c * 52.80000305175781);
  i[X]();
  jc(i, e[0]);
  lc(i, c * 78, c * 44.80000305175781, c * 39.44616584663204);
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](c * -10, c * -5);
  i[g]();
  i[Ia](c * 24.5, c * 44.30000305175781);
  kc(i, c * -19.5, c * -8.5, c * 39, c * 17, c * 10);
  i[Qa]();
  jc(i, undefined, e[3], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 115, c * 37.80000305175781);
  i[G](c * 142, c * 37.80000305175781, c * 140, c * 37.80000305175781, c * 141, c * 37.80000305175781);
  i[G](c * 147, c * 28.800003051757812, c * 149, c * 26.800003051757812, c * 153, c * 32.80000305175781);
  i[G](c * 160, c * 42.80000305175781, c * 157, c * 50.80000305175781, c * 153, c * 58.80000305175781);
  i[G](c * 148, c * 62.80000305175781, c * 147, c * 59.80000305175781, c * 143, c * 52.80000305175781);
  i[G](c * 129, c * 52.80000305175781, c * 129, c * 52.80000305175781, c * 115, c * 52.80000305175781);
  i[X]();
  jc(i, undefined, e[3], c * 6);
  lc(i, c * 78, c * 44.80000305175781, c * 42.44616584663204);
  jc(i, undefined, e[3], c * 6);
  i[g]();
  i[Ia](c * 24.5, c * 44.30000305175781);
  kc(i, c * -19.5, c * -8.5, c * 39, c * 17, c * 10);
  i[Qa]();
  jc(i, e[1]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 115, c * 37.80000305175781);
  i[G](c * 142, c * 37.80000305175781, c * 140, c * 37.80000305175781, c * 141, c * 37.80000305175781);
  i[G](c * 147, c * 28.800003051757812, c * 149, c * 26.800003051757812, c * 153, c * 32.80000305175781);
  i[G](c * 160, c * 42.80000305175781, c * 157, c * 50.80000305175781, c * 153, c * 58.80000305175781);
  i[G](c * 148, c * 62.80000305175781, c * 147, c * 59.80000305175781, c * 143, c * 52.80000305175781);
  i[G](c * 129, c * 52.80000305175781, c * 129, c * 52.80000305175781, c * 115, c * 52.80000305175781);
  i[X]();
  jc(i, e[1]);
  lc(i, c * 78, c * 44.80000305175781, c * 39.44616584663204);
  jc(i, e[2], e[1], c * 4);
  lc(i, c * 78, c * 44.80000305175781, c * 29.68164415931166);
  jc(i, e[3], e[1], c * 4);
  lc(i, c * 78, c * 44, c * 20);
  jc(i, e[4]);
  return f;
}
function Af(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 158;
  f.height = c * 201;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 96.5, c * 76.421875);
  g[G](c * 100.5, c * 64.421875, c * 103.5, c * 62.421875, c * 110.5, c * 65.421875);
  g[G](c * 116.5, c * 66.421875, c * 117.5, c * 67.421875, c * 112.5, c * 73.421875);
  g[G](c * 107, c * 79.921875, c * 107, c * 79.921875, c * 101.5, c * 86.421875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 61.5, c * 78.421875);
  g[G](c * 57.5, c * 73.421875, c * 51.5, c * 66.421875, c * 45.5, c * 68.421875);
  g[G](c * 32.5, c * 73.421875, c * 38.5, c * 75.421875, c * 46.5, c * 81.421875);
  g[G](c * 51.5, c * 84.921875, c * 51.5, c * 84.921875, c * 56.5, c * 88.421875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 116.5, c * 127.421875);
  g[G](c * 124.5, c * 108.421875, c * 129.5, c * 104.421875, c * 141.5, c * 107.421875);
  g[G](c * 156.5, c * 112.421875, c * 153.5, c * 113.421875, c * 132.5, c * 134.421875);
  g[G](c * 123.5, c * 141.921875, c * 123.5, c * 141.921875, c * 114.5, c * 149.421875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 41.5, c * 134.421875);
  g[G](c * 30.5, c * 119.421875, c * 25.5, c * 111.421875, c * 12.5, c * 115.421875);
  g[G](c * 4.5, c * 120.421875, c * 4.5, c * 121.421875, c * 26.5, c * 142.421875);
  g[G](c * 35, c * 149.921875, c * 35, c * 149.921875, c * 43.5, c * 157.421875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 78.5, c * 51.921875);
  g[G](c * 99.5, c * 75.921875, c * 110.5, c * 96.921875, c * 118.5, c * 120.921875);
  g[G](c * 121.5, c * 140.921875, c * 107.5, c * 179.921875, c * 75.5, c * 183.921875);
  g[G](c * 30.5, c * 169.921875, c * 37.5, c * 131.921875, c * 34.5, c * 120.921875);
  g[G](c * 41.5, c * 89.921875, c * 61.5, c * 67.921875, c * 78.5, c * 51.921875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72.5, c * 72.421875);
  g[G](c * 76.5, c * 79.421875, c * 79.5, c * 80.421875, c * 83.5, c * 73.421875);
  g[G](c * 80.5, c * 96.921875, c * 79.5, c * 114.421875, c * 77.5, c * 120.421875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 42.5, c * 163.421875);
  g[G](c * 62.5, c * 185.421875, c * 86.5, c * 186.421875, c * 111.5, c * 165.421875);
  g[G](c * 107.5, c * 176.421875, c * 95.5, c * 187.421875, c * 75.5, c * 188.421875);
  g[G](c * 53.5, c * 188.421875, c * 43.5, c * 171.421875, c * 42.5, c * 164.421875);
  g[X]();
  jc(g, e[8], e[8], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 79.5, c * 61.421875);
  g[G](c * 88.5, c * 31.421875, c * 81.5, c * 16.421875, c * 75.5, c * 7.421875);
  g[G](c * 77.5, c * 28.421875, c * 77.5, c * 37.421875, c * 68.5, c * 42.421875);
  g[G](c * 79.5, c * 57.421875, c * 79.5, c * 58.421875, c * 80.5, c * 61.421875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72.5, c * 72.421875);
  g[G](c * 76.5, c * 79.421875, c * 79.5, c * 80.421875, c * 83.5, c * 73.421875);
  g[G](c * 80.5, c * 96.921875, c * 79.5, c * 114.421875, c * 77.5, c * 120.421875);
  g[X]();
  jc(g, e[8], e[8], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 96.5, c * 76.421875);
  g[G](c * 100.5, c * 64.421875, c * 103.5, c * 62.421875, c * 110.5, c * 65.421875);
  g[G](c * 116.5, c * 66.421875, c * 117.5, c * 67.421875, c * 112.5, c * 73.421875);
  g[G](c * 107, c * 79.921875, c * 107, c * 79.921875, c * 101.5, c * 86.421875);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 61.5, c * 78.421875);
  g[G](c * 57.5, c * 73.421875, c * 51.5, c * 66.421875, c * 45.5, c * 68.421875);
  g[G](c * 32.5, c * 73.421875, c * 38.5, c * 75.421875, c * 46.5, c * 81.421875);
  g[G](c * 51.5, c * 84.921875, c * 51.5, c * 84.921875, c * 56.5, c * 88.421875);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 116.5, c * 127.421875);
  g[G](c * 124.5, c * 108.421875, c * 129.5, c * 104.421875, c * 141.5, c * 107.421875);
  g[G](c * 156.5, c * 112.421875, c * 153.5, c * 113.421875, c * 132.5, c * 134.421875);
  g[G](c * 123.5, c * 141.921875, c * 123.5, c * 141.921875, c * 114.5, c * 149.421875);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 41.5, c * 134.421875);
  g[G](c * 30.5, c * 119.421875, c * 25.5, c * 111.421875, c * 12.5, c * 115.421875);
  g[G](c * 4.5, c * 120.421875, c * 4.5, c * 121.421875, c * 26.5, c * 142.421875);
  g[G](c * 35, c * 149.921875, c * 35, c * 149.921875, c * 43.5, c * 157.421875);
  g[X]();
  jc(g, e[1], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 78.5, c * 51.921875);
  g[G](c * 99.5, c * 75.921875, c * 110.5, c * 96.921875, c * 118.5, c * 120.921875);
  g[G](c * 121.5, c * 140.921875, c * 107.5, c * 179.921875, c * 75.5, c * 183.921875);
  g[G](c * 30.5, c * 169.921875, c * 37.5, c * 131.921875, c * 34.5, c * 120.921875);
  g[G](c * 41.5, c * 89.921875, c * 61.5, c * 67.921875, c * 78.5, c * 51.921875);
  g[X]();
  jc(g, e[3], e[2], c * 4);
  lc(g, c * 108.5, c * 148.421875, c * 9);
  jc(g, e[5]);
  lc(g, c * 106.5, c * 144.421875, c * 3);
  jc(g, e[6]);
  lc(g, c * 46.5, c * 148.421875, c * 9);
  jc(g, e[5]);
  lc(g, c * 44.5, c * 144.421875, c * 3);
  jc(g, e[6]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 116.5, c * 114.421875);
  g[G](c * 121.5, c * 137.421875, c * 118.5, c * 133.421875, c * 108.5, c * 139.421875);
  g[G](c * 94.5, c * 146.421875, c * 96.5, c * 148.421875, c * 95.5, c * 152.421875);
  jc(g, e[3], e[2], c * 4);
  g[Y]();
  g[Ia](0, c * -2);
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 35.5, c * 131.421875);
  g[G](c * 36.5, c * 140.421875, c * 39.5, c * 140.421875, c * 49.5, c * 143.421875);
  g[G](c * 59.5, c * 149.421875, c * 57.5, c * 151.421875, c * 59.5, c * 155.421875);
  jc(g, e[3], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 84.5, c * 57.421875);
  g[G](c * 101.5, c * 120.421875, c * 92.5, c * 127.421875, c * 78.5, c * 134.421875);
  g[G](c * 51.5, c * 131.421875, c * 63.5, c * 102.421875, c * 70.5, c * 59.421875);
  g[G](c * 75, c * 55.421875, c * 78.5, c * 52.421875, c * 79.5, c * 51.421875);
  g[X]();
  jc(g, e[4]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 79.5, c * 61.421875);
  g[G](c * 88.5, c * 31.421875, c * 81.5, c * 16.421875, c * 75.5, c * 7.421875);
  g[G](c * 77.5, c * 28.421875, c * 77.5, c * 37.421875, c * 68.5, c * 42.421875);
  g[G](c * 79.5, c * 57.421875, c * 79.5, c * 58.421875, c * 80.5, c * 61.421875);
  g[X]();
  jc(g, e[3], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72.5, c * 72.421875);
  g[G](c * 76.5, c * 79.421875, c * 79.5, c * 80.421875, c * 83.5, c * 73.421875);
  g[G](c * 80.5, c * 96.921875, c * 79.5, c * 114.421875, c * 77.5, c * 120.421875);
  g[X]();
  jc(g, e[3], e[2], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 87.5, c * 154.421875);
  g[G](c * 93.5, c * 163.921875, c * 93.5, c * 163.921875, c * 99.5, c * 173.421875);
  g[G](c * 95, c * 177.421875, c * 95, c * 177.421875, c * 90.5, c * 181.421875);
  g[G](c * 89, c * 167.921875, c * 89, c * 167.921875, c * 87.5, c * 154.421875);
  g[X]();
  jc(g, e[6], e[7], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 81.5, c * 164.421875);
  g[G](c * 84, c * 172.921875, c * 84, c * 172.921875, c * 86.5, c * 181.421875);
  g[G](c * 82.5, c * 182.421875, c * 82.5, c * 182.421875, c * 78.5, c * 183.421875);
  g[X]();
  jc(g, e[6], e[7], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 72.5, c * 164.421875);
  g[G](c * 73.5, c * 173.921875, c * 73.5, c * 173.921875, c * 74.5, c * 183.421875);
  g[G](c * 70.5, c * 182.921875, c * 70.5, c * 182.921875, c * 66.5, c * 182.421875);
  g[X]();
  jc(g, e[6], e[7], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 65.5, c * 156.421875);
  g[G](c * 65, c * 168.421875, c * 65, c * 168.421875, c * 64.5, c * 180.421875);
  g[G](c * 58.5, c * 177.421875, c * 58.5, c * 177.421875, c * 52.5, c * 174.421875);
  g[X]();
  jc(g, e[6], e[7], c * 2);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 42.5, c * 163.421875);
  g[G](c * 62.5, c * 185.421875, c * 86.5, c * 186.421875, c * 111.5, c * 165.421875);
  g[G](c * 107.5, c * 176.421875, c * 95.5, c * 187.421875, c * 75.5, c * 188.421875);
  g[G](c * 53.5, c * 188.421875, c * 43.5, c * 171.421875, c * 42.5, c * 164.421875);
  g[X]();
  jc(g, e[3], e[2], c * 4);
  return f;
}
function Bf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 400;
  f.height = c * 170;
  g[Ia](0, c * -170);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 159.5, c * 322.0625);
  g[G](c * 240.5, c * 293.0625, c * 240.5, c * 293.0625, c * 321.5, c * 264.0625);
  g[G](c * 276.5, c * 230.0625, c * 276.5, c * 230.0625, c * 231.5, c * 196.0625);
  g[G](c * 158.5, c * 221.5625, c * 158.5, c * 221.5625, c * 85.5, c * 247.0625);
  g[X]();
  jc(g, e[0], e[1], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 212.5, c * 270.0625);
  g[G](c * 235, c * 261.5625, c * 235, c * 261.5625, c * 257.5, c * 253.0625);
  g[X]();
  jc(g, undefined, e[0], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 193.5, c * 226.0625);
  g[G](c * 204.5, c * 242.0625, c * 242.5, c * 237.0625, c * 251.5, c * 225.0625);
  g[G](c * 246.5, c * 195.0625, c * 205.5, c * 190.0625, c * 193.5, c * 227.0625);
  g[X]();
  jc(g, e[2], e[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 164.5, c * 245.0625);
  g[G](c * 182.5, c * 264.0625, c * 252.5, c * 258.0625, c * 276.5, c * 244.0625);
  g[G](c * 265.5, c * 226.0625, c * 244.5, c * 231.0625, c * 229.5, c * 230.0625);
  g[G](c * 205.5, c * 227.0625, c * 175.5, c * 202.0625, c * 162.5, c * 244.0625);
  g[X]();
  jc(g, e[2], e[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 115.5, c * 260.0625);
  g[G](c * 134.5, c * 279.0625, c * 170.5, c * 275.0625, c * 191.5, c * 257.0625);
  g[G](c * 174.5, c * 208.0625, c * 142.5, c * 197.0625, c * 116.5, c * 259.0625);
  g[X]();
  jc(g, e[2], e[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 152.5, c * 278.0625);
  g[G](c * 165.5, c * 294.0625, c * 200.5, c * 287.0625, c * 216.5, c * 278.0625);
  g[G](c * 206.5, c * 247.0625, c * 173.5, c * 233.0625, c * 153.5, c * 276.0625);
  g[X]();
  jc(g, e[2], e[3], c * 12);
  return f;
}
function Cf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 272;
  f.height = c * 264;
  g[Ia](0, c * 20);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 56.999969482421875, c * 84.517333984375);
  g[G](c * 61.999969482421875, c * 58.517333984375, c * 79.99996948242188, c * 50.517333984375, c * 102.99996948242188, c * 50.517333984375);
  g[G](c * 119.99996948242188, c * 26.517333984375, c * 137.99996948242188, c * 32.517333984375, c * 156.99996948242188, c * 44.517333984375);
  g[G](c * 187.99996948242188, c * 42.517333984375, c * 195.99996948242188, c * 50.517333984375, c * 202.99996948242188, c * 77.517333984375);
  g[G](c * 229.99996948242188, c * 80.517333984375, c * 231.99996948242188, c * 96.517333984375, c * 229.99996948242188, c * 118.517333984375);
  g[G](c * 241.99996948242188, c * 147.517333984375, c * 236.99996948242188, c * 148.517333984375, c * 220.99996948242188, c * 165.517333984375);
  g[G](c * 222.99996948242188, c * 192.517333984375, c * 209.99996948242188, c * 212.517333984375, c * 177.99996948242188, c * 213.517333984375);
  g[G](c * 159.99996948242188, c * 234.517333984375, c * 141.99996948242188, c * 234.517333984375, c * 116.99996948242188, c * 222.517333984375);
  g[G](c * 72.99996948242188, c * 226.517333984375, c * 66.99996948242188, c * 207.517333984375, c * 65.99996948242188, c * 190.517333984375);
  g[G](c * 35.999969482421875, c * 180.517333984375, c * 30.999969482421875, c * 162.517333984375, c * 39.999969482421875, c * 135.517333984375);
  g[G](c * 23.999969482421875, c * 110.517333984375, c * 43.999969482421875, c * 90.517333984375, c * 55.999969482421875, c * 85.517333984375);
  g[X]();
  jc(g, e[0]);
  g[Ia](0, c * -20);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 56.999969482421875, c * 84.517333984375);
  g[G](c * 61.999969482421875, c * 58.517333984375, c * 79.99996948242188, c * 50.517333984375, c * 102.99996948242188, c * 50.517333984375);
  g[G](c * 119.99996948242188, c * 26.517333984375, c * 137.99996948242188, c * 32.517333984375, c * 156.99996948242188, c * 44.517333984375);
  g[G](c * 187.99996948242188, c * 42.517333984375, c * 195.99996948242188, c * 50.517333984375, c * 202.99996948242188, c * 77.517333984375);
  g[G](c * 229.99996948242188, c * 80.517333984375, c * 231.99996948242188, c * 96.517333984375, c * 229.99996948242188, c * 118.517333984375);
  g[G](c * 241.99996948242188, c * 147.517333984375, c * 236.99996948242188, c * 148.517333984375, c * 220.99996948242188, c * 165.517333984375);
  g[G](c * 222.99996948242188, c * 192.517333984375, c * 209.99996948242188, c * 212.517333984375, c * 177.99996948242188, c * 213.517333984375);
  g[G](c * 159.99996948242188, c * 234.517333984375, c * 141.99996948242188, c * 234.517333984375, c * 116.99996948242188, c * 222.517333984375);
  g[G](c * 72.99996948242188, c * 226.517333984375, c * 66.99996948242188, c * 207.517333984375, c * 65.99996948242188, c * 190.517333984375);
  g[G](c * 35.999969482421875, c * 180.517333984375, c * 30.999969482421875, c * 162.517333984375, c * 39.999969482421875, c * 135.517333984375);
  g[G](c * 23.999969482421875, c * 110.517333984375, c * 43.999969482421875, c * 90.517333984375, c * 55.999969482421875, c * 85.517333984375);
  g[X]();
  jc(g, e[1], e[2], c * 8);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 123.99996948242188, c * 116.18402099609375);
  g[G](c * 115.99996948242188, c * 99.18402099609375, c * 109.99996948242188, c * 74.18402099609375, c * 109.99996948242188, c * 63.18402099609375);
  g[G](c * 115.99996948242188, c * 69.18402099609375, c * 125.99996948242188, c * 87.18402099609375, c * 137.99996948242188, c * 112.18402099609375);
  g[G](c * 142.99996948242188, c * 84.18402099609375, c * 143.99996948242188, c * 76.18402099609375, c * 153.99996948242188, c * 62.18402099609375);
  g[G](c * 155.99996948242188, c * 79.18402099609375, c * 149.99996948242188, c * 110.18402099609375, c * 151.99996948242188, c * 117.18402099609375);
  g[G](c * 162.99996948242188, c * 104.18402099609375, c * 180.99996948242188, c * 91.18402099609375, c * 191.99996948242188, c * 91.18402099609375);
  g[G](c * 185.99996948242188, c * 102.18402099609375, c * 180.99996948242188, c * 106.18402099609375, c * 160.99996948242188, c * 124.18402099609375);
  g[G](c * 190.99996948242188, c * 121.18402099609375, c * 199.99996948242188, c * 120.18402099609375, c * 207.99996948242188, c * 123.18402099609375);
  g[G](c * 199.99996948242188, c * 129.18402099609375, c * 181.99996948242188, c * 132.18402099609375, c * 160.99996948242188, c * 135.18402099609375);
  g[G](c * 179.99996948242188, c * 142.18402099609375, c * 193.99996948242188, c * 151.18402099609375, c * 196.99996948242188, c * 156.18402099609375);
  g[G](c * 185.99996948242188, c * 156.18402099609375, c * 163.99996948242188, c * 149.18402099609375, c * 152.99996948242188, c * 147.18402099609375);
  g[G](c * 157.99996948242188, c * 155.18402099609375, c * 165.99996948242188, c * 176.18402099609375, c * 169.99996948242188, c * 195.18402099609375);
  g[G](c * 162.99996948242188, c * 190.18402099609375, c * 147.99996948242188, c * 167.18402099609375, c * 139.99996948242188, c * 153.18402099609375);
  g[G](c * 137.99996948242188, c * 167.18402099609375, c * 126.99996948242188, c * 194.18402099609375, c * 119.99996948242188, c * 204.18402099609375);
  g[G](c * 117.99996948242188, c * 186.18402099609375, c * 123.99996948242188, c * 165.18402099609375, c * 126.99996948242188, c * 149.18402099609375);
  g[G](c * 110.99996948242188, c * 163.18402099609375, c * 103.99996948242188, c * 170.18402099609375, c * 82.99996948242188, c * 177.18402099609375);
  g[G](c * 90.99996948242188, c * 162.18402099609375, c * 99.99996948242188, c * 153.18402099609375, c * 117.99996948242188, c * 140.18402099609375);
  g[G](c * 97.99996948242188, c * 140.18402099609375, c * 83.99996948242188, c * 139.18402099609375, c * 65.99996948242188, c * 132.18402099609375);
  g[G](c * 77.99996948242188, c * 127.18402099609375, c * 95.99996948242188, c * 127.18402099609375, c * 115.99996948242188, c * 127.18402099609375);
  g[G](c * 91.99996948242188, c * 113.18402099609375, c * 84.99996948242188, c * 107.18402099609375, c * 76.99996948242188, c * 96.18402099609375);
  g[G](c * 94.99996948242188, c * 99.18402099609375, c * 109.99996948242188, c * 109.18402099609375, c * 123.99996948242188, c * 116.18402099609375);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 131.99996948242188, c * 119.18402099609375);
  g[G](c * 141.99996948242188, c * 119.18402099609375, c * 145.99996948242188, c * 116.18402099609375, c * 147.99996948242188, c * 109.18402099609375);
  g[G](c * 151.99996948242188, c * 107.18402099609375, c * 159.99996948242188, c * 107.18402099609375, c * 156.99996948242188, c * 123.18402099609375);
  g[G](c * 155.99996948242188, c * 140.18402099609375, c * 142.99996948242188, c * 149.18402099609375, c * 132.99996948242188, c * 147.18402099609375);
  g[G](c * 119.99996948242188, c * 144.18402099609375, c * 113.99996948242188, c * 122.18402099609375, c * 131.99996948242188, c * 119.18402099609375);
  g[X]();
  jc(g, e[4], e[5], c * 6);
  return f;
}
function Df(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 247;
  f.height = c * 247;
  g[Ia](0, c * 10);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 150, c * 62);
  g[G](c * 151.5, c * 71.5, c * 149, c * 70, c * 153, c * 81);
  g[G](c * 158, c * 73.5, c * 158, c * 73.5, c * 163, c * 66);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 164, c * 171);
  g[G](c * 149, c * 159, c * 156.5, c * 165, c * 149, c * 159);
  g[G](c * 149, c * 167, c * 149, c * 170, c * 152, c * 178);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 132, c * 95);
  g[G](c * 154, c * 102, c * 154, c * 126, c * 137, c * 139);
  g[G](c * 113, c * 152, c * 89, c * 136, c * 80, c * 121);
  g[G](c * 57, c * 89, c * 69, c * 63, c * 79, c * 52);
  g[G](c * 110, c * 20, c * 139, c * 21, c * 150, c * 25);
  g[G](c * 197, c * 36, c * 221, c * 67, c * 226, c * 90);
  g[G](c * 234, c * 134, c * 214, c * 177, c * 195, c * 197);
  g[G](c * 144, c * 242, c * 79, c * 216, c * 58, c * 206);
  g[G](c * 13, c * 174, c * 20, c * 134, c * 23, c * 107);
  g[G](c * 26, c * 78, c * 33, c * 60, c * 38, c * 43);
  g[G](c * 42, c * 32, c * 47, c * 32, c * 50, c * 36);
  g[G](c * 54, c * 37, c * 50, c * 52, c * 44, c * 87);
  g[G](c * 40, c * 115, c * 46, c * 142, c * 57, c * 158);
  g[G](c * 76, c * 189, c * 129, c * 182, c * 152, c * 173);
  g[G](c * 186, c * 156, c * 191, c * 106, c * 176, c * 85);
  g[G](c * 159, c * 61, c * 132, c * 62, c * 122, c * 66);
  g[G](c * 108, c * 74, c * 108, c * 89, c * 116, c * 90);
  g[G](c * 123, c * 92, c * 130, c * 93, c * 131, c * 94);
  g[X]();
  jc(g, e[0]);
  g[Ia](0, c * -10);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 150, c * 62);
  g[G](c * 151.5, c * 71.5, c * 149, c * 70, c * 153, c * 81);
  g[G](c * 158, c * 73.5, c * 158, c * 73.5, c * 163, c * 66);
  g[X]();
  jc(g, e[5]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 164, c * 171);
  g[G](c * 149, c * 159, c * 156.5, c * 165, c * 149, c * 159);
  g[G](c * 149, c * 167, c * 149, c * 170, c * 152, c * 178);
  g[X]();
  jc(g, e[5]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 132, c * 95);
  g[G](c * 154, c * 102, c * 154, c * 126, c * 137, c * 139);
  g[G](c * 113, c * 152, c * 89, c * 136, c * 80, c * 121);
  g[G](c * 57, c * 89, c * 69, c * 63, c * 79, c * 52);
  g[G](c * 110, c * 20, c * 139, c * 21, c * 150, c * 25);
  g[G](c * 197, c * 36, c * 221, c * 67, c * 226, c * 90);
  g[G](c * 234, c * 134, c * 214, c * 177, c * 195, c * 197);
  g[G](c * 144, c * 242, c * 79, c * 216, c * 58, c * 206);
  g[G](c * 13, c * 174, c * 20, c * 134, c * 23, c * 107);
  g[G](c * 26, c * 78, c * 33, c * 60, c * 38, c * 43);
  g[G](c * 42, c * 32, c * 47, c * 32, c * 50, c * 36);
  g[G](c * 54, c * 37, c * 50, c * 52, c * 44, c * 87);
  g[G](c * 40, c * 115, c * 46, c * 142, c * 57, c * 158);
  g[G](c * 76, c * 189, c * 129, c * 182, c * 152, c * 173);
  g[G](c * 186, c * 156, c * 191, c * 106, c * 176, c * 85);
  g[G](c * 159, c * 61, c * 132, c * 62, c * 122, c * 66);
  g[G](c * 108, c * 74, c * 108, c * 89, c * 116, c * 90);
  g[G](c * 123, c * 92, c * 130, c * 93, c * 131, c * 94);
  g[X]();
  jc(g, e[1], e[2], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 137, c * 137);
  g[G](c * 145, c * 125, c * 138, c * 108, c * 123, c * 104);
  g[G](c * 81, c * 101, c * 88, c * 77, c * 98, c * 65);
  g[G](c * 117, c * 38, c * 138, c * 39, c * 165, c * 52);
  g[G](c * 197, c * 72, c * 207, c * 111, c * 197, c * 140);
  g[G](c * 182, c * 180, c * 161, c * 197, c * 112, c * 194);
  g[G](c * 58, c * 194, c * 37, c * 170, c * 34, c * 142);
  g[G](c * 29, c * 102, c * 40, c * 63, c * 51, c * 45);
  g[G](c * 43, c * 78, c * 41, c * 103, c * 43, c * 122);
  g[G](c * 51, c * 158, c * 63, c * 174, c * 95, c * 179);
  g[G](c * 129, c * 186, c * 169, c * 172, c * 177, c * 144);
  g[G](c * 197, c * 105, c * 172, c * 76, c * 160, c * 71);
  g[G](c * 125, c * 52, c * 111, c * 73, c * 111, c * 81);
  g[G](c * 106, c * 93, c * 140, c * 92, c * 147, c * 107);
  g[G](c * 153, c * 128, c * 140, c * 135, c * 137, c * 139);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 132, c * 95);
  g[G](c * 154, c * 102, c * 154, c * 126, c * 137, c * 139);
  g[G](c * 113, c * 152, c * 89, c * 136, c * 80, c * 121);
  g[G](c * 57, c * 89, c * 69, c * 63, c * 79, c * 52);
  g[G](c * 110, c * 20, c * 139, c * 21, c * 150, c * 25);
  g[G](c * 197, c * 36, c * 221, c * 67, c * 226, c * 90);
  g[G](c * 234, c * 134, c * 214, c * 177, c * 195, c * 197);
  g[G](c * 144, c * 242, c * 79, c * 216, c * 58, c * 206);
  g[G](c * 13, c * 174, c * 20, c * 134, c * 23, c * 107);
  g[G](c * 26, c * 78, c * 33, c * 60, c * 38, c * 43);
  g[G](c * 42, c * 32, c * 47, c * 32, c * 50, c * 36);
  g[G](c * 54, c * 37, c * 50, c * 52, c * 44, c * 87);
  g[G](c * 40, c * 115, c * 46, c * 142, c * 57, c * 158);
  g[G](c * 76, c * 189, c * 129, c * 182, c * 152, c * 173);
  g[G](c * 186, c * 156, c * 191, c * 106, c * 176, c * 85);
  g[G](c * 159, c * 61, c * 132, c * 62, c * 122, c * 66);
  g[G](c * 108, c * 74, c * 108, c * 89, c * 116, c * 90);
  g[G](c * 123, c * 92, c * 130, c * 93, c * 131, c * 94);
  g[X]();
  jc(g, undefined, e[2], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 82, c * 63);
  g[G](c * 91, c * 64, c * 96, c * 62, c * 98, c * 53);
  g[G](c * 91, c * 45, c * 85, c * 42, c * 78, c * 41);
  g[G](c * 81, c * 51, c * 82, c * 57, c * 82, c * 63);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 148, c * 40);
  g[G](c * 140, c * 52, c * 131, c * 51, c * 123, c * 43);
  g[G](c * 123, c * 25, c * 129, c * 17, c * 134, c * 12);
  g[G](c * 138, c * 35, c * 142, c * 31, c * 148, c * 40);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 189, c * 43);
  g[G](c * 191, c * 54, c * 196, c * 58, c * 205, c * 59);
  g[G](c * 211, c * 42, c * 214, c * 37, c * 216, c * 31);
  g[G](c * 202, c * 34, c * 195, c * 39, c * 190, c * 43);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 216, c * 98);
  g[G](c * 219, c * 105, c * 225, c * 107, c * 230, c * 109);
  g[G](c * 227, c * 113, c * 221, c * 115, c * 215, c * 115);
  g[G](c * 208, c * 109, c * 211, c * 101, c * 216, c * 98);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 180, c * 85);
  g[G](c * 193, c * 86, c * 196, c * 98, c * 191, c * 108);
  g[G](c * 179, c * 112, c * 167, c * 113, c * 155, c * 111);
  g[G](c * 169, c * 100, c * 176, c * 96, c * 180, c * 85);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 96, c * 114);
  g[G](c * 102, c * 109, c * 112, c * 110, c * 114, c * 118);
  g[G](c * 111, c * 134, c * 102, c * 143, c * 95, c * 147);
  g[G](c * 98, c * 123, c * 97, c * 119, c * 96, c * 115);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 79, c * 92);
  g[G](c * 86, c * 95, c * 89, c * 102, c * 83, c * 111);
  g[G](c * 70, c * 110, c * 61, c * 107, c * 54, c * 100);
  g[G](c * 70, c * 97, c * 70, c * 95, c * 78, c * 92);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 39, c * 130);
  g[G](c * 37, c * 141, c * 41, c * 143, c * 48, c * 144);
  g[G](c * 54, c * 134, c * 55, c * 131, c * 56, c * 123);
  g[G](c * 47, c * 129, c * 43, c * 129, c * 39, c * 129);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 113, c * 189);
  g[G](c * 119, c * 201, c * 127, c * 198, c * 134, c * 192);
  g[G](c * 128, c * 175, c * 128, c * 173, c * 128, c * 165);
  g[G](c * 117, c * 176, c * 116, c * 182, c * 113, c * 187);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 74, c * 154);
  g[G](c * 76, c * 163, c * 76, c * 170, c * 75, c * 177);
  g[G](c * 68, c * 179, c * 66, c * 176, c * 63, c * 171);
  g[G](c * 69, c * 164, c * 72, c * 159, c * 74, c * 154);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 206, c * 152);
  g[G](c * 198, c * 158, c * 198, c * 166, c * 201, c * 171);
  g[G](c * 209, c * 170, c * 221, c * 170, c * 226, c * 172);
  g[G](c * 219, c * 159, c * 210, c * 155, c * 207, c * 153);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 181, c * 184);
  g[G](c * 170, c * 184, c * 167, c * 187, c * 163, c * 195);
  g[G](c * 171, c * 207, c * 183, c * 214, c * 191, c * 217);
  g[G](c * 183, c * 204, c * 184, c * 196, c * 181, c * 184);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 66, c * 199);
  g[G](c * 73, c * 197, c * 78, c * 199, c * 79, c * 206);
  g[G](c * 71, c * 216, c * 67, c * 221, c * 57, c * 223);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 182, c * 143);
  g[G](c * 183, c * 146, c * 183, c * 149, c * 179, c * 152);
  g[G](c * 174, c * 146, c * 174, c * 146, c * 169, c * 140);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 32, c * 159);
  g[G](c * 45, c * 160, c * 48, c * 164, c * 45, c * 175);
  g[G](c * 28, c * 183, c * 25, c * 184, c * 19, c * 184);
  g[G](c * 30, c * 170, c * 29, c * 164, c * 31, c * 160);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 110, c * 214);
  g[G](c * 106, c * 212, c * 104, c * 213, c * 102, c * 218);
  g[G](c * 104, c * 220, c * 107, c * 222, c * 110, c * 224);
  g[G](c * 110.5, c * 219, c * 110.5, c * 219, c * 111, c * 214);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 40, c * 52);
  g[G](c * 41, c * 57, c * 40, c * 61, c * 34, c * 60);
  g[G](c * 31.5, c * 55, c * 31.5, c * 55, c * 29, c * 50);
  g[G](c * 34, c * 50.5, c * 34, c * 50.5, c * 39, c * 51);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 31, c * 81);
  g[G](c * 37, c * 84, c * 38, c * 90, c * 34, c * 99);
  g[G](c * 23, c * 97, c * 19, c * 96, c * 16, c * 93);
  g[G](c * 24, c * 88, c * 28, c * 85, c * 30, c * 81);
  g[X]();
  jc(g, e[4], e[5], c * 5);
  return f;
}
function isAlly(id) {
  switch(id) {
    case hj.id:
      return true
    default:
      return hj.ﱢ️︅︄ .includes(id)
  }
}
function Ef(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 465;
  f.height = c * 310;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 126, c * 192);
  g[G](c * 198, c * 202, c * 245, c * 203, c * 335, c * 194);
  g[G](c * 336, c * 232, c * 326, c * 235, c * 232, c * 237);
  g[G](c * 161, c * 235, c * 122, c * 235, c * 126, c * 193);
  g[X]();
  jc(g, e[0], e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 146, c * 239);
  g[G](c * 174, c * 74, c * 287, c * 88, c * 320, c * 240);
  g[G](c * 329, c * 231, c * 340, c * 219, c * 332, c * 115);
  g[G](c * 330, c * 40, c * 144, c * 30, c * 129, c * 116);
  g[G](c * 124, c * 217, c * 124, c * 228, c * 143, c * 237);
  g[X]();
  jc(g, e[0], e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 126, c * 193);
  g[G](c * 173, c * 94, c * 209, c * 100, c * 228, c * 57);
  g[G](c * 190, c * 112, c * 165, c * 115, c * 127, c * 184);
  g[X]();
  jc(g, undefined, e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 230, c * 57);
  g[G](c * 266, c * 117, c * 310, c * 130, c * 332, c * 183);
  g[G](c * 290, c * 112, c * 262, c * 109, c * 230, c * 56);
  g[X]();
  jc(g, undefined, e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 154, c * 212);
  g[G](c * 208, c * 224, c * 252, c * 219, c * 305, c * 212);
  g[G](c * 267, c * 219, c * 204, c * 222, c * 155, c * 212);
  g[X]();
  jc(g, undefined, e[1], c * 4);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 239, c * 59);
  g[G](c * 302, c * 72, c * 325, c * 84, c * 326, c * 115);
  g[G](c * 289, c * 80, c * 270, c * 88, c * 253, c * 78);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 216, c * 61);
  g[G](c * 209, c * 70, c * 209, c * 70, c * 202, c * 79);
  g[G](c * 173, c * 87, c * 162, c * 91, c * 137, c * 107);
  g[G](c * 153, c * 78, c * 174, c * 67, c * 212, c * 62);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 175, c * 125);
  g[G](c * 218, c * 94, c * 238, c * 90, c * 281, c * 125);
  g[G](c * 245, c * 89, c * 240, c * 80, c * 228, c * 67);
  g[G](c * 207, c * 100, c * 192, c * 104, c * 177, c * 123);
  g[X]();
  jc(g, e[2]);
  return f;
}
function Ff(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 465;
  f.height = c * 405;
  g[ua] = 1;
  g[Ia](c * 6, c * 0);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 39.000030517578125, c * 162.03977966308594);
  g[G](c * 125.00003051757812, c * 84.03977966308594, c * 108.50003051757812, c * 115.03977966308594, c * 178.00003051757812, c * 68.03977966308594);
  g[G](c * 299.0000305175781, c * 146.53977966308594, c * 299.0000305175781, c * 146.53977966308594, c * 420.0000305175781, c * 225.03977966308594);
  g[G](c * 400.0000305175781, c * 288.53977966308594, c * 400.0000305175781, c * 288.53977966308594, c * 380.0000305175781, c * 352.03977966308594);
  g[G](c * 216.50003051757812, c * 345.53977966308594, c * 216.50003051757812, c * 345.53977966308594, c * 53.000030517578125, c * 339.03977966308594);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 23.000030517578125, c * 306.94886779785156);
  g[G](c * 5.000030517578125, c * 275.94886779785156, c * 6.000030517578125, c * 201.94886779785156, c * 14.000030517578125, c * 150.94886779785156);
  g[G](c * 40.000030517578125, c * 34.94886779785156, c * 157.00003051757812, c * 14.948867797851562, c * 199.00003051757812, c * 11.948867797851562);
  g[G](c * 331.0000305175781, c * 0.9488677978515625, c * 409.0000305175781, c * 61.94886779785156, c * 428.0000305175781, c * 133.94886779785156);
  g[G](c * 445.0000305175781, c * 207.94886779785156, c * 439.0000305175781, c * 274.94886779785156, c * 426.0000305175781, c * 342.94886779785156);
  g[G](c * 355.0000305175781, c * 207.94886779785156, c * 345.0000305175781, c * 208.94886779785156, c * 333.0000305175781, c * 202.94886779785156);
  g[G](c * 262.0000305175781, c * 143.94886779785156, c * 236.00003051757812, c * 148.94886779785156, c * 189.00003051757812, c * 162.94886779785156);
  g[G](c * 82.00003051757812, c * 190.94886779785156, c * 78.00003051757812, c * 235.94886779785156, c * 62.000030517578125, c * 279.94886779785156);
  g[X]();
  jc(g, e[0], e[1], c * 20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 17.000030517578125, c * 149.94886779785156);
  g[G](c * 76.00003051757812, c * 67.94886779785156, c * 177.00003051757812, c * 40.94886779785156, c * 232.00003051757812, c * 45.94886779785156);
  g[G](c * 316.0000305175781, c * 46.94886779785156, c * 359.0000305175781, c * 74.94886779785156, c * 428.0000305175781, c * 145.94886779785156);
  g[G](c * 414.0000305175781, c * 73.94886779785156, c * 386.0000305175781, c * 68.94886779785156, c * 359.0000305175781, c * 43.94886779785156);
  g[G](c * 295.0000305175781, c * 5.9488677978515625, c * 239.00003051757812, c * 10.948867797851562, c * 207.00003051757812, c * 10.948867797851562);
  g[G](c * 121.00003051757812, c * 20.948867797851562, c * 104.00003051757812, c * 34.94886779785156, c * 45.000030517578125, c * 84.94886779785156);
  g[G](c * 14.000030517578125, c * 128.94886779785156, c * 18.000030517578125, c * 142.94886779785156, c * 16.000030517578125, c * 151.94886779785156);
  g[X]();
  jc(g, e[2]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 23.000030517578125, c * 306.94886779785156);
  g[G](c * 5.000030517578125, c * 275.94886779785156, c * 6.000030517578125, c * 201.94886779785156, c * 14.000030517578125, c * 150.94886779785156);
  g[G](c * 40.000030517578125, c * 34.94886779785156, c * 157.00003051757812, c * 14.948867797851562, c * 199.00003051757812, c * 11.948867797851562);
  g[G](c * 331.0000305175781, c * 0.9488677978515625, c * 409.0000305175781, c * 61.94886779785156, c * 428.0000305175781, c * 133.94886779785156);
  g[G](c * 445.0000305175781, c * 207.94886779785156, c * 439.0000305175781, c * 274.94886779785156, c * 426.0000305175781, c * 342.94886779785156);
  g[G](c * 355.0000305175781, c * 207.94886779785156, c * 345.0000305175781, c * 208.94886779785156, c * 333.0000305175781, c * 202.94886779785156);
  g[G](c * 262.0000305175781, c * 143.94886779785156, c * 236.00003051757812, c * 148.94886779785156, c * 189.00003051757812, c * 162.94886779785156);
  g[G](c * 82.00003051757812, c * 190.94886779785156, c * 78.00003051757812, c * 235.94886779785156, c * 62.000030517578125, c * 279.94886779785156);
  g[X]();
  jc(g, undefined, e[1], c * 16);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 60.000030517578125, c * 288.03977966308594);
  g[G](c * 183.00003051757812, c * 320.03977966308594, c * 342.0000305175781, c * 306.03977966308594, c * 399.0000305175781, c * 286.03977966308594);
  g[G](c * 420.0000305175781, c * 345.03977966308594, c * 410.0000305175781, c * 335.03977966308594, c * 415.0000305175781, c * 362.03977966308594);
  g[G](c * 351.0000305175781, c * 384.03977966308594, c * 299.0000305175781, c * 389.03977966308594, c * 215.00003051757812, c * 391.03977966308594);
  g[G](c * 128.00003051757812, c * 388.03977966308594, c * 69.00003051757812, c * 373.03977966308594, c * 39.000030517578125, c * 359.03977966308594);
  g[X]();
  jc(g, e[0], e[1], c * 13);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 47.000030517578125, c * 327.03977966308594);
  g[G](c * 203.00003051757812, c * 377.03977966308594, c * 331.0000305175781, c * 349.03977966308594, c * 410.0000305175781, c * 330.03977966308594);
  g[X]();
  jc(g, e[0], e[1], c * 20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 9.000030517578125, c * 339.1306915283203);
  g[G](c * 2.000030517578125, c * 280.1306915283203, c * 30.000030517578125, c * 219.1306915283203, c * 85.00003051757812, c * 167.1306915283203);
  g[G](c * 174.00003051757812, c * 82.13069152832031, c * 241.00003051757812, c * 101.13069152832031, c * 284.0000305175781, c * 115.13069152832031);
  g[G](c * 333.0000305175781, c * 134.1306915283203, c * 376.0000305175781, c * 177.1306915283203, c * 410.0000305175781, c * 247.1306915283203);
  g[G](c * 439.0000305175781, c * 300.1306915283203, c * 442.0000305175781, c * 346.1306915283203, c * 430.0000305175781, c * 363.1306915283203);
  g[G](c * 418.0000305175781, c * 366.1306915283203, c * 395.0000305175781, c * 295.1306915283203, c * 355.0000305175781, c * 223.1306915283203);
  g[G](c * 299.0000305175781, c * 156.1306915283203, c * 262.0000305175781, c * 155.1306915283203, c * 215.00003051757812, c * 159.1306915283203);
  g[G](c * 133.00003051757812, c * 171.1306915283203, c * 120.00003051757812, c * 193.1306915283203, c * 96.00003051757812, c * 221.1306915283203);
  g[G](c * 49.000030517578125, c * 262.1306915283203, c * 47.000030517578125, c * 306.1306915283203, c * 38.000030517578125, c * 336.1306915283203);
  g[G](c * 30.000030517578125, c * 349.1306915283203, c * 30.000030517578125, c * 349.1306915283203, c * 22.000030517578125, c * 362.1306915283203);
  g[X]();
  jc(g, e[2], e[1], c * 20);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 228.00003051757812, c * 128.03977966308594);
  g[G](c * 315.0000305175781, c * 131.03977966308594, c * 349.0000305175781, c * 178.03977966308594, c * 386.0000305175781, c * 234.03977966308594);
  g[G](c * 444.0000305175781, c * 329.03977966308594, c * 446.0000305175781, c * 354.03977966308594, c * 427.0000305175781, c * 373.03977966308594);
  g[G](c * 389.0000305175781, c * 389.03977966308594, c * 399.0000305175781, c * 329.03977966308594, c * 361.0000305175781, c * 277.03977966308594);
  g[G](c * 306.0000305175781, c * 191.03977966308594, c * 266.0000305175781, c * 183.03977966308594, c * 220.00003051757812, c * 181.03977966308594);
  g[G](c * 138.00003051757812, c * 184.03977966308594, c * 123.00003051757812, c * 212.03977966308594, c * 89.00003051757812, c * 271.03977966308594);
  g[G](c * 52.000030517578125, c * 349.03977966308594, c * 68.00003051757812, c * 364.03977966308594, c * 33.000030517578125, c * 369.03977966308594);
  g[G](c * 6.000030517578125, c * 366.03977966308594, c * 5.000030517578125, c * 341.03977966308594, c * 26.000030517578125, c * 288.03977966308594);
  g[G](c * 60.000030517578125, c * 207.03977966308594, c * 100.00003051757812, c * 180.03977966308594, c * 113.00003051757812, c * 170.03977966308594);
  g[G](c * 159.00003051757812, c * 132.03977966308594, c * 196.00003051757812, c * 133.03977966308594, c * 226.00003051757812, c * 129.03977966308594);
  g[X]();
  jc(g, e[0], e[1], c * 20);
  return f;
}
function Gf(c, d, e, f) {
  var g = document[p]("canvas");
  var i = g[T]("2d");
  g.width = c * 198;
  g.height = c * 147;
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 44, c * 76);
  i[G](c * 50, c * 82, c * 50, c * 82, c * 56, c * 88);
  i[G](c * 59, c * 82, c * 59, c * 82, c * 62, c * 76);
  i[G](c * 59, c * 71, c * 59, c * 71, c * 56, c * 66);
  i[G](c * 59, c * 69, c * 59, c * 69, c * 62, c * 72);
  i[G](c * 80, c * 48, c * 102, c * 50, c * 120, c * 62);
  i[G](c * 127, c * 58, c * 127, c * 58, c * 134, c * 54);
  i[G](c * 129, c * 60, c * 129, c * 60, c * 124, c * 66);
  i[G](c * 129, c * 73, c * 129, c * 73, c * 134, c * 80);
  i[G](c * 140, c * 74, c * 140, c * 74, c * 146, c * 68);
  i[G](c * 142, c * 76, c * 142, c * 76, c * 138, c * 84);
  i[G](c * 144, c * 90, c * 142, c * 90, c * 144, c * 90);
  i[G](c * 136, c * 97, c * 136, c * 97, c * 128, c * 104);
  i[G](c * 154, c * 110, c * 164, c * 90, c * 160, c * 80);
  i[G](c * 138, c * 22, c * 148, c * 51, c * 136, c * 22);
  i[G](c * 97, c * 24, c * 97, c * 24, c * 58, c * 26);
  i[G](c * 47, c * 54, c * 36, c * 80, c * 36, c * 82);
  i[G](c * 40, c * 108, c * 54, c * 104, c * 62, c * 104);
  i[G](c * 46, c * 92, c * 54, c * 97, c * 46, c * 90);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 36, c * 80);
  i[G](c * 30, c * 84, c * 28, c * 92, c * 34, c * 100);
  i[G](c * 41.5, c * 102, c * 41.5, c * 102, c * 49, c * 104);
  i[G](c * 43, c * 105.5, c * 43, c * 105.5, c * 37, c * 107);
  i[G](c * 46, c * 111, c * 60, c * 114, c * 76, c * 114);
  i[G](c * 78, c * 110.5, c * 78, c * 110.5, c * 80, c * 107);
  i[G](c * 81, c * 110.5, c * 81, c * 110.5, c * 82, c * 114);
  i[G](c * 94.5, c * 113.5, c * 94.5, c * 113.5, c * 107, c * 113);
  i[G](c * 108.5, c * 110, c * 108.5, c * 110, c * 110, c * 107);
  i[G](c * 111.5, c * 110.5, c * 111.5, c * 110.5, c * 113, c * 114);
  i[G](c * 131, c * 112.5, c * 131, c * 112.5, c * 149, c * 111);
  i[G](c * 148.5, c * 107.5, c * 148.5, c * 107.5, c * 148, c * 104);
  i[G](c * 150.5, c * 107, c * 150.5, c * 107, c * 153, c * 110);
  i[G](c * 155.5, c * 108.5, c * 155.5, c * 108.5, c * 158, c * 107);
  i[G](c * 156.5, c * 104, c * 156.5, c * 104, c * 155, c * 101);
  i[G](c * 158.5, c * 102.5, c * 158.5, c * 102.5, c * 162, c * 104);
  i[G](c * 168, c * 100, c * 170, c * 92, c * 169, c * 85);
  i[G](c * 166, c * 86, c * 166, c * 86, c * 163, c * 87);
  i[G](c * 165.5, c * 83, c * 165.5, c * 83, c * 168, c * 79);
  i[G](c * 165.5, c * 76.5, c * 165.5, c * 76.5, c * 163, c * 74);
  i[G](c * 155, c * 82.5, c * 155, c * 82.5, c * 147, c * 91);
  i[G](c * 139, c * 95.5, c * 139, c * 95.5, c * 131, c * 100);
  i[G](c * 97.5, c * 100.5, c * 97.5, c * 100.5, c * 64, c * 101);
  i[G](c * 49, c * 102, c * 43, c * 90, c * 36, c * 80);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 36, c * 80);
  i[G](c * 30, c * 84, c * 28, c * 92, c * 34, c * 100);
  i[G](c * 41.5, c * 102, c * 41.5, c * 102, c * 49, c * 104);
  i[G](c * 43, c * 105.5, c * 43, c * 105.5, c * 37, c * 107);
  i[G](c * 46, c * 111, c * 60, c * 114, c * 76, c * 114);
  i[G](c * 78, c * 110.5, c * 78, c * 110.5, c * 80, c * 107);
  i[G](c * 81, c * 110.5, c * 81, c * 110.5, c * 82, c * 114);
  i[G](c * 94.5, c * 113.5, c * 94.5, c * 113.5, c * 107, c * 113);
  i[G](c * 108.5, c * 110, c * 108.5, c * 110, c * 110, c * 107);
  i[G](c * 111.5, c * 110.5, c * 111.5, c * 110.5, c * 113, c * 114);
  i[G](c * 131, c * 112.5, c * 131, c * 112.5, c * 149, c * 111);
  i[G](c * 148.5, c * 107.5, c * 148.5, c * 107.5, c * 148, c * 104);
  i[G](c * 150.5, c * 107, c * 150.5, c * 107, c * 153, c * 110);
  i[G](c * 155.5, c * 108.5, c * 155.5, c * 108.5, c * 158, c * 107);
  i[G](c * 156.5, c * 104, c * 156.5, c * 104, c * 155, c * 101);
  i[G](c * 158.5, c * 102.5, c * 158.5, c * 102.5, c * 162, c * 104);
  i[G](c * 168, c * 100, c * 170, c * 92, c * 169, c * 85);
  i[G](c * 166, c * 86, c * 166, c * 86, c * 163, c * 87);
  i[G](c * 165.5, c * 83, c * 165.5, c * 83, c * 168, c * 79);
  i[G](c * 165.5, c * 76.5, c * 165.5, c * 76.5, c * 163, c * 74);
  i[G](c * 155, c * 82.5, c * 155, c * 82.5, c * 147, c * 91);
  i[G](c * 139, c * 95.5, c * 139, c * 95.5, c * 131, c * 100);
  i[G](c * 97.5, c * 100.5, c * 97.5, c * 100.5, c * 64, c * 101);
  i[G](c * 49, c * 102, c * 43, c * 90, c * 36, c * 80);
  i[X]();
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 49, c * 98);
  i[G](c * 96.5, c * 98, c * 96.5, c * 98, c * 144, c * 98);
  i[G](c * 136.5, c * 102, c * 136.5, c * 102, c * 129, c * 106);
  i[G](c * 103, c * 105.5, c * 103, c * 105.5, c * 77, c * 105);
  i[G](c * 65, c * 105, c * 65, c * 105, c * 53, c * 105);
  i[X]();
  jc(i, e[1]);
  i[ua] = 0.5;
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 54, c * 98);
  i[G](c * 97, c * 98, c * 97, c * 98, c * 140, c * 98);
  i[G](c * 134, c * 101, c * 134, c * 101, c * 128, c * 104);
  i[G](c * 92, c * 104, c * 92, c * 104, c * 56, c * 104);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 118, c * 47);
  i[G](c * 124.5, c * 43.5, c * 124.5, c * 43.5, c * 131, c * 40);
  i[G](c * 128, c * 46, c * 128, c * 46, c * 125, c * 52);
  i[G](c * 131, c * 57, c * 135, c * 64, c * 139, c * 73);
  i[G](c * 142.5, c * 69.5, c * 142.5, c * 69.5, c * 146, c * 66);
  i[G](c * 143.5, c * 72.5, c * 143.5, c * 72.5, c * 141, c * 79);
  i[G](c * 142, c * 91, c * 141, c * 94, c * 132, c * 98);
  i[G](c * 117, c * 102, c * 126, c * 108, c * 142, c * 102);
  i[G](c * 159, c * 98, c * 164, c * 80, c * 162, c * 47);
  i[G](c * 160, c * 19, c * 150, c * 6, c * 117, c * 4);
  i[G](c * 44, c * 0, c * 35, c * 20, c * 33, c * 37);
  i[G](c * 29, c * 69, c * 33, c * 88, c * 44, c * 96);
  i[G](c * 64, c * 107, c * 70, c * 102, c * 54, c * 93);
  i[G](c * 49, c * 88, c * 50, c * 82, c * 53, c * 77);
  i[G](c * 51.5, c * 71, c * 51.5, c * 71, c * 50, c * 65);
  i[G](c * 53, c * 68.5, c * 53, c * 68.5, c * 56, c * 72);
  i[G](c * 59, c * 67.5, c * 59, c * 67.5, c * 62, c * 63);
  i[G](c * 60.5, c * 59.5, c * 60.5, c * 59.5, c * 59, c * 56);
  i[G](c * 62, c * 57, c * 62, c * 57, c * 65, c * 58);
  i[G](c * 78, c * 35, c * 103, c * 36, c * 117, c * 47);
  i[X]();
  jc(i, e[1], e[2], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 62, c * 21);
  i[G](c * 63, c * 34, c * 64, c * 37, c * 66, c * 40);
  i[G](c * 54, c * 49, c * 53, c * 51, c * 48, c * 58);
  i[G](c * 44, c * 51, c * 42, c * 43, c * 40, c * 36);
  i[G](c * 47, c * 28, c * 52, c * 25, c * 61, c * 21);
  i[X]();
  jc(i, e[4]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 60, c * 29);
  i[G](c * 62, c * 25, c * 65, c * 24, c * 70, c * 23);
  jc(i, undefined, e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 61, c * 37);
  i[G](c * 63, c * 32, c * 66, c * 32, c * 71, c * 32);
  jc(i, undefined, e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 52, c * 31);
  i[G](c * 50, c * 26, c * 50, c * 25, c * 51, c * 23);
  jc(i, undefined, e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 46, c * 35);
  i[G](c * 44, c * 31, c * 43, c * 29, c * 45, c * 26);
  jc(i, undefined, e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 58, c * 44);
  i[G](c * 57, c * 48, c * 57, c * 50, c * 60, c * 52);
  jc(i, undefined, e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 53, c * 48);
  i[G](c * 52, c * 52, c * 52, c * 54, c * 55, c * 57);
  jc(i, undefined, e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 46, c * 41);
  i[G](c * 41, c * 42, c * 39, c * 45, c * 38, c * 48);
  jc(i, undefined, e[3], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 48, c * 48);
  i[G](c * 42, c * 51, c * 42, c * 53, c * 40, c * 55);
  jc(i, undefined, e[3], c * 4);
  if (f == 0) {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 99, c * 101);
    i[G](c * 118.6666259765625, c * 104.33331298828125, c * 124.6666259765625, c * 116.33331298828125, c * 112.6666259765625, c * 114.33331298828125);
    i[G](c * 104.6666259765625, c * 112.33331298828125, c * 100.6666259765625, c * 105.33331298828125, c * 99.6666259765625, c * 101.33331298828125);
    jc(i, undefined, e[5], c * 6);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 97.6666259765625, c * 101.33331298828125);
    i[G](c * 81.6666259765625, c * 106.33331298828125, c * 79.6666259765625, c * 114.33331298828125, c * 89.6666259765625, c * 114.33331298828125);
    i[G](c * 95.6666259765625, c * 111.33331298828125, c * 95.6666259765625, c * 109.33331298828125, c * 98.6666259765625, c * 102.33331298828125);
    jc(i, undefined, e[5], c * 6);
  } else {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 103, c * 100.39999389648438);
    i[G](c * 120, c * 106.39999389648438, c * 118, c * 107.39999389648438, c * 120, c * 111.39999389648438);
    jc(i, undefined, e[5], c * 6);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 103, c * 100.39999389648438);
    i[G](c * 90, c * 103.39999389648438, c * 89, c * 106.39999389648438, c * 87, c * 112.39999389648438);
    jc(i, undefined, e[5], c * 6);
    lc(i, c * 86, c * 114.39999389648438, c * 4.5);
    jc(i, e[1], e[5], c * 6);
    lc(i, c * 121, c * 114.39999389648438, c * 4.5);
    jc(i, e[1], e[5], c * 6);
  }
  return g;
}
function Hf(c, d) {
  var e = document[p]("canvas");
  var f = e[T]("2d");
  e.width = c * 253;
  e.height = c * 192;
  f[ua] = 0.5;
  f[g]();
  f[Ia](c * 42, c * 99);
  f[ua] = 0.5;
  kc(f, c * -7, c * -20, c * 14, c * 39, c * 20);
  f[Qa]();
  jc(f, d[0]);
  f[ua] = 1;
  f[g]();
  f[Ia](c * 37, c * 94);
  kc(f, c * -7, c * -20, c * 14, c * 37, c * 20);
  f[Qa]();
  jc(f, d[2]);
  f[ua] = 0.5;
  f[g]();
  f[Ia](c * 136, c * 99);
  f[ua] = 0.5;
  kc(f, c * -84, c * -67, c * 168, c * 134, c * 20);
  f[Qa]();
  jc(f, d[0], d[0], c * 13);
  f[ua] = 1;
  f[g]();
  f[Ia](c * 131, c * 94);
  kc(f, c * -84, c * -67, c * 168, c * 134, c * 20);
  f[Qa]();
  jc(f, d[2], d[2], c * 13);
  f[g]();
  f[Ia](c * 131, c * 94);
  kc(f, c * -76, c * -61, c * 152, c * 122, c * 20);
  f[Qa]();
  jc(f, d[3], d[1], c * 8);
  f[g]();
  f[Ia](c * 168.5, c * 93.5);
  kc(f, c * -30.5, c * -58.5, c * 61, c * 117, c * 20);
  f[Qa]();
  jc(f, d[3], d[4], c * 6);
  f[g]();
  f[Ia](c * 93.5, c * 95.5);
  kc(f, c * -32, c * -59.5, c * 59, c * 119, c * 20);
  f[Qa]();
  jc(f, d[3], d[4], c * 6);
  f[g]();
  f[Ia](c * 130.5, c * 94);
  kc(f, c * -36, c * -67, c * 73, c * 134, c * 20);
  f[Qa]();
  jc(f, d[3], d[2], c * 8);
  f[ua] = 0.5;
  f[g]();
  f[Ia](c * 133, c * 97);
  kc(f, c * -83, c * -12, c * 160, c * 24, c * 0);
  f[Qa]();
  jc(f, d[0]);
  f[ua] = 1;
  f[g]();
  f[Ia](c * 133, c * 92);
  kc(f, c * -83, c * -12, c * 160, c * 24, c * 0);
  f[Qa]();
  jc(f, d[2]);
  f[ua] = 0.5;
  f[g]();
  f[Ia](c * 228, c * 99.5);
  f[ua] = 0.5;
  kc(f, c * -5, c * -18.5, c * 10, c * 37, c * 20);
  f[Qa]();
  jc(f, d[0]);
  f[ua] = 1;
  f[g]();
  f[Ia](c * 223, c * 94.5);
  kc(f, c * -5, c * -18.5, c * 10, c * 37, c * 20);
  f[Qa]();
  jc(f, d[2]);
  f[g]();
  f[Ia](c * 133.5, c * 175.5);
  f[ua] = 0.5;
  kc(f, c * -22.5, c * -6.5, c * 45, c * 13, c * 20);
  f[Qa]();
  jc(f, d[0]);
  f[ua] = 1;
  f[g]();
  f[Ia](c * 128.5, c * 170.5);
  kc(f, c * -22.5, c * -6.5, c * 45, c * 13, c * 20);
  f[Qa]();
  jc(f, d[2]);
  return e;
}
function If(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 316;
  f.height = c * 365;
  i[g]();
  i[Ia](c * 156.07142639160156, c * 51.81248474121094);
  i[ra](0);
  kc(i, c * -21.5, c * -34, c * 43, c * 68, c * 8);
  i[Qa]();
  jc(i, e[1], e[2], c * 15);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 110.57142639160156, c * 197.09820556640625);
  i[G](c * 158.07142639160156, c * 179.09820556640625, c * 158.07142639160156, c * 179.09820556640625, c * 205.57142639160156, c * 161.09820556640625);
  i[G](c * 205.57142639160156, c * 235.45535278320312, c * 205.57142639160156, c * 235.45535278320312, c * 205.57142639160156, c * 309.8125);
  i[G](c * 205.57142639160156, c * 323.8125, c * 200.57142639160156, c * 325.8125, c * 187.57142639160156, c * 326.8125);
  i[G](c * 155.57142639160156, c * 326.3125, c * 155.57142639160156, c * 326.3125, c * 123.57142639160156, c * 325.8125);
  i[G](c * 111.57142639160156, c * 326.8125, c * 109.57142639160156, c * 321.8125, c * 110.57142639160156, c * 312.8125);
  i[X]();
  jc(i, e[3], e[4], c * 15);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 126.57142639160156, c * 67.38392639160156);
  i[G](c * 126.57142639160156, c * 57.38392639160156, c * 132.57142639160156, c * 54.38392639160156, c * 140.57142639160156, c * 54.38392639160156);
  i[G](c * 177.57142639160156, c * 55.38392639160156, c * 158.07142639160156, c * 54.38392639160156, c * 175.57142639160156, c * 54.38392639160156);
  i[G](c * 185.57142639160156, c * 56.38392639160156, c * 185.57142639160156, c * 57.38392639160156, c * 184.57142639160156, c * 66.38392639160156);
  i[G](c * 184.57142639160156, c * 78.38392639160156, c * 184.57142639160156, c * 89.38392639160156, c * 184.57142639160156, c * 90.38392639160156);
  i[G](c * 177.57142639160156, c * 107.38392639160156, c * 180.57142639160156, c * 112.38392639160156, c * 189.57142639160156, c * 116.38392639160156);
  i[G](c * 212.57142639160156, c * 127.38392639160156, c * 212.57142639160156, c * 132.38392639160156, c * 211.57142639160156, c * 150.38392639160156);
  i[G](c * 211.57142639160156, c * 227.59821128845215, c * 211.57142639160156, c * 227.59821128845215, c * 211.57142639160156, c * 304.81249618530273);
  i[G](c * 212.57142639160156, c * 328.81249618530273, c * 209.57142639160156, c * 330.81249618530273, c * 188.57142639160156, c * 333.81249618530273);
  i[G](c * 155.07142639160156, c * 333.31249618530273, c * 155.07142639160156, c * 333.31249618530273, c * 121.57142639160156, c * 332.81249618530273);
  i[G](c * 104.57142639160156, c * 327.81249618530273, c * 105.57142639160156, c * 328.81249618530273, c * 104.57142639160156, c * 312.81249618530273);
  i[G](c * 104.57142639160156, c * 228.16963958740234, c * 104.57142639160156, c * 228.16963958740234, c * 104.57142639160156, c * 143.52678298950195);
  i[G](c * 106.57142639160156, c * 124.52678298950195, c * 110.57142639160156, c * 123.52678298950195, c * 123.57142639160156, c * 116.52678298950195);
  i[G](c * 136.57142639160156, c * 110.52678298950195, c * 130.57142639160156, c * 106.52678298950195, c * 126.57142639160156, c * 98.52678298950195);
  i[X]();
  jc(i, undefined, e[5], c * 15);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 125.57142639160156, c * 156.66963958740234);
  i[G](c * 125.57142639160156, c * 182.66963958740234, c * 125.57142639160156, c * 182.66963958740234, c * 125.57142639160156, c * 208.66963958740234);
  i[X]();
  jc(i, undefined, e[6], c * 15);
  return f;
}
function Jf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 316;
  f.height = c * 365;
  i[g]();
  i[Ia](c * 156.07142639160156, c * 51.81248474121094);
  i[ra](0);
  kc(i, c * -21.5, c * -34, c * 43, c * 68, c * 8);
  i[Qa]();
  jc(i, e[1], e[2], c * 15);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 126.57142639160156, c * 67.38392639160156);
  i[G](c * 126.57142639160156, c * 57.38392639160156, c * 132.57142639160156, c * 54.38392639160156, c * 140.57142639160156, c * 54.38392639160156);
  i[G](c * 177.57142639160156, c * 55.38392639160156, c * 158.07142639160156, c * 54.38392639160156, c * 175.57142639160156, c * 54.38392639160156);
  i[G](c * 185.57142639160156, c * 56.38392639160156, c * 185.57142639160156, c * 57.38392639160156, c * 184.57142639160156, c * 66.38392639160156);
  i[G](c * 184.57142639160156, c * 78.38392639160156, c * 184.57142639160156, c * 89.38392639160156, c * 184.57142639160156, c * 90.38392639160156);
  i[G](c * 177.57142639160156, c * 107.38392639160156, c * 180.57142639160156, c * 112.38392639160156, c * 189.57142639160156, c * 116.38392639160156);
  i[G](c * 212.57142639160156, c * 127.38392639160156, c * 212.57142639160156, c * 132.38392639160156, c * 211.57142639160156, c * 150.38392639160156);
  i[G](c * 211.57142639160156, c * 227.59821128845215, c * 211.57142639160156, c * 227.59821128845215, c * 211.57142639160156, c * 304.81249618530273);
  i[G](c * 212.57142639160156, c * 328.81249618530273, c * 209.57142639160156, c * 330.81249618530273, c * 188.57142639160156, c * 333.81249618530273);
  i[G](c * 155.07142639160156, c * 333.31249618530273, c * 155.07142639160156, c * 333.31249618530273, c * 121.57142639160156, c * 332.81249618530273);
  i[G](c * 104.57142639160156, c * 327.81249618530273, c * 105.57142639160156, c * 328.81249618530273, c * 104.57142639160156, c * 312.81249618530273);
  i[G](c * 104.57142639160156, c * 228.16963958740234, c * 104.57142639160156, c * 228.16963958740234, c * 104.57142639160156, c * 143.52678298950195);
  i[G](c * 106.57142639160156, c * 124.52678298950195, c * 110.57142639160156, c * 123.52678298950195, c * 123.57142639160156, c * 116.52678298950195);
  i[G](c * 136.57142639160156, c * 110.52678298950195, c * 130.57142639160156, c * 106.52678298950195, c * 126.57142639160156, c * 98.52678298950195);
  i[X]();
  jc(i, undefined, e[5], c * 15);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 125.57142639160156, c * 156.66963958740234);
  i[G](c * 125.57142639160156, c * 182.66963958740234, c * 125.57142639160156, c * 182.66963958740234, c * 125.57142639160156, c * 208.66963958740234);
  i[X]();
  jc(i, undefined, e[6], c * 15);
  return f;
}
function Kf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  g[Ia](0, c * 15);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 108, c * 216.5, c * 108, c * 216.5, c * 114, c * 279);
  g[G](c * 124, c * 300, c * 237, c * 299, c * 251, c * 279);
  g[G](c * 257, c * 217, c * 257, c * 217, c * 263, c * 155);
  g[G](c * 248, c * 194, c * 91, c * 180, c * 103, c * 156);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 106, c * 53, c * 255, c * 53, c * 263, c * 154);
  g[G](c * 248, c * 38, c * 99, c * 69, c * 103, c * 154);
  g[X]();
  jc(g, undefined, e[0], c * 11);
  g[Ia](0, c * -5);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 103, c * 154);
  g[G](c * 98, c * 119, c * 264, c * 119, c * 264, c * 154);
  g[G](c * 271, c * 189, c * 94, c * 188, c * 103, c * 154);
  g[X]();
  jc(g, e[3], e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 108, c * 216.5, c * 108, c * 216.5, c * 114, c * 279);
  g[G](c * 124, c * 300, c * 237, c * 299, c * 251, c * 279);
  g[G](c * 257, c * 217, c * 257, c * 217, c * 263, c * 155);
  g[G](c * 248, c * 194, c * 91, c * 180, c * 103, c * 156);
  g[X]();
  jc(g, e[1], e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 182, c * 185);
  g[G](c * 182.5, c * 237.5, c * 182.5, c * 237.5, c * 183, c * 290);
  g[X]();
  jc(g, undefined, e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 222, c * 287);
  g[G](c * 226, c * 233.5, c * 226, c * 233.5, c * 230, c * 180);
  g[X]();
  jc(g, undefined, e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 145, c * 290);
  g[G](c * 140.5, c * 237, c * 140.5, c * 237, c * 136, c * 184);
  g[X]();
  jc(g, e[1], e[2], c * 11);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105, c * 184);
  g[G](c * 148, c * 205, c * 231, c * 202, c * 260, c * 182);
  g[G](c * 259, c * 195.5, c * 259, c * 195.5, c * 258, c * 209);
  g[G](c * 217, c * 218, c * 163, c * 225, c * 108, c * 207);
  g[X]();
  jc(g, e[4], e[2], c * 11);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 251, c * 276);
  g[G](c * 251.5, c * 267.5, c * 251.5, c * 267.5, c * 252, c * 259);
  g[G](c * 212, c * 272, c * 156, c * 275, c * 112, c * 260);
  g[G](c * 112.5, c * 269, c * 112.5, c * 269, c * 113, c * 278);
  g[G](c * 155, c * 306, c * 253, c * 286, c * 250, c * 276);
  g[X]();
  jc(g, e[4], e[2], c * 11);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 106, c * 53, c * 255, c * 53, c * 263, c * 154);
  g[G](c * 248, c * 38, c * 99, c * 69, c * 103, c * 154);
  g[X]();
  jc(g, undefined, e[2], c * 11);
  return f;
}
function Lf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 400;
  f.height = c * 400;
  g[Ia](0, c * 15);
  g[ua] = d ? 0.5 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 108, c * 216.5, c * 108, c * 216.5, c * 114, c * 279);
  g[G](c * 124, c * 300, c * 237, c * 299, c * 251, c * 279);
  g[G](c * 257, c * 217, c * 257, c * 217, c * 263, c * 155);
  g[G](c * 248, c * 194, c * 91, c * 180, c * 103, c * 156);
  g[X]();
  jc(g, e[0]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 106, c * 53, c * 255, c * 53, c * 263, c * 154);
  g[G](c * 248, c * 38, c * 99, c * 69, c * 103, c * 154);
  g[X]();
  jc(g, undefined, e[0], c * 11);
  g[Ia](0, c * -5);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 103, c * 154);
  g[G](c * 98, c * 119, c * 264, c * 119, c * 264, c * 154);
  g[G](c * 271, c * 189, c * 94, c * 188, c * 103, c * 154);
  g[X]();
  jc(g, e[3], e[2], c * 12);
  g[Ia](0, c * 25);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 103, c * 154);
  g[G](c * 98, c * 119, c * 264, c * 119, c * 264, c * 154);
  g[G](c * 271, c * 189, c * 94, c * 188, c * 103, c * 154);
  g[X]();
  jc(g, e[5]);
  g[Ia](0, c * -25);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 108, c * 216.5, c * 108, c * 216.5, c * 114, c * 279);
  g[G](c * 124, c * 300, c * 237, c * 299, c * 251, c * 279);
  g[G](c * 257, c * 217, c * 257, c * 217, c * 263, c * 155);
  g[G](c * 248, c * 194, c * 91, c * 180, c * 103, c * 156);
  g[X]();
  jc(g, e[1], e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 182, c * 185);
  g[G](c * 182.5, c * 237.5, c * 182.5, c * 237.5, c * 183, c * 290);
  g[X]();
  jc(g, undefined, e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 222, c * 287);
  g[G](c * 226, c * 233.5, c * 226, c * 233.5, c * 230, c * 180);
  g[X]();
  jc(g, undefined, e[2], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 145, c * 290);
  g[G](c * 140.5, c * 237, c * 140.5, c * 237, c * 136, c * 184);
  g[X]();
  jc(g, e[1], e[2], c * 11);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105, c * 184);
  g[G](c * 148, c * 205, c * 231, c * 202, c * 260, c * 182);
  g[G](c * 259, c * 195.5, c * 259, c * 195.5, c * 258, c * 209);
  g[G](c * 217, c * 218, c * 163, c * 225, c * 108, c * 207);
  g[X]();
  jc(g, e[4], e[2], c * 11);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 251, c * 276);
  g[G](c * 251.5, c * 267.5, c * 251.5, c * 267.5, c * 252, c * 259);
  g[G](c * 212, c * 272, c * 156, c * 275, c * 112, c * 260);
  g[G](c * 112.5, c * 269, c * 112.5, c * 269, c * 113, c * 278);
  g[G](c * 155, c * 306, c * 253, c * 286, c * 250, c * 276);
  g[X]();
  jc(g, e[4], e[2], c * 11);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 102, c * 154);
  g[G](c * 106, c * 53, c * 255, c * 53, c * 263, c * 154);
  g[G](c * 248, c * 38, c * 99, c * 69, c * 103, c * 154);
  g[X]();
  jc(g, undefined, e[2], c * 11);
  return f;
}
function Mf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 80;
  f.height = c * 160;
  i[ua] = d ? 0.5 : 1;
  i[Ia](c * 5, c * 5);
  i[g]();
  kc(i, c * 33, c * 53, c * 10, c * 98, c * 10);
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * -150, c * -100);
  i[K](c * 167.5, c * 171.0625);
  i[G](c * 188, c * 171.0625, c * 188, c * 171.0625, c * 208.5, c * 171.0625);
  i[G](c * 208.5, c * 156.0625, c * 208.5, c * 156.0625, c * 208.5, c * 141.0625);
  i[G](c * 203.5, c * 113.0625, c * 179.5, c * 96.0625, c * 167.5, c * 141.0625);
  i[X]();
  jc(i, e[0]);
  i[Qa]();
  i[ua] = 1;
  i[Ia](c * -5, c * -5);
  i[g]();
  kc(i, c * 33, c * 53, c * 10, c * 98, c * 10);
  jc(i, e[1], e[2], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * -150, c * -100);
  i[K](c * 167.5, c * 171.0625);
  i[G](c * 188, c * 171.0625, c * 188, c * 171.0625, c * 208.5, c * 171.0625);
  i[G](c * 208.5, c * 156.0625, c * 208.5, c * 156.0625, c * 208.5, c * 141.0625);
  i[G](c * 203.5, c * 113.0625, c * 179.5, c * 96.0625, c * 167.5, c * 141.0625);
  i[X]();
  jc(i, e[3], e[4], c * 4);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[Ia](c * 0, c * 1);
  i[K](c * 180.5, c * 169.0625);
  i[G](c * 180.5, c * 157.5625, c * 180.5, c * 157.5625, c * 180.5, c * 146.0625);
  i[G](c * 181.5, c * 134.0625, c * 193.5, c * 129.0625, c * 196.5, c * 146.0625);
  i[G](c * 196.5, c * 157.5625, c * 196.5, c * 157.5625, c * 196.5, c * 169.0625);
  i[X]();
  jc(i, e[5]);
  i[Qa]();
  return f;
}
function Nf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 109;
  f.height = c * 110;
  lc(i, c * 54.5, c * 55, c * 48.038209575038294);
  jc(i, d[0], d[1], c * 8);
  if (e == 0) {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 54.928558349609375, c * 43.72320556640625);
    i[G](c * 66.92855834960938, c * 31.72320556640625, c * 69.92855834960938, c * 29.72320556640625, c * 74.92855834960938, c * 29.72320556640625);
    i[G](c * 86.92855834960938, c * 28.72320556640625, c * 91.92855834960938, c * 42.72320556640625, c * 89.92855834960938, c * 52.72320556640625);
    i[G](c * 88.92855834960938, c * 63.72320556640625, c * 73.92855834960938, c * 75.72320556640625, c * 55.928558349609375, c * 87.72320556640625);
    i[G](c * 37.928558349609375, c * 78.72320556640625, c * 26.928558349609375, c * 65.72320556640625, c * 19.928558349609375, c * 54.72320556640625);
    i[G](c * 13.928558349609375, c * 42.72320556640625, c * 21.928558349609375, c * 28.72320556640625, c * 35.928558349609375, c * 29.72320556640625);
    i[G](c * 45.928558349609375, c * 31.72320556640625, c * 51.928558349609375, c * 40.72320556640625, c * 53.928558349609375, c * 44.72320556640625);
    i[X]();
    jc(i, d[2]);
  } else if (e == 1) {
    i[g]();
    i[Ia](c * 55, c * 39.48748779296875);
    kc(i, c * -11.5, c * -36, c * 23, c * 72, c * 10);
    i[Qa]();
    jc(i, d[2], d[3], c * 4);
    lc(i, c * 54.5, c * 78.48748779296875, c * 22.02271554554524);
    jc(i, d[4], d[3], c * 4);
    i[g]();
    i[Ia](c * 55.5, c * 57.287506103515625);
    kc(i, c * -9, c * -16, c * 18, c * 32, c * 10);
    i[Qa]();
    jc(i, d[4]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 66.5, c * 25.287506103515625);
    i[G](c * 60.5, c * 25.287506103515625, c * 63.5, c * 25.287506103515625, c * 54.5, c * 25.287506103515625);
    i[X]();
    jc(i, undefined, d[5], c * 4);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 66.5, c * 37.287506103515625);
    i[G](c * 60.5, c * 37.287506103515625, c * 60.5, c * 37.287506103515625, c * 54.5, c * 37.287506103515625);
    i[X]();
    jc(i, undefined, d[5], c * 4);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 66.5, c * 50.287506103515625);
    i[G](c * 61, c * 50.287506103515625, c * 61, c * 50.287506103515625, c * 55.5, c * 50.287506103515625);
    i[X]();
    jc(i, undefined, d[5], c * 4);
  } else if (e == 2) {
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 45.928558349609375, c * 55.29463195800781);
    i[G](c * 38.928558349609375, c * 67.29463195800781, c * 38.928558349609375, c * 67.29463195800781, c * 31.928558349609375, c * 79.29463195800781);
    i[G](c * 15.928558349609375, c * 85.29463195800781, c * 17.928558349609375, c * 86.29463195800781, c * 17.928558349609375, c * 90.29463195800781);
    i[G](c * 19.928558349609375, c * 94.29463195800781, c * 21.928558349609375, c * 94.29463195800781, c * 27.928558349609375, c * 92.29463195800781);
    i[G](c * 29.928558349609375, c * 98.29463195800781, c * 30.928558349609375, c * 99.29463195800781, c * 33.928558349609375, c * 99.29463195800781);
    i[G](c * 38.928558349609375, c * 97.29463195800781, c * 38.928558349609375, c * 93.29463195800781, c * 37.928558349609375, c * 86.29463195800781);
    i[G](c * 45.428558349609375, c * 73.29463195800781, c * 51.928558349609375, c * 64.29463195800781, c * 52.928558349609375, c * 60.29463195800781);
    i[X]();
    jc(i, d[2]);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 55.928558349609375, c * 8.866058349609375);
    i[G](c * 35.928558349609375, c * 35.866058349609375, c * 37.928558349609375, c * 48.866058349609375, c * 46.928558349609375, c * 62.866058349609375);
    i[G](c * 65.92855834960938, c * 72.86605834960938, c * 80.92855834960938, c * 55.866058349609375, c * 93.92855834960938, c * 36.866058349609375);
    i[X]();
    jc(i, d[3], d[4], c * 6);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 93.92855834960938, c * 36.866058349609375);
    i[G](c * 82.92855834960938, c * 37.866058349609375, c * 77.92855834960938, c * 36.866058349609375, c * 67.92855834960938, c * 28.866058349609375);
    i[G](c * 53.928558349609375, c * 16.866058349609375, c * 53.928558349609375, c * 14.866058349609375, c * 55.928558349609375, c * 7.866058349609375);
    i[G](c * 65.92855834960938, c * 4.866058349609375, c * 71.92855834960938, c * 7.866058349609375, c * 83.92855834960938, c * 13.866058349609375);
    i[G](c * 96.92855834960938, c * 21.866058349609375, c * 95.92855834960938, c * 31.866058349609375, c * 92.92855834960938, c * 36.866058349609375);
    i[X]();
    jc(i, d[3], d[4], c * 6);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 68.92855834960938, c * 16.866058349609375);
    i[G](c * 71.92855834960938, c * 13.866058349609375, c * 76.92855834960938, c * 16.866058349609375, c * 79.92855834960938, c * 21.866058349609375);
    i[G](c * 82.92855834960938, c * 24.866058349609375, c * 81.92855834960938, c * 27.866058349609375, c * 73.92855834960938, c * 24.866058349609375);
    i[G](c * 67.92855834960938, c * 20.866058349609375, c * 66.92855834960938, c * 19.866058349609375, c * 67.92855834960938, c * 17.866058349609375);
    i[X]();
    jc(i, d[2]);
  } else if (e == 3) {
    i[I](0.9, 0.9);
    i[Ia](c * 6, 0);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 54, c * 0.421875);
    i[G](c * 84, c * 45.421875, c * 89, c * 51.421875, c * 83, c * 74.421875);
    i[G](c * 74, c * 95.421875, c * 46, c * 98.421875, c * 30, c * 78.421875);
    i[G](c * 22, c * 59.421875, c * 27, c * 49.421875, c * 34, c * 36.421875);
    i[X]();
    jc(i, d[2], d[3], c * 6);
    i[Y]();
    i[Ga] = "round";
    i[ea] = "round";
    i[K](c * 74, c * 52.421875);
    i[G](c * 77, c * 73.421875, c * 69, c * 81.421875, c * 58, c * 81.421875);
    i[G](c * 66, c * 71.421875, c * 70, c * 66.421875, c * 74, c * 52.421875);
    i[X]();
    jc(i, d[3]);
  }
  return f;
}
function Of(c) {
  var d = document[p]("canvas");
  var e = d[T]("2d");
  var f = c * 600;
  var g = c * 22;
  var i = c * 4;
  var k = c * 4;
  d.width = f;
  d.height = g;
  kc(e, c * 5, c * 5, f - c * 10, g - c * 10, i);
  jc(e, null, "#BBE8EF", k);
  return d;
}
function Pf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 573;
  f.height = c * 350;
  if (e == 1) {
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 336, c * 72);
    g[G](c * 366, c * 15, c * 426, c * 36, c * 497, c * 83);
    g[G](c * 522, c * 85, c * 522, c * 85, c * 547, c * 87);
    g[G](c * 476.5, c * 205, c * 476.5, c * 205, c * 406, c * 323);
    g[G](c * 297.5, c * 319, c * 297.5, c * 319, c * 189, c * 315);
    g[G](c * 105.5, c * 279, c * 105.5, c * 279, c * 22, c * 243);
    g[G](c * 92, c * 140, c * 92, c * 140, c * 162, c * 37);
    g[G](c * 173, c * 39, c * 173, c * 39, c * 184, c * 41);
    g[G](c * 185, c * 38.5, c * 185, c * 38.5, c * 186, c * 36);
    g[G](c * 323, c * 13, c * 322, c * 25, c * 337, c * 74);
    g[X]();
    jc(g, d[4], d[4], c * 35);
  }
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 168, c * 42);
  g[G](c * 255, c * 60, c * 255, c * 60, c * 342, c * 78);
  g[G](c * 443, c * 81.5, c * 443, c * 81.5, c * 544, c * 85);
  g[G](c * 475, c * 204.5, c * 475, c * 204.5, c * 406, c * 324);
  g[G](c * 297.5, c * 320, c * 297.5, c * 320, c * 189, c * 316);
  g[G](c * 105.5, c * 279, c * 105.5, c * 279, c * 22, c * 242);
  g[X]();
  jc(g, d[0], d[1], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 188, c * 41);
  g[G](c * 308, c * 15, c * 325, c * 18, c * 337, c * 66);
  g[G](c * 191, c * 305, c * 196, c * 286, c * 184, c * 307);
  g[G](c * 175, c * 250, c * 90, c * 254, c * 52, c * 241);
  g[X]();
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 336, c * 71);
  g[G](c * 375, c * 8, c * 429, c * 50, c * 518, c * 92);
  g[G](c * 455, c * 199.5, c * 455, c * 199.5, c * 392, c * 307);
  g[G](c * 227, c * 301, c * 261, c * 255, c * 188, c * 308);
  g[X]();
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 357, c * 76);
  g[G](c * 390, c * 67, c * 414, c * 86, c * 435, c * 104);
  g[G](c * 417, c * 135, c * 417, c * 135, c * 399, c * 166);
  g[G](c * 352, c * 140, c * 345, c * 139, c * 319, c * 142);
  g[X]();
  jc(g, d[3], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 309, c * 168);
  g[G](c * 345, c * 163, c * 372, c * 180, c * 412, c * 203);
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 263, c * 54);
  g[G](c * 305, c * 44, c * 307, c * 51, c * 311, c * 64);
  g[G](c * 270.5, c * 129.5, c * 270.5, c * 129.5, c * 230, c * 195);
  g[G](c * 221, c * 175, c * 203, c * 171, c * 186, c * 172);
  g[X]();
  jc(g, d[3], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 292, c * 198);
  g[G](c * 328, c * 191, c * 364, c * 211, c * 401, c * 237);
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 245, c * 68);
  g[G](c * 210, c * 72, c * 210, c * 72, c * 189, c * 69);
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 222, c * 96);
  g[G](c * 196, c * 97, c * 193, c * 97, c * 177, c * 92);
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 207, c * 124);
  g[G](c * 179, c * 123, c * 177, c * 124, c * 161, c * 119);
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 115, c * 183);
  g[G](c * 184, c * 185, c * 203, c * 198, c * 219, c * 221);
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 98, c * 213);
  g[G](c * 161, c * 214, c * 193, c * 227, c * 201, c * 249);
  jc(g, d[2], d[3], c * 12);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 399, c * 257);
  g[G](c * 287, c * 215, c * 280, c * 215, c * 263, c * 222);
  g[G](c * 253, c * 238, c * 247, c * 245, c * 243, c * 254);
  g[G](c * 267, c * 236, c * 292, c * 263, c * 377, c * 284);
  jc(g, d[3], d[3], c * 12);
  return f;
}
function Qf(c, d, e, f) {
  var i = document[p]("canvas");
  var k = i[T]("2d");
  i.width = c * 170;
  i.height = c * 200;
  k[Ia](c * 5, c * 15);
  if (f == 1) {
    k[Ia](0, c * -5);
    lc(k, c * 77.00003051757812, c * 104.49432373046875, c * 71.84010022264724);
    jc(k, e[1], e[5], c * 20);
    lc(k, c * 77.00003051757812, c * 104.22160339355469, c * 61.554853586049575);
    jc(k, e[1], e[5], c * 20);
    k[g]();
    k[Ia](c * 77.00003051757812, c * 31.267044067382812);
    kc(k, c * -6, c * -12.5, c * 12, c * 25, c * 10);
    k[Qa]();
    jc(k, e[1], e[5], c * 20);
    k[g]();
    k[Ia](c * 77.00003051757812, c * 13.267044067382812);
    kc(k, c * -15, c * -10.5, c * 30, c * 21, c * 10);
    k[Qa]();
    jc(k, e[1], e[5], c * 20);
  }
  lc(k, c * 77.00003051757812, c * 104.49432373046875, c * 71.84010022264724);
  jc(k, e[1], e[2], c * 7);
  lc(k, c * 77.00003051757812, c * 104.22160339355469, c * 61.554853586049575);
  jc(k, e[1], e[2], c * 7);
  k[Y]();
  k[Ga] = "round";
  k[ea] = "round";
  k[K](c * 18.000030517578125, c * 105.85795593261719);
  k[G](c * 134.00003051757812, c * 104.85795593261719, c * 77.00003051757812, c * 104.85795593261719, c * 136.00003051757812, c * 103.85795593261719);
  k[X]();
  jc(k, e[1], e[2], c * 8);
  lc(k, c * 77.00003051757812, c * 104.6761474609375, c * 32.55764119219941);
  jc(k, e[1], e[2], c * 8);
  k[Y]();
  k[Ga] = "round";
  k[ea] = "round";
  k[K](c * 78.00003051757812, c * 112.03977966308594);
  k[G](c * 78.00003051757812, c * 87.03977966308594, c * 78.00003051757812, c * 87.03977966308594, c * 78.00003051757812, c * 62.03977966308594);
  k[X]();
  jc(k, e[3], e[2], c * 8);
  k[Y]();
  k[Ga] = "round";
  k[ea] = "round";
  k[K](c * 78.00003051757812, c * 48.03977966308594);
  k[G](c * 82.00003051757812, c * 55.53977966308594, c * 82.00003051757812, c * 55.53977966308594, c * 86.00003051757812, c * 63.03977966308594);
  k[G](c * 78.00003051757812, c * 63.03977966308594, c * 78.00003051757812, c * 63.03977966308594, c * 70.00003051757812, c * 63.03977966308594);
  k[X]();
  jc(k, e[3], e[2], c * 4);
  k[Y]();
  k[Ga] = "round";
  k[ea] = "round";
  k[K](c * 80.00003051757812, c * 111.6761474609375);
  k[G](c * 95.00003051757812, c * 97.1761474609375, c * 95.00003051757812, c * 97.1761474609375, c * 110.00003051757812, c * 82.6761474609375);
  k[X]();
  jc(k, e[3], e[2], c * 8);
  k[Y]();
  k[Ga] = "round";
  k[ea] = "round";
  k[K](c * 107.00003051757812, c * 76.6761474609375);
  k[G](c * 111.50003051757812, c * 82.6761474609375, c * 111.50003051757812, c * 82.6761474609375, c * 116.00003051757812, c * 88.6761474609375);
  k[G](c * 118.50003051757812, c * 81.6761474609375, c * 118.50003051757812, c * 81.6761474609375, c * 121.00003051757812, c * 74.6761474609375);
  k[X]();
  jc(k, e[3], e[2], c * 4);
  lc(k, c * 77.00003051757812, c * 105.03977966308594, c * 15.556349186104045);
  jc(k, e[3], e[2], c * 4);
  k[g]();
  k[Ia](c * 77.00003051757812, c * 31.267044067382812);
  k[ra](0);
  kc(k, c * -6, c * -12.5, c * 12, c * 25, c * 10);
  k[Qa]();
  jc(k, e[1], e[2], c * 7);
  k[g]();
  k[Ia](c * 77.00003051757812, c * 13.267044067382812);
  k[ra](0);
  kc(k, c * -15, c * -10.5, c * 30, c * 21, c * 10);
  k[Qa]();
  jc(k, e[1], e[2], c * 7);
  return i;
}
function Rf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 81;
  f.height = c * 77;
  g[Ia](0, c * 10);
  g[I](0.2, 0.2);
  g[Ia](0, c * -30);
  if (e == 1) {
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 36.5, c * 278.0625);
    g[G](c * 67.5, c * 316.0625, c * 134.5, c * 334.0625, c * 199.5, c * 319.0625);
    g[G](c * 254.5, c * 304.0625, c * 346.5, c * 270.0625, c * 348.5, c * 237.0625);
    g[G](c * 359.5, c * 206.0625, c * 318.5, c * 129.0625, c * 262.5, c * 122.0625);
    g[G](c * 213.5, c * 115.0625, c * 166.5, c * 133.0625, c * 104.5, c * 166.0625);
    g[G](c * 54.5, c * 194.0625, c * 23.5, c * 241.0625, c * 36.5, c * 277.0625);
    g[X]();
    jc(g, d[0], d[3], c * 50);
  }
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 36.5, c * 278.0625);
  g[G](c * 67.5, c * 316.0625, c * 134.5, c * 334.0625, c * 199.5, c * 319.0625);
  g[G](c * 254.5, c * 304.0625, c * 346.5, c * 270.0625, c * 348.5, c * 237.0625);
  g[G](c * 359.5, c * 206.0625, c * 318.5, c * 129.0625, c * 262.5, c * 122.0625);
  g[G](c * 213.5, c * 115.0625, c * 166.5, c * 133.0625, c * 104.5, c * 166.0625);
  g[G](c * 54.5, c * 194.0625, c * 23.5, c * 241.0625, c * 36.5, c * 277.0625);
  g[X]();
  jc(g, d[0], d[1], c * 19);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 214.5, c * 124.0625);
  g[G](c * 242.5, c * 125.0625, c * 272.5, c * 159.0625, c * 283.5, c * 184.0625);
  g[G](c * 277.5, c * 161.0625, c * 233.5, c * 128.0625, c * 219.5, c * 122.0625);
  g[X]();
  jc(g, d[0], d[1], c * 19);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 157.5, c * 145.0625);
  g[G](c * 176.5, c * 148.0625, c * 205.5, c * 176.0625, c * 212.5, c * 197.0625);
  g[G](c * 205.5, c * 178.0625, c * 177.5, c * 152.0625, c * 156.5, c * 142.0625);
  g[X]();
  jc(g, d[0], d[1], c * 19);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 103.5, c * 169.0625);
  g[G](c * 160.5, c * 166.0625, c * 228.5, c * 312.0625, c * 162.5, c * 323.0625);
  g[G](c * 128.5, c * 330.0625, c * 45.5, c * 312.0625, c * 34.5, c * 268.0625);
  g[G](c * 30.5, c * 238.0625, c * 44.5, c * 222.0625, c * 52.5, c * 211.0625);
  g[G](c * 82.5, c * 174.0625, c * 104.5, c * 166.0625, c * 119.5, c * 172.0625);
  g[X]();
  jc(g, d[2], d[1], c * 19);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 194.5, c * 313.0625);
  g[G](c * 222.5, c * 306.0625, c * 319.5, c * 271.0625, c * 337.5, c * 241.0625);
  g[G](c * 274.5, c * 270.0625, c * 216.5, c * 288.0625, c * 199.5, c * 287.0625);
  g[G](c * 198.5, c * 302.0625, c * 195.5, c * 311.0625, c * 193.5, c * 312.0625);
  g[X]();
  jc(g, d[1]);
  g[I](3, 3);
  g[Ia](15, c * 10);
  if (e == 1) {
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 4, c * 32);
    g[G](c * 19, c * 25, c * 19, c * 25, c * 34, c * 18);
    g[G](c * 41.5, c * 23.5, c * 41.5, c * 23.5, c * 49, c * 29);
    g[G](c * 59.5, c * 20, c * 59.5, c * 20, c * 70, c * 11);
    jc(g, undefined, d[3], c * 28);
    g[Y]();
    g[Ga] = "round";
    g[ea] = "round";
    g[K](c * 56, c * 6);
    g[G](c * 63.5, c * 13.5, c * 63.5, c * 13.5, c * 71, c * 21);
    g[G](c * 74.5, c * 11.5, c * 74.5, c * 11.5, c * 78, c * 2);
    g[X]();
    jc(g, d[3], d[3], c * 28);
  }
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 4, c * 32);
  g[G](c * 19, c * 25, c * 19, c * 25, c * 34, c * 18);
  g[G](c * 41.5, c * 23.5, c * 41.5, c * 23.5, c * 49, c * 29);
  g[G](c * 59.5, c * 20, c * 59.5, c * 20, c * 70, c * 11);
  jc(g, undefined, d[1], c * 17);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 56, c * 6);
  g[G](c * 63.5, c * 13.5, c * 63.5, c * 13.5, c * 71, c * 21);
  g[G](c * 74.5, c * 11.5, c * 74.5, c * 11.5, c * 78, c * 2);
  g[X]();
  jc(g, d[1], d[1], c * 17);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 4, c * 32);
  g[G](c * 19, c * 25, c * 19, c * 25, c * 34, c * 18);
  g[G](c * 41.5, c * 23.5, c * 41.5, c * 23.5, c * 49, c * 29);
  g[G](c * 59.5, c * 20, c * 59.5, c * 20, c * 70, c * 11);
  jc(g, undefined, d[2], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 56, c * 6);
  g[G](c * 63.5, c * 13.5, c * 63.5, c * 13.5, c * 71, c * 21);
  g[G](c * 74.5, c * 11.5, c * 74.5, c * 11.5, c * 78, c * 2);
  g[X]();
  jc(g, d[2], d[2], c * 10);
  return f;
}
function Sf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 144;
  f.height = c * 280;
  g[ua] = d ? 0.5 : 1;
  g[Ia](c * 5, c * 5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 62, c * 103.79999542236328);
  g[G](c * 62.5, c * 148.79999542236328, c * 62.5, c * 148.79999542236328, c * 63, c * 193.79999542236328);
  g[G](c * 63, c * 219.79999542236328, c * 47, c * 217.79999542236328, c * 51, c * 230.79999542236328);
  g[G](c * 62, c * 255.79999542236328, c * 74, c * 260.7999954223633, c * 72, c * 248.79999542236328);
  g[G](c * 65, c * 226.79999542236328, c * 71, c * 229.79999542236328, c * 76, c * 225.79999542236328);
  g[G](c * 90, c * 224.79999542236328, c * 89, c * 232.79999542236328, c * 90, c * 243.79999542236328);
  g[G](c * 95, c * 253.79999542236328, c * 99, c * 249.79999542236328, c * 100, c * 229.79999542236328);
  g[G](c * 102, c * 213.79999542236328, c * 98, c * 214.79999542236328, c * 90, c * 205.79999542236328);
  g[G](c * 82, c * 201.79999542236328, c * 82, c * 185.79999542236328, c * 82, c * 114.79999542236328);
  g[G](c * 80, c * 73, c * 82, c * 68, c * 93, c * 53);
  g[G](c * 98, c * 37, c * 65, c * 14, c * 74, c * 33);
  g[G](c * 82, c * 56, c * 77, c * 52, c * 69, c * 54);
  g[G](c * 55, c * 57, c * 57, c * 53, c * 54, c * 39);
  g[G](c * 46, c * 20, c * 37, c * 61, c * 50, c * 68);
  g[G](c * 65, c * 81, c * 60, c * 89, c * 62, c * 102);
  g[X]();
  jc(g, e[0]);
  g[ua] = 1;
  g[Ia](c * -5, c * -5);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 62, c * 103.79999542236328);
  g[G](c * 62.5, c * 148.79999542236328, c * 62.5, c * 148.79999542236328, c * 63, c * 193.79999542236328);
  g[G](c * 63, c * 219.79999542236328, c * 47, c * 217.79999542236328, c * 51, c * 230.79999542236328);
  g[G](c * 62, c * 255.79999542236328, c * 74, c * 260.7999954223633, c * 72, c * 248.79999542236328);
  g[G](c * 65, c * 226.79999542236328, c * 71, c * 229.79999542236328, c * 76, c * 225.79999542236328);
  g[G](c * 90, c * 224.79999542236328, c * 89, c * 232.79999542236328, c * 90, c * 243.79999542236328);
  g[G](c * 95, c * 253.79999542236328, c * 99, c * 249.79999542236328, c * 100, c * 229.79999542236328);
  g[G](c * 102, c * 213.79999542236328, c * 98, c * 214.79999542236328, c * 90, c * 205.79999542236328);
  g[G](c * 82, c * 201.79999542236328, c * 82, c * 185.79999542236328, c * 82, c * 114.79999542236328);
  g[G](c * 80, c * 73, c * 82, c * 68, c * 93, c * 53);
  g[G](c * 98, c * 37, c * 65, c * 14, c * 74, c * 33);
  g[G](c * 82, c * 56, c * 77, c * 52, c * 69, c * 54);
  g[G](c * 55, c * 57, c * 57, c * 53, c * 54, c * 39);
  g[G](c * 46, c * 20, c * 37, c * 61, c * 50, c * 68);
  g[G](c * 65, c * 81, c * 60, c * 89, c * 62, c * 102);
  g[X]();
  jc(g, e[1], e[2], c * 6);
  return f;
}
function Tf(c, d, e) {
  var f = document[p]("canvas");
  var i = f[T]("2d");
  f.width = c * 160;
  f.height = c * 161;
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 80.5, c * 78);
  kc(i, c * -71.5, c * -71, c * 143, c * 143, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 80.5, c * 78);
  kc(i, c * -71.5, c * -71, c * 143, c * 143, c * 10);
  i[Qa]();
  jc(i, e[1], e[2], c * 6);
  i[g]();
  i[Ia](c * 80, c * 78.5);
  kc(i, c * -17, c * -72.5, c * 34, c * 145, c * 10);
  i[Qa]();
  jc(i, e[3], e[4], c * 6);
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 80, c * 79.5);
  kc(i, c * -73, c * -16.5, c * 145, c * 34, c * 10);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 80, c * 79.5);
  kc(i, c * -73, c * -16.5, c * 145, c * 34, c * 10);
  i[Qa]();
  jc(i, e[3], e[4], c * 6);
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 79, c * 71);
  i[G](c * 90, c * 42, c * 98, c * 36, c * 109, c * 43);
  i[G](c * 119, c * 47, c * 128, c * 62, c * 107, c * 72);
  i[G](c * 96, c * 78.5, c * 96, c * 78.5, c * 85, c * 85);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 84, c * 78);
  i[G](c * 113, c * 82, c * 123, c * 97, c * 115, c * 108);
  i[G](c * 110, c * 119, c * 98, c * 124, c * 87, c * 107);
  i[G](c * 81.5, c * 94.5, c * 81.5, c * 94.5, c * 76, c * 82);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 80, c * 73);
  i[G](c * 64, c * 37, c * 55, c * 34, c * 45, c * 42);
  i[G](c * 30, c * 54, c * 36, c * 65, c * 51, c * 72);
  i[G](c * 62.5, c * 77, c * 62.5, c * 77, c * 74, c * 82);
  i[X]();
  jc(i, e[0]);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 82, c * 83);
  i[G](c * 73, c * 107, c * 60, c * 123, c * 47, c * 113);
  i[G](c * 33, c * 105, c * 33, c * 92, c * 52, c * 85);
  i[G](c * 74, c * 73, c * 77, c * 76, c * 76, c * 75);
  i[X]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 79, c * 71);
  i[G](c * 90, c * 42, c * 98, c * 36, c * 109, c * 43);
  i[G](c * 119, c * 47, c * 128, c * 62, c * 107, c * 72);
  i[G](c * 96, c * 78.5, c * 96, c * 78.5, c * 85, c * 85);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 84, c * 78);
  i[G](c * 113, c * 82, c * 123, c * 97, c * 115, c * 108);
  i[G](c * 110, c * 119, c * 98, c * 124, c * 87, c * 107);
  i[G](c * 81.5, c * 94.5, c * 81.5, c * 94.5, c * 76, c * 82);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 80, c * 73);
  i[G](c * 64, c * 37, c * 55, c * 34, c * 45, c * 42);
  i[G](c * 30, c * 54, c * 36, c * 65, c * 51, c * 72);
  i[G](c * 62.5, c * 77, c * 62.5, c * 77, c * 74, c * 82);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[Y]();
  i[Ga] = "round";
  i[ea] = "round";
  i[K](c * 82, c * 83);
  i[G](c * 73, c * 107, c * 60, c * 123, c * 47, c * 113);
  i[G](c * 33, c * 105, c * 33, c * 92, c * 52, c * 85);
  i[G](c * 74, c * 73, c * 77, c * 76, c * 76, c * 75);
  i[X]();
  jc(i, e[3], e[4], c * 6);
  i[ua] = d ? 0.5 : 1;
  i[Ia](0, c * 10);
  i[g]();
  i[Ia](c * 78.5, c * 78);
  kc(i, c * -13.5, c * -14, c * 27, c * 27, c * 6);
  i[Qa]();
  jc(i, e[0]);
  i[ua] = 1;
  i[Ia](0, c * -10);
  i[g]();
  i[Ia](c * 78.5, c * 78);
  kc(i, c * -13.5, c * -14, c * 27, c * 27, c * 6);
  i[Qa]();
  jc(i, e[3], e[4], c * 6);
  return f;
}
function Uf(c, d, e) {
  var f = document[p]("canvas");
  var g = f[T]("2d");
  f.width = c * 372;
  f.height = c * 358;
  g[Ia](c * 0, c * 10);
  g[ua] = d ? 0.2 : 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 247.00003051757812, c * 115.76704406738281);
  g[G](c * 305.0000305175781, c * 124.76704406738281, c * 335.0000305175781, c * 112.76704406738281, c * 359.0000305175781, c * 93.76704406738281);
  g[G](c * 359.5000305175781, c * 113.26704406738281, c * 359.5000305175781, c * 113.26704406738281, c * 360.0000305175781, c * 132.7670440673828);
  g[G](c * 339.0000305175781, c * 177.7670440673828, c * 281.0000305175781, c * 178.7670440673828, c * 243.00003051757812, c * 183.7670440673828);
  g[G](c * 214.50003051757812, c * 214.2670440673828, c * 214.50003051757812, c * 214.2670440673828, c * 186.00003051757812, c * 244.7670440673828);
  g[G](c * 155.00003051757812, c * 214.2670440673828, c * 155.00003051757812, c * 214.2670440673828, c * 124.00003051757812, c * 183.7670440673828);
  g[G](c * 51.000030517578125, c * 180.7670440673828, c * 21.000030517578125, c * 161.7670440673828, c * 9.000030517578125, c * 129.7670440673828);
  g[G](c * 8.500030517578125, c * 110.76704406738281, c * 8.500030517578125, c * 110.76704406738281, c * 8.000030517578125, c * 91.76704406738281);
  g[G](c * 31.000030517578125, c * 112.76704406738281, c * 87.00003051757812, c * 119.76704406738281, c * 116.00003051757812, c * 117.76704406738281);
  g[G](c * 175.00003051757812, c * 18.767044067382812, c * 170.00003051757812, c * 23.767044067382812, c * 181.00003051757812, c * 14.767044067382812);
  g[G](c * 199.00003051757812, c * 34.76704406738281, c * 203.00003051757812, c * 54.76704406738281, c * 247.00003051757812, c * 115.76704406738281);
  g[X]();
  jc(g, e[0], e[0], c * 10);
  g[Ia](c * 0, c * -10);
  g[ua] = 1;
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 107.00003051757812, c * 54.13069152832031);
  g[G](c * 106.50003051757812, c * 38.63069152832031, c * 106.50003051757812, c * 38.63069152832031, c * 106.00003051757812, c * 23.130691528320312);
  g[G](c * 121.50003051757812, c * 38.13069152832031, c * 121.50003051757812, c * 38.13069152832031, c * 137.00003051757812, c * 53.13069152832031);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 233.00003051757812, c * 53.6761474609375);
  g[G](c * 247.00003051757812, c * 37.1761474609375, c * 247.00003051757812, c * 37.1761474609375, c * 261.0000305175781, c * 20.6761474609375);
  g[G](c * 261.0000305175781, c * 36.1761474609375, c * 261.0000305175781, c * 36.1761474609375, c * 261.0000305175781, c * 51.6761474609375);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 293.0000305175781, c * 54.403411865234375);
  g[G](c * 300.0000305175781, c * 49.903411865234375, c * 300.0000305175781, c * 49.903411865234375, c * 307.0000305175781, c * 45.403411865234375);
  g[G](c * 307.0000305175781, c * 49.903411865234375, c * 307.0000305175781, c * 49.903411865234375, c * 307.0000305175781, c * 54.403411865234375);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 77.00003051757812, c * 54.403411865234375);
  g[G](c * 70.00003051757812, c * 50.403411865234375, c * 70.00003051757812, c * 50.403411865234375, c * 63.000030517578125, c * 46.403411865234375);
  g[G](c * 62.500030517578125, c * 50.903411865234375, c * 62.500030517578125, c * 50.903411865234375, c * 62.000030517578125, c * 55.403411865234375);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 58.000030517578125, c * 122.3125);
  g[G](c * 59.500030517578125, c * 97.3125, c * 59.500030517578125, c * 97.3125, c * 61.000030517578125, c * 72.3125);
  g[G](c * 91.00003051757812, c * 89.3125, c * 91.00003051757812, c * 89.3125, c * 121.00003051757812, c * 106.3125);
  g[X]();
  jc(g, e[1], e[1], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 310.0000305175781, c * 127.3125);
  g[G](c * 308.0000305175781, c * 98.3125, c * 308.0000305175781, c * 98.3125, c * 306.0000305175781, c * 69.3125);
  g[G](c * 274.5000305175781, c * 88.8125, c * 274.5000305175781, c * 88.8125, c * 243.00003051757812, c * 108.3125);
  g[X]();
  jc(g, e[1], e[1], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 226.00003051757812, c * 87.85795593261719);
  g[G](c * 243.50003051757812, c * 66.85795593261719, c * 243.50003051757812, c * 66.85795593261719, c * 261.0000305175781, c * 45.85795593261719);
  g[G](c * 265.0000305175781, c * 83.85795593261719, c * 265.0000305175781, c * 83.85795593261719, c * 269.0000305175781, c * 121.85795593261719);
  g[G](c * 235.00003051757812, c * 122.85795593261719, c * 233.00003051757812, c * 107.85795593261719, c * 228.00003051757812, c * 90.85795593261719);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105.00003051757812, c * 128.8579559326172);
  g[G](c * 104.50003051757812, c * 87.85795593261719, c * 104.50003051757812, c * 87.85795593261719, c * 104.00003051757812, c * 46.85795593261719);
  g[G](c * 126.50003051757812, c * 69.35795593261719, c * 126.50003051757812, c * 69.35795593261719, c * 149.00003051757812, c * 91.85795593261719);
  g[G](c * 130.00003051757812, c * 123.85795593261719, c * 123.00003051757812, c * 132.8579559326172, c * 107.00003051757812, c * 130.8579559326172);
  g[X]();
  jc(g, e[1], e[1], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 59.000030517578125, c * 121.85795593261719);
  g[G](c * 59.500030517578125, c * 99.35795593261719, c * 59.500030517578125, c * 99.35795593261719, c * 60.000030517578125, c * 76.85795593261719);
  g[G](c * 84.00003051757812, c * 92.35795593261719, c * 84.00003051757812, c * 92.35795593261719, c * 108.00003051757812, c * 107.85795593261719);
  g[G](c * 106.00003051757812, c * 148.8579559326172, c * 86.00003051757812, c * 148.8579559326172, c * 62.000030517578125, c * 123.85795593261719);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 105.00003051757812, c * 132.8579559326172);
  g[G](c * 104.50003051757812, c * 93.35795593261719, c * 104.50003051757812, c * 93.35795593261719, c * 104.00003051757812, c * 53.85795593261719);
  g[G](c * 126.50003051757812, c * 75.85795593261719, c * 126.50003051757812, c * 75.85795593261719, c * 149.00003051757812, c * 97.85795593261719);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 311.0000305175781, c * 126.85795593261719);
  g[G](c * 309.0000305175781, c * 101.35795593261719, c * 309.0000305175781, c * 101.35795593261719, c * 307.0000305175781, c * 75.85795593261719);
  g[G](c * 271.0000305175781, c * 96.85795593261719, c * 271.0000305175781, c * 96.85795593261719, c * 235.00003051757812, c * 117.85795593261719);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 228.00003051757812, c * 96.85795593261719);
  g[G](c * 244.50003051757812, c * 74.85795593261719, c * 244.50003051757812, c * 74.85795593261719, c * 261.0000305175781, c * 52.85795593261719);
  g[G](c * 265.5000305175781, c * 89.85795593261719, c * 265.5000305175781, c * 89.85795593261719, c * 270.0000305175781, c * 126.85795593261719);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 12.000030517578125, c * 86.13069152832031);
  g[G](c * 36.000030517578125, c * 113.13069152832031, c * 84.00003051757812, c * 111.13069152832031, c * 116.00003051757812, c * 113.13069152832031);
  g[G](c * 164.00003051757812, c * 23.130691528320312, c * 172.00003051757812, c * 18.130691528320312, c * 181.00003051757812, c * 9.130691528320312);
  g[G](c * 199.00003051757812, c * 29.130691528320312, c * 221.00003051757812, c * 78.13069152832031, c * 247.00003051757812, c * 112.13069152832031);
  g[G](c * 301.0000305175781, c * 122.13069152832031, c * 338.0000305175781, c * 111.13069152832031, c * 359.0000305175781, c * 94.13069152832031);
  g[G](c * 359.0000305175781, c * 113.13069152832031, c * 358.5000305175781, c * 105.13069152832031, c * 358.0000305175781, c * 116.13069152832031);
  g[G](c * 270.5000305175781, c * 130.1306915283203, c * 270.5000305175781, c * 130.1306915283203, c * 183.00003051757812, c * 144.1306915283203);
  g[G](c * 98.00003051757812, c * 128.6306915283203, c * 98.00003051757812, c * 128.6306915283203, c * 13.000030517578125, c * 113.13069152832031);
  g[X]();
  jc(g, e[1], e[1], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 247.00003051757812, c * 115.76704406738281);
  g[G](c * 305.0000305175781, c * 124.76704406738281, c * 335.0000305175781, c * 112.76704406738281, c * 359.0000305175781, c * 93.76704406738281);
  g[G](c * 359.5000305175781, c * 113.26704406738281, c * 359.5000305175781, c * 113.26704406738281, c * 360.0000305175781, c * 132.7670440673828);
  g[G](c * 339.0000305175781, c * 177.7670440673828, c * 281.0000305175781, c * 178.7670440673828, c * 243.00003051757812, c * 183.7670440673828);
  g[G](c * 214.50003051757812, c * 214.2670440673828, c * 214.50003051757812, c * 214.2670440673828, c * 186.00003051757812, c * 244.7670440673828);
  g[G](c * 155.00003051757812, c * 214.2670440673828, c * 155.00003051757812, c * 214.2670440673828, c * 124.00003051757812, c * 183.7670440673828);
  g[G](c * 51.000030517578125, c * 180.7670440673828, c * 21.000030517578125, c * 161.7670440673828, c * 9.000030517578125, c * 129.7670440673828);
  g[G](c * 8.500030517578125, c * 110.76704406738281, c * 8.500030517578125, c * 110.76704406738281, c * 8.000030517578125, c * 91.76704406738281);
  g[G](c * 31.000030517578125, c * 112.76704406738281, c * 87.00003051757812, c * 119.76704406738281, c * 116.00003051757812, c * 117.76704406738281);
  g[G](c * 175.00003051757812, c * 18.767044067382812, c * 170.00003051757812, c * 23.767044067382812, c * 181.00003051757812, c * 14.767044067382812);
  g[G](c * 199.00003051757812, c * 34.76704406738281, c * 203.00003051757812, c * 54.76704406738281, c * 247.00003051757812, c * 115.76704406738281);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 27.000030517578125, c * 94.76704406738281);
  g[G](c * 11.000030517578125, c * 81.76704406738281, c * 31.000030517578125, c * 72.76704406738281, c * 44.000030517578125, c * 59.76704406738281);
  g[G](c * 9.000030517578125, c * 65.76704406738281, c * 4.000030517578125, c * 78.76704406738281, c * 9.000030517578125, c * 89.76704406738281);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 352.0000305175781, c * 100.76705932617188);
  g[G](c * 362.0000305175781, c * 92.76705932617188, c * 352.0000305175781, c * 84.76705932617188, c * 340.0000305175781, c * 68.76705932617188);
  g[G](c * 360.0000305175781, c * 69.76705932617188, c * 364.0000305175781, c * 79.76705932617188, c * 364.0000305175781, c * 94.76705932617188);
  g[X]();
  jc(g, e[1], e[1], c * 1);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 25.000030517578125, c * 97.94886779785156);
  g[G](c * 2.000030517578125, c * 76.94886779785156, c * 29.000030517578125, c * 62.94886779785156, c * 44.000030517578125, c * 59.94886779785156);
  g[G](c * 8.000030517578125, c * 59.94886779785156, c * -0.999969482421875, c * 81.94886779785156, c * 4.000030517578125, c * 92.94886779785156);
  g[X]();
  jc(g, e[3]);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 349.0000305175781, c * 100.94886779785156);
  g[G](c * 366.0000305175781, c * 82.94886779785156, c * 353.0000305175781, c * 76.94886779785156, c * 337.0000305175781, c * 67.94886779785156);
  g[G](c * 366.0000305175781, c * 69.94886779785156, c * 366.0000305175781, c * 83.94886779785156, c * 363.0000305175781, c * 101.94886779785156);
  g[X]();
  jc(g, e[2], e[3], c * 10);
  lc(g, c * 46.000030517578125, c * 137.5852279663086, c * 9.219544457292887);
  jc(g, e[4], e[5], c * 1);
  lc(g, c * 308.0000305175781, c * 141.5852279663086, c * 8.54400374531753);
  jc(g, e[4], e[5], c * 1);
  lc(g, c * 92.00003051757812, c * 149.58523559570312, c * 14.866068747318506);
  jc(g, e[4], e[5], c * 1);
  lc(g, c * 262.0000305175781, c * 148.8579559326172, c * 15.620499351813308);
  jc(g, e[4], e[5], c * 1);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 184.00003051757812, c * 68.85795593261719);
  g[G](c * 203.00003051757812, c * 108.85795593261719, c * 203.00003051757812, c * 108.85795593261719, c * 222.00003051757812, c * 148.8579559326172);
  g[G](c * 202.50003051757812, c * 177.8579559326172, c * 202.50003051757812, c * 177.8579559326172, c * 183.00003051757812, c * 206.8579559326172);
  g[G](c * 162.00003051757812, c * 178.8579559326172, c * 162.00003051757812, c * 178.8579559326172, c * 141.00003051757812, c * 150.8579559326172);
  g[X]();
  jc(g, e[4], e[5], c * 10);
  g[Y]();
  g[Ga] = "round";
  g[ea] = "round";
  g[K](c * 183.00003051757812, c * 104.94886779785156);
  g[G](c * 192.50003051757812, c * 125.44886779785156, c * 192.50003051757812, c * 125.44886779785156, c * 202.00003051757812, c * 145.94886779785156);
  g[G](c * 192.00003051757812, c * 163.94886779785156, c * 192.00003051757812, c * 163.94886779785156, c * 182.00003051757812, c * 181.94886779785156);
  g[G](c * 172.50003051757812, c * 164.44886779785156, c * 172.50003051757812, c * 164.44886779785156, c * 163.00003051757812, c * 146.94886779785156);
  g[X]();
  jc(g, e[6]);
  return f;
}
function Vf() {
  new Date().getTime();
  function c(c) {
    for (var d = 0, e = 0, f = 0; e < c[Oa]; e++) {
      var g = c.charAt(e);
      if (g !== "_" && e !== 5) {
        if (g === "1") {
          d += Math[W](2, f);
        }
        f++;
      }
    }
    return d;
  }
  render_cosmetics();
  sprite[1020] = [IMAGES.ﱟ︆︊︂, IMAGES.ﱡ︆︊︂];
  sprite[1019] = [];
  sprite[1019][0] = [];
  sprite[1019][0][c("000_010_000")] = [IMAGES.ﱟ︊︃︄, IMAGES.ﱠ︊︃︄];
  sprite[1019][0][c("000_010_010")] = sprite[1019][0][c("000_010_000")];
  sprite[1019][0][c("000_011_000")] = sprite[1019][0][c("000_010_000")];
  sprite[1019][0][c("000_011_010")] = [IMAGES.ﱣ︇︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱢ︊︃︄];
  sprite[1019][0][c("000_011_011")] = [IMAGES.ﱡ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱢ︊︃︄, IMAGES.ﱞ︋︃︄];
  sprite[1019][0][c("000_110_000")] = [IMAGES.ﱣ︈︃︄, IMAGES.ﱠ︊︃︄];
  sprite[1019][0][c("000_110_010")] = [IMAGES.ﱞ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱟ︋︃︄];
  sprite[1019][0][c("000_110_110")] = [IMAGES.ﱞ︈︃︄, IMAGES.ﱠ︈︃︄, IMAGES.ﱟ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱟ︋︃︄];
  sprite[1019][0][c("000_111_000")] = [IMAGES.ﱣ︈︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄];
  sprite[1019][0][c("000_111_111")] = [IMAGES.ﱣ︈︃︄, IMAGES.ﱟ︈︃︄, IMAGES.ﱞ︈︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱡ︇︃︄, IMAGES.ﱞ︉︃︄];
  sprite[1019][0][c("010_010_000")] = [IMAGES.ﱠ︊︃︄];
  sprite[1019][0][c("010_010_010")] = [IMAGES.ﱡ︉︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄];
  sprite[1019][0][c("010_011_000")] = [IMAGES.ﱟ︇︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱠ︋︃︄];
  sprite[1019][0][c("010_110_000")] = [IMAGES.ﱣ︈︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("010_110_110")] = [IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱞ︈︃︄, IMAGES.ﱟ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱞ︉︃︄, IMAGES.ﱟ︉︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱢ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("010_011_010")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("010_011_011")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("000_111_011")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("010_110_010")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("010_111_000")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("010_111_010")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("010_111_011")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("010_111_110")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("010_111_111")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("000_111_110")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("000_111_010")] = sprite[1019][0][c("010_110_110")];
  sprite[1019][0][c("011_011_000")] = [IMAGES.ﱞ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱠ︋︃︄];
  sprite[1019][0][c("011_011_010")] = [IMAGES.ﱞ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("011_011_011")] = [IMAGES.ﱢ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱡ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱞ︇︃︄, IMAGES.ﱟ︉︃︄];
  sprite[1019][0][c("011_111_000")] = sprite[1019][0][c("011_011_010")];
  sprite[1019][0][c("011_111_010")] = [IMAGES.ﱞ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱞ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱞ︉︃︄, IMAGES.ﱟ︉︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱢ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("011_111_011")] = sprite[1019][0][c("011_111_010")];
  sprite[1019][0][c("011_111_110")] = sprite[1019][0][c("011_111_010")];
  sprite[1019][0][c("011_111_111")] = [IMAGES.ﱞ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱡ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱞ︈︃︄, IMAGES.ﱟ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱞ︉︃︄, IMAGES.ﱟ︉︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱢ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("110_110_000")] = [IMAGES.ﱡ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱢ︈︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("110_110_010")] = [IMAGES.ﱞ︈︃︄, IMAGES.ﱡ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("110_110_110")] = [IMAGES.ﱞ︈︃︄, IMAGES.ﱟ︈︃︄, IMAGES.ﱡ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("110_111_000")] = [IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱡ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱢ︈︃︄, IMAGES.ﱠ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("110_111_110")] = [IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱞ︈︃︄, IMAGES.ﱟ︈︃︄, IMAGES.ﱡ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱞ︉︃︄, IMAGES.ﱠ︉︃︄, IMAGES.ﱟ︉︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱢ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("110_111_111")] = sprite[1019][0][c("110_111_110")];
  sprite[1019][0][c("110_111_011")] = sprite[1019][0][c("110_111_110")];
  sprite[1019][0][c("110_111_010")] = sprite[1019][0][c("110_111_110")];
  sprite[1019][0][c("111_111_110")] = [IMAGES.ﱡ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱢ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱟ︉︃︄, IMAGES.ﱠ︉︃︄, IMAGES.ﱞ︉︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱡ︈︃︄, IMAGES.ﱞ︈︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱞ︇︃︄];
  sprite[1019][0][c("111_111_011")] = sprite[1019][0][c("111_111_110")];
  sprite[1019][0][c("111_111_000")] = [IMAGES.ﱢ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱡ︈︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱞ︇︃︄, IMAGES.ﱠ︉︃︄];
  sprite[1019][0][c("111_111_111")] = [IMAGES.ﱞ︇︃︄, IMAGES.ﱠ︇︃︄, IMAGES.ﱟ︇︃︄, IMAGES.ﱡ︇︃︄, IMAGES.ﱣ︇︃︄, IMAGES.ﱢ︇︃︄, IMAGES.ﱞ︈︃︄, IMAGES.ﱟ︈︃︄, IMAGES.ﱡ︈︃︄, IMAGES.ﱣ︈︃︄, IMAGES.ﱞ︉︃︄, IMAGES.ﱟ︉︃︄, IMAGES.ﱡ︉︃︄, IMAGES.ﱣ︉︃︄, IMAGES.ﱢ︉︃︄, IMAGES.ﱞ︊︃︄, IMAGES.ﱠ︊︃︄, IMAGES.ﱟ︊︃︄, IMAGES.ﱡ︊︃︄, IMAGES.ﱣ︊︃︄, IMAGES.ﱢ︊︃︄, IMAGES.ﱞ︋︃︄, IMAGES.ﱠ︋︃︄, IMAGES.ﱡ︋︃︄];
  sprite[1019][0][c("111_111_010")] = sprite[1019][0][c("111_111_110")];
  sprite[1019][1] = [];
  sprite[1019][1][c("000_010_000")] = [IMAGES.ﱞ️︃︄, IMAGES.ﱢ︎︃︄];
  sprite[1019][1][c("000_010_010")] = sprite[1019][1][c("000_010_000")];
  sprite[1019][1][c("000_011_000")] = sprite[1019][1][c("000_010_000")];
  sprite[1019][1][c("000_011_010")] = [IMAGES.ﱟ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱡ️︃︄];
  sprite[1019][1][c("000_011_011")] = [IMAGES.ﱠ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱡ️︃︄, IMAGES.ﱣ️︃︄];
  sprite[1019][1][c("000_110_000")] = [IMAGES.ﱟ︍︃︄, IMAGES.ﱢ︎︃︄];
  sprite[1019][1][c("000_110_010")] = [IMAGES.ﱣ︌︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱞ︀︄︄];
  sprite[1019][1][c("000_110_110")] = [IMAGES.ﱣ︌︃︄, IMAGES.ﱢ︌︃︄, IMAGES.ﱞ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱞ︀︄︄];
  sprite[1019][1][c("000_111_000")] = [IMAGES.ﱟ︍︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄];
  sprite[1019][1][c("000_111_111")] = [IMAGES.ﱟ︍︃︄, IMAGES.ﱞ︍︃︄, IMAGES.ﱣ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱠ︌︃︄, IMAGES.ﱣ︍︃︄];
  sprite[1019][1][c("010_010_000")] = [IMAGES.ﱢ︎︃︄];
  sprite[1019][1][c("010_010_010")] = [IMAGES.ﱠ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄];
  sprite[1019][1][c("010_011_000")] = [IMAGES.ﱞ︌︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱢ️︃︄];
  sprite[1019][1][c("010_110_000")] = [IMAGES.ﱟ︍︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("010_110_110")] = [IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱣ︌︃︄, IMAGES.ﱞ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱣ︍︃︄, IMAGES.ﱞ︎︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱡ️︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("010_011_010")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("010_011_011")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("000_111_011")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("010_110_010")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("010_111_000")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("010_111_010")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("010_111_011")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("010_111_110")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("010_111_111")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("000_111_110")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("000_111_010")] = sprite[1019][1][c("010_110_110")];
  sprite[1019][1][c("011_011_000")] = [IMAGES.ﱣ︋︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱢ️︃︄];
  sprite[1019][1][c("011_011_010")] = [IMAGES.ﱣ︋︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("011_011_011")] = [IMAGES.ﱡ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱠ︌︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱣ︋︃︄, IMAGES.ﱞ︎︃︄];
  sprite[1019][1][c("011_111_000")] = sprite[1019][1][c("011_011_010")];
  sprite[1019][1][c("011_111_010")] = [IMAGES.ﱣ︋︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱣ︌︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱣ︍︃︄, IMAGES.ﱞ︎︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱡ️︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("011_111_011")] = sprite[1019][1][c("011_111_010")];
  sprite[1019][1][c("011_111_110")] = sprite[1019][1][c("011_111_010")];
  sprite[1019][1][c("011_111_111")] = [IMAGES.ﱣ︋︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱠ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱣ︌︃︄, IMAGES.ﱞ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱣ︍︃︄, IMAGES.ﱞ︎︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱡ️︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("110_110_000")] = [IMAGES.ﱠ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱡ︍︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("110_110_010")] = [IMAGES.ﱣ︌︃︄, IMAGES.ﱠ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("110_110_110")] = [IMAGES.ﱣ︌︃︄, IMAGES.ﱞ︍︃︄, IMAGES.ﱠ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("110_111_000")] = [IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱠ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱡ︍︃︄, IMAGES.ﱢ︍︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("110_111_110")] = [IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱣ︌︃︄, IMAGES.ﱞ︍︃︄, IMAGES.ﱠ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱣ︍︃︄, IMAGES.ﱢ︍︃︄, IMAGES.ﱞ︎︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱡ️︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("110_111_111")] = sprite[1019][1][c("110_111_110")];
  sprite[1019][1][c("110_111_011")] = sprite[1019][1][c("110_111_110")];
  sprite[1019][1][c("110_111_010")] = sprite[1019][1][c("110_111_110")];
  sprite[1019][1][c("111_111_110")] = [IMAGES.ﱠ︀︄︄, IMAGES.ﱢ️︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱡ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱞ︎︃︄, IMAGES.ﱢ︍︃︄, IMAGES.ﱣ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱠ︍︃︄, IMAGES.ﱣ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱣ︋︃︄];
  sprite[1019][1][c("111_111_011")] = sprite[1019][1][c("111_111_110")];
  sprite[1019][1][c("111_111_000")] = [IMAGES.ﱡ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱠ︍︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱣ︋︃︄, IMAGES.ﱢ︍︃︄];
  sprite[1019][1][c("111_111_111")] = [IMAGES.ﱣ︋︃︄, IMAGES.ﱢ︋︃︄, IMAGES.ﱞ︌︃︄, IMAGES.ﱠ︌︃︄, IMAGES.ﱟ︌︃︄, IMAGES.ﱡ︌︃︄, IMAGES.ﱣ︌︃︄, IMAGES.ﱞ︍︃︄, IMAGES.ﱠ︍︃︄, IMAGES.ﱟ︍︃︄, IMAGES.ﱣ︍︃︄, IMAGES.ﱞ︎︃︄, IMAGES.ﱠ︎︃︄, IMAGES.ﱟ︎︃︄, IMAGES.ﱡ︎︃︄, IMAGES.ﱣ︎︃︄, IMAGES.ﱢ︎︃︄, IMAGES.ﱞ️︃︄, IMAGES.ﱠ️︃︄, IMAGES.ﱟ️︃︄, IMAGES.ﱡ️︃︄, IMAGES.ﱣ️︃︄, IMAGES.ﱢ️︃︄, IMAGES.ﱠ︀︄︄];
  sprite[1019][1][c("111_111_010")] = sprite[1019][1][c("111_111_110")];
  sprite[1018] = [];
  sprite[1018][0] = [];
  sprite[1018][0][c("000_010_000")] = IMAGES.ﱟ︇︂︄;
  sprite[1018][0][c("000_010_010")] = IMAGES.ﱡ︇︂︄;
  sprite[1018][0][c("000_011_000")] = IMAGES.ﱣ︇︂︄;
  sprite[1018][0][c("000_011_010")] = IMAGES.ﱢ︇︂︄;
  sprite[1018][0][c("000_011_011")] = IMAGES.ﱞ︈︂︄;
  sprite[1018][0][c("000_110_000")] = IMAGES.ﱠ︈︂︄;
  sprite[1018][0][c("000_110_010")] = IMAGES.ﱟ︈︂︄;
  sprite[1018][0][c("000_110_110")] = IMAGES.ﱡ︈︂︄;
  sprite[1018][0][c("000_111_000")] = IMAGES.ﱣ︈︂︄;
  sprite[1018][0][c("000_111_010")] = IMAGES.ﱢ︈︂︄;
  sprite[1018][0][c("000_111_011")] = IMAGES.ﱞ︉︂︄;
  sprite[1018][0][c("000_111_110")] = IMAGES.ﱠ︉︂︄;
  sprite[1018][0][c("000_111_111")] = IMAGES.ﱟ︉︂︄;
  sprite[1018][0][c("010_010_000")] = IMAGES.ﱡ︉︂︄;
  sprite[1018][0][c("010_010_010")] = IMAGES.ﱣ︉︂︄;
  sprite[1018][0][c("010_011_000")] = IMAGES.ﱢ︉︂︄;
  sprite[1018][0][c("010_011_010")] = IMAGES.ﱞ︊︂︄;
  sprite[1018][0][c("010_011_011")] = IMAGES.ﱠ︊︂︄;
  sprite[1018][0][c("010_110_000")] = IMAGES.ﱟ︊︂︄;
  sprite[1018][0][c("010_110_010")] = IMAGES.ﱡ︊︂︄;
  sprite[1018][0][c("010_110_110")] = IMAGES.ﱣ︊︂︄;
  sprite[1018][0][c("010_111_000")] = IMAGES.ﱢ︊︂︄;
  sprite[1018][0][c("010_111_010")] = IMAGES.ﱞ︋︂︄;
  sprite[1018][0][c("010_111_011")] = IMAGES.ﱠ︋︂︄;
  sprite[1018][0][c("010_111_110")] = IMAGES.ﱟ︋︂︄;
  sprite[1018][0][c("010_111_111")] = IMAGES.ﱡ︋︂︄;
  sprite[1018][0][c("011_011_000")] = IMAGES.ﱣ︋︂︄;
  sprite[1018][0][c("011_011_010")] = IMAGES.ﱢ︋︂︄;
  sprite[1018][0][c("011_011_011")] = IMAGES.ﱞ︌︂︄;
  sprite[1018][0][c("011_111_000")] = IMAGES.ﱠ︌︂︄;
  sprite[1018][0][c("011_111_010")] = IMAGES.ﱟ︌︂︄;
  sprite[1018][0][c("011_111_011")] = IMAGES.ﱡ︌︂︄;
  sprite[1018][0][c("011_111_110")] = IMAGES.ﱣ︌︂︄;
  sprite[1018][0][c("011_111_111")] = IMAGES.ﱢ︌︂︄;
  sprite[1018][0][c("110_110_000")] = IMAGES.ﱞ︍︂︄;
  sprite[1018][0][c("110_110_010")] = IMAGES.ﱠ︍︂︄;
  sprite[1018][0][c("110_110_110")] = IMAGES.ﱟ︍︂︄;
  sprite[1018][0][c("110_111_000")] = IMAGES.ﱡ︍︂︄;
  sprite[1018][0][c("110_111_010")] = IMAGES.ﱣ︍︂︄;
  sprite[1018][0][c("110_111_011")] = IMAGES.ﱢ︍︂︄;
  sprite[1018][0][c("110_111_110")] = IMAGES.ﱞ︎︂︄;
  sprite[1018][0][c("110_111_111")] = IMAGES.ﱠ︎︂︄;
  sprite[1018][0][c("111_111_011")] = IMAGES.ﱟ︎︂︄;
  sprite[1018][0][c("111_111_110")] = IMAGES.ﱡ︎︂︄;
  sprite[1018][0][c("111_111_011")] = IMAGES.ﱟ︎︂︄;
  sprite[1018][0][c("111_111_000")] = IMAGES.ﱣ︎︂︄;
  sprite[1018][0][c("111_111_111")] = IMAGES.ﱢ︎︂︄;
  sprite[1018][0][c("111_111_010")] = IMAGES.ﱞ️︂︄;
  sprite[1018][1] = [];
  sprite[1018][1][c("000_010_000")] = IMAGES.ﱠ️︂︄;
  sprite[1018][1][c("000_010_010")] = IMAGES.ﱟ️︂︄;
  sprite[1018][1][c("000_011_000")] = IMAGES.ﱡ️︂︄;
  sprite[1018][1][c("000_011_010")] = IMAGES.ﱣ️︂︄;
  sprite[1018][1][c("000_011_011")] = IMAGES.ﱢ️︂︄;
  sprite[1018][1][c("000_110_000")] = IMAGES.ﱞ︀︃︄;
  sprite[1018][1][c("000_110_010")] = IMAGES.ﱠ︀︃︄;
  sprite[1018][1][c("000_110_110")] = IMAGES.ﱟ︀︃︄;
  sprite[1018][1][c("000_111_000")] = IMAGES.ﱡ︀︃︄;
  sprite[1018][1][c("000_111_010")] = IMAGES.ﱣ︀︃︄;
  sprite[1018][1][c("000_111_011")] = IMAGES.ﱢ︀︃︄;
  sprite[1018][1][c("000_111_110")] = IMAGES.ﱞ︁︃︄;
  sprite[1018][1][c("000_111_111")] = IMAGES.ﱠ︁︃︄;
  sprite[1018][1][c("010_010_000")] = IMAGES.ﱟ︁︃︄;
  sprite[1018][1][c("010_010_010")] = IMAGES.ﱡ︁︃︄;
  sprite[1018][1][c("010_011_000")] = IMAGES.ﱣ︁︃︄;
  sprite[1018][1][c("010_011_010")] = IMAGES.ﱢ︁︃︄;
  sprite[1018][1][c("010_011_011")] = IMAGES.ﱞ︂︃︄;
  sprite[1018][1][c("010_110_000")] = IMAGES.ﱠ︂︃︄;
  sprite[1018][1][c("010_110_010")] = IMAGES.ﱟ︂︃︄;
  sprite[1018][1][c("010_110_110")] = IMAGES.ﱡ︂︃︄;
  sprite[1018][1][c("010_111_000")] = IMAGES.ﱣ︂︃︄;
  sprite[1018][1][c("010_111_010")] = IMAGES.ﱢ︂︃︄;
  sprite[1018][1][c("010_111_011")] = IMAGES.ﱞ︃︃︄;
  sprite[1018][1][c("010_111_110")] = IMAGES.ﱠ︃︃︄;
  sprite[1018][1][c("010_111_111")] = IMAGES.ﱟ︃︃︄;
  sprite[1018][1][c("011_011_000")] = IMAGES.ﱡ︃︃︄;
  sprite[1018][1][c("011_011_010")] = IMAGES.ﱣ︃︃︄;
  sprite[1018][1][c("011_011_011")] = IMAGES.ﱢ︃︃︄;
  sprite[1018][1][c("011_111_000")] = IMAGES.ﱞ︄︃︄;
  sprite[1018][1][c("011_111_010")] = IMAGES.ﱠ︄︃︄;
  sprite[1018][1][c("011_111_011")] = IMAGES.ﱟ︄︃︄;
  sprite[1018][1][c("011_111_110")] = IMAGES.ﱡ︄︃︄;
  sprite[1018][1][c("011_111_111")] = IMAGES.ﱣ︄︃︄;
  sprite[1018][1][c("110_110_000")] = IMAGES.ﱢ︄︃︄;
  sprite[1018][1][c("110_110_010")] = IMAGES.ﱞ︅︃︄;
  sprite[1018][1][c("110_110_110")] = IMAGES.ﱠ︅︃︄;
  sprite[1018][1][c("110_111_000")] = IMAGES.ﱟ︅︃︄;
  sprite[1018][1][c("110_111_010")] = IMAGES.ﱡ︅︃︄;
  sprite[1018][1][c("110_111_011")] = IMAGES.ﱣ︅︃︄;
  sprite[1018][1][c("110_111_110")] = IMAGES.ﱢ︅︃︄;
  sprite[1018][1][c("110_111_111")] = IMAGES.ﱞ︆︃︄;
  sprite[1018][1][c("111_111_011")] = IMAGES.ﱠ︆︃︄;
  sprite[1018][1][c("111_111_110")] = IMAGES.ﱟ︆︃︄;
  sprite[1018][1][c("111_111_011")] = IMAGES.ﱠ︆︃︄;
  sprite[1018][1][c("111_111_000")] = IMAGES.ﱡ︆︃︄;
  sprite[1018][1][c("111_111_111")] = IMAGES.ﱣ︆︃︄;
  sprite[1018][1][c("111_111_010")] = IMAGES.ﱢ︆︃︄;
  sprite[32] = [];
  sprite[32][0] = IMAGES.ﱞ︋︍︂;
  sprite[32][1] = IMAGES.ﱠ︋︍︂;
  sprite[199] = [];
  sprite[199][0] = IMAGES.ﱣ️︋︂;
  sprite[199][1] = IMAGES.ﱢ️︋︂;
  sprite[951] = [];
  sprite[951][0] = IMAGES.ﱟ︀︌︂;
  sprite[951][1] = IMAGES.ﱡ︀︌︂;
  sprite[201] = [];
  sprite[201][0] = IMAGES.ﱞ︁︌︂;
  sprite[201][1] = IMAGES.ﱠ︁︌︂;
  sprite[948] = [];
  sprite[948][0] = IMAGES.ﱞ︀︌︂;
  sprite[948][1] = IMAGES.ﱠ︀︌︂;
  sprite[952] = [];
  sprite[952][0] = IMAGES.ﱣ︀︌︂;
  sprite[952][1] = IMAGES.ﱢ︀︌︂;
  sprite[203] = [];
  sprite[203][0] = IMAGES.ﱠ︌︍︂;
  sprite[203][1] = IMAGES.ﱟ︌︍︂;
  sprite[965] = [];
  sprite[965][0] = IMAGES.ﱡ︌︍︂;
  sprite[965][1] = IMAGES.ﱣ︌︍︂;
  sprite[205] = [];
  sprite[205][0] = IMAGES.ﱠ︌️︂;
  sprite[205][1] = IMAGES.ﱟ︌️︂;
  sprite[980] = [];
  sprite[980][0] = IMAGES.ﱡ︌️︂;
  sprite[980][1] = IMAGES.ﱣ︌️︂;
  sprite[983] = [];
  sprite[983][0] = [IMAGES.ﱢ︅️︂];
  sprite[983][1] = [IMAGES.ﱞ︆️︂];
  sprite[211] = [];
  sprite[211][0] = IMAGES.ﱠ︉︍︂;
  sprite[211][1] = IMAGES.ﱟ︉︍︂;
  sprite[213] = [];
  sprite[213][0] = IMAGES.ﱢ︉︍︂;
  sprite[213][1] = IMAGES.ﱞ︊︍︂;
  sprite[212] = [];
  sprite[212][0] = IMAGES.ﱡ︉︍︂;
  sprite[212][1] = IMAGES.ﱣ︉︍︂;
  sprite[206] = [];
  sprite[206][0] = IMAGES.ﱡ︅︍︂;
  sprite[206][1] = IMAGES.ﱣ︅︍︂;
  sprite[207] = [];
  sprite[207][0] = IMAGES.ﱢ︅︍︂;
  sprite[207][1] = IMAGES.ﱞ︆︍︂;
  sprite[208] = [];
  sprite[208][0] = IMAGES.ﱠ︆︍︂;
  sprite[208][1] = IMAGES.ﱟ︆︍︂;
  sprite[209] = [];
  sprite[209][0] = IMAGES.ﱡ︆︍︂;
  sprite[209][1] = IMAGES.ﱣ︆︍︂;
  sprite[210] = [];
  sprite[210][0] = IMAGES.ﱢ︆︍︂;
  sprite[210][1] = IMAGES.ﱞ︇︍︂;
  sprite[214] = [];
  sprite[214][0] = IMAGES.ﱠ︊︍︂;
  sprite[214][1] = IMAGES.ﱟ︊︍︂;
  sprite[1014] = [];
  sprite[1014][0] = IMAGES.ﱣ︊︀︃;
  sprite[1014][1] = IMAGES.ﱢ︊︀︃;
  sprite[1015] = [];
  sprite[1015][0] = IMAGES.ﱞ︋︀︃;
  sprite[1015][1] = IMAGES.ﱠ︋︀︃;
  sprite[39] = [];
  sprite[39][0] = IMAGES.ﱢ︋︍︂;
  sprite[39][1] = IMAGES.ﱞ︌︍︂;
  sprite[1016] = IMAGES.ﱟ︇︆︂;
  sprite[1017] = IMAGES.ﱡ︇︆︂;
  sprite[1035] = [];
  sprite[1035][0] = [];
  sprite[1035][1] = [];
  sprite[1035][0][Na](IMAGES.ﱣ︆︊︂);
  sprite[1035][0][Na](IMAGES.ﱢ︆︊︂);
  sprite[1035][0][Na](IMAGES.ﱞ︇︊︂);
  sprite[1035][1][Na](IMAGES.ﱠ︇︊︂);
  sprite[1035][1][Na](IMAGES.ﱟ︇︊︂);
  sprite[1035][1][Na](IMAGES.ﱡ︇︊︂);
  sprite[238] = [];
  sprite[238][0] = [];
  sprite[238][1] = [];
  sprite[238][0][Na](IMAGES.ﱣ︇︊︂);
  sprite[238][0][Na](IMAGES.ﱢ︇︊︂);
  sprite[238][0][Na](IMAGES.ﱞ︈︊︂);
  sprite[238][1][Na](IMAGES.ﱠ︈︊︂);
  sprite[238][1][Na](IMAGES.ﱟ︈︊︂);
  sprite[238][1][Na](IMAGES.ﱡ︈︊︂);
  sprite[1046] = [];
  sprite[1046][0] = [];
  sprite[1046][1] = [];
  sprite[1046][0][Na](IMAGES.ﱣ︈︊︂);
  sprite[1046][0][Na](IMAGES.ﱢ︈︊︂);
  sprite[1046][0][Na](IMAGES.ﱞ︉︊︂);
  sprite[1046][0][Na](IMAGES.ﱠ︉︊︂);
  sprite[1046][1][Na](IMAGES.ﱟ︉︊︂);
  sprite[1046][1][Na](IMAGES.ﱡ︉︊︂);
  sprite[1046][1][Na](IMAGES.ﱣ︉︊︂);
  sprite[1046][1][Na](IMAGES.ﱢ︉︊︂);
  sprite[444] = [];
  sprite[444][0] = IMAGES.ﱣ︄︋︂;
  sprite[444][1] = IMAGES.ﱢ︄︋︂;
  sprite[447] = [];
  sprite[447][0] = IMAGES.ﱟ︅︋︂;
  sprite[447][1] = IMAGES.ﱡ︅︋︂;
  sprite[448] = [];
  sprite[448][0] = IMAGES.ﱣ︅︋︂;
  sprite[448][1] = IMAGES.ﱢ︅︋︂;
  sprite[458] = IMAGES.ﱢ︊︀︂;
  sprite[462] = IMAGES.ﱡ︋︀︂;
  sprite[463] = IMAGES.ﱣ︋︀︂;
  sprite[20] = [];
  sprite[20][0] = IMAGES.ﱡ️︊︂;
  sprite[20][1] = IMAGES.ﱣ️︊︂;
  sprite[914] = [];
  sprite[914][0] = IMAGES.ﱢ️︊︂;
  sprite[914][1] = IMAGES.ﱞ︀︋︂;
  sprite[21] = [];
  sprite[21][0] = IMAGES.ﱣ︀︋︂;
  sprite[21][1] = IMAGES.ﱢ︀︋︂;
  sprite[918] = [];
  sprite[918][0] = IMAGES.ﱢ️︊︂;
  sprite[918][1] = IMAGES.ﱞ︀︋︂;
  sprite[44] = [];
  sprite[44][0] = IMAGES.ﱢ︆︋︂;
  sprite[44][1] = IMAGES.ﱞ︇︋︂;
  sprite[19] = [];
  sprite[19][0] = IMAGES.ﱢ︁︋︂;
  sprite[19][1] = IMAGES.ﱞ︂︋︂;
  sprite[34] = [];
  sprite[34][0] = IMAGES.ﱞ︆︋︂;
  sprite[34][1] = IMAGES.ﱠ︆︋︂;
  sprite[17] = [];
  sprite[17][0] = IMAGES.ﱣ︉︋︂;
  sprite[17][1] = IMAGES.ﱢ︉︋︂;
  sprite[63] = [];
  sprite[63][0] = IMAGES.ﱢ︈︋︂;
  sprite[63][1] = IMAGES.ﱞ︉︋︂;
  sprite[60] = [];
  sprite[60][0] = IMAGES.ﱡ︊︋︂;
  sprite[60][1] = IMAGES.ﱣ︊︋︂;
  sprite[90] = [];
  sprite[90][0] = IMAGES.ﱟ︋︋︂;
  sprite[90][1] = IMAGES.ﱡ︋︋︂;
  sprite[91] = [];
  sprite[91][0] = IMAGES.ﱠ︌︋︂;
  sprite[91][1] = IMAGES.ﱟ︌︋︂;
  sprite[71] = [];
  sprite[71][0] = IMAGES.ﱢ︀︅︄;
  sprite[71][1] = IMAGES.ﱞ︁︅︄;
  sprite[72] = [];
  sprite[72][0] = IMAGES.ﱠ︁︅︄;
  sprite[72][1] = IMAGES.ﱟ︁︅︄;
  sprite[73] = [];
  sprite[73][0] = IMAGES.ﱡ︁︅︄;
  sprite[73][1] = IMAGES.ﱣ︁︅︄;
  sprite[74] = [];
  sprite[74][0] = IMAGES.ﱢ︁︅︄;
  sprite[74][1] = IMAGES.ﱞ︂︅︄;
  sprite[75] = [];
  sprite[75][0] = IMAGES.ﱠ︂︅︄;
  sprite[75][1] = IMAGES.ﱟ︂︅︄;
  sprite[76] = [];
  sprite[76][0] = IMAGES.ﱡ︂︅︄;
  sprite[76][1] = IMAGES.ﱣ︂︅︄;
  sprite[95] = [];
  sprite[95][0] = IMAGES.ﱣ︅︄︄;
  sprite[95][1] = IMAGES.ﱢ︅︄︄;
  sprite[64] = [];
  sprite[64][0] = IMAGES.ﱟ︅︄︄;
  sprite[64][1] = IMAGES.ﱡ︅︄︄;
  sprite[96] = [];
  sprite[96][0] = IMAGES.ﱟ︇︄︄;
  sprite[96][1] = IMAGES.ﱡ︇︄︄;
  sprite[65] = [];
  sprite[65][0] = IMAGES.ﱞ︇︄︄;
  sprite[65][1] = IMAGES.ﱠ︇︄︄;
  sprite[97] = [];
  sprite[97][0] = IMAGES.ﱞ︉︄︄;
  sprite[97][1] = IMAGES.ﱠ︉︄︄;
  sprite[66] = [];
  sprite[66][0] = IMAGES.ﱣ︈︄︄;
  sprite[66][1] = IMAGES.ﱢ︈︄︄;
  sprite[98] = [];
  sprite[98][0] = IMAGES.ﱣ︊︄︄;
  sprite[98][1] = IMAGES.ﱢ︊︄︄;
  sprite[67] = [];
  sprite[67][0] = IMAGES.ﱟ︊︄︄;
  sprite[67][1] = IMAGES.ﱡ︊︄︄;
  sprite[99] = [];
  sprite[99][0] = IMAGES.ﱟ︌︄︄;
  sprite[99][1] = IMAGES.ﱡ︌︄︄;
  sprite[68] = [];
  sprite[68][0] = IMAGES.ﱞ︌︄︄;
  sprite[68][1] = IMAGES.ﱠ︌︄︄;
  sprite[100] = [];
  sprite[100][0] = IMAGES.ﱣ️︄︄;
  sprite[100][1] = IMAGES.ﱢ️︄︄;
  sprite[69] = [];
  sprite[69][0] = IMAGES.ﱟ️︄︄;
  sprite[69][1] = IMAGES.ﱡ️︄︄;
  sprite[101] = [];
  sprite[101][0] = IMAGES.ﱞ︎︄︄;
  sprite[101][1] = IMAGES.ﱠ︎︄︄;
  sprite[70] = [];
  sprite[70][0] = IMAGES.ﱣ︍︄︄;
  sprite[70][1] = IMAGES.ﱢ︍︄︄;
  sprite[80] = [];
  sprite[80][0] = IMAGES.ﱢ︌️︂;
  sprite[80][1] = IMAGES.ﱞ︍️︂;
  sprite[81] = [];
  sprite[81][0] = IMAGES.ﱠ︍️︂;
  sprite[81][1] = IMAGES.ﱟ︍️︂;
  sprite[22] = [];
  sprite[22][0] = IMAGES.ﱞ︈︋︂;
  sprite[22][1] = IMAGES.ﱠ︈︋︂;
  sprite[922] = [];
  sprite[922][0] = IMAGES.ﱣ︇︋︂;
  sprite[922][1] = IMAGES.ﱢ︇︋︂;
  sprite[929] = [];
  sprite[929][0] = [];
  sprite[929][1] = [];
  sprite[929][0][Na](IMAGES.LAVA_SHINGLES0D);
  sprite[929][0][Na](IMAGES.LAVA_SHINGLES1D);
  sprite[929][1][Na](IMAGES.LAVA_SHINGLES1D);
  sprite[929][1][Na](IMAGES.LAVA_SHINGLES1N);
  sprite[935] = [];
  sprite[935][0] = [];
  sprite[935][1] = [];
  sprite[935][0][Na](IMAGES.ﱣ︃︋︂);
  sprite[935][0][Na](IMAGES.ﱞ︄︋︂);
  sprite[935][0][Na](IMAGES.ﱟ︄︋︂);
  sprite[935][1][Na](IMAGES.ﱢ︃︋︂);
  sprite[935][1][Na](IMAGES.ﱠ︄︋︂);
  sprite[935][1][Na](IMAGES.ﱡ︄︋︂);
  sprite[53] = [];
  sprite[53][0] = IMAGES.ﱠ︂︍︂;
  sprite[53][1] = IMAGES.ﱟ︂︍︂;
  sprite[54] = [];
  sprite[54][0] = IMAGES.ﱡ︎️︂;
  sprite[54][1] = IMAGES.ﱣ︎️︂;
  sprite[235] = [];
  sprite[235][0] = [];
  sprite[235][1] = [];
  sprite[235][0][Na](IMAGES.ﱡ︁︀︃);
  sprite[235][0][Na](IMAGES.ﱢ︁︀︃);
  sprite[235][0][Na](IMAGES.ﱠ︂︀︃);
  sprite[235][1][Na](IMAGES.ﱣ︁︀︃);
  sprite[235][1][Na](IMAGES.ﱞ︂︀︃);
  sprite[235][1][Na](IMAGES.ﱟ︂︀︃);
  sprite[196] = [];
  sprite[196][0] = [];
  sprite[196][1] = [];
  sprite[196][0][Na](IMAGES.ﱞ︊︊︂);
  sprite[196][0][Na](IMAGES.ﱟ︊︊︂);
  sprite[196][0][Na](IMAGES.ﱣ︊︊︂);
  sprite[196][1][Na](IMAGES.ﱠ︊︊︂);
  sprite[196][1][Na](IMAGES.ﱡ︊︊︂);
  sprite[196][1][Na](IMAGES.ﱢ︊︊︂);
  sprite[197] = [];
  sprite[197][0] = [];
  sprite[197][1] = [];
  sprite[197][0][Na](IMAGES.ﱞ︋︊︂);
  sprite[197][0][Na](IMAGES.ﱟ︋︊︂);
  sprite[197][0][Na](IMAGES.ﱣ︋︊︂);
  sprite[197][0][Na](IMAGES.ﱞ︌︊︂);
  sprite[197][0][Na](IMAGES.ﱟ︌︊︂);
  sprite[197][0][Na](IMAGES.ﱣ︌︊︂);
  sprite[197][1][Na](IMAGES.ﱠ︋︊︂);
  sprite[197][1][Na](IMAGES.ﱡ︋︊︂);
  sprite[197][1][Na](IMAGES.ﱢ︋︊︂);
  sprite[197][1][Na](IMAGES.ﱠ︌︊︂);
  sprite[197][1][Na](IMAGES.ﱡ︌︊︂);
  sprite[197][1][Na](IMAGES.ﱢ︌︊︂);
  sprite[["#2D2017", "#031C1E"]] = [];
  sprite[["#2D2017", "#031C1E"]][0] = [];
  sprite[["#2D2017", "#031C1E"]][1] = [];
  sprite[["#2D2017", "#031C1E"]][0][Na](IMAGES.ﱞ︍︊︂);
  sprite[["#2D2017", "#031C1E"]][0][Na](IMAGES.ﱟ︍︊︂);
  sprite[["#2D2017", "#031C1E"]][0][Na](IMAGES.ﱣ︍︊︂);
  sprite[["#2D2017", "#031C1E"]][0][Na](IMAGES.ﱞ︎︊︂);
  sprite[["#2D2017", "#031C1E"]][0][Na](IMAGES.ﱟ︎︊︂);
  sprite[["#2D2017", "#031C1E"]][0][Na](IMAGES.ﱣ︎︊︂);
  sprite[["#2D2017", "#031C1E"]][1][Na](IMAGES.ﱠ︍︊︂);
  sprite[["#2D2017", "#031C1E"]][1][Na](IMAGES.ﱡ︍︊︂);
  sprite[["#2D2017", "#031C1E"]][1][Na](IMAGES.ﱢ︍︊︂);
  sprite[["#2D2017", "#031C1E"]][1][Na](IMAGES.ﱠ︎︊︂);
  sprite[["#2D2017", "#031C1E"]][1][Na](IMAGES.ﱡ︎︊︂);
  sprite[["#2D2017", "#031C1E"]][1][Na](IMAGES.ﱢ︎︊︂);
  sprite[912] = [];
  sprite[912][0] = IMAGES.ﱞ️︊︂;
  sprite[912][1] = IMAGES.ﱠ️︊︂;
  sprite[913] = IMAGES.ﱟ️︊︂;
  sprite[56] = [];
  sprite[56][0] = IMAGES.ﱢ︅︅︄;
  sprite[56][1] = IMAGES.ﱞ︆︅︄;
  sprite[217] = [];
  sprite[217][0] = IMAGES.ﱟ︍︍︂;
  sprite[217][1] = IMAGES.ﱡ︍︍︂;
  sprite[218] = [];
  sprite[218][0] = IMAGES.ﱟ️︍︂;
  sprite[218][1] = IMAGES.ﱡ️︍︂;
  sprite[230] = [];
  sprite[230][0] = IMAGES.ﱡ︎︍︂;
  sprite[230][1] = IMAGES.ﱣ︎︍︂;
  sprite[1027] = [];
  sprite[1027][0] = IMAGES.ﱟ︁︎︂;
  sprite[1027][1] = IMAGES.ﱡ︁︎︂;
  sprite[1028] = IMAGES.ﱟ︉︆︂;
  sprite[1144] = [];
  sprite[1144][0] = IMAGES.ﱣ︀︀︃;
  sprite[1144][1] = IMAGES.ﱠ︁︀︃;
  sprite[1146] = [];
  sprite[1146][0] = IMAGES.ﱢ︀︀︃;
  sprite[1146][1] = IMAGES.ﱟ︁︀︃;
  sprite[1143] = IMAGES.ﱢ︋︇︂;
  sprite[1145] = IMAGES.ﱠ︌︇︂;
  sprite[1147] = IMAGES.ﱡ︌︇︂;
  sprite[1137] = [];
  sprite[1137][0] = IMAGES.ﱣ︆️︂;
  sprite[1137][1] = IMAGES.ﱢ︆️︂;
  sprite[1139] = [];
  sprite[1139][0] = IMAGES.ﱞ︇️︂;
  sprite[1139][1] = IMAGES.ﱠ︇️︂;
  sprite[1140] = [];
  sprite[1140][0] = IMAGES.ﱟ︇️︂;
  sprite[1140][1] = IMAGES.ﱡ︇️︂;
  sprite[1138] = IMAGES.ﱢ︊︇︂;
  sprite[1142] = IMAGES.ﱡ︋︇︂;
  sprite[1141] = IMAGES.ﱟ︋︇︂;
  sprite[1047] = [];
  sprite[1047][0] = IMAGES.ﱣ︂️︂;
  sprite[1047][1] = IMAGES.ﱢ︂️︂;
  sprite[1049] = [];
  sprite[1049][0] = IMAGES.ﱞ︃️︂;
  sprite[1049][1] = IMAGES.ﱠ︃️︂;
  sprite[1048] = [];
  sprite[1048][0] = IMAGES.ﱟ︂️︂;
  sprite[1048][1] = IMAGES.ﱡ︂️︂;
  sprite[1054] = [];
  sprite[1054][0] = IMAGES.ﱣ︄️︂;
  sprite[1054][1] = IMAGES.ﱢ︄️︂;
  sprite[1057] = [];
  sprite[1057][0] = IMAGES.ﱞ︅️︂;
  sprite[1057][1] = IMAGES.ﱠ︅️︂;
  sprite[1053] = [];
  sprite[1053][0] = IMAGES.ﱟ︃️︂;
  sprite[1053][1] = IMAGES.ﱡ︃️︂;
  sprite[1056] = [];
  sprite[1056][0] = IMAGES.ﱣ︃️︂;
  sprite[1056][1] = IMAGES.ﱢ︃️︂;
  sprite[1050] = IMAGES.ﱢ︌︆︂;
  sprite[1051] = IMAGES.ﱞ︍︆︂;
  sprite[1052] = IMAGES.ﱠ︍︆︂;
  sprite[1059] = IMAGES.ﱟ︎︆︂;
  sprite[1060] = IMAGES.ﱡ︎︆︂;
  sprite[1061] = IMAGES.ﱣ︎︆︂;
  sprite[1216] = [];
  sprite[1216][0] = IMAGES.ﱣ︀︄︄;
  sprite[1216][1] = IMAGES.ﱠ︁︄︄;
  sprite[1214] = [];
  sprite[1214][0] = IMAGES.ﱟ︀︄︄;
  sprite[1214][1] = IMAGES.ﱢ︀︄︄;
  sprite[1212] = [];
  sprite[1212][0] = IMAGES.ﱡ︃︄︄;
  sprite[1212][1] = IMAGES.ﱣ︃︄︄;
  sprite[1215] = [];
  sprite[1215][0] = IMAGES.ﱡ︀︄︄;
  sprite[1215][1] = IMAGES.ﱞ︁︄︄;
  sprite[1217] = IMAGES.ﱞ︈︈︂;
  sprite[1213] = IMAGES.ﱡ︇︈︂;
  sprite[1062] = [];
  sprite[1062][0] = IMAGES.ﱡ︇︎︂;
  sprite[1062][1] = IMAGES.ﱣ︇︎︂;
  sprite[1063] = [];
  sprite[1063][0] = IMAGES.ﱠ︇︎︂;
  sprite[1063][1] = IMAGES.ﱟ︇︎︂;
  sprite[1064] = [];
  sprite[1064][0] = IMAGES.ﱢ︇︎︂;
  sprite[1064][1] = IMAGES.ﱞ︈︎︂;
  sprite[1066] = [];
  sprite[1066][0] = IMAGES.ﱡ︉︎︂;
  sprite[1066][1] = IMAGES.ﱣ︉︎︂;
  sprite[1069] = [];
  sprite[1069][0] = IMAGES.ﱢ︉︎︂;
  sprite[1069][1] = IMAGES.ﱞ︊︎︂;
  sprite[1065] = [];
  sprite[1065][0] = IMAGES.ﱠ︈︎︂;
  sprite[1065][1] = IMAGES.ﱟ︈︎︂;
  sprite[1068] = [];
  sprite[1068][0] = IMAGES.ﱡ︈︎︂;
  sprite[1068][1] = IMAGES.ﱣ︈︎︂;
  sprite[1067] = [];
  sprite[1067][0] = IMAGES.ﱢ︈︎︂;
  sprite[1067][1] = IMAGES.ﱞ︉︎︂;
  sprite[1070] = [];
  sprite[1070][0] = IMAGES.ﱠ︉︎︂;
  sprite[1070][1] = IMAGES.ﱟ︉︎︂;
  sprite[1071] = IMAGES.ﱠ︀︇︂;
  sprite[1072] = IMAGES.ﱟ︀︇︂;
  sprite[1073] = IMAGES.ﱡ︀︇︂;
  sprite[1077] = [];
  sprite[1077][0] = IMAGES.ﱞ︋︎︂;
  sprite[1077][1] = IMAGES.ﱠ︋︎︂;
  sprite[1078] = [];
  sprite[1078][0] = IMAGES.ﱣ︊︎︂;
  sprite[1078][1] = IMAGES.ﱢ︊︎︂;
  sprite[1079] = [];
  sprite[1079][0] = IMAGES.ﱟ︋︎︂;
  sprite[1079][1] = IMAGES.ﱡ︋︎︂;
  sprite[1081] = [];
  sprite[1081][0] = IMAGES.ﱞ︍︎︂;
  sprite[1081][1] = IMAGES.ﱠ︍︎︂;
  sprite[1084] = [];
  sprite[1084][0] = IMAGES.ﱟ︍︎︂;
  sprite[1084][1] = IMAGES.ﱡ︍︎︂;
  sprite[1080] = [];
  sprite[1080][0] = IMAGES.ﱣ︋︎︂;
  sprite[1080][1] = IMAGES.ﱢ︋︎︂;
  sprite[1083] = [];
  sprite[1083][0] = IMAGES.ﱞ︌︎︂;
  sprite[1083][1] = IMAGES.ﱠ︌︎︂;
  sprite[1082] = [];
  sprite[1082][0] = IMAGES.ﱟ︌︎︂;
  sprite[1082][1] = IMAGES.ﱡ︌︎︂;
  sprite[1085] = [];
  sprite[1085][0] = IMAGES.ﱣ︌︎︂;
  sprite[1085][1] = IMAGES.ﱢ︌︎︂;
  sprite[1086] = IMAGES.ﱡ︂︇︂;
  sprite[1087] = IMAGES.ﱣ︂︇︂;
  sprite[1088] = IMAGES.ﱢ︂︇︂;
  sprite[1092] = [];
  sprite[1092][0] = IMAGES.ﱡ︎︎︂;
  sprite[1092][1] = IMAGES.ﱣ︎︎︂;
  sprite[1093] = [];
  sprite[1093][0] = IMAGES.ﱠ︎︎︂;
  sprite[1093][1] = IMAGES.ﱟ︎︎︂;
  sprite[1109] = IMAGES.ﱠ︆︇︂;
  sprite[1107] = [];
  sprite[1107][0] = IMAGES.ﱢ︎︎︂;
  sprite[1107][1] = IMAGES.ﱞ️︎︂;
  sprite[1108] = [];
  sprite[1108][0] = IMAGES.ﱠ️︎︂;
  sprite[1108][1] = IMAGES.ﱟ️︎︂;
  sprite[1094] = [];
  sprite[1094][0] = IMAGES.ﱡ︁️︂;
  sprite[1094][1] = IMAGES.ﱣ︁️︂;
  sprite[1096] = [];
  sprite[1096][0] = IMAGES.ﱡ️︎︂;
  sprite[1096][1] = IMAGES.ﱣ️︎︂;
  sprite[1099] = [];
  sprite[1099][0] = IMAGES.ﱢ️︎︂;
  sprite[1099][1] = IMAGES.ﱞ︀️︂;
  sprite[1095] = [];
  sprite[1095][0] = IMAGES.ﱠ︀️︂;
  sprite[1095][1] = IMAGES.ﱟ︀️︂;
  sprite[1098] = [];
  sprite[1098][0] = IMAGES.ﱡ︀️︂;
  sprite[1098][1] = IMAGES.ﱣ︀️︂;
  sprite[1097] = [];
  sprite[1097][0] = IMAGES.ﱢ︀️︂;
  sprite[1097][1] = IMAGES.ﱞ︁️︂;
  sprite[1100] = [];
  sprite[1100][0] = IMAGES.ﱠ︁️︂;
  sprite[1100][1] = IMAGES.ﱟ︁️︂;
  sprite[1101] = IMAGES.ﱢ︄︇︂;
  sprite[1102] = IMAGES.ﱞ︅︇︂;
  sprite[1103] = IMAGES.ﱠ︅︇︂;
  sprite[1113] = [];
  sprite[1113][0] = IMAGES.ﱞ︈️︂;
  sprite[1113][1] = IMAGES.ﱠ︈️︂;
  sprite[1114] = [];
  sprite[1114][0] = IMAGES.ﱣ︇️︂;
  sprite[1114][1] = IMAGES.ﱢ︇️︂;
  sprite[1130] = IMAGES.ﱡ︉︇︂;
  sprite[1128] = [];
  sprite[1128][0] = IMAGES.ﱟ︈️︂;
  sprite[1128][1] = IMAGES.ﱡ︈️︂;
  sprite[1129] = [];
  sprite[1129][0] = IMAGES.ﱣ︈️︂;
  sprite[1129][1] = IMAGES.ﱢ︈️︂;
  sprite[1115] = [];
  sprite[1115][0] = IMAGES.ﱞ︋️︂;
  sprite[1115][1] = IMAGES.ﱠ︋️︂;
  sprite[1117] = [];
  sprite[1117][0] = IMAGES.ﱞ︉️︂;
  sprite[1117][1] = IMAGES.ﱠ︉️︂;
  sprite[1120] = [];
  sprite[1120][0] = IMAGES.ﱟ︉️︂;
  sprite[1120][1] = IMAGES.ﱡ︉️︂;
  sprite[1116] = [];
  sprite[1116][0] = IMAGES.ﱣ︉️︂;
  sprite[1116][1] = IMAGES.ﱢ︉️︂;
  sprite[1119] = [];
  sprite[1119][0] = IMAGES.ﱞ︊️︂;
  sprite[1119][1] = IMAGES.ﱠ︊️︂;
  sprite[1118] = [];
  sprite[1118][0] = IMAGES.ﱟ︊️︂;
  sprite[1118][1] = IMAGES.ﱡ︊️︂;
  sprite[1121] = [];
  sprite[1121][0] = IMAGES.ﱣ︊️︂;
  sprite[1121][1] = IMAGES.ﱢ︊️︂;
  sprite[1122] = IMAGES.ﱠ︈︇︂;
  sprite[1123] = IMAGES.ﱟ︈︇︂;
  sprite[1124] = IMAGES.ﱡ︈︇︂;
  sprite[1036] = [];
  sprite[1036][0] = IMAGES.ﱣ︁︎︂;
  sprite[1036][1] = IMAGES.ﱠ︂︎︂;
  sprite[1037] = [];
  sprite[1037][0] = IMAGES.ﱢ︁︎︂;
  sprite[1037][1] = IMAGES.ﱟ︂︎︂;
  sprite[1038] = [];
  sprite[1038][0] = IMAGES.ﱞ︂︎︂;
  sprite[1038][1] = IMAGES.ﱡ︂︎︂;
  sprite[222] = [];
  sprite[222][0] = IMAGES.ﱣ︃︎︁;
  sprite[222][1] = IMAGES.ﱣ︃︎︁;
  sprite[228] = [];
  sprite[228][0] = IMAGES.ﱣ︄︎︁;
  sprite[228][1] = IMAGES.ﱣ︄︎︁;
  sprite[243] = [];
  sprite[243][0] = IMAGES.ﱠ︇︎︁;
  sprite[243][1] = IMAGES.ﱠ︇︎︁;
  sprite[1039] = IMAGES.ﱠ︋︆︂;
  sprite[89] = [];
  sprite[89][0] = IMAGES.ﱠ︃︎︂;
  sprite[89][1] = IMAGES.ﱟ︃︎︂;
  sprite[92] = [];
  sprite[92][0] = IMAGES.ﱞ︄︎︂;
  sprite[92][1] = IMAGES.ﱠ︄︎︂;
  sprite[241] = [];
  sprite[241][0] = [IMAGES.ﱡ︅︎︂, IMAGES.ﱟ︄︎︂, IMAGES.ﱣ︅︄︄, IMAGES.ﱟ︇︄︄, IMAGES.ﱞ︉︄︄, IMAGES.ﱣ︊︄︄, IMAGES.ﱟ︌︄︄, IMAGES.ﱣ️︄︄, IMAGES.ﱞ︎︄︄];
  sprite[241][1] = [IMAGES.ﱣ︅︎︂, IMAGES.ﱡ︄︎︂, IMAGES.ﱢ︅︄︄, IMAGES.ﱡ︇︄︄, IMAGES.ﱠ︉︄︄, IMAGES.ﱢ︊︄︄, IMAGES.ﱡ︌︄︄, IMAGES.ﱣ️︄︄, IMAGES.ﱠ︎︄︄];
  sprite[93] = [];
  sprite[93][0] = IMAGES.ﱠ︅︎︂;
  sprite[93][1] = IMAGES.ﱟ︅︎︂;
  sprite[219] = [];
  sprite[219][0] = IMAGES.ﱣ︍︍︂;
  sprite[219][1] = IMAGES.ﱢ︍︍︂;
  sprite[220] = [];
  sprite[220][0] = IMAGES.ﱣ️︍︂;
  sprite[220][1] = IMAGES.ﱢ️︍︂;
  sprite[24] = [];
  sprite[24][0] = IMAGES.ﱡ︀︎︂;
  sprite[24][1] = IMAGES.ﱣ︀︎︂;
  sprite[88] = [];
  sprite[88][0] = IMAGES.ﱣ︂︄︄;
  sprite[88][1] = IMAGES.ﱢ︂︄︄;
  sprite[87] = [];
  sprite[87][0] = IMAGES.ﱢ︁︄︄;
  sprite[87][1] = IMAGES.ﱞ︂︄︄;
  sprite[82] = [];
  sprite[82][0] = IMAGES.ﱣ️️︂;
  sprite[82][1] = IMAGES.ﱢ️️︂;
  sprite[615] = [];
  sprite[615][0] = [];
  sprite[615][1] = [];
  sprite[615][0][Na](IMAGES.LAKE0D_EDGE);
  sprite[615][0][Na](IMAGES.LAKE1D_EDGE);
  sprite[615][0][Na](IMAGES.LAKE2D_EDGE);
  sprite[615][1][Na](IMAGES.LAKE0N_EDGE);
  sprite[615][1][Na](IMAGES.LAKE1N_EDGE);
  sprite[615][1][Na](IMAGES.LAKE2N_EDGE);
  sprite[613] = [];
  sprite[613][0] = [];
  sprite[613][1] = [];
  sprite[613][0][Na](IMAGES.LAKE0D_DEEP);
  sprite[613][0][Na](IMAGES.LAKE1D_DEEP);
  sprite[613][0][Na](IMAGES.LAKE2D_DEEP);
  sprite[613][1][Na](IMAGES.LAKE0N_DEEP);
  sprite[613][1][Na](IMAGES.LAKE1N_DEEP);
  sprite[613][1][Na](IMAGES.LAKE2N_DEEP);
  sprite[614] = [];
  sprite[614][0] = [];
  sprite[614][1] = [];
  sprite[614][0][Na](IMAGES.LAKE0D);
  sprite[614][0][Na](IMAGES.LAKE1D);
  sprite[614][0][Na](IMAGES.LAKE2D);
  sprite[614][1][Na](IMAGES.LAKE0N);
  sprite[614][1][Na](IMAGES.LAKE1N);
  sprite[614][1][Na](IMAGES.LAKE2N);
  MINIMAP_UTILS.g = [];
  MINIMAP_UTILS.g[0] = [IMAGES.ﱠ︎︉︂, IMAGES.ﱞ︂︊︂];
  MINIMAP_UTILS.g[1] = MINIMAP_UTILS.g[0];
  MINIMAP_UTILS.g[2] = [IMAGES.ﱟ︎︉︂, IMAGES.ﱠ︂︊︂];
  MINIMAP_UTILS.m = [];
  MINIMAP_UTILS.m[0] = [IMAGES.ﱡ︎︉︂, IMAGES.ﱟ︂︊︂];
  MINIMAP_UTILS.m[1] = MINIMAP_UTILS.m[0];
  MINIMAP_UTILS.m[2] = [IMAGES.ﱣ︎︉︂, IMAGES.ﱡ︂︊︂];
  MINIMAP_UTILS.la = [];
  MINIMAP_UTILS.la[0] = [IMAGES.ﱞ︁︊︂, IMAGES.ﱢ︄︊︂];
  MINIMAP_UTILS.la[1] = MINIMAP_UTILS.la[0];
  MINIMAP_UTILS.la[2] = MINIMAP_UTILS.la[0];
  MINIMAP_UTILS.la[3] = MINIMAP_UTILS.la[0];
  MINIMAP_UTILS.la[4] = MINIMAP_UTILS.la[0];
  MINIMAP_UTILS.la[5] = MINIMAP_UTILS.la[0];
  MINIMAP_UTILS.s = [];
  MINIMAP_UTILS.s[0] = [IMAGES.ﱢ︍︉︂, IMAGES.ﱣ︁︊︂];
  MINIMAP_UTILS.s[1] = MINIMAP_UTILS.s[0];
  MINIMAP_UTILS.s[2] = [IMAGES.ﱞ︎︉︂, IMAGES.ﱢ︁︊︂];
  MINIMAP_UTILS.p = [];
  MINIMAP_UTILS.p[0] = [IMAGES.ﱣ︍︉︂, IMAGES.ﱣ︍︉︂];
  MINIMAP_UTILS.a = [];
  MINIMAP_UTILS.a[0] = [IMAGES.ﱢ︎︉︂, IMAGES.ﱣ︂︊︂];
  MINIMAP_UTILS.a[1] = MINIMAP_UTILS.a[0];
  MINIMAP_UTILS.a[2] = MINIMAP_UTILS.a[0];
  MINIMAP_UTILS.d = [];
  MINIMAP_UTILS.d[0] = [IMAGES.ﱟ️︉︂, IMAGES.ﱠ︃︊︂];
  MINIMAP_UTILS.d[1] = MINIMAP_UTILS.d[0];
  MINIMAP_UTILS.d[2] = MINIMAP_UTILS.d[0];
  MINIMAP_UTILS.re = [];
  MINIMAP_UTILS.re[0] = [IMAGES.ﱣ️︉︂, IMAGES.ﱡ︃︊︂];
  MINIMAP_UTILS.re[1] = MINIMAP_UTILS.re[0];
  MINIMAP_UTILS.re[2] = MINIMAP_UTILS.re[0];
  MINIMAP_UTILS.f = [];
  MINIMAP_UTILS.f[0] = [IMAGES.ﱠ︀︊︂, IMAGES.ﱞ︄︊︂];
  MINIMAP_UTILS.f[1] = MINIMAP_UTILS.f[0];
  MINIMAP_UTILS.f[2] = MINIMAP_UTILS.f[0];
  MINIMAP_UTILS.isl = [];
  MINIMAP_UTILS.isl[0] = [IMAGES.ﱡ️︉︂, IMAGES.ﱟ︃︊︂];
  MINIMAP_UTILS.isl[1] = MINIMAP_UTILS.isl[0];
  MINIMAP_UTILS.isl[2] = MINIMAP_UTILS.isl[0];
  MINIMAP_UTILS.c = [];
  MINIMAP_UTILS.c[0] = [IMAGES.ﱢ︀︊︂, IMAGES.ﱣ︄︊︂];
  MINIMAP_UTILS.c[1] = MINIMAP_UTILS.c[0];
  MINIMAP_UTILS.c[2] = MINIMAP_UTILS.c[0];
  MINIMAP_UTILS.wtb = [];
  MINIMAP_UTILS.wtb[0] = [IMAGES.ﱟ︍︉︂, IMAGES.ﱠ︁︊︂];
  MINIMAP_UTILS.ﱠ︍︂︂ = [IMAGES.ﱣ︀︊︂, IMAGES.ﱡ︄︊︂];
  MINIMAP_UTILS.ﱠ︇︂︂ = [IMAGES.ﱡ︀︊︂, IMAGES.ﱟ︄︊︂];
  MINIMAP_UTILS.ﱡ︃︀︂ = [IMAGES.ﱟ︀︊︂, IMAGES.ﱠ︄︊︂];
  MINIMAP_UTILS.ﱡ️︎︁ = [IMAGES.ﱞ︀︊︂, IMAGES.ﱢ︃︊︂];
  MINIMAP_UTILS.ﱞ︉︎︁ = [IMAGES.ﱢ️︉︂, IMAGES.ﱣ︃︊︂];
  MINIMAP_UTILS.ﱢ︇︀︂ = [IMAGES.ﱞ️︉︂, IMAGES.ﱢ︂︊︂];
  MINIMAP_UTILS.CAVE = [IMAGES.ﱠ️︉︂, IMAGES.ﱞ︃︊︂];
  MINIMAP_UTILS.MAP = [IMAGES.ﱣ︌︉︂, IMAGES.ﱢ︌︉︂];
  MINIMAP_UTILS.FOREST = [IMAGES.ﱡ︅︊︂, IMAGES.ﱠ︆︊︂];
  MINIMAP_UTILS.WINTER = [IMAGES.ﱠ︅︊︂, IMAGES.ﱢ︅︊︂];
  MINIMAP_UTILS.DESERT = [IMAGES.ﱞ︅︊︂, IMAGES.ﱣ︅︊︂];
  MINIMAP_UTILS.LAVA = [IMAGES.ﱟ︅︊︂, IMAGES.ﱞ︆︊︂];
  for (var d in MINIMAP_UTILS) {
    for (var e = MINIMAP_UTILS[d], f = 0; f < e[Oa]; f++) {
      var g = e[f];
      if (g.ﱞ︇︅︄ !== undefined) {
        g.ﱞ︇︅︄();
      } else if (g[Oa] > 0) {
        for (var i = 0; i < g[Oa]; i++) {
          if (g[i].ﱞ︇︅︄ !== undefined) {
            g[i].ﱞ︇︅︄();
          }
        }
      }
    }
  }
}
function Wf() {
  new Date().getTime();
  Vf();
  (function () {
    sprite[808] = Uc(1, [{
      f: Cf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#c06937", "#cd733b", "#b25e34", "#244e2b", "#214224", "#6f4424", "#3c3009"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[809] = sprite[808];
    sprite[949] = [];
    sprite[949][0] = IMAGES.ﱟ︁︌︂;
    sprite[949][1] = IMAGES.ﱡ︁︌︂;
    sprite[949][2] = IMAGES.ﱣ︁︌︂;
    sprite[950] = sprite[949];
    sprite[966] = [];
    sprite[966][0] = IMAGES.ﱢ︌︍︂;
    sprite[966][1] = IMAGES.ﱞ︍︍︂;
    sprite[966][2] = IMAGES.ﱠ︍︍︂;
    sprite[967] = sprite[966];
    sprite[981] = [];
    sprite[981][0] = IMAGES.ﱣ︋️︂;
    sprite[981][1] = IMAGES.ﱢ︋️︂;
    sprite[981][2] = IMAGES.ﱞ︌️︂;
    sprite[982] = sprite[981];
    sprite[1148] = [];
    sprite[1148][0] = IMAGES.ﱠ︆️︂;
    sprite[1148][1] = IMAGES.ﱟ︆️︂;
    sprite[1148][2] = IMAGES.ﱡ︆️︂;
    sprite[1149] = sprite[1148];
    sprite[959] = [];
    sprite[959][0] = IMAGES.ﱢ︁︌︂;
    sprite[959][1] = IMAGES.ﱞ︂︌︂;
    sprite[959][2] = IMAGES.ﱠ︂︌︂;
    sprite[968] = sprite[959];
    sprite[1022] = [];
    sprite[1022][0] = IMAGES.ﱞ︎︍︂;
    sprite[1022][1] = IMAGES.ﱠ︎︍︂;
    sprite[1022][2] = IMAGES.ﱟ︎︍︂;
    sprite[1023] = sprite[1022];
    sprite[1021] = sprite[1022];
    sprite[706] = [];
    sprite[706][0] = IMAGES.ﱟ︆︅︄;
    sprite[706][1] = IMAGES.ﱠ︆︅︄;
    sprite[706][2] = IMAGES.ﱡ︆︅︄;
    sprite[707] = sprite[706];
    sprite[708] = sprite[706];
    sprite[1025] = [];
    sprite[1025][0] = IMAGES.ﱞ︀︎︂;
    sprite[1025][1] = IMAGES.ﱠ︀︎︂;
    sprite[1025][2] = IMAGES.ﱟ︀︎︂;
    sprite[1026] = sprite[1025];
    sprite[1024] = sprite[1025];
    sprite[417] = [];
    sprite[417][0] = IMAGES.ﱢ︀︎︂;
    sprite[417][1] = IMAGES.ﱞ︁︎︂;
    sprite[417][2] = IMAGES.ﱠ︁︎︂;
    sprite[419] = sprite[417];
    sprite[418] = sprite[417];
    sprite[1227] = [];
    sprite[1227][0] = IMAGES.ﱢ︃︄︄;
    sprite[1227][1] = IMAGES.ﱞ︄︄︄;
    sprite[1227][2] = IMAGES.ﱠ︄︄︄;
    sprite[1228] = sprite[1227];
    sprite[1224] = [];
    sprite[1224][0] = IMAGES.ﱞ︃︄︄;
    sprite[1224][1] = IMAGES.ﱠ︃︄︄;
    sprite[1224][2] = IMAGES.ﱟ︃︄︄;
    sprite[1226] = sprite[1224];
    sprite[1225] = sprite[1224];
    sprite[563] = [];
    sprite[563][0] = IMAGES.ﱟ︄︄︄;
    sprite[563][1] = IMAGES.ﱡ︄︄︄;
    sprite[563][2] = IMAGES.ﱣ︄︄︄;
    sprite[565] = sprite[563];
    sprite[564] = sprite[563];
    sprite[1160] = [];
    sprite[1160][0] = IMAGES.ﱢ︄︄︄;
    sprite[1160][1] = IMAGES.ﱞ︅︄︄;
    sprite[1160][2] = IMAGES.ﱠ︅︄︄;
    sprite[1161] = sprite[1160];
    sprite[1162] = sprite[1160];
    sprite[566] = [];
    sprite[566][0] = IMAGES.ﱞ︆︄︄;
    sprite[566][1] = IMAGES.ﱠ︆︄︄;
    sprite[566][2] = IMAGES.ﱟ︆︄︄;
    sprite[568] = sprite[566];
    sprite[567] = sprite[566];
    sprite[1163] = [];
    sprite[1163][0] = IMAGES.ﱡ︆︄︄;
    sprite[1163][1] = IMAGES.ﱣ︆︄︄;
    sprite[1163][2] = IMAGES.ﱢ︆︄︄;
    sprite[1164] = sprite[1163];
    sprite[1165] = sprite[1163];
    sprite[569] = [];
    sprite[569][0] = IMAGES.ﱣ︇︄︄;
    sprite[569][1] = IMAGES.ﱢ︇︄︄;
    sprite[569][2] = IMAGES.ﱞ︈︄︄;
    sprite[571] = sprite[569];
    sprite[570] = sprite[569];
    sprite[1166] = [];
    sprite[1166][0] = IMAGES.ﱠ︈︄︄;
    sprite[1166][1] = IMAGES.ﱟ︈︄︄;
    sprite[1166][2] = IMAGES.ﱡ︈︄︄;
    sprite[1167] = sprite[1166];
    sprite[1168] = sprite[1166];
    sprite[572] = [];
    sprite[572][0] = IMAGES.ﱟ︉︄︄;
    sprite[572][1] = IMAGES.ﱡ︉︄︄;
    sprite[572][2] = IMAGES.ﱣ︉︄︄;
    sprite[574] = sprite[572];
    sprite[573] = sprite[572];
    sprite[1169] = [];
    sprite[1169][0] = IMAGES.ﱢ︉︄︄;
    sprite[1169][1] = IMAGES.ﱞ︊︄︄;
    sprite[1169][2] = IMAGES.ﱠ︊︄︄;
    sprite[1170] = sprite[1169];
    sprite[1171] = sprite[1169];
    sprite[575] = [];
    sprite[575][0] = IMAGES.ﱞ︋︄︄;
    sprite[575][1] = IMAGES.ﱠ︋︄︄;
    sprite[575][2] = IMAGES.ﱟ︋︄︄;
    sprite[577] = sprite[575];
    sprite[576] = sprite[575];
    sprite[1172] = [];
    sprite[1172][0] = IMAGES.ﱡ︋︄︄;
    sprite[1172][1] = IMAGES.ﱣ︋︄︄;
    sprite[1172][2] = IMAGES.ﱢ︋︄︄;
    sprite[1173] = sprite[1172];
    sprite[1174] = sprite[1172];
    sprite[578] = [];
    sprite[578][0] = IMAGES.ﱟ︎︄︄;
    sprite[578][1] = IMAGES.ﱡ︎︄︄;
    sprite[578][2] = IMAGES.ﱣ︎︄︄;
    sprite[580] = sprite[578];
    sprite[579] = sprite[578];
    sprite[1175] = [];
    sprite[1175][0] = IMAGES.ﱢ︎︄︄;
    sprite[1175][1] = IMAGES.ﱞ️︄︄;
    sprite[1175][2] = IMAGES.ﱠ️︄︄;
    sprite[1176] = sprite[1175];
    sprite[1177] = sprite[1175];
    sprite[581] = [];
    sprite[581][0] = IMAGES.ﱣ︌︄︄;
    sprite[581][1] = IMAGES.ﱢ︌︄︄;
    sprite[581][2] = IMAGES.ﱞ︍︄︄;
    sprite[583] = sprite[581];
    sprite[582] = sprite[581];
    sprite[1178] = [];
    sprite[1178][0] = IMAGES.ﱠ︍︄︄;
    sprite[1178][1] = IMAGES.ﱟ︍︄︄;
    sprite[1178][2] = IMAGES.ﱡ︍︄︄;
    sprite[1179] = sprite[1178];
    sprite[1180] = sprite[1178];
    sprite[1233] = [];
    sprite[1233][0] = IMAGES.ﱞ︃︅︄;
    sprite[1233][1] = IMAGES.ﱢ︂︅︄;
    sprite[1233][2] = IMAGES.ﱠ︃︅︄;
    sprite[1234] = sprite[1233];
    sprite[1232] = sprite[1233];
    sprite[1236] = [];
    sprite[1236][0] = IMAGES.ﱡ︃︅︄;
    sprite[1236][1] = IMAGES.ﱟ︃︅︄;
    sprite[1236][2] = IMAGES.ﱣ︃︅︄;
    sprite[1237] = sprite[1236];
    sprite[1235] = sprite[1236];
    sprite[1239] = [];
    sprite[1239][0] = IMAGES.ﱞ︄︅︄;
    sprite[1239][1] = IMAGES.ﱢ︃︅︄;
    sprite[1239][2] = IMAGES.ﱠ︄︅︄;
    sprite[1240] = sprite[1239];
    sprite[1238] = sprite[1239];
    sprite[1242] = [];
    sprite[1242][0] = IMAGES.ﱡ︄︅︄;
    sprite[1242][1] = IMAGES.ﱟ︄︅︄;
    sprite[1242][2] = IMAGES.ﱣ︄︅︄;
    sprite[1243] = sprite[1242];
    sprite[1241] = sprite[1242];
    sprite[1245] = [];
    sprite[1245][0] = IMAGES.ﱞ︅︅︄;
    sprite[1245][1] = IMAGES.ﱢ︄︅︄;
    sprite[1245][2] = IMAGES.ﱠ︅︅︄;
    sprite[1246] = sprite[1245];
    sprite[1244] = sprite[1245];
    sprite[1248] = [];
    sprite[1248][0] = IMAGES.ﱡ︅︅︄;
    sprite[1248][1] = IMAGES.ﱟ︅︅︄;
    sprite[1248][2] = IMAGES.ﱣ︅︅︄;
    sprite[1249] = sprite[1248];
    sprite[1247] = sprite[1248];
    sprite[1221] = [];
    sprite[1221][0] = IMAGES.ﱠ︂︄︄;
    sprite[1221][1] = IMAGES.ﱟ︂︄︄;
    sprite[1221][2] = IMAGES.ﱡ︂︄︄;
    sprite[1223] = sprite[1221];
    sprite[1222] = sprite[1221];
    sprite[1181] = [];
    sprite[1181][0] = IMAGES.ﱡ︂︀︃;
    sprite[1181][1] = IMAGES.ﱣ︂︀︃;
    sprite[1181][2] = IMAGES.ﱢ︂︀︃;
    sprite[1182] = sprite[1181];
    sprite[Rb.ﱠ︇︅︄] = sprite[1181];
    sprite[834] = Uc(1, [{
      f: rc,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#e8e8e8", "#bbbbbb", "#e0e1e0", "#c4c4c4"]
    }], 0.22, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[835] = sprite[834];
    sprite[844] = Uc(1, [{
      f: Df,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#352b10", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[845] = sprite[844];
    sprite[638] = Uc(1, [{
      f: Pc,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }, {
      f: Qc,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }, {
      f: Rc,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[637] = sprite[638];
    sprite[633] = Uc(1, [{
      f: Oc,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 1.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[794] = Uc(1, [{
      f: ve,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#44301b", "#57442a", "#523e26"]
    }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[793] = sprite[794];
    sprite[625] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#A89F67", "#9E8456"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[626] = sprite[625];
    sprite[305] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#493d36", "#332b28"]
    }], 0.7, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[278] = sprite[305];
    sprite[802] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c67933", "#b17238"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[803] = sprite[802];
    sprite[828] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e8e8e8", "#bbbbbb"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[829] = sprite[828];
    sprite[839] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#328a56", "#449573"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[840] = sprite[839];
    sprite[943] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c98e2f", "#a36b11"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[944] = sprite[943];
    sprite[945] = sprite[943];
    sprite[960] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#13a56d", "#098a58"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[961] = sprite[960];
    sprite[962] = sprite[960];
    sprite[975] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3a8214", "#4a9c1e"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[976] = sprite[975];
    sprite[977] = sprite[975];
    sprite[953] = Uc(1, [{
      f: yd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#b22419", "#99110e"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[954] = sprite[953];
    sprite[955] = sprite[953];
    sprite[303] = Uc(1, [{
      f: Xc,
      x: -2,
      y: -2,
      a: 1,
      r: -Math[D] / 7,
      c: ["#4d2d14", "#432516"]
    }, {
      f: Wc,
      x: -2,
      y: -2,
      a: 1,
      r: -Math[D] / 7,
      c: ["#efd435", "#ec8d35", "#e96132"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[296] = sprite[303];
    sprite[322] = Uc(1, [{
      f: Vc,
      x: -2,
      y: -1,
      a: 1,
      r: -Math[D] / 7,
      c: ["#4d2d14", "#432516", "#58645F", "#75827D", "#0c2c2e"]
    }, {
      f: Wc,
      x: -2,
      y: -1,
      a: 1,
      r: -Math[D] / 7,
      c: ["#efd435", "#ec8d35", "#e96132"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[321] = sprite[322];
    sprite[854] = Uc(1, [{
      f: jd,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"]
    }], 0.1, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[859] = Uc(1, [{
      f: ud,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[823] = Uc(1, [{
      f: id,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#252525", "#73583e", "#493425", "#7d6144", "#5e4530", "#563e2b"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[255] = Uc(1, [{
      f: ld,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[286] = Uc(1, [{
      f: rd,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[287] = Uc(1, [{
      f: sd,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[449] = Uc(1, [{
      f: td,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[307] = Uc(1, [{
      f: hd,
      x: -2,
      y: 5,
      a: 1,
      r: -Math[D] / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[306] = Uc(1, [{
      f: hd,
      x: -2,
      y: 5,
      a: 1,
      r: -Math[D] / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[252] = Uc(1, [{
      f: hd,
      x: -2,
      y: 5,
      a: 1,
      r: -Math[D] / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[290] = Uc(1, [{
      f: hd,
      x: -2,
      y: 5,
      a: 1,
      r: -Math[D] / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[452] = Uc(1, [{
      f: hd,
      x: -2,
      y: 5,
      a: 1,
      r: -Math[D] / 5,
      c: ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[1011] = [];
    sprite[1011][0] = IMAGES.ﱡ︊︍︂;
    sprite[1011][1] = IMAGES.ﱣ︊︍︂;
    sprite[1011][2] = IMAGES.ﱢ︊︍︂;
    sprite[1013] = sprite[1011];
    sprite[1012] = sprite[1011];
    sprite[309] = Uc(1, [{
      f: Ad,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#252B28", "#58645F", "#75827D"]
    }], 0.23, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[291] = Uc(1, [{
      f: Cd,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#282823", "#877c2d", "#c4bc51"]
    }], 0.43, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[292] = Uc(1, [{
      f: Dd,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#232828", "#3fc9c9", "#74ede6"]
    }], 0.33, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[310] = Uc(1, [{
      f: Xc,
      x: 0,
      y: -5,
      a: 1,
      r: Math[D] / 2.5,
      c: ["#4d2d14", "#432516"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[824] = sprite[823];
    sprite[248] = sprite[255];
    sprite[284] = sprite[286];
    sprite[285] = sprite[287];
    sprite[450] = sprite[449];
    sprite[308] = sprite[307];
    sprite[250] = sprite[306];
    sprite[289] = sprite[252];
    sprite[251] = sprite[290];
    sprite[454] = sprite[452];
    sprite[271] = Uc(1, [{
      f: Dc,
      x: 0,
      y: 0,
      a: 1,
      r: 0
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[304] = Uc(1, [{
      f: Gc,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]
    }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[256] = sprite[304];
    sprite[323] = Uc(1, [{
      f: Sd,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[257] = sprite[323];
    sprite[325] = Uc(1, [{
      f: Pd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[326] = sprite[325];
    sprite[486] = Uc(1, [{
      f: Sd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[487] = sprite[486];
    sprite[324] = Uc(1, [{
      f: Td,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
    }], 0.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[259] = sprite[324];
    sprite[311] = Uc(1, [{
      f: Od,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
    }], 0.45, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[312] = sprite[311];
    sprite[313] = Uc(1, [{
      f: pe,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[314] = sprite[313];
    sprite[356] = Uc(1, [{
      f: re,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[357] = sprite[356];
    sprite[358] = Uc(1, [{
      f: re,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[359] = sprite[358];
    sprite[355] = Uc(1, [{
      f: qe,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[354] = sprite[355];
    sprite[489] = Uc(1, [{
      f: qe,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5f6061", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[490] = sprite[489];
    sprite[329] = Uc(1, [{
      f: Ud,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[262] = sprite[329];
    sprite[366] = Uc(1, [{
      f: Vd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[365] = sprite[366];
    sprite[493] = Uc(1, [{
      f: Vd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[492] = sprite[493];
    sprite[369] = Uc(1, [{
      f: Wd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[368] = sprite[369];
    sprite[372] = Uc(1, [{
      f: Zd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[371] = sprite[372];
    sprite[331] = Uc(1, [{
      f: le,
      x: 0,
      y: 2,
      a: 1,
      r: 0,
      c: ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[332] = sprite[331];
    sprite[294] = Uc(1, [{
      f: Jc,
      x: 0,
      y: -3,
      a: 1,
      r: 0,
      c: ["#dd5d57", "#ffffff", "#5e5d5e", "#ffffff"]
    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[317] = Uc(1, [{
      f: Jc,
      x: 0,
      y: -3,
      a: 1,
      r: 0,
      c: ["#602920", "#844f49", "#5e5d5e", "#d3ccc7"]
    }], 1.4, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[319] = sprite[317];
    sprite[299] = Uc(1, [{
      f: Sc,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#cec0c4", "#ffffff", "#6d6768"]
    }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[507] = Uc(1, [{
      f: Sc,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#d4e9ec", "#37b1d7", "#506c71"]
    }], 0.9, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[509] = sprite[507];
    sprite[362] = Uc(1, [{
      f: me,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#ef96be", "#ffffff"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[1156] = Uc(1, [{
      f: me,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#55423e", "#ffffff"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[172] = Uc(1, [{
      f: Rd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#ffffff", "#e7e2e2", "#b35c46", "#a34d37"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[173] = Uc(1, [{
      f: Rd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#14151b", "#000000", "#b35c46", "#a34d37"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[618] = Uc(1, [{
      f: me,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#201851", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[387] = Uc(1, [{
      f: me,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#231f20", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[499] = Uc(1, [{
      f: me,
      x: -3,
      y: -3,
      a: 1,
      r: 0,
      c: ["#ffffff", "#b6222a"]
    }], 0.5, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[363] = Uc(1, [{
      f: ne,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[364] = sprite[363];
    sprite[375] = Uc(1, [{
      f: $d,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[374] = sprite[375];
    sprite[496] = Uc(1, [{
      f: oe,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[497] = sprite[496];
    sprite[874] = Uc(1, [{
      f: _c,
      x: 0,
      y: 5,
      a: 1,
      r: 0,
      c: ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[875] = sprite[874];
    sprite[876] = Uc(1, [{
      f: $c,
      x: 0,
      y: 5,
      a: 1,
      r: 0,
      c: ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[877] = sprite[876];
    sprite[297] = Uc(1, [{
      f: Tc,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#ffffff", "#cec0c4"]
    }], 0.35, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[298] = sprite[297];
    sprite[386] = [];
    sprite[386][0] = IMAGES.ﱣ︁︍︂;
    sprite[386][1] = IMAGES.ﱢ︁︍︂;
    sprite[386][2] = IMAGES.ﱞ︂︍︂;
    sprite[361] = sprite[386];
    sprite[969] = [];
    sprite[969][0] = IMAGES.ﱡ︂︍︂;
    sprite[969][1] = IMAGES.ﱣ︂︍︂;
    sprite[969][2] = IMAGES.ﱢ︂︍︂;
    sprite[971] = sprite[969];
    sprite[970] = sprite[969];
    sprite[972] = [];
    sprite[972][0] = IMAGES.ﱢ︎️︂;
    sprite[972][1] = IMAGES.ﱞ️️︂;
    sprite[972][2] = IMAGES.ﱠ️️︂;
    sprite[974] = sprite[972];
    sprite[973] = sprite[972];
    sprite[1152] = [];
    sprite[1152][0] = IMAGES.ﱟ️️︂;
    sprite[1152][1] = IMAGES.ﱟ️️︂;
    sprite[1152][2] = IMAGES.ﱟ️️︂;
    sprite[1153] = sprite[1152];
    sprite[420] = [];
    sprite[420][0] = IMAGES.ﱞ︀︀︃;
    sprite[420][1] = IMAGES.ﱠ︀︀︃;
    sprite[420][2] = IMAGES.ﱟ︀︀︃;
    sprite[421] = sprite[420];
    sprite[422] = sprite[420];
    sprite[1154] = [];
    sprite[1154][0] = IMAGES.ﱡ️️︂;
    sprite[1154][1] = IMAGES.ﱡ️️︂;
    sprite[1154][2] = IMAGES.ﱡ️️︂;
    sprite[1155] = sprite[1154];
    sprite[1230] = [];
    sprite[1230][0] = IMAGES.ﱡ︀︅︄;
    sprite[1230][1] = IMAGES.ﱟ︀︅︄;
    sprite[1230][2] = IMAGES.ﱣ︀︅︄;
    sprite[1229] = sprite[1230];
    sprite[1231] = sprite[1230];
    sprite[985] = [];
    sprite[985][0] = IMAGES.ﱞ︃︍︂;
    sprite[985][1] = IMAGES.ﱠ︃︍︂;
    sprite[985][2] = IMAGES.ﱟ︃︍︂;
    sprite[984] = sprite[985];
    sprite[986] = sprite[985];
    sprite[988] = [];
    sprite[988][0] = IMAGES.ﱡ︃︍︂;
    sprite[988][1] = IMAGES.ﱣ︃︍︂;
    sprite[988][2] = IMAGES.ﱢ︃︍︂;
    sprite[987] = sprite[988];
    sprite[989] = sprite[988];
    sprite[991] = [];
    sprite[991][0] = IMAGES.ﱞ︄︍︂;
    sprite[991][1] = IMAGES.ﱠ︄︍︂;
    sprite[991][2] = IMAGES.ﱟ︄︍︂;
    sprite[990] = sprite[991];
    sprite[992] = sprite[991];
    sprite[994] = [];
    sprite[994][0] = IMAGES.ﱡ︄︍︂;
    sprite[994][1] = IMAGES.ﱣ︄︍︂;
    sprite[994][2] = IMAGES.ﱢ︄︍︂;
    sprite[993] = sprite[994];
    sprite[995] = sprite[994];
    sprite[997] = [];
    sprite[997][0] = IMAGES.ﱞ︅︍︂;
    sprite[997][1] = IMAGES.ﱠ︅︍︂;
    sprite[997][2] = IMAGES.ﱟ︅︍︂;
    sprite[996] = sprite[997];
    sprite[998] = sprite[997];
    sprite[1000] = [];
    sprite[1000][0] = IMAGES.ﱠ︇︍︂;
    sprite[1000][1] = IMAGES.ﱟ︇︍︂;
    sprite[1000][2] = IMAGES.ﱡ︇︍︂;
    sprite[999] = sprite[1000];
    sprite[1001] = sprite[1000];
    sprite[1003] = [];
    sprite[1003][0] = IMAGES.ﱣ︇︍︂;
    sprite[1003][1] = IMAGES.ﱢ︇︍︂;
    sprite[1003][2] = IMAGES.ﱞ︈︍︂;
    sprite[1002] = sprite[1003];
    sprite[1004] = sprite[1003];
    sprite[1006] = [];
    sprite[1006][0] = IMAGES.ﱠ︈︍︂;
    sprite[1006][1] = IMAGES.ﱟ︈︍︂;
    sprite[1006][2] = IMAGES.ﱡ︈︍︂;
    sprite[1005] = sprite[1006];
    sprite[1007] = sprite[1006];
    sprite[1009] = [];
    sprite[1009][0] = IMAGES.ﱣ︈︍︂;
    sprite[1009][1] = IMAGES.ﱢ︈︍︂;
    sprite[1009][2] = IMAGES.ﱞ︉︍︂;
    sprite[1008] = sprite[1009];
    sprite[1010] = sprite[1009];
    sprite[1029] = [];
    sprite[1029][0] = IMAGES.ﱡ︉︆︂;
    sprite[1029][1] = IMAGES.ﱡ︉︆︂;
    sprite[1029][2] = IMAGES.ﱡ︉︆︂;
    sprite[Rb.ﱟ︇︅︄] = sprite[1029];
    sprite[1030] = sprite[1029];
    sprite[1031] = [];
    sprite[1031][0] = IMAGES.ﱢ︉︆︂;
    sprite[1031][1] = IMAGES.ﱢ︉︆︂;
    sprite[1031][2] = IMAGES.ﱢ︉︆︂;
    sprite[Rb.ﱡ︇︅︄] = sprite[1031];
    sprite[1032] = sprite[1031];
    sprite[1033] = [];
    sprite[1033][0] = IMAGES.ﱠ︊︆︂;
    sprite[1033][1] = IMAGES.ﱠ︊︆︂;
    sprite[1033][2] = IMAGES.ﱠ︊︆︂;
    sprite[Rb.ﱣ︇︅︄] = sprite[1033];
    sprite[1034] = sprite[1033];
    sprite[1150] = [];
    sprite[1150][0] = IMAGES.ﱞ︍︇︂;
    sprite[1150][1] = IMAGES.ﱞ︍︇︂;
    sprite[1150][2] = IMAGES.ﱞ︍︇︂;
    sprite[1151] = sprite[1150];
    sprite[1040] = [];
    sprite[1040][0] = IMAGES.ﱡ︃︎︂;
    sprite[1040][1] = IMAGES.ﱣ︃︎︂;
    sprite[1040][2] = IMAGES.ﱢ︃︎︂;
    sprite[1042] = sprite[1040];
    sprite[1041] = sprite[1040];
    sprite[738] = [];
    sprite[738][0] = IMAGES.ﱣ︄︎︂;
    sprite[738][1] = IMAGES.ﱢ︄︎︂;
    sprite[738][2] = IMAGES.ﱞ︅︎︂;
    sprite[740] = sprite[738];
    sprite[739] = sprite[738];
    sprite[741] = [];
    sprite[741][0] = IMAGES.ﱢ︅︎︂;
    sprite[741][1] = IMAGES.ﱞ︆︎︂;
    sprite[741][2] = IMAGES.ﱠ︆︎︂;
    sprite[743] = sprite[741];
    sprite[742] = sprite[741];
    sprite[1043] = [];
    sprite[1043][0] = IMAGES.ﱣ︂︎︂;
    sprite[1043][1] = IMAGES.ﱢ︂︎︂;
    sprite[1043][2] = IMAGES.ﱞ︃︎︂;
    sprite[1045] = sprite[1043];
    sprite[1044] = sprite[1043];
    sprite[1183] = [];
    sprite[1183][0] = IMAGES.ﱟ︅️︂;
    sprite[1183][1] = IMAGES.ﱡ︅️︂;
    sprite[1183][2] = IMAGES.ﱣ︅️︂;
    sprite[1185] = sprite[1183];
    sprite[1184] = sprite[1183];
    sprite[1104] = [];
    sprite[1104][0] = IMAGES.ﱢ︁️︂;
    sprite[1104][1] = IMAGES.ﱞ︂️︂;
    sprite[1104][2] = IMAGES.ﱠ︂️︂;
    sprite[1106] = sprite[1104];
    sprite[1105] = sprite[1104];
    sprite[1125] = [];
    sprite[1125][0] = IMAGES.INV_VULTURE_OUT;
    sprite[1125][1] = IMAGES.INV_VULTURE_IN;
    sprite[1125][2] = IMAGES.INV_VULTURE_CLICK;
    sprite[1127] = sprite[1125];
    sprite[1126] = sprite[1125];
    sprite[1131] = [];
    sprite[1131][0] = IMAGES.ﱞ︎️︂;
    sprite[1131][1] = IMAGES.ﱠ︎️︂;
    sprite[1131][2] = IMAGES.ﱟ︎️︂;
    sprite[1132] = sprite[1131];
    sprite[1133] = sprite[1131];
    sprite[1134] = [];
    sprite[1134][0] = IMAGES.ﱡ︍️︂;
    sprite[1134][1] = IMAGES.ﱣ︍️︂;
    sprite[1134][2] = IMAGES.ﱢ︍️︂;
    sprite[1135] = sprite[1134];
    sprite[1136] = sprite[1134];
    sprite[1111] = [];
    sprite[1111][0] = IMAGES.ﱢ︎︍︂;
    sprite[1111][1] = IMAGES.ﱞ️︍︂;
    sprite[1111][2] = IMAGES.ﱠ️︍︂;
    sprite[1110] = sprite[1111];
    sprite[1112] = sprite[1111];
    sprite[1074] = [];
    sprite[1074][0] = IMAGES.ﱠ︊︎︂;
    sprite[1074][1] = IMAGES.ﱟ︊︎︂;
    sprite[1074][2] = IMAGES.ﱡ︊︎︂;
    sprite[1076] = sprite[1074];
    sprite[1075] = sprite[1074];
    sprite[1218] = [];
    sprite[1218][0] = IMAGES.ﱟ︁︄︄;
    sprite[1218][1] = IMAGES.ﱡ︁︄︄;
    sprite[1218][2] = IMAGES.ﱣ︁︄︄;
    sprite[1220] = sprite[1218];
    sprite[1219] = sprite[1218];
    sprite[1089] = [];
    sprite[1089][0] = IMAGES.ﱣ︍︎︂;
    sprite[1089][1] = IMAGES.ﱢ︍︎︂;
    sprite[1089][2] = IMAGES.ﱞ︎︎︂;
    sprite[1091] = sprite[1089];
    sprite[1090] = sprite[1089];
    sprite[711] = Uc(1, [{
      f: sf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]
    }, {
      f: tf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e4c027"]
    }], 0.14, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[712] = sprite[711];
    sprite[402] = Uc(1, [{
      f: Xd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]
    }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[403] = sprite[402];
    sprite[901] = Uc(1, [{
      f: be,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99", "#ded4b4", "#d6ceab", "#c796c2", "#bc83b7", "#ffffff", "#87519c", "#703e94", "#3eb67f", "#218f65", "#efe7c5", "#d093c4"]
    }], 0.32, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[903] = sprite[901];
    sprite[902] = sprite[901];
    sprite[191] = Uc(1, [{
      f: ae,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]
    }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[900] = sprite[191];
    sprite[895] = Uc(1, [{
      f: de,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[894] = sprite[895];
    sprite[893] = sprite[895];
    sprite[395] = Uc(1, [{
      f: ee,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[396] = sprite[395];
    sprite[389] = Uc(1, [{
      f: fe,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[390] = sprite[389];
    sprite[392] = Uc(1, [{
      f: ge,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[393] = sprite[392];
    sprite[398] = Uc(1, [{
      f: he,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[399] = sprite[398];
    sprite[466] = Uc(1, [{
      f: ie,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[467] = sprite[466];
    sprite[868] = Uc(1, [{
      f: je,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"]
    }], 0.38, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[870] = sprite[868];
    sprite[869] = sprite[868];
    sprite[471] = Uc(1, [{
      f: te,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[472] = sprite[471];
    sprite[703] = Uc(1, [{
      f: Sf,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#939393", "#5f6061"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[705] = sprite[703];
    sprite[544] = Uc(1, [{
      f: kf,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb", "#42cc90"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[545] = sprite[544];
    sprite[474] = Uc(1, [{
      f: te,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[475] = sprite[474];
    sprite[477] = Uc(1, [{
      f: te,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[478] = sprite[477];
    sprite[480] = Uc(1, [{
      f: te,
      x: 2,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[481] = sprite[480];
    sprite[483] = [];
    sprite[483][0] = IMAGES.ﱟ︋︍︂;
    sprite[483][1] = IMAGES.ﱡ︋︍︂;
    sprite[483][2] = IMAGES.ﱣ︋︍︂;
    sprite[485] = sprite[483];
    sprite[484] = sprite[483];
    sprite[1189] = [];
    sprite[1189][0] = IMAGES.ﱟ︄︀︃;
    sprite[1189][1] = IMAGES.ﱡ︄︀︃;
    sprite[1189][2] = IMAGES.ﱣ︄︀︃;
    sprite[1191] = sprite[1189];
    sprite[1190] = sprite[1189];
    sprite[1193] = [];
    sprite[1193][0] = IMAGES.ﱡ︅︀︃;
    sprite[1193][1] = IMAGES.ﱣ︅︀︃;
    sprite[1193][2] = IMAGES.ﱢ︅︀︃;
    sprite[1195] = sprite[1193];
    sprite[1194] = sprite[1193];
    sprite[1197] = [];
    sprite[1197][0] = IMAGES.ﱣ︆︀︃;
    sprite[1197][1] = IMAGES.ﱢ︆︀︃;
    sprite[1197][2] = IMAGES.ﱞ︇︀︃;
    sprite[1199] = sprite[1197];
    sprite[1198] = sprite[1197];
    sprite[1201] = [];
    sprite[1201][0] = IMAGES.ﱢ︇︀︃;
    sprite[1201][1] = IMAGES.ﱞ︈︀︃;
    sprite[1201][2] = IMAGES.ﱠ︈︀︃;
    sprite[1203] = sprite[1201];
    sprite[1202] = sprite[1201];
    sprite[1205] = [];
    sprite[1205][0] = IMAGES.ﱞ︉︀︃;
    sprite[1205][1] = IMAGES.ﱠ︉︀︃;
    sprite[1205][2] = IMAGES.ﱟ︉︀︃;
    sprite[1207] = sprite[1205];
    sprite[1206] = sprite[1205];
    sprite[1209] = [];
    sprite[1209][0] = IMAGES.ﱠ︊︀︃;
    sprite[1209][1] = IMAGES.ﱟ︊︀︃;
    sprite[1209][2] = IMAGES.ﱡ︊︀︃;
    sprite[1211] = sprite[1209];
    sprite[1210] = sprite[1209];
    sprite[512] = Uc(1, [{
      f: Ze,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#141414", "#816511", "#c4a23a", "#3a3a3a"]
    }], 0.8, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[513] = sprite[512];
    sprite[526] = Uc(1, [{
      f: cf,
      x: -2,
      y: -2,
      a: 1,
      r: -Math[D] / 5,
      c: ["#141414", "#c4a23a", "#816511"]
    }], 0.08, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[527] = sprite[526];
    sprite[515] = Uc(1, [{
      f: hf,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#141414", "#178a99", "#0a6372", "#03282e"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
    sprite[517] = Uc(1, [{
      f: hf,
      x: -2,
      y: -2,
      a: 1,
      r: 0,
      c: ["#120202", "#991616", "#750a0a", "#120202"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.7);
    sprite[523] = Uc(1, [{
      f: df,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#347f93", "#54a4ba"]
    }, {
      f: gf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc", "#418ba5", "#59b8ce"]
    }, {
      f: ff,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#a9e4ed", "#86d4e0"]
    }, {
      f: ef,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[524] = sprite[523];
    sprite[547] = Uc(1, [{
      f: $e,
      x: 45,
      y: 70,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#4c3a15", "#634828", "#564021"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[549] = sprite[547];
    sprite[535] = Uc(1, [{
      f: We,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]
    }], 0.52, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[536] = sprite[535];
    sprite[773] = Uc(1, [{
      f: Ff,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#2a2938", "#242330", "#313041", "#1b1a25"]
    }], 0.12, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[774] = sprite[773];
    sprite[761] = Uc(1, [{
      f: Ef,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#2a2938", "#242330", "#313041"]
    }], 0.25, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[762] = sprite[761];
    sprite[770] = Uc(1, [{
      f: Gf,
      x: 0,
      y: 3,
      a: 1,
      r: 0,
      c: ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"]
    }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[771] = sprite[770];
    sprite[765] = Uc(1, [{
      f: Gf,
      x: 0,
      y: 3,
      a: 1,
      r: 0,
      c: ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"]
    }], 0.39, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[766] = sprite[765];
    sprite[750] = Uc(1, [{
      f: Uf,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[752] = sprite[750];
    sprite[754] = Uc(1, [{
      f: Uf,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[756] = sprite[754];
    sprite[758] = Uc(1, [{
      f: Uf,
      x: 0,
      y: 10,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[764] = sprite[758];
    sprite[904] = Uc(1, [{
      f: _d,
      x: -1,
      y: 0,
      a: 1,
      r: 0,
      c: ["#000000", "#b03431", "#94312d", "#bd3c33", "#de5445"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[906] = sprite[904];
    sprite[905] = sprite[904];
    sprite[726] = Uc(1, [{
      f: ye,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]
    }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[728] = sprite[726];
    sprite[557] = Uc(1, [{
      f: lf,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#284c4a", "#193533", "#c7efef", "#7fccca"]
    }], 0.75, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[558] = sprite[557];
    sprite[745] = Uc(1, [{
      f: of,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[246] = Uc(1, [{
      f: nf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#44bae0", "#9fdae9", "#7dd1ea", "#c6e8ef"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[747] = Uc(1, [{
      f: of,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[247] = Uc(1, [{
      f: nf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#e04444", "#e99f9f", "#eb7e7e", "#eec6c6"]
    }], 0.55, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[170] = Uc(1, [{
      f: jf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#59ba72", "#94d966", "#5aa628", "#0d1b1c", "#38874d"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[171] = Uc(1, [{
      f: jf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#C45727", "#de7d46", "#DB9358", "#0d1b1c", "#994617"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[169] = Uc(1, [{
      f: jf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#3a9dbd", "#59C0D8", "#48abcb", "#0d1b1c", "#196599"]
    }], 0.35, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[610] = Uc(1, [{
      f: Mf,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[612] = sprite[610];
    sprite[693] = Uc(1, [{
      f: Mf,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#b4ac45"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[694] = sprite[693];
    sprite[696] = Uc(1, [{
      f: Mf,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[698] = sprite[696];
    sprite[699] = Uc(1, [{
      f: Mf,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#a853c7"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[700] = sprite[699];
    sprite[414] = Uc(1, [{
      f: Re,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[415] = sprite[414];
    sprite[820] = Uc(1, [{
      f: Se,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#252525", "#73583e", "#493425", "#7d6144"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[821] = sprite[820];
    sprite[423] = Uc(1, [{
      f: Te,
      x: 0,
      y: -2,
      a: 1,
      r: 0,
      c: ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[424] = sprite[423];
    sprite[426] = Uc(1, [{
      f: Ue,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#dbce71", "#b29c32", "#c4bc51"]
    }], 0.35, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[427] = sprite[426];
    sprite[429] = Uc(1, [{
      f: Ve,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]
    }], 0.45, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[430] = sprite[429];
    sprite[432] = Uc(1, [{
      f: Xe,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#511f00", "#2f1300", "#ffffff", "#d4d4d4", "#5b2400", "#984e21"]
    }], 0.15, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[433] = sprite[432];
    sprite[435] = Uc(1, [{
      f: Ye,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#221e1b", "#ffffff", "#f6f0e7"]
    }], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[436] = sprite[435];
    sprite[412] = Uc(1, [{
      f: Ce,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#c27add", "#cd98e5"]
    }], 0.31, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[603] = Uc(1, [{
      f: wf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#D7C393", "#a48c6c"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[136] = Uc(1, [{
      f: xf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#93CBCE", "#E9F6F6"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[134] = Uc(1, [{
      f: wf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#866432", "#6b4f25"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[174] = Uc(1, [{
      f: Lf,
      x: 3,
      y: 2,
      a: 1,
      r: 0,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[175] = Uc(1, [{
      f: Kf,
      x: 3,
      y: 2,
      a: 1,
      r: 0,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#2f2211", "#785931", "#1678a2"]
    }], 0.22, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[778] = sprite[174];
    sprite[779] = sprite[175];
    sprite[783] = Uc(1, [{
      f: vf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]
    }], 0.1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[785] = sprite[783];
    sprite[607] = Uc(1, [{
      f: If,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
    }], 0.18, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[606] = Uc(1, [{
      f: Jf,
      x: 0,
      y: 0,
      a: 1,
      r: Math[D] / 5,
      c: ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]
    }], 0.18, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[709] = sprite[607];
    sprite[605] = sprite[606];
    sprite[628] = Uc(1, [{
      f: vd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#eedacc", "#dfbda7", "#dab094", "#63391a", "#523124"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[629] = sprite[628];
    sprite[194] = Uc(1, [{
      f: wd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1a1011", "#e29c2b", "#b76413", "#d6c418", "#e0bf32", "#b78a1a", "#aa1a17", "#cc9f2f", "#cc741d", "#b51524", "#bc1522", "#991922", "#a01ed5", "#d51e81"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[860] = Uc(1, [{
      f: xd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1a1011", "#693c2a", "#54311f", "#9f7a3d", "#492d1d", "#dbb175", "#54311f", "#9f7a3d", "#604720"]
    }], 0.6, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[137] = Uc(1, [{
      f: qf,
      x: 0,
      y: -2,
      a: 1,
      r: 0,
      c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
    }], 0.17, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[684] = sprite[137];
    sprite[656] = Uc(1, [{
      f: Md,
      x: -3,
      y: -5,
      a: 1,
      r: 0,
      c: ["#1d051e", "#63767c", "#424f51", "#6c8288", "#536468", "#202020", "#ffffff", "#806f60", "#514942", "#756557"]
    }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[658] = Uc(1, [{
      f: Nd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1d051e", "#42261A", "#281818"]
    }], 0.23, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[660] = sprite[658];
    sprite[643] = Uc(1, [{
      f: Jd,
      x: -3,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]
    }], 0.2, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[644] = sprite[643];
    sprite[668] = Uc(1, [{
      f: Nc,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#961B1B", "#702727", "#C43B3B"]
    }], 0.15, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[640] = Uc(1, [{
      f: Kd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#F0D200", "#B09A00", "#79359E", "#652D8E", "#1e2021"]
    }], 0.3, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.5);
    sprite[641] = sprite[640];
    sprite[679] = Uc(1, [{
      f: yf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#352E1E", "#4C3B19", "#574122"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[678] = sprite[679];
    sprite[864] = Uc(1, [{
      f: sc,
      x: -5,
      y: -5,
      a: 1,
      r: 0,
      c: ["#e2d63b", "#ee71a9", "#42b672"]
    }], 1, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[865] = sprite[864];
    sprite[599] = Uc(1, [{
      f: uf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#332715", "#4C3B19", "#574122"]
    }], 0.5, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[598] = sprite[599];
    sprite[836] = Uc(1, [{
      f: uc,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#352618", "#402b18", "#4c3b19", "#574122", "#52391e"]
    }], 0.3, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[837] = sprite[836];
    sprite[646] = Uc(1, [{
      f: zf,
      x: -1,
      y: 0,
      a: 1,
      r: -Math[D] / 5,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"]
    }], 0.4, ["#35b1b5", "#46c2c9", "#33b4e4"], 0.7);
    sprite[648] = sprite[646];
    sprite[620] = Uc(1, [{
      f: zf,
      x: -1,
      y: 0,
      a: 1,
      r: -Math[D] / 5,
      c: ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#3F2D18", "#2D2112"]
    }], 0.4, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[621] = sprite[620];
    sprite[623] = Uc(1, [{
      f: Bf,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
    }], 0.25, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
    sprite[190] = Uc(1, [{
      f: qd,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]
    }], 0.2, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[892] = sprite[190];
    sprite[653] = Uc(1, [{
      f: Ld,
      x: 0,
      y: 0,
      a: 1,
      r: 0,
      c: ["#1e2021", "#63391a", "#523124", "#d2c4b9", "#c1aca2", "#d8cbc2", "#c8b5ac", "#ac222a", "#e6636a"]
    }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[654] = sprite[653];
    sprite[139] = Uc(1, [{
      f: Mc,
      x: -2,
      y: -8,
      a: 1,
      r: 0,
      c: ["#dfd6bc", "#7b5139", "#bf8d50", "#834e49", "#602820", "#d7ccaa"]
    }], 0.25, ["#3ba578", "#4eb687", "#3da34d"], 0.5);
    sprite[724] = sprite[139];
    sprite[560] = [];
    sprite[560][0] = IMAGES.ﱠ︉︋︂;
    sprite[560][1] = IMAGES.ﱟ︉︋︂;
    sprite[560][2] = IMAGES.ﱡ︉︋︂;
    sprite[561] = sprite[560];
    sprite[562] = sprite[560];
    sprite[871] = [];
    sprite[871][0] = IMAGES.ﱞ︊︋︂;
    sprite[871][1] = IMAGES.ﱠ︊︋︂;
    sprite[871][2] = IMAGES.ﱟ︊︋︂;
    sprite[873] = sprite[871];
    sprite[872] = sprite[871];
    sprite[927] = sprite[926];
    sprite[928] = sprite[926];
    sprite[926] = [];
    sprite[926][0] = IMAGES.ﱠ︂︋︂;
    sprite[926][1] = IMAGES.ﱟ︂︋︂;
    sprite[926][2] = IMAGES.ﱡ︂︋︂;
    sprite[927] = sprite[926];
    sprite[928] = sprite[926];
    sprite[937] = [];
    sprite[937][0] = IMAGES.ﱟ︆︋︂;
    sprite[937][1] = IMAGES.ﱡ︆︋︂;
    sprite[937][2] = IMAGES.ﱣ︆︋︂;
    sprite[938] = sprite[937];
    sprite[939] = sprite[937];
    sprite[915] = [];
    sprite[915][0] = IMAGES.ﱠ︀︋︂;
    sprite[915][1] = IMAGES.ﱟ︀︋︂;
    sprite[915][2] = IMAGES.ﱡ︀︋︂;
    sprite[916] = sprite[915];
    sprite[917] = sprite[915];
    sprite[919] = [];
    sprite[919][0] = IMAGES.ﱟ︁︋︂;
    sprite[919][1] = IMAGES.ﱡ︁︋︂;
    sprite[919][2] = IMAGES.ﱣ︁︋︂;
    sprite[920] = sprite[919];
    sprite[921] = sprite[919];
    sprite[923] = [];
    sprite[923][0] = IMAGES.ﱟ︈︋︂;
    sprite[923][1] = IMAGES.ﱡ︈︋︂;
    sprite[923][2] = IMAGES.ﱣ︈︋︂;
    sprite[924] = sprite[923];
    sprite[925] = sprite[923];
    sprite[940] = [];
    sprite[940][0] = IMAGES.ﱠ︇︋︂;
    sprite[940][1] = IMAGES.ﱟ︇︋︂;
    sprite[940][2] = IMAGES.ﱡ︇︋︂;
    sprite[941] = sprite[940];
    sprite[942] = sprite[940];
    sprite[729] = [];
    sprite[729][0] = IMAGES.ﱢ︊︋︂;
    sprite[729][1] = IMAGES.ﱞ︋︋︂;
    sprite[729][2] = IMAGES.ﱠ︋︋︂;
    sprite[731] = sprite[729];
    sprite[730] = sprite[729];
    sprite[1158] = [];
    sprite[1158][0] = IMAGES.ﱣ︆︎︂;
    sprite[1158][1] = IMAGES.ﱢ︆︎︂;
    sprite[1158][2] = IMAGES.ﱞ︇︎︂;
    sprite[Rb.ﱢ︇︅︄] = sprite[1158];
    sprite[1159] = sprite[1158];
    sprite[732] = [];
    sprite[732][0] = IMAGES.ﱣ︋︋︂;
    sprite[732][1] = IMAGES.ﱢ︋︋︂;
    sprite[732][2] = IMAGES.ﱞ︌︋︂;
    sprite[734] = sprite[732];
    sprite[733] = sprite[732];
    sprite[735] = [];
    sprite[735][0] = IMAGES.ﱡ︌︋︂;
    sprite[735][1] = IMAGES.ﱣ︌︋︂;
    sprite[735][2] = IMAGES.ﱢ︌︋︂;
    sprite[737] = sprite[735];
    sprite[736] = sprite[735];
    sprite[932] = [];
    sprite[932][0] = IMAGES.ﱣ︂︋︂;
    sprite[932][1] = IMAGES.ﱢ︂︋︂;
    sprite[932][2] = IMAGES.ﱞ︃︋︂;
    sprite[933] = sprite[932];
    sprite[930] = [];
    sprite[930][0] = IMAGES.ﱠ︃︋︂;
    sprite[930][1] = IMAGES.ﱟ︃︋︂;
    sprite[930][2] = IMAGES.ﱡ︃︋︂;
    sprite[931] = sprite[930];
    sprite[611] = sprite[610];
    sprite[695] = sprite[693];
    sprite[697] = sprite[696];
    sprite[701] = sprite[699];
    sprite[342] = sprite[305];
    sprite[627] = sprite[625];
    sprite[639] = sprite[638];
    sprite[634] = sprite[633];
    sprite[267] = sprite[303];
    sprite[584] = sprite[246];
    sprite[746] = sprite[745];
    sprite[585] = sprite[247];
    sprite[748] = sprite[747];
    sprite[270] = sprite[322];
    sprite[857] = sprite[859];
    sprite[856] = sprite[854];
    sprite[825] = sprite[823];
    sprite[334] = sprite[255];
    sprite[590] = sprite[588];
    sprite[339] = sprite[286];
    sprite[340] = sprite[287];
    sprite[451] = sprite[449];
    sprite[268] = sprite[307];
    sprite[335] = sprite[306];
    sprite[266] = sprite[252];
    sprite[338] = sprite[290];
    sprite[453] = sprite[452];
    sprite[336] = sprite[309];
    sprite[264] = sprite[291];
    sprite[265] = sprite[292];
    sprite[337] = sprite[310];
    sprite[263] = sprite[271];
    sprite[352] = sprite[304];
    sprite[348] = sprite[323];
    sprite[350] = sprite[325];
    sprite[349] = sprite[324];
    sprite[488] = sprite[486];
    sprite[343] = sprite[311];
    sprite[344] = sprite[313];
    sprite[269] = sprite[294];
    sprite[345] = sprite[317];
    sprite[347] = sprite[299];
    sprite[508] = sprite[507];
    sprite[346] = sprite[297];
    sprite[514] = sprite[512];
    sprite[528] = sprite[526];
    sprite[525] = sprite[523];
    sprite[516] = sprite[515];
    sprite[518] = sprite[517];
    sprite[559] = sprite[557];
    sprite[548] = sprite[547];
    sprite[351] = sprite[329];
    sprite[353] = sprite[331];
    sprite[333] = Fb(function (c, d, e) {
      var f = document[p]("canvas");
      var i = f[T]("2d");
      f.width = c * 118;
      f.height = c * 129;
      i[g]();
      i[Ia](c * 90, c * 90);
      kc(i, c * -86.5, c * -86, c * 110, c * 110, c * 15);
      i[Qa]();
      jc(i, e[0], e[1], 4);
      i[g]();
      kc(i, c * 30, c * 115, c * 60, c * 5, c * 15);
      i[Qa]();
      jc(i, e[2], e[3], 4);
      i[g]();
      kc(i, c * 50, c * 117, c * 20, c * 10, c * 15);
      i[Qa]();
      jc(i, e[2]);
      return f;
    }(0.8, 0, ["#4c3b19", "#c4a23a", "#c4a23a", "#c4a23a"]));
    sprite[360] = Uc(0.5, [{
      f: ke,
      x: 0,
      y: 2,
      a: 1,
      r: 0,
      c: ["#ffffff"]
    }], 0.16, ["#c4a23a", "#d0ad41", "#b89733"], 0.9);
    sprite[376] = sprite[355];
    sprite[377] = sprite[356];
    sprite[378] = sprite[358];
    sprite[491] = sprite[489];
    sprite[379] = sprite[386];
    sprite[768] = sprite[172];
    sprite[769] = sprite[173];
    sprite[380] = sprite[362];
    sprite[619] = sprite[618];
    sprite[388] = sprite[387];
    sprite[1157] = sprite[1156];
    sprite[500] = sprite[499];
    sprite[381] = sprite[363];
    sprite[498] = sprite[496];
    sprite[382] = sprite[366];
    sprite[383] = sprite[369];
    sprite[384] = sprite[372];
    sprite[495] = sprite[493];
    sprite[385] = sprite[375];
    sprite[397] = sprite[395];
    sprite[391] = sprite[389];
    sprite[394] = sprite[392];
    sprite[400] = sprite[398];
    sprite[468] = sprite[466];
    sprite[869] = sprite[868];
    sprite[546] = sprite[544];
    sprite[704] = sprite[703];
    sprite[473] = sprite[471];
    sprite[476] = sprite[474];
    sprite[479] = sprite[477];
    sprite[482] = sprite[480];
    sprite[404] = sprite[402];
    sprite[713] = sprite[711];
    sprite[416] = sprite[414];
    sprite[425] = sprite[423];
    sprite[428] = sprite[426];
    sprite[431] = sprite[429];
    sprite[537] = sprite[535];
    sprite[727] = sprite[726];
    sprite[434] = sprite[432];
    sprite[437] = sprite[435];
    sprite[440] = sprite[412];
    sprite[600] = sprite[599];
    sprite[838] = sprite[836];
    sprite[677] = sprite[679];
    sprite[604] = sprite[603];
    sprite[683] = sprite[137];
    sprite[680] = sprite[136];
    sprite[676] = sprite[134];
    sprite[609] = sprite[607];
    sprite[608] = sprite[606];
    sprite[622] = sprite[620];
    sprite[624] = sprite[623];
    sprite[630] = sprite[628];
    sprite[862] = sprite[194];
    sprite[861] = sprite[860];
    sprite[642] = sprite[640];
    sprite[645] = sprite[643];
    sprite[647] = sprite[646];
    sprite[655] = sprite[653];
    sprite[892] = sprite[190];
    sprite[657] = sprite[656];
    sprite[659] = sprite[658];
    sprite[669] = sprite[668];
    sprite[725] = sprite[139];
    sprite[751] = sprite[750];
    sprite[753] = sprite[170];
    sprite[755] = sprite[754];
    sprite[757] = sprite[171];
    sprite[759] = sprite[758];
    sprite[760] = sprite[169];
    sprite[763] = sprite[761];
    sprite[767] = sprite[765];
    sprite[772] = sprite[770];
    sprite[775] = sprite[773];
    sprite[781] = sprite[175];
    sprite[780] = sprite[174];
    sprite[784] = sprite[783];
    sprite[795] = sprite[794];
    sprite[804] = sprite[802];
    sprite[830] = sprite[828];
    sprite[841] = sprite[839];
    sprite[822] = sprite[820];
  })();
  sprite[534] = [];
  sprite[534][0] = [];
  sprite[534][1] = [];
  for (var e = 0; e < 5; e++) {
    sprite[534][0][Na](Fb(Id(1, 4 + e, "#59B8CE")));
    sprite[534][1][Na](Fb(Id(1, 4 + e, "#90DDD9")));
  }
  sprite[464] = [];
  sprite[464][0] = [];
  sprite[464][1] = [];
  for (e = 0; e < 5; e++) {
    sprite[464][0][Na](Fb(Id(1, 4 + e, "#fff")));
    sprite[464][1][Na](Fb(Id(1, 4 + e, "#fff")));
  }
  sprite[465] = [];
  sprite[465][0] = [];
  sprite[465][1] = [];
  for (e = 0; e < 5; e++) {
    sprite[465][0][Na](Fb(Id(1, 6 + e, "#DDCD8A")));
    sprite[465][1][Na](Fb(Id(1, 6 + e, "#155E57")));
  }
  sprite[936] = [];
  sprite[936][0] = [];
  sprite[936][1] = [];
  for (e = 0; e < 5; e++) {
    sprite[936][0][Na](Fb(Id(1, 4 + e, "#353326")));
    sprite[936][1][Na](Fb(Id(1, 4 + e, "#1D2526")));
  }
  sprite[195] = [];
  sprite[195][0] = Fb(tc(1.5, 0, ["#ee71a9"]));
  sprite[195][1] = Fb(tc(1.5, 0, ["#ee71a9"]));
  sprite[866] = [sprite[195]];
  sprite[866][1] = [];
  sprite[866][2] = [];
  sprite[866][3] = [];
  sprite[866][4] = [];
  sprite[866][1][0] = Fb(tc(1.5, 0, ["#e2d63b"]));
  sprite[866][1][1] = Fb(tc(1.5, 0, ["#e2d63b"]));
  sprite[866][2][0] = Fb(tc(1.5, 0, ["#309cbd"]));
  sprite[866][2][1] = Fb(tc(1.5, 0, ["#309cbd"]));
  sprite[866][3][0] = Fb(tc(1.5, 0, ["#cd232d"]));
  sprite[866][3][1] = Fb(tc(1.5, 0, ["#cd232d"]));
  sprite[866][4][0] = Fb(tc(1.5, 0, ["#42b672"]));
  sprite[866][4][1] = Fb(tc(1.5, 0, ["#42b672"]));
  if (Utils.ﱢ︅︋︁("cti", c.location.href)) {
    document[fa]("version").innerHTML += "[CTI]";
  } else {
    Fb = function (c) {
      c.loaded = 1;
      return c;
    };
  }
  sprite[791] = Fb(function () {
    var c = document[p]("canvas");
    var e = c[T]("2d");
    c.width = 460;
    c.height = 220;
    e[d] = "#3a2a0d";
    e[pa](0, 0, c.width, c.height);
    e[m] = 4;
    e[Y]();
    e[S] = "#513810";
    for (var f = 20; f < 220; f += 20) {
      e[K](0, f);
      e[L](460, f);
      e[X]();
      e[M]();
    }
    return c;
  }());
  sprite[102] = [];
  sprite[102][0] = [];
  sprite[102][1] = [];
  sprite[102][0][Na](Fb(Ad(1.1, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
  sprite[102][0][Na](Fb(Ad(0.9, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
  sprite[102][0][Na](Fb(Ad(0.6, 0, ["#0a2d18", "#c3d1cb", "#e4efe8"])));
  sprite[102][1][Na](Fb(Ad(1.1, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
  sprite[102][1][Na](Fb(Ad(0.9, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
  sprite[102][1][Na](Fb(Ad(0.6, 0, ["#0a2728", "#3c8e88", "#40a39b"])));
  sprite[105] = [];
  sprite[105][0] = [];
  sprite[105][1] = [];
  sprite[105][0][Na](Fb(Cd(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
  sprite[105][0][Na](Fb(Cd(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
  sprite[105][0][Na](Fb(Cd(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
  sprite[105][1][Na](Fb(Cd(1.5, 0, ["#030d14", "#1b4444", "#16605a"])));
  sprite[105][1][Na](Fb(Cd(1.3, 0, ["#030d14", "#1b4444", "#16605a"])));
  sprite[105][1][Na](Fb(Cd(1.1, 0, ["#030d14", "#1b4444", "#16605a"])));
  sprite[106] = [];
  sprite[106][0] = [];
  sprite[106][1] = [];
  sprite[106][0][Na](Fb(Dd(1.1, 0, ["#232828", "#3fc9c9", "#74ede6"])));
  sprite[106][0][Na](Fb(Dd(0.9, 0, ["#232828", "#3fc9c9", "#74ede6"])));
  sprite[106][0][Na](Fb(Dd(0.7, 0, ["#232828", "#3fc9c9", "#74ede6"])));
  sprite[106][1][Na](Fb(Dd(1.1, 0, ["#030d14", "#2b9390", "#57bcb5"])));
  sprite[106][1][Na](Fb(Dd(0.9, 0, ["#030d14", "#2b9390", "#57bcb5"])));
  sprite[106][1][Na](Fb(Dd(0.7, 0, ["#030d14", "#2b9390", "#57bcb5"])));
  sprite[233] = [];
  sprite[233][0] = IMAGES.ﱟ︋️︂;
  sprite[233][1] = IMAGES.ﱡ︋️︂;
  sprite[280] = [];
  sprite[280][0] = Fb(cd(0.6, ["#0d1b1c"]));
  sprite[280][1] = Fb(cd(0.6, ["#030d14"]));
  sprite[787] = [];
  sprite[787][0] = Fb(bd(0.6, ["#2a2938", "#242330"]));
  sprite[787][1] = Fb(bd(0.6, ["#1b1e30", "#161921"]));
  sprite[814] = [];
  sprite[814][0] = Fb(yc(0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#7d7252", "#575043"]));
  sprite[814][1] = Fb(yc(0.6, 0, ["#030d14", "#11635e", "#02373e", "#0b524d", "#07423f"]));
  sprite[815] = [];
  sprite[815][0] = Fb(xc(0.6, 0, ["#0d1b1c", "#759e6e", "#55604b", "#f9ccd4", "#891a1e", "#da232e", "#a52026", "#a02d28", "#721819", "#FFFFFF"]));
  sprite[815][1] = Fb(xc(0.6, 0, ["#030d14", "#11635e", "#02373e", "#167771", "#0c5752", "#401d49", "#2e1336", "#261336", "#23163c", "#FFFFFF"]));
  sprite[816] = [];
  sprite[816][0] = Fb(ad(0.4, ["#0d1b1c", "#759e6e", "#55604b"]));
  sprite[816][1] = Fb(ad(0.4, ["#030d14", "#11635e", "#02373e"]));
  sprite[817] = Fb(zc(0.6, ["#BB0000"]));
  sprite[818] = Fb(zc(0.6, ["#DBE71C"]));
  sprite[819] = Fb(zc(0.6, ["#00BB00"]));
  sprite[103] = [];
  sprite[103][0] = [];
  sprite[103][1] = [];
  sprite[103][0][Na](dd(1.1, ["#242503", "#8e7c0c", "#6d5903", "#9e8320", "#f0f4f0", "#FFFFFF"], false, 0));
  sprite[103][0][Na](dd(1.1, ["#242503", "#8e7c0c", "#6d5903", "#9e8320", "#f0f4f0", "#FFFFFF"], true, 0));
  sprite[103][0][Na](dd(0.9, ["#242503", "#898e0c", "#757303", "#9e9b20", "#f0f4f0", "#FFFFFF"], false, 0));
  sprite[103][0][Na](dd(0.9, ["#242503", "#963400", "#7c2200", "#a83204", "#f0f4f0", "#FFFFFF"], true, 0));
  sprite[103][0][Na](dd(0.7, ["#242503", "#6d5a09", "#77591a", "#7b5a1f", "#f0f4f0", "#FFFFFF"], false, 0));
  sprite[103][0][Na](dd(0.7, ["#242503", "#703700", "#813009", "#813009", "#f0f4f0", "#FFFFFF"], true, 0));
  sprite[103][1][Na](dd(1.1, ["#030d14", "#12493d", "#0e3831", "#155247", "#f0f4f0", "#16695f"], false, 0));
  sprite[103][1][Na](dd(1.1, ["#030d14", "#12493d", "#0e3831", "#155247", "#16695f"], true, 0));
  sprite[103][1][Na](dd(0.9, ["#030d14", "#0b3629", "#144437", "#174235", "#16695f"], false, 0));
  sprite[103][1][Na](dd(0.9, ["#030d14", "#0d2522", "#0c2821", "#0d2a28", "#16695f"], true, 0));
  sprite[103][1][Na](dd(0.7, ["#030d14", "#082b1f", "#073328", "#073327", "#16695f"], false, 0));
  sprite[103][1][Na](dd(0.7, ["#030d14", "#0c2823", "#0b2b23", "#0c2d24", "#16695f"], true, 0));
  sprite[301] = [];
  sprite[301][0] = [];
  sprite[301][1] = [];
  sprite[301][0][Na](Fb(gd(fd(1.1, ["#242503", "#4d2d14", "#432516", "#756608", "#5b4a02", "#8b731b"], false), sprite[103][0][0])));
  sprite[301][0][Na](Fb(gd(fd(1.1, ["#242503", "#4d2d14", "#432516", "#756608", "#5b4a02", "#8b731b"], true), sprite[103][0][1])));
  sprite[301][1][Na](Fb(gd(fd(1.1, ["#030d14", "#031619", "#041c21", "#0e3b31", "#0b2e28", "#10443a"], false), sprite[103][1][0])));
  sprite[301][1][Na](Fb(gd(fd(1.1, ["#030d14", "#031619", "#041c21", "#0e3b31", "#0b2e28", "#10443a"], true), sprite[103][1][1])));
  sprite[301][0][Na](Fb(gd(fd(0.9, ["#242503", "#4d2d14", "#432516", "#6d6c09", "#686609", "#777310"], false), sprite[103][0][2])));
  sprite[301][0][Na](Fb(gd(fd(0.9, ["#242503", "#4d2d14", "#432516", "#6d6c09", "#686609", "#777310"], true), sprite[103][0][2])));
  sprite[301][1][Na](Fb(gd(fd(0.9, ["#030d14", "#031619", "#041c21", "#0d2522", "#0c2821", "#0d2a28"], false), sprite[103][1][2])));
  sprite[301][1][Na](Fb(gd(fd(0.9, ["#030d14", "#031619", "#041c21", "#0c2823", "#0b2b23", "#0c2d24"], true), sprite[103][1][3])));
  sprite[103][0][5] = Fb(sprite[103][0][5]);
  sprite[103][0][4] = Fb(sprite[103][0][4]);
  sprite[103][0][3] = Fb(sprite[103][0][3]);
  sprite[103][0][2] = Fb(sprite[103][0][2]);
  sprite[103][0][1] = Fb(sprite[103][0][1]);
  sprite[103][0][0] = Fb(sprite[103][0][0]);
  sprite[103][1][5] = Fb(sprite[103][1][5]);
  sprite[103][1][4] = Fb(sprite[103][1][4]);
  sprite[103][1][3] = Fb(sprite[103][1][3]);
  sprite[103][1][2] = Fb(sprite[103][1][2]);
  sprite[103][1][1] = Fb(sprite[103][1][1]);
  sprite[103][1][0] = Fb(sprite[103][1][0]);
  sprite[8] = [];
  sprite[8][0] = Fb(oc(4, hd(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#4d2d14", "#432516"])));
  sprite[8][1] = Fb(oc(4, hd(0.75, true, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#0d2e33", "#0b2326"])));
  sprite[1] = [];
  sprite[1][0] = Fb(oc(4, hd(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
  sprite[1][1] = Fb(oc(4, hd(0.75, true, ["#030d14", "#000000", "#030d14", "#0d2e33", "#0b2326", "#485e66", "#1f343f"])));
  sprite[3] = [];
  sprite[3][0] = Fb(oc(4, hd(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
  sprite[3][1] = Fb(oc(4, hd(0.75, true, ["#030d14", "#000000", "#030d14", "#263947", "#263947", "#43aa82", "#29997c"])));
  sprite[4] = [];
  sprite[4][0] = Fb(oc(4, hd(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
  sprite[4][1] = Fb(oc(4, hd(0.75, true, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
  sprite[31] = [];
  sprite[31][0] = Fb(oc(4, hd(0.75, true, ["#0d1b1c", "#000000", "#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
  sprite[31][1] = Fb(oc(4, hd(0.75, true, ["#030d14", "#000000", "#030d14", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
  sprite[9] = [];
  sprite[9][0] = Fb(oc(3, jd(0.17, true, ["#0d1b1c", "#4a3a22", "#362818", "#c7c7c7", "#909090", "#eceaea", "#bbbbbb", "#d6d1d1"])));
  sprite[9][1] = Fb(oc(3, jd(0.17, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#59737d", "#364f59", "#618395", "#4d768c", "#54859f"])));
  sprite[193] = [];
  sprite[193][0] = Fb(oc(3, ud(0.32, true, ["#0d1b1c", "#ffffff", "#5f6061", "#eb2933", "#57b74e", "#42a54d", "#ac222a", "#e6636a"])));
  sprite[193][1] = Fb(oc(3, ud(0.42, true, ["#0d1b1c", "#485e66", "#1f343f", "#0d2e33", "#0b2326"])));
  sprite[57] = [];
  sprite[57][0] = Fb(oc(3, id(0.4, true, ["#0d1b1c", "#73583e", "#493425", "#7d6144", "#5e4530", "#473221", "#745840"])));
  sprite[57][1] = Fb(oc(3, id(0.4, true, ["#0d1b1c", "#0b3d3a", "#092b2a", "#144642", "#082927", "#092b29"])));
  sprite[0] = [];
  sprite[0][0] = Fb(oc(3, ld(0.4, true, ["#0d1b1c", "#939393", "#5f6061", "#b1afaf", "#493d36", "#332b28"])));
  sprite[0][1] = Fb(oc(3, ld(0.4, true, ["#0d1b1c", "#485e66", "#1f343f", "#5d757e", "#0d2e33", "#0b2326"])));
  sprite[5] = [];
  sprite[5][0] = Fb(oc(3, rd(0.4, true, ["#0d1b1c", "#c4bc51", "#b29c32", "#c4bc51", "#493e26", "#382e19"])));
  sprite[5][1] = Fb(oc(3, rd(0.4, true, ["#0d1b1c", "#43aa82", "#29997c", "#54bf96", "#263947", "#182935"])));
  sprite[6] = [];
  sprite[6][0] = Fb(oc(3, sd(0.4, true, ["#0d1b1c", "#6ad9e8", "#29aaa1", "#95e9f5", "#022320", "#011e19", "#FFFFFF"])));
  sprite[6][1] = Fb(oc(3, sd(0.4, true, ["#0d1b1c", "#73dde5", "#3dc4c0", "#93eaf1", "#111316", "#0a0b0c"])));
  sprite[30] = [];
  sprite[30][0] = Fb(oc(3, td(0.4, true, ["#0d1b1c", "#b864d6", "#8c29aa", "#cc81e7", "#262114", "#211108", "#FFFFFF"])));
  sprite[30][1] = Fb(oc(3, td(0.4, true, ["#0d1b1c", "#8359d3", "#764eb5", "#966de6", "#111316", "#0a0b0c"])));
  sprite[279] = [];
  sprite[279][0] = [];
  sprite[279][1] = [];
  sprite[279][0][Na](Fb(Hd(0.9, 0, ["#0d4f35"], 0)));
  sprite[279][0][Na](Fb(Hd(0.9, 0, ["#0d4f35"], 1)));
  sprite[279][0][Na](Fb(Hd(0.9, 0, ["#0d4f35"], 2)));
  sprite[279][1][Na](Fb(Hd(0.9, 0, ["#053339"], 0)));
  sprite[279][1][Na](Fb(Hd(0.9, 0, ["#053339"], 1)));
  sprite[279][1][Na](Fb(Hd(0.9, 0, ["#053339"], 2)));
  sprite[279][0][Na](Fb(Gd(0.8, ["#241301", "#ba6b0e", "#6d3f04"])));
  sprite[279][0][Na](Fb(Gd(0.8, ["#292002", "#ba930e", "#6d5704"])));
  sprite[279][1][Na](Fb(Gd(0.9, ["#052919", "#0a4738", "#06321f"])));
  sprite[279][1][Na](Fb(Gd(0.8, ["#052918", "#08491c", "#063417"])));
  sprite[177] = [];
  sprite[177][0] = Fb(oc(Math[D] / 2, ve(0.25, true, ["#0d1b1c", "#44301b", "#57442a", "#523e26"])));
  sprite[177][1] = Fb(oc(Math[D] / 2, ve(0.25, true, ["#030d14", "#082b22", "#0a2f2b", "#072824"])));
  sprite[797] = [];
  sprite[797][Na](Fb(we(0.25, ["#44301b", "#57442a", "#523e26"], 0)));
  sprite[797][Na](Fb(we(0.25, ["#4f371e", "#624d30", "#5e472c", "#eda80d"], 1)));
  sprite[797][Na](Fb(we(0.25, ["#382715", "#4e3c25", "#473620", "#d7990c"], 2)));
  sprite[796] = [];
  sprite[796][0] = [];
  sprite[796][1] = [];
  sprite[796][0][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25"], 1))));
  sprite[796][1][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25"], 1))));
  sprite[796][0][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#4f9246"], 2))));
  sprite[796][1][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#4f9246"], 2))));
  sprite[796][0][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#ffffff"], 3))));
  sprite[796][1][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#ffffff"], 3))));
  sprite[796][0][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26", "#9b2b25", "#362513"], 4))));
  sprite[796][1][Na](Fb(oc(Math[D] / 2, xe(0.25, 0, ["#030d14", "#082b22", "#0a2f2b", "#072824", "#9b2b25", "#664d2e"], 4))));
  sprite[104] = [];
  sprite[104][0] = [Fb(Ed(1.2, true, ["#352b10", "#80500b", "#7c4908"]))];
  sprite[104][1] = [Fb(Ed(1.2, true, ["#030d14", "#0a3429", "#0a2f2b"]))];
  sprite[617] = [];
  sprite[617][0] = Fb(Ed(0.8, true, ["#0e3022", "#68622D", "#665329"]));
  sprite[617][1] = Fb(Ed(0.8, true, ["#030d14", "#0F3A24", "#083326"]));
  sprite[183] = [];
  sprite[183][0] = Fb(Cf(0.5, true, ["#1b170c", "#c67933", "#a6692f", "#bd7533", "#86683e", "#6e502d"]));
  sprite[183][1] = Fb(Cf(0.5, true, ["#030d14", "#0a3429", "#0a2f2b", "#082f25", "#082925", "#0a3630"]));
  sprite[186] = [];
  sprite[186][0] = Fb(rc(0.5, true, ["#1b170c", "#e8e8e8", "#d2cfcf", "#e0e1e0", "#c4c4c4"]));
  sprite[186][1] = Fb(rc(0.5, true, ["#030d14", "#2b5254", "#264a46", "#396260", "#244743"]));
  sprite[188] = [];
  sprite[188][0] = Fb(Df(0.5, true, ["#1b170c", "#349970", "#245c45", "#348361", "#e8e8e8", "#bbbbbb"]));
  sprite[188][1] = Fb(Df(0.5, true, ["#030d14", "#0d5551", "#074440", "#0f5c58", "#4e8784", "#3f7572"]));
  sprite[281] = [];
  sprite[281][0] = Fb(Ed(0.8, true, ["#1b170c", "#0b8052", "#077b49"]));
  sprite[281][1] = Fb(Ed(0.8, true, ["#030d14", "#084442", "#0a4049"]));
  sprite[807] = [];
  sprite[807][0] = Fb(Cf(0.5, true, ["#1b170c", "#68622D", "#665329", "#5e5823", "#86683e", "#6e502d"]));
  sprite[807][1] = Fb(Cf(0.5, true, ["#030d14", "#0F3A24", "#083326", "#0c301e", "#062a1f", "#083b2b"]));
  sprite[833] = [];
  sprite[833][0] = Fb(rc(0.5, true, ["#1b170c", "#adbe9e", "#7e9178", "#84aa84", "#527556"]));
  sprite[833][1] = Fb(rc(0.5, true, ["#030d14", "#164a44", "#124244", "#13373b", "#133e3e"]));
  sprite[863] = [];
  sprite[863][0] = Fb(Df(0.5, true, ["#1b170c", "#7a9160", "#4a5e3c", "#637e5a", "#c5cfc0", "#8a9685"]));
  sprite[863][1] = Fb(Df(0.5, true, ["#030d14", "#3e5d5b", "#2f4442", "#354e4c", "#637d7c", "#556b6a"]));
  sprite[848] = [];
  sprite[848][0] = Fb(Tf(0.45, true, ["#0e3022", "#ac222a", "#98171e", "#22a84f", "#1f924a"]));
  sprite[848][1] = Fb(Tf(0.45, true, ["#0e3022", "#19386e", "#0b2752", "#124252", "#0d3441"]));
  sprite[853] = Fb(Tf(0.65, true, ["rgba(14, 48, 34, 0)", "#BB0000", "#BB0000", "#BB0000", "#BB0000"]));
  sprite[288] = [];
  sprite[288][0] = Fb(Fd(1.4, 0, ["#3d2a6e", "#8255b5"]));
  sprite[288][1] = Fb(Fd(1.4, 0, ["#26124f", "#524082"]));
  sprite[282] = [];
  sprite[282][0] = Fb(Wc(0.9, 0, ["#efd435", "#ec8d35", "#e96132"]));
  sprite[282][1] = Fb(Wc(0.9, 0, ["#efdb7b", "#efe854", "#e8ef62"]));
  sprite[112] = [];
  sprite[112][0] = Fb(Vc(0.9, 0, ["#4d2d14", "#432516"]));
  sprite[112][1] = Fb(Vc(0.9, 0, ["#282404", "#0a0a01"]));
  sprite[107] = [];
  sprite[107][0] = Fb(Xc(0.9, 0, ["#4d2d14", "#432516"]));
  sprite[107][1] = Fb(Xc(0.9, 0, ["#282404", "#0a0a01"]));
  sprite[283] = [];
  sprite[283][0] = Fb(Zc(0.9, 0, ["#efd435"]));
  sprite[283][1] = Fb(Zc(0.9, 0, ["#fffabb"]));
  sprite[276] = [];
  sprite[276][0] = Fb(Yc(0.9, 0, ["#efd435"]));
  sprite[276][1] = Fb(Yc(0.9, 0, ["#fffabb"]));
  sprite[810] = [];
  sprite[810][0] = Fb(Zc(0.9, 0, ["#efd435"]));
  sprite[810][1] = Fb(Zc(0.9, 0, ["rgba(255, 84, 0, 1)"]));
  sprite[811] = [];
  sprite[811][0] = Fb(Yc(0.9, 0, ["#efd435"]));
  sprite[811][1] = Fb(Yc(0.9, 0, ["#ff5704"]));
  sprite[318] = Fb(Ec(1, "#ffffff"));
  sprite[295] = Fb(Ec(1.5, "#ffffff"));
  sprite[300] = Fb(zd(1, "Your score:", 15, "#FFF"));
  sprite[649] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 243;
    e.height = c * 172;
    lc(f, c * 119.5, c * 140.125, c * 19);
    jc(f, undefined, d[1], c * 5);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 36.5, c * 20.125);
    f[G](c * 119.5, c * 20.625, c * 119.5, c * 20.625, c * 202.5, c * 21.125);
    f[G](c * 214.5, c * 22.125, c * 216.5, c * 26.125, c * 217.5, c * 35.125);
    f[G](c * 221, c * 76.125, c * 221, c * 76.125, c * 224.5, c * 117.125);
    f[G](c * 225.5, c * 127.125, c * 221.5, c * 131.125, c * 210.5, c * 132.125);
    f[G](c * 117.5, c * 132.125, c * 117.5, c * 132.125, c * 24.5, c * 132.125);
    f[G](c * 14.5, c * 131.125, c * 13.5, c * 126.125, c * 16.5, c * 111.125);
    f[G](c * 19.5, c * 73.125, c * 19.5, c * 73.125, c * 22.5, c * 35.125);
    f[G](c * 23.5, c * 23.125, c * 29.5, c * 21.125, c * 36.5, c * 20.125);
    f[X]();
    jc(f, d[0], d[1], c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 15.5, c * 138.625);
    f[G](c * 120, c * 138.625, c * 120, c * 138.625, c * 224.5, c * 138.625);
    f[X]();
    jc(f, undefined, d[2], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 13.5, c * 131.625);
    f[G](c * 119.5, c * 131.625, c * 119.5, c * 131.625, c * 225.5, c * 131.625);
    f[X]();
    jc(f, undefined, d[3], c * 10);
    lc(f, c * 119.5, c * 140.125, c * 14.866068747318506);
    jc(f, d[4], d[5], c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 106.5, c * 146.625);
    f[G](c * 116.5, c * 137.625, c * 118.5, c * 136.625, c * 123.5, c * 138.625);
    f[G](c * 131.5, c * 145.625, c * 133.5, c * 148.625, c * 127.5, c * 152.625);
    f[G](c * 115.5, c * 158.625, c * 111.5, c * 153.625, c * 106.5, c * 147.625);
    f[X]();
    jc(f, d[6], d[7], c * 2);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 105.5, c * 146.625);
    f[G](c * 116.5, c * 159.625, c * 124.5, c * 156.625, c * 132.5, c * 146.625);
    jc(f, undefined, d[8], c * 5);
    f[g]();
    f[Ia](c * 75.5, c * 80.125);
    kc(f, c * -39, c * -40, c * 78, c * 78, c * 10);
    f[Qa]();
    jc(f, d[9]);
    f[g]();
    f[Ia](c * 167, c * 80.125);
    kc(f, c * -38.5, c * -39, c * 78, c * 78, c * 10);
    f[Qa]();
    jc(f, d[9]);
    return e;
  }(0.9, ["#596560", "#394841", "#543B1C", "#694D28", "#4D3C1A", "#694D28", "#DEE2E0", "#CDCCCC", "#7B5A31", "#7E8A85"]));
  sprite[650] = IMAGES.ﱟ︊︂︂;
  sprite[129] = [];
  sprite[129][0] = Fb(Pc(1.5, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
  sprite[129][1] = Fb(Pc(1.5, true, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
  sprite[635] = [];
  sprite[635][0] = Fb(Qc(2, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
  sprite[635][1] = Fb(Qc(2, true, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
  sprite[636] = [];
  sprite[636][0] = Fb(Rc(1.5, true, ["#0d1b1c", "#596560", "#394841", "#67766F", "#46554D", "#4C3B19", "#674C2A", "#7C5A29", "#596560", "#394841"]));
  sprite[636][1] = Fb(Rc(1.5, true, ["#030d14", "#163A3A", "#214C4B", "#1a4545", "#225755", "#07393D", "#07454a", "#0c484d", "#163A3A", "#214C4B"]));
  sprite[128] = [];
  sprite[128][0] = Fb(Oc(2.2, 0, ["#A89F67", "#9E8456"]));
  sprite[128][1] = Fb(Oc(2.2, 0, ["#0B4049", "#08383D"]));
  sprite[632] = [];
  sprite[632][0] = Fb(Oc(2.2, 0, ["#68622D", "#665329"]));
  sprite[632][1] = Fb(Oc(2.2, 0, ["#0F3A24", "#083326"]));
  sprite[315] = [];
  sprite[315][0] = Fb(yd(0.8, 0, ["#A89F67", "#9E8456"]));
  sprite[315][1] = Fb(yd(0.8, 0, ["#15514F", "#0F3F3D"]));
  sprite[805] = [];
  sprite[805][0] = Fb(yd(0.8, 0, ["#c67933", "#b17238"]));
  sprite[805][1] = Fb(yd(0.8, 0, ["#043c37", "#032b23"]));
  sprite[978] = [];
  sprite[978][0] = Fb(yd(0.8, 0, ["#3a8214", "#4a9c1e"]));
  sprite[978][1] = Fb(yd(0.8, 0, ["#032d29", "#044640"]));
  sprite[831] = [];
  sprite[831][0] = Fb(yd(0.8, 0, ["#e8e8e8", "#bbbbbb"]));
  sprite[831][1] = Fb(yd(0.8, 0, ["#1c6161", "#07413f"]));
  sprite[842] = [];
  sprite[842][0] = Fb(yd(0.8, 0, ["#328a56", "#449573"]));
  sprite[842][1] = Fb(yd(0.8, 0, ["#043c37", "#032b23"]));
  sprite[946] = [];
  sprite[946][0] = Fb(yd(0.8, 0, ["#c98e2f", "#a36b11"]));
  sprite[946][1] = Fb(yd(0.8, 0, ["#043c37", "#032b23"]));
  sprite[956] = [];
  sprite[956][0] = Fb(yd(0.8, 0, ["#b22419", "#99110e"]));
  sprite[956][1] = Fb(yd(0.8, 0, ["#04323c", "#03222b"]));
  sprite[963] = [];
  sprite[963][0] = Fb(yd(0.8, 0, ["#13a56d", "#098a58"]));
  sprite[963][1] = Fb(yd(0.8, 0, ["#043c37", "#032b23"]));
  sprite[651] = Uc(1, [{
    f: Oc,
    x: 0,
    y: 0,
    a: 1,
    r: 0,
    c: ["#A89F67", "#9E8456"]
  }], 1.2, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
  sprite[717] = Uc(1, [{
    f: Xc,
    x: 0,
    y: 0,
    a: 1,
    r: -Math[D] / 5,
    c: ["#4d2d14", "#432516"]
  }], 0.3, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
  sprite[718] = Uc(1, [{
    f: qf,
    x: 0,
    y: -5,
    a: 1,
    r: 0,
    c: ["#1d051e", "#bf8d51", "#7d5133", "#e8d6bf", "#e0c8a9", "#ab7a3f"]
  }], 0.15, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
  sprite[328] = Uc(0.9, [], 0.3, ["#2b5c48", "#2b5c48", "#2b5c48"], 0.5);
  sprite[109] = [];
  sprite[109][0] = Fb(Ac(0.9, 0, ["#7d613e", "#9e7e5a"]));
  sprite[109][1] = Fb(Ac(0.9, 0, ["#084442", "#125e5a"]));
  sprite[126] = [];
  sprite[126][0] = Fb(Ac(0.9, 0, ["#9E8456", "#A89F67"]));
  sprite[126][1] = Fb(Ac(0.9, 0, ["#1b6f6a", "#0d4e4c"]));
  sprite[662] = [];
  sprite[662][0] = Fb(Ac(0.9, 0, ["#665329", "#68622D"]));
  sprite[662][1] = Fb(Ac(0.9, 0, ["#083326", "#0F3A24"]));
  sprite[182] = [];
  sprite[182][0] = Fb(Ac(0.9, 0, ["#c67933", "#ec952d"]));
  sprite[182][1] = Fb(Ac(0.9, 0, ["#0e6553", "#094437"]));
  sprite[204] = [];
  sprite[204][0] = Fb(Ac(0.9, 0, ["#375809", "#4b770e"]));
  sprite[204][1] = Fb(Ac(0.9, 0, ["#09542d", "#0d5d2f"]));
  sprite[979] = [];
  sprite[979][0] = Fb(Ac(0.9, 0, ["#585809", "#72770e"]));
  sprite[979][1] = Fb(Ac(0.9, 0, ["#295209", "#305d0d"]));
  sprite[185] = [];
  sprite[185][0] = Fb(Ac(0.9, 0, ["#b9b094", "#e2d2c0"]));
  sprite[185][1] = Fb(Ac(0.9, 0, ["#126366", "#0d484b"]));
  sprite[187] = [];
  sprite[187][0] = Fb(Ac(0.9, 0, ["#3f8662", "#30915d"]));
  sprite[187][1] = Fb(Ac(0.9, 0, ["#0e6553", "#094437"]));
  sprite[806] = [];
  sprite[806][0] = Fb(Ac(0.9, 0, ["#c79153", "#dfa868"]));
  sprite[806][1] = Fb(Ac(0.9, 0, ["#073927", "#075040"]));
  sprite[832] = [];
  sprite[832][0] = Fb(Ac(0.9, 0, ["#768b5b", "#819984"]));
  sprite[832][1] = Fb(Ac(0.9, 0, ["#0c4540", "#0e5153"]));
  sprite[843] = [];
  sprite[843][0] = Fb(Ac(0.9, 0, ["#567465", "#627c6e"]));
  sprite[843][1] = Fb(Ac(0.9, 0, ["#073927", "#075040"]));
  sprite[198] = [];
  sprite[198][0] = Fb(Ac(0.9, 0, ["#996b3a", "#bf956b"]));
  sprite[198][1] = Fb(Ac(0.9, 0, ["#0e6553", "#094437"]));
  sprite[947] = [];
  sprite[947][0] = Fb(Ac(0.9, 0, ["#7a634a", "#a68f77"]));
  sprite[947][1] = Fb(Ac(0.9, 0, ["#1e4d43", "#113c32"]));
  sprite[200] = [];
  sprite[200][0] = Fb(Ac(0.9, 0, ["#99403c", "#bc796c"]));
  sprite[200][1] = Fb(Ac(0.9, 0, ["#1e434d", "#11303c"]));
  sprite[957] = [];
  sprite[957][0] = Fb(Ac(0.9, 0, ["#88504e", "#b3857c"]));
  sprite[957][1] = Fb(Ac(0.9, 0, ["#253b41", "#162930"]));
  sprite[202] = [];
  sprite[202][0] = Fb(Ac(0.9, 0, ["#0f8870", "#23af93"]));
  sprite[202][1] = Fb(Ac(0.9, 0, ["#032829", "#083233"]));
  sprite[964] = [];
  sprite[964][0] = Fb(Ac(0.9, 0, ["#618a20", "#84a74e"]));
  sprite[964][1] = Fb(Ac(0.9, 0, ["#1f4632", "#335d47"]));
  sprite[108] = [];
  sprite[108][0] = Fb(Gc(1.2, true, ["#0d1b1c", "#4d2d14", "#432516", "#756e52", "#663f22", "#9e9577"]));
  sprite[108][1] = Fb(Gc(1.2, true, ["#030d14", "#0d2e33", "#072322", "#3e706b", "#123d3f", "#4e827c"]));
  sprite[156] = [];
  sprite[156][0] = Fb(Od(1, true, ["#0d1b1c", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
  sprite[156][1] = Fb(Od(1, true, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
  sprite[159] = [];
  sprite[159][0] = Fb(Pd(1, true, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
  sprite[159][1] = Fb(Pd(1, true, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
  sprite[116] = [];
  sprite[116][0] = Fb(Sd(1, true, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
  sprite[116][1] = Fb(Sd(1, true, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
  sprite[157] = [];
  sprite[157][0] = Fb(Sd(1, true, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
  sprite[157][1] = Fb(Sd(1, true, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
  sprite[158] = [];
  sprite[158][0] = Fb(Td(1, true, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
  sprite[158][1] = Fb(Td(1, true, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
  sprite[154] = [];
  sprite[154][0] = Fb(pe(0.8, true, ["#0d1b1c", "#5f6061", "#939393", "#4c3a15", "#634828", "#564021", "#634828", "#4c3a15"]));
  sprite[154][1] = Fb(pe(0.8, true, ["#030d14", "#1f343f", "#485e66", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
  sprite[163] = [];
  sprite[163][0] = Fb(re(0.8, true, ["#0d1b1c", "#69685a", "#9c9683", "#877d36", "#a08f47", "#a7983c", "#b29e4d", "#c1b06b"]));
  sprite[163][1] = Fb(re(0.8, true, ["#030d14", "#1a3732", "#1e544c", "#1f4948", "#215e55", "#1f6058", "#2a7773", "#2c7a70"]));
  sprite[164] = [];
  sprite[164][0] = Fb(se(0.8, true, ["#0d1b1c", "#7d8b90", "#9facaa", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
  sprite[164][1] = Fb(se(0.8, true, ["#030d14", "#2c4b55", "#546d77", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
  sprite[162] = [];
  sprite[162][0] = Fb(qe(0.8, true, ["#0d1b1c", "#6a7570", "#939393", "#6a7570", "#939995", "#9baaa3", "#adbcb5", "#8a938e"]));
  sprite[162][1] = Fb(qe(0.8, true, ["#030d14", "#1f343f", "#485e66", "#163a3a", "#214c4b", "#1f4948", "#295957", "#1f5955"]));
  sprite[117] = [];
  sprite[117][0] = Fb(qe(0.8, true, ["#0d1b1c", "#6a7570", "#939393", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
  sprite[117][1] = Fb(qe(0.8, true, ["#030d14", "#1f343f", "#485e66", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
  sprite[160] = [];
  sprite[160][0] = Fb(Ud(1.5, true, ["#0d1b1c", "#4c3b19", "#574122", "#644928", "#574122", "#735534", "#23a54e", "#1f934a", "#208e48", "#b12c2a", "#9c2625", "#ebd6a4", "#cca73f"]));
  sprite[160][1] = Fb(Ud(1.5, true, ["#030d14", "#0d2e33", "#184747", "#123b3f", "#0d2e33", "#174444"]));
  sprite[330] = [];
  sprite[330][0] = Fb(Ud(1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
  sprite[330][1] = Fb(Ud(1, false, ["#042b30", "#042b30", "#0b342b", "#0b342b", "#042b30", "#0b342b"]));
  sprite[165] = [];
  sprite[165][0] = Fb(Vd(1.5, true, ["#0d1b1c", "#6a7570", "#939995", "#9baaa3", "#8a938e", "#adbcb5"]));
  sprite[165][1] = Fb(Vd(1.5, true, ["#030d14", "#163a3a", "#214c4b", "#1f4948", "#164542", "#295957"]));
  sprite[367] = [];
  sprite[367][0] = Fb(Vd(mb * 1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
  sprite[367][1] = Fb(Vd(mb * 1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
  sprite[118] = [];
  sprite[118][0] = Fb(Vd(1.5, true, ["#0d1b1c", "#b15ecf", "#8c29aa", "#c26de0", "#af59cd", "#d588f1"]));
  sprite[118][1] = Fb(Vd(1.5, true, ["#030d14", "#8359d3", "#764eb5", "#8f65de", "#7f55cc", "#9d77e6"]));
  sprite[494] = [];
  sprite[494][0] = Fb(Vd(1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
  sprite[494][1] = Fb(Vd(1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
  sprite[166] = [];
  sprite[166][0] = Fb(Wd(1.5, true, ["#0d1b1c", "#877d36", "#a08f47", "#a7983c", "#9a8636", "#c1b06b"]));
  sprite[166][1] = Fb(Wd(1.5, true, ["#030d14", "#1f4948", "#215e55", "#1f6058", "#1f605c", "#2c7a70"]));
  sprite[370] = [];
  sprite[370][0] = Fb(Wd(1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
  sprite[370][1] = Fb(Wd(1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
  sprite[167] = [];
  sprite[167][0] = Fb(Zd(1.5, true, ["#0d1b1c", "#5cc5ce", "#89d1d4", "#86d0d1", "#95d5d8", "#e0f2f6", "#b3e0e3"]));
  sprite[167][1] = Fb(Zd(1.5, true, ["#030d14", "#2b9390", "#43b5af", "#43b5af", "#4bbcb4", "#83ddd4", "#59c9c0"]));
  sprite[373] = [];
  sprite[373][0] = Fb(Zd(1, false, ["#133a2b", "#133a2b", "#1a4935", "#1a4935", "#133a2b", "#1a4935"]));
  sprite[373][1] = Fb(Zd(1, false, ["#032428", "#032428", "#07393d", "#07393d", "#032428", "#07393d"]));
  sprite[161] = [];
  sprite[161][0] = Fb(le(0.5, 0, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627", "#614627", "#614627", "#c4a23a", "#c4a23a", "#c4a23a"]));
  sprite[161][1] = Fb(le(0.5, 0, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453", "#1f5453", "#1f5453", "#2b6664", "#2b6664", "#2b6664"]));
  sprite[685] = [];
  sprite[685][0] = Fb(Hf(0.5, ["#133a2b", "#9e8838", "#c4a23a", "#4c3b19", "#614627"]));
  sprite[685][1] = Fb(Hf(0.5, ["#032428", "#266161", "#2b6664", "#123335", "#1f5453"]));
  sprite[258] = [];
  sprite[258][0] = Fb(Hc(0.9, ["#0e3022", "#ee97bf", "#FFFFFF", "#000000", "#ffffff"]));
  sprite[258][1] = Fb(Hc(0.9, ["#030d14", "#4d1b59", "#5d3f77", "#220e26", "#ffffff"]));
  sprite[254] = [];
  sprite[254][0] = Fb(oc(Math[D], Kc(0.9, ["#000000", "#b7252c", "#b7252c", "#b7252c", "#FFFFFF", "#000000"])));
  sprite[254][1] = Fb(oc(Math[D], Kc(0.9, ["#030d14", "#401d49", "#b7252c", "#401d49", "#FFFFFF", "#000000"])));
  sprite[260] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 450;
    e.height = c * 470;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 226.5, c * 91.546875);
    f[G](c * 254.5, c * 115.546875, c * 261.5, c * 115.546875, c * 294.5, c * 109.546875);
    f[G](c * 299.5, c * 141.546875, c * 315.5, c * 151.546875, c * 344.5, c * 158.546875);
    f[G](c * 330.5, c * 195.546875, c * 341.5, c * 207.546875, c * 361.5, c * 226.546875);
    f[G](c * 331.5, c * 251.546875, c * 335.5, c * 270.546875, c * 342.5, c * 295.546875);
    f[G](c * 300.5, c * 296.546875, c * 293.5, c * 325.546875, c * 292.5, c * 344.546875);
    f[G](c * 257.5, c * 326.546875, c * 242.5, c * 338.546875, c * 224.5, c * 361.546875);
    f[G](c * 200.5, c * 329.546875, c * 180.5, c * 334.546875, c * 155.5, c * 341.546875);
    f[G](c * 146.5, c * 307.546875, c * 140.5, c * 302.546875, c * 107.5, c * 292.546875);
    f[G](c * 117.5, c * 253.546875, c * 109.5, c * 244.546875, c * 89.5, c * 224.546875);
    f[G](c * 118.5, c * 191.546875, c * 114.5, c * 182.546875, c * 108.5, c * 156.546875);
    f[G](c * 143.5, c * 149.546875, c * 150.5, c * 136.546875, c * 157.5, c * 106.546875);
    f[G](c * 202.5, c * 120.546875, c * 211.5, c * 103.546875, c * 228.5, c * 91.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 224.5, c * 129.546875);
    f[G](c * 247.5, c * 147.546875, c * 252.5, c * 143.546875, c * 274.5, c * 141.546875);
    f[G](c * 279.5, c * 163.546875, c * 289.5, c * 168.546875, c * 311.5, c * 178.546875);
    f[G](c * 301.5, c * 199.546875, c * 307.5, c * 213.546875, c * 323.5, c * 226.546875);
    f[G](c * 303.5, c * 240.546875, c * 303.5, c * 255.546875, c * 312.5, c * 275.546875);
    f[G](c * 281.5, c * 278.546875, c * 276.5, c * 291.546875, c * 272.5, c * 313.546875);
    f[G](c * 248.5, c * 301.546875, c * 239.5, c * 310.546875, c * 224.5, c * 324.546875);
    f[G](c * 211.5, c * 304.546875, c * 199.5, c * 301.546875, c * 176.5, c * 309.546875);
    f[G](c * 165.5, c * 276.546875, c * 159.5, c * 275.546875, c * 138.5, c * 274.546875);
    f[G](c * 148.5, c * 248.546875, c * 140.5, c * 237.546875, c * 125.5, c * 225.546875);
    f[G](c * 145.5, c * 205.546875, c * 146.5, c * 195.546875, c * 142.5, c * 176.546875);
    f[G](c * 173.5, c * 164.546875, c * 173.5, c * 155.546875, c * 178.5, c * 140.546875);
    f[G](c * 214.5, c * 143.546875, c * 214.5, c * 135.546875, c * 226.5, c * 129.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 224.5, c * 160.546875);
    f[G](c * 236.5, c * 168.546875, c * 239.5, c * 168.546875, c * 258.5, c * 168.546875);
    f[G](c * 261.5, c * 185.546875, c * 268.5, c * 187.546875, c * 282.5, c * 192.546875);
    f[G](c * 277.5, c * 208.546875, c * 283.5, c * 216.546875, c * 289.5, c * 228.546875);
    f[G](c * 277.5, c * 243.546875, c * 280.5, c * 253.546875, c * 281.5, c * 260.546875);
    f[G](c * 264.5, c * 260.546875, c * 259.5, c * 269.546875, c * 256.5, c * 283.546875);
    f[G](c * 244.5, c * 276.546875, c * 232.5, c * 283.546875, c * 223.5, c * 291.546875);
    f[G](c * 213.5, c * 276.546875, c * 205.5, c * 278.546875, c * 190.5, c * 281.546875);
    f[G](c * 181.5, c * 262.546875, c * 173.5, c * 259.546875, c * 165.5, c * 258.546875);
    f[G](c * 169.5, c * 239.546875, c * 167.5, c * 233.546875, c * 157.5, c * 225.546875);
    f[G](c * 169.5, c * 208.546875, c * 170.5, c * 203.546875, c * 168.5, c * 192.546875);
    f[G](c * 181.5, c * 187.546875, c * 188.5, c * 179.546875, c * 192.5, c * 168.546875);
    f[G](c * 216.5, c * 170.546875, c * 218.5, c * 163.546875, c * 225.5, c * 160.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 205.5, c * 194.546875);
    f[G](c * 216.5, c * 192.546875, c * 219.5, c * 191.546875, c * 225.5, c * 185.546875);
    f[G](c * 232.5, c * 193.546875, c * 237.5, c * 191.546875, c * 246.5, c * 192.546875);
    f[G](c * 249.5, c * 202.546875, c * 253.5, c * 205.546875, c * 258.5, c * 207.546875);
    f[G](c * 259.5, c * 222.546875, c * 256.5, c * 223.546875, c * 265.5, c * 226.546875);
    f[G](c * 256.5, c * 231.546875, c * 255.5, c * 241.546875, c * 259.5, c * 248.546875);
    f[G](c * 250.5, c * 245.546875, c * 245.5, c * 252.546875, c * 243.5, c * 260.546875);
    f[G](c * 234.5, c * 256.546875, c * 229.5, c * 258.546875, c * 223.5, c * 265.546875);
    f[G](c * 218.5, c * 255.546875, c * 213.5, c * 257.546875, c * 204.5, c * 261.546875);
    f[G](c * 203.5, c * 251.546875, c * 198.5, c * 248.546875, c * 189.5, c * 244.546875);
    f[G](c * 194.5, c * 237.546875, c * 192.5, c * 231.546875, c * 184.5, c * 225.546875);
    f[G](c * 191.5, c * 211.546875, c * 192.5, c * 209.546875, c * 190.5, c * 204.546875);
    f[G](c * 200.5, c * 204.546875, c * 204.5, c * 198.546875, c * 207.5, c * 194.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 149.5, c * 93.546875);
    f[G](c * 287.5, c * 332.546875, c * 226, c * 225.546875, c * 302.5, c * 357.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 224.5, c * 66.546875);
    f[G](c * 224.5, c * 223.546875, c * 224.5, c * 223.546875, c * 224.5, c * 380.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 302.5, c * 88.546875);
    f[G](c * 222.5, c * 227.546875, c * 222.5, c * 227.546875, c * 142.5, c * 366.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 361.5, c * 147.546875);
    f[G](c * 223, c * 226.546875, c * 223, c * 226.546875, c * 84.5, c * 305.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 379.5, c * 225.546875);
    f[G](c * 221, c * 225.546875, c * 221, c * 225.546875, c * 62.5, c * 225.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 90.5, c * 147.546875);
    f[G](c * 226.5, c * 226.546875, c * 226.5, c * 226.546875, c * 362.5, c * 305.546875);
    f[X]();
    jc(f, undefined, d[0], 4);
    return e;
  }(0.6, ["#FFFFFF"]));
  sprite[293] = [];
  sprite[293][0] = Fb(Ic(1.1, ["#0e3022", "#231f20", "#b7252c", "#7d7679", "#ffffff"]));
  sprite[293][1] = Fb(Ic(1.1, ["#030d14", "#1e181c", "#462966", "#3e3e4a", "#ffffff"]));
  sprite[10] = [];
  sprite[10][0] = Fb(ne(0.6, 0, ["#f9efeb", "#dfd1cb", "#3e3c25", "#4d4a2e"]));
  sprite[10][1] = Fb(ne(0.6, 0, ["#478e8b", "#327e73", "#073030", "#08403f"]));
  sprite[11] = [];
  sprite[11][0] = Fb($d(0.6, 0, ["#3e3c25", "#4d4a2e", "#f9efeb", "#dfd1cb"]));
  sprite[11][1] = Fb($d(0.6, 0, ["#073030", "#08403f", "#478e8b", "#327e73"]));
  sprite[40] = [];
  sprite[40][0] = Fb(oe(0.63, true, ["#171a19", "#dee7e7", "#b8cccb", "#ffffff", "#e3e8e8"]));
  sprite[40][1] = Fb(oe(0.63, true, ["#073030", "#368981", "#1c635e", "#7bbab4", "#469e95"]));
  sprite[41] = [];
  sprite[41][0] = Fb(_c(0.6, 0, ["#171a19", "#c5232c", "#84191d", "#a72027", "#fef4f4", "#e9dad9"]));
  sprite[41][1] = Fb(_c(0.6, 0, ["#073030", "#392966", "#2a194f", "#433379", "#66aaa3", "#469e95"]));
  sprite[42] = [];
  sprite[42][0] = Fb($c(0.6, 0, ["#171a19", "#0f964c", "#106e3b", "#138344", "#fef4f4", "#e9dad9", "#C5232C", "#A92D2D"]));
  sprite[42][1] = Fb($c(0.6, 0, ["#073030", "#124949", "#0e3838", "#15514f", "#66aaa3", "#469e95", "#292f66", "#202559"]));
  sprite[710] = [];
  sprite[710][0] = Fb(sf(0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#343d39"]));
  sprite[710][1] = Fb(sf(0.42, true, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#192225"]));
  sprite[714] = [];
  sprite[714][0] = Fb(tf(0.9, ["#e4c027"]));
  sprite[714][1] = Fb(tf(0.9, ["#D8E57F"]));
  sprite[138] = [];
  sprite[138][0] = Fb(rf(0.42, true, ["#0d1b1c", "#515C57", "#3A4942", "#68736F", "#C1C0C0", "#be8d50", "#7d5234", "#222825", "#4D5752", "#e48727", "#d4a872", "#232a27"]));
  sprite[138][1] = Fb(rf(0.42, true, ["#0d1b1c", "#485E66", "#1F343F", "#60757D", "#C1C0C0", "#be8d50", "#7d5234", "#1F343F", "#344B51", "#D8E57F", "#dfa64e", "#1b2529"]));
  sprite[716] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 149;
    e.height = c * 356;
    f[g]();
    f[Ia](c * 74.5, c * 177.5);
    kc(f, c * -57.5, c * -161.5, c * 100, c * 323, c * 10);
    f[Qa]();
    jc(f, d[0], d[1], c * 4);
    f[g]();
    f[Ia](c * 74.5, c * 177.5);
    kc(f, c * -57.5, c * 50.5, c * 100, c * 105, c * 10);
    f[Qa]();
    jc(f, d[6], d[1], c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 16, c * 125);
    f[G](c * 74.5, c * 125, c * 118, c * 125, c * 118, c * 125);
    f[X]();
    jc(f, d[2], d[2], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 16, c * 120);
    f[G](c * 74.5, c * 120, c * 74.5, c * 120, c * 118, c * 120);
    f[X]();
    jc(f, d[3], d[3], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 16, c * 228);
    f[G](c * 75, c * 228.5, c * 118, c * 228.5, c * 118, c * 229);
    f[X]();
    jc(f, d[2], d[2], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 16, c * 224);
    f[G](c * 75, c * 224, c * 118, c * 224, c * 118, c * 224);
    f[X]();
    jc(f, d[3], d[3], c * 10);
    f[g]();
    f[Ia](c * 72, c * 68.5);
    kc(f, c * -41.5, c * -36.5, c * 73, c * 73, c * 13);
    f[Qa]();
    jc(f, d[4]);
    f[g]();
    f[Ia](c * 72, c * 175.5);
    kc(f, c * -41.5, c * -38.5, c * 73, c * 73, c * 13);
    f[Qa]();
    jc(f, d[4]);
    f[g]();
    f[Ia](c * 72, c * 279.5);
    kc(f, c * -41.5, c * -40.5, c * 73, c * 73, c * 13);
    f[Qa]();
    jc(f, d[4]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 16, c * 338);
    f[G](c * 75, c * 338, c * 118, c * 338, c * 118, c * 338);
    f[X]();
    jc(f, d[2], d[2], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 16, c * 333);
    f[G](c * 75, c * 333, c * 118, c * 333, c * 118, c * 333);
    f[X]();
    jc(f, d[3], d[3], c * 10);
    return e;
  }(1, ["#596560", "#394841", "#543B1C", "#694D28", "#7E8A85", "#384740", "#525956"]));
  sprite[401] = [];
  sprite[401][0] = Fb(Xd(0.5, true, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#ffad22", "#fffdd5", "#fee764"]));
  sprite[401][1] = Fb(Xd(0.5, true, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#ffdc73", "#fffce2", "#fef259"]));
  sprite[113] = [];
  sprite[113][0] = Fb(Yd(0.5, true, ["#0d1b1c", "#939393", "#5f6061", "#c0c0c0", "#4f4f4f", "#6c6c6c", "#454545"]));
  sprite[113][1] = Fb(Yd(0.5, true, ["#0d1b1c", "#485e66", "#1f343f", "#60757d", "#152229", "#0c1113", "#0c1113"]));
  sprite[405] = Fb(function (c, d, e) {
    var f = document[p]("canvas");
    var i = f[T]("2d");
    f.width = c * 118;
    f.height = c * 129;
    i[g]();
    i[Ia](c * 90, c * 90);
    kc(i, c * -86.5, c * -86, c * 110, c * 110, c * 15);
    i[Qa]();
    jc(i, e[0], e[1], 4);
    return f;
  }(0.8, 0, ["#5f6061", "#939393"]));
  sprite[406] = Uc(1, [{
    f: Xc,
    x: 0,
    y: 0,
    a: 1,
    r: Math[D] / 2.5,
    c: ["#4d2d14", "#432516"]
  }], 0.3, ["#494949", "#5b5858", "#3d3b3b"], 1);
  sprite[192] = [];
  sprite[192][0] = Fb(be(1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
  sprite[192][1] = Fb(be(1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#0b424f", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
  sprite[907] = [];
  sprite[907][0] = Fb(ce(1, 0, ["#0d1b1c", "#554139", "#3f332a", "#261912", "#eee6c5", "#d1c599", "#554139", "#3f332a", "#86509b", "#703a99"]));
  sprite[907][1] = Fb(ce(1, 0, ["#0d1b1c", "#0b3432", "#092b29", "#052120", "#104d5b", "#083b37", "#0b3432", "#092b29", "#2b0b4a", "#23073e"]));
  sprite[18] = [];
  sprite[18][0] = Fb(oc(3, de(0.7, true, ["#0d1b1c", "#58452b", "#47341d", "#ee593d", "#c04933", "#c04933", "#a33e2b", "#c3be9a", "#7f6d52"])));
  sprite[18][1] = Fb(oc(3, de(0.7, true, ["#0d1b1c", "#0b3432", "#092b29", "#34255d", "#281b4e", "#2f2157", "#281b4e", "#104d5b", "#083b37"])));
  sprite[12] = [];
  sprite[12][0] = Fb(oc(3, ee(0.7, true, ["#0d1b1c", "#58452b", "#47341d", "#765d42", "#c3be9a", "#7f6d52"])));
  sprite[12][1] = Fb(oc(3, ee(0.7, true, ["#0d1b1c", "#0b3432", "#092b29", "#0e4d49", "#1a6c67", "#07322f"])));
  sprite[13] = [];
  sprite[13][0] = Fb(oc(3, fe(0.65, true, ["#0d1b1c", "#4d2d14", "#432516", "#c3be9a", "#7f6d52", "#7a7575", "#454749", "#8c8787", "#939393", "#5f6061", "#aaa6a6"])));
  sprite[13][1] = Fb(oc(3, fe(0.65, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#1a6c67", "#07322f", "#374950", "#101f26", "#2c3c42", "#485e66", "#1f343f", "#546e78"])));
  sprite[14] = [];
  sprite[14][0] = Fb(oc(3, ge(0.67, true, ["#0d1b1c", "#493e26", "#382e19", "#a69e39", "#9c8828", "#bab143", "#c4bc51", "#b29c32", "#d2ca59"])));
  sprite[14][1] = Fb(oc(3, ge(0.67, true, ["#030d14", "#263947", "#182935", "#33916d", "#197c62", "#3eab81", "#43aa82", "#29997c", "#52be94"])));
  sprite[15] = [];
  sprite[15][0] = Fb(oc(3, he(0.67, true, ["#0d1b1c", "#262114", "#211108", "#4ba8b4", "#198a82", "#6ccad7", "#63c9d6", "#29aaa1", "#7bd9e6"])));
  sprite[15][1] = Fb(oc(3, he(0.67, true, ["#0d1b1c", "#111316", "#0a0b0c", "#4bbbc3", "#23a19d", "#54c5cd", "#4ad2ce", "#3dc4c0", "#73dde5"])));
  sprite[33] = [];
  sprite[33][0] = Fb(oc(3, ie(0.67, true, ["#0d1b1c", "#262114", "#211108", "#9443b1", "#6f1988", "#a752c6", "#9e35be", "#8c29aa", "#b864d6"])));
  sprite[33][1] = Fb(oc(3, ie(0.67, true, ["#0d1b1c", "#111316", "#0a0b0c", "#6e43bf", "#673fa4", "#784bcc", "#845bc6", "#764eb5", "#966be7"])));
  sprite[16] = [];
  sprite[16][0] = Fb(oc(3, je(1, true, ["#0d1b1c", "#1e2b34", "#151c24", "#99d7dd", "#7dcbd1", "#c6e8eb", "#aadee8", "#b7e2e5"])));
  sprite[16][1] = Fb(oc(3, je(1, true, ["#0d1b1c", "#1c2026", "#0a0b0c", "#7dc6d9", "#6cbacf", "#87d2e6", "#49b2cf", "#87d2e6"])));
  sprite[35] = [];
  sprite[35][0] = Fb(oc(3, te(1, true, ["#0d1b1c", "#4d2d14", "#432516", "#939393", "#5f6061"])));
  sprite[35][1] = Fb(oc(3, te(1, true, ["#030d14", "#263947", "#182935", "#485e66", "#1f343f"])));
  sprite[55] = [];
  sprite[55][0] = Fb(oc(3, Sf(0.5, true, ["#0d1b1c", "#939393", "#5f6061"])));
  sprite[55][1] = Fb(oc(3, Sf(0.5, true, ["#030d14", "#485e66", "#1f343f"])));
  sprite[45] = [];
  sprite[45][0] = Fb(oc(3, kf(1, true, ["#0d1b1c", "#9b5927", "#7a3610", "#1e0302", "#0d825b", "#6bd16e", "#17915d", "#89e5aa", "#16935d", "#a0efc4", "#28b26d", "#cdf4cb"])));
  sprite[45][1] = Fb(oc(3, kf(1, true, ["#0d1b1c", "#2a4f4a", "#1e423d", "#1e0302", "#096b3f", "#3db76f", "#118254", "#40c696", "#0c7a50", "#59d8a4", "#249376", "#80d8c7"])));
  sprite[36] = [];
  sprite[36][0] = Fb(oc(3, te(1, true, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32"])));
  sprite[36][1] = Fb(oc(3, te(1, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#43aa82", "#29997c"])));
  sprite[37] = [];
  sprite[37][0] = Fb(oc(3, te(1, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1"])));
  sprite[37][1] = Fb(oc(3, te(1, true, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0"])));
  sprite[38] = [];
  sprite[38][0] = Fb(oc(3, te(1, true, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa"])));
  sprite[38][1] = Fb(oc(3, te(1, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5"])));
  sprite[142] = [];
  sprite[142][0] = Fb(Ze(0.55, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"]));
  sprite[142][1] = Fb(Ze(0.55, 0, ["#080707", "#133d3c", "#2b6664", "#1b2529"]));
  sprite[530] = [];
  sprite[530][Na](Fb(Ze(0.8, 0, ["#141414", "#816511", "#c4a23a", "#3a3a3a"])));
  sprite[530][Na](Fb(Ze(0.8, 0, ["#141414", "#9f7d17", "#dab33c", "#474545"])));
  sprite[530][Na](Fb(Ze(0.8, 0, ["#141414", "#73590d", "#a88a2c", "#2a2828"])));
  sprite[532] = [];
  sprite[532][Na](sprite[530][0]);
  sprite[532][Na](sprite[530][0]);
  sprite[532][Na](sprite[530][0]);
  sprite[152] = [];
  sprite[152][0] = Fb(cf(0.06, 0, ["#141414", "#c4a23a", "#816511"]));
  sprite[152][1] = Fb(cf(0.06, 0, ["#030d14", "#2b6664", "#133d3c"]));
  sprite[529] = [];
  sprite[529][Na](Fb(cf(0.08, 0, ["#141414", "#c4a23a", "#816511"])));
  sprite[529][Na](Fb(cf(0.08, 0, ["#141414", "#e2bd4e", "#a38018"])));
  sprite[529][Na](Fb(cf(0.08, 0, ["#141414", "#b0902e", "#634d09"])));
  sprite[143] = Uc(1.5, [{
    f: hf,
    x: 0,
    y: 0,
    a: 1,
    r: 0,
    c: ["#141414", "#178a99", "#0a6372", "#03282e"]
  }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
  sprite[520] = [];
  sprite[520][0] = Fb(df(0.8, 0, ["#347f93", "#54a4ba"]));
  sprite[520][1] = Fb(df(0.8, 0, ["#98ede3", "#94f2e7"]));
  sprite[521] = [];
  sprite[521][0] = Fb(ef(0.8, 0, ["#a9e4ed", "#86d4e0", "#418ba5", "#59b8ce"]));
  sprite[521][1] = Fb(ef(0.8, 0, ["#59c9c0", "#83ddd4", "#3fa097", "#90ddd9"]));
  sprite[522] = [];
  sprite[522][0] = Fb(ff(0.8, 0, ["#a9e4ed", "#86d4e0"]));
  sprite[522][1] = Fb(ff(0.8, 0, ["#83ddd4", "#485e66"]));
  sprite[145] = [];
  sprite[145][0] = Fb(gf(0.8, true, ["#347f93", "#54a4ba", "#1c2528", "#a9e4ed", "#86d4e0", "#959da0", "#697072", "#929da0", "#afb9bc"]));
  sprite[145][1] = Fb(gf(0.8, true, ["#98ede3", "#94f2e7", "#1f343f", "#59c9c0", "#83ddd4", "#485e66", "#2d484f", "#546d6d", "#597b84"]));
  sprite[1186] = [];
  sprite[1186][0] = IMAGES.ﱣ︃︀︃;
  sprite[1186][1] = IMAGES.ﱢ︃︀︃;
  sprite[1187] = [];
  sprite[1187][0] = IMAGES.ﱟ︃︀︃;
  sprite[1187][1] = IMAGES.ﱡ︃︀︃;
  sprite[1188] = [];
  sprite[1188][0] = IMAGES.ﱞ︄︀︃;
  sprite[1188][1] = IMAGES.ﱠ︄︀︃;
  sprite[146] = [];
  sprite[146][0] = IMAGES.ﱞ︃︀︃;
  sprite[146][1] = IMAGES.ﱠ︃︀︃;
  sprite[1192] = [];
  sprite[1192][0] = IMAGES.ﱢ︄︀︃;
  sprite[1192][1] = IMAGES.ﱞ︅︀︃;
  sprite[147] = [];
  sprite[147][0] = IMAGES.ﱠ︅︀︃;
  sprite[147][1] = IMAGES.ﱟ︅︀︃;
  sprite[1196] = [];
  sprite[1196][0] = IMAGES.ﱞ︆︀︃;
  sprite[1196][1] = IMAGES.ﱠ︆︀︃;
  sprite[148] = [];
  sprite[148][0] = IMAGES.ﱟ︆︀︃;
  sprite[148][1] = IMAGES.ﱡ︆︀︃;
  sprite[1200] = [];
  sprite[1200][0] = IMAGES.ﱠ︇︀︃;
  sprite[1200][1] = IMAGES.ﱟ︇︀︃;
  sprite[149] = [];
  sprite[149][0] = IMAGES.ﱡ︇︀︃;
  sprite[149][1] = IMAGES.ﱣ︇︀︃;
  sprite[1204] = [];
  sprite[1204][0] = IMAGES.ﱟ︈︀︃;
  sprite[1204][1] = IMAGES.ﱡ︈︀︃;
  sprite[150] = [];
  sprite[150][0] = IMAGES.ﱣ︈︀︃;
  sprite[150][1] = IMAGES.ﱢ︈︀︃;
  sprite[1208] = [];
  sprite[1208][0] = IMAGES.ﱡ︉︀︃;
  sprite[1208][1] = IMAGES.ﱣ︉︀︃;
  sprite[151] = [];
  sprite[151][0] = IMAGES.ﱢ︉︀︃;
  sprite[151][1] = IMAGES.ﱞ︊︀︃;
  sprite[239] = [];
  sprite[239][0] = IMAGES.ﱟ︆︎︂;
  sprite[239][1] = IMAGES.ﱡ︆︎︂;
  sprite[240] = IMAGES.ﱣ︆︎︁;
  sprite[153] = [];
  sprite[153][0] = Fb(bf(0.75, true, ["#0d1b1c", "#4c3a15", "#634828", "#564021"]));
  sprite[153][1] = Fb(bf(0.75, true, ["#030d14", "#0d2e33", "#184747", "#123b3f"]));
  sprite[552] = Fb(_e(0.3, ["#092813", "#1f773d"], 0));
  sprite[553] = Fb(_e(0.3, ["#092813", "#1f773d"], 1));
  sprite[879] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 60;
    e.height = c * 60;
    f[Ia](c * -25, c * -25);
    f[Ia](0, c * 5);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 24, c * 50);
    f[G](c * 32.5, c * 54.5, c * 32.5, c * 54.5, c * 41, c * 59);
    f[G](c * 57, c * 47, c * 57, c * 47, c * 73, c * 35);
    f[G](c * 57, c * 53, c * 57, c * 53, c * 41, c * 71);
    f[X]();
    jc(f, d[0]);
    f[Ia](0, c * -5);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 24, c * 50);
    f[G](c * 32.5, c * 54.5, c * 32.5, c * 54.5, c * 41, c * 59);
    f[G](c * 57, c * 47, c * 57, c * 47, c * 73, c * 35);
    f[G](c * 57, c * 53, c * 57, c * 53, c * 41, c * 71);
    f[X]();
    jc(f, d[1]);
    return e;
  }(0.6, ["#092813", "#1f773d"]));
  sprite[550] = [];
  sprite[550][Na](Fb(af(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 0)));
  sprite[550][Na](Fb(af(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 0)));
  sprite[550][Na](Fb(af(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 0)));
  sprite[554] = [];
  var f = Fb(af(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 0));
  sprite[554][Na](f);
  sprite[554][Na](f);
  sprite[554][Na](f);
  sprite[551] = [];
  sprite[551][Na](Fb(af(0.7, ["#092813", "#1f773d", "#165b2b", "#4c3a15", "#1f773d"], 1)));
  sprite[551][Na](Fb(af(0.7, ["#0b3719", "#228745", "#1a7034", "#614a1a", "#238845"], 1)));
  sprite[551][Na](Fb(af(0.7, ["#092a14", "#186733", "#124a23", "#4c3a15", "#1b6735"], 1)));
  sprite[675] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    var i = c * 170;
    var k = c * 172;
    var m = i / 2;
    var n = k / 2;
    e.width = i;
    e.height = k;
    f[Ia](m, n);
    f[g]();
    for (var o = 0; o < 10; o++) {
      f[ra](Math[D] / 5);
      f[g]();
      f[Ia](c * 65, 0);
      nc(f, 3, c * 18, c * 4);
      jc(f, d[0]);
      f[Qa]();
    }
    f[Qa]();
    lc(f, 0, 0, c * 40);
    jc(f, undefined, d[0], c * 6);
    lc(f, 0, 0, c * 20);
    jc(f, d[0]);
    return e;
  }(0.3, ["#FFFFFF"]));
  sprite[788] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    var g = c * 130;
    var i = c * 142;
    var k = g / 2;
    var m = i / 2;
    e.width = g;
    e.height = i;
    lc(f, k, m, c * 40);
    jc(f, undefined, d[0], c * 7);
    lc(f, k, m, c * 30);
    jc(f, undefined, d[0], c * 7);
    lc(f, k, m, c * 20);
    jc(f, d[0]);
    return e;
  }(0.3, ["#FFFFFF"]));
  sprite[556] = Fb(_e(0.4, ["rgba(255, 255, 255, 0)", "#FFFFFF"], 0));
  sprite[661] = Fb(oc(Math[D] / 5, function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 316;
    e.height = c * 365;
    f[g]();
    f[Ia](c * 156.07142639160156, c * 51.81248474121094);
    f[ra](0);
    kc(f, c * -21.5, c * -34, c * 43, c * 68, c * 8);
    f[Qa]();
    jc(f, d[0], d[0], c * 15);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 126.57142639160156, c * 67.38392639160156);
    f[G](c * 126.57142639160156, c * 57.38392639160156, c * 132.57142639160156, c * 54.38392639160156, c * 140.57142639160156, c * 54.38392639160156);
    f[G](c * 177.57142639160156, c * 55.38392639160156, c * 158.07142639160156, c * 54.38392639160156, c * 175.57142639160156, c * 54.38392639160156);
    f[G](c * 185.57142639160156, c * 56.38392639160156, c * 185.57142639160156, c * 57.38392639160156, c * 184.57142639160156, c * 66.38392639160156);
    f[G](c * 184.57142639160156, c * 78.38392639160156, c * 184.57142639160156, c * 89.38392639160156, c * 184.57142639160156, c * 90.38392639160156);
    f[G](c * 177.57142639160156, c * 107.38392639160156, c * 180.57142639160156, c * 112.38392639160156, c * 189.57142639160156, c * 116.38392639160156);
    f[G](c * 212.57142639160156, c * 127.38392639160156, c * 212.57142639160156, c * 132.38392639160156, c * 211.57142639160156, c * 150.38392639160156);
    f[G](c * 211.57142639160156, c * 227.59821128845215, c * 211.57142639160156, c * 227.59821128845215, c * 211.57142639160156, c * 304.81249618530273);
    f[G](c * 212.57142639160156, c * 328.81249618530273, c * 209.57142639160156, c * 330.81249618530273, c * 188.57142639160156, c * 333.81249618530273);
    f[G](c * 155.07142639160156, c * 333.31249618530273, c * 155.07142639160156, c * 333.31249618530273, c * 121.57142639160156, c * 332.81249618530273);
    f[G](c * 104.57142639160156, c * 327.81249618530273, c * 105.57142639160156, c * 328.81249618530273, c * 104.57142639160156, c * 312.81249618530273);
    f[G](c * 104.57142639160156, c * 228.16963958740234, c * 104.57142639160156, c * 228.16963958740234, c * 104.57142639160156, c * 143.52678298950195);
    f[G](c * 106.57142639160156, c * 124.52678298950195, c * 110.57142639160156, c * 123.52678298950195, c * 123.57142639160156, c * 116.52678298950195);
    f[G](c * 136.57142639160156, c * 110.52678298950195, c * 130.57142639160156, c * 106.52678298950195, c * 126.57142639160156, c * 98.52678298950195);
    f[X]();
    jc(f, d[0], d[0], c * 15);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 125.57142639160156, c * 156.66963958740234);
    f[G](c * 125.57142639160156, c * 182.66963958740234, c * 125.57142639160156, c * 182.66963958740234, c * 125.57142639160156, c * 208.66963958740234);
    f[X]();
    jc(f, d[0], d[0], c * 15);
    return e;
  }(0.2, ["#FFFFFF"])));
  sprite[43] = [];
  sprite[43][0] = Fb(We(0.85, 0, ["#0d1b1c", "#8c55b7", "#652d8e", "#79359e", "#5eccd1", "#4badad", "#9e6ac6"]));
  sprite[43][1] = Fb(We(0.85, 0, ["#0d1b1c", "#4e4e93", "#393977", "#444187", "#2b9390", "#277a74", "#7da8db"]));
  sprite[555] = [];
  sprite[555][Na](Fb(af(0.7, ["#280e09", "#77371f", "#280e09", "#2e2410", "#77371f"], 1)));
  sprite[555][Na](Fb(af(0.7, ["#38130C", "#853D22", "#391402", "#3D3016", "#873E22"], 1)));
  sprite[555][Na](Fb(af(0.7, ["#1C0A06", "#6B3019", "#1D0A06", "#251D0C", "#6A301A"], 1)));
  sprite[83] = [];
  sprite[83][0] = Fb(Ef(0.37, 0, ["#2a2938", "#242330", "#313041"]));
  sprite[83][1] = Fb(Ef(0.37, 0, ["#1b1e30", "#161921", "#252f3e"]));
  sprite[85] = [];
  sprite[85][0] = Fb(Ff(0.17, 0, ["#2a2938", "#242330", "#313041", "#1b1a25", "#d62c0e"]));
  sprite[85][1] = Fb(Ff(0.17, 0, ["#1b1e30", "#161921", "#252f3e", "#0a0c11", "#d62c0e"]));
  sprite[86] = [];
  sprite[86][0] = Fb(Gf(0.55, true, ["#1d1d22", "#e2e1e1", "#d2cbcb", "#cfcbc8", "#beb5b5", "#ada0a0"], 1));
  sprite[86][1] = Fb(Gf(0.55, true, ["#1d1d22", "#216661", "#134945", "#2b8079", "#17504c"], 1));
  sprite[84] = [];
  sprite[84][0] = Fb(Gf(0.55, true, ["#1d1d22", "#8c7654", "#785f4c", "#a88e6c", "#785f4c", "#705845"], 0));
  sprite[84][1] = Fb(Gf(0.55, true, ["#1d1d22", "#1b5752", "#0e3b37", "#23706a", "#11413e", "#0b322f"], 0));
  sprite[77] = [];
  sprite[77][0] = Fb(Uf(0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#49B669", "#19994C", "#71C187"]));
  sprite[77][1] = Fb(Uf(0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#3db76f", "#118254", "#40c696"]));
  sprite[78] = [];
  sprite[78][0] = Fb(Uf(0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#C45727", "#994617", "#DB9358"]));
  sprite[78][1] = Fb(Uf(0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#69b681", "#509a75", "#7ec387"]));
  sprite[79] = [];
  sprite[79][0] = Fb(Uf(0.2, true, ["#0d1b1c", "#A5A244", "#D8DC74", "#C0BF55", "#2792C1", "#196599", "#59C0D8"]));
  sprite[79][1] = Fb(Uf(0.2, true, ["#2b7c57", "#114933", "#1b6656", "#1a7961", "#19899e", "#16688b", "#4ea3c7"]));
  sprite[61] = [];
  sprite[61][0] = Fb(_d(0.24, true, ["#000000", "#b03431", "#94312d", "#bd3c33", "#e45936"]));
  sprite[61][1] = Fb(_d(0.24, true, ["#000000", "#1b103e", "#190f3b", "#261a4e", "#34255d"]));
  sprite[59] = [];
  sprite[59][0] = Fb(ye(0.32, 0, ["#0d1b1c", "#cae9eb", "#75bcae", "#ffffff", "#51736d", "#2b4d48", "#1b3a3a", "#80ccca", "#59ada7"]));
  sprite[59][1] = Fb(ye(0.32, 0, ["#0d1b1c", "#70c1d6", "#49b2cf", "#87cad9", "#367c93", "#113743", "#0c2c36", "#51a2b8", "#3a8ea4"]));
  sprite[62] = [];
  sprite[62][0] = Fb(oc(3, lf(0.9, true, ["#0d1b1c", "#284c4a", "#193533", "#c8efef", "#7eccbb"])));
  sprite[62][1] = Fb(oc(3, lf(0.9, true, ["#0d1b1c", "#18332e", "#112320", "#87d2e6", "#49b2cf"])));
  sprite[744] = [];
  sprite[744][0] = Fb(oc(3, lf(1, true, [undefined, undefined, undefined, "#c8efef", "#c8efef"])));
  sprite[744][1] = Fb(oc(3, lf(1, true, [undefined, undefined, undefined, "#87d2e6", "#87d2e6"])));
  sprite[749] = [];
  sprite[749][Na](Fb(Qf(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 0)));
  sprite[749][Na](Fb(Qf(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#eda80d"], 1)));
  sprite[749][Na](Fb(Qf(0.3, 0, ["#0d1b1c", "#392C16", "#5E3E1A", "#704821", "#654320", "#d7990c"], 1)));
  sprite[789] = [];
  sprite[789][Na](Fb(Rf(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 0)));
  sprite[789][Na](Fb(Rf(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
  sprite[789][Na](Fb(Rf(0.7, ["#392C16", "#5E3E1A", "#85592c", "#eda80d"], 1)));
  sprite[776] = [];
  sprite[776][Na](Fb(ed(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 1)));
  sprite[776][Na](Fb(ed(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 1)));
  sprite[776][Na](Fb(ed(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 1)));
  sprite[777] = [];
  sprite[777][Na](Fb(ed(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 0, 0)));
  sprite[777][Na](Fb(ed(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#eda80d"], 1, 0)));
  sprite[777][Na](Fb(ed(0.4, ["#0d1b1c", "#392C16", "#5E3E1A", "#d7990c"], 1, 0)));
  sprite[46] = [];
  sprite[46][0] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#6d5041", "#4f3d35", "#939393", "#5f6061", "#757575"])));
  sprite[46][1] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#0d2e33", "#0b2326", "#485e66", "#1f343f", "#274352"])));
  sprite[50] = [];
  sprite[50][0] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#493e26", "#382e19", "#c4bc51", "#b29c32", "#ada437"])));
  sprite[50][1] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#263947", "#182935", "#43aa82", "#29997c", "#32916c"])));
  sprite[51] = [];
  sprite[51][0] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#262114", "#211108", "#63c9d6", "#29aaa1", "#42aab8"])));
  sprite[51][1] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#73dde5", "#3dc4c0", "#49bdc6"])));
  sprite[52] = [];
  sprite[52][0] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#262114", "#211108", "#b864d6", "#8c29aa", "#9641b5"])));
  sprite[52][1] = Fb(oc(3, Mf(0.7, true, ["#0d1b1c", "#111316", "#0a0b0c", "#8359d3", "#764eb5", "#6f45c2"])));
  sprite[586] = [];
  sprite[586][Na](Fb(mf(0.7, ["#3b330d", "#b5a118", "#c8ac16"])));
  sprite[586][Na](Fb(mf(0.7, ["#524712", "#c7b11c", "#d9ba18"])));
  sprite[586][Na](Fb(mf(0.7, ["#2a2409", "#9f8e14", "#ad9511"])));
  sprite[320] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 188;
    e.height = c * 190;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 33.00567626953125, c * 95.44320678710938);
    f[G](c * 42.00567626953125, c * 87.44320678710938, c * 48.00567626953125, c * 51.443206787109375, c * 74.00567626953125, c * 47.443206787109375);
    f[G](c * 100.00567626953125, c * 42.443206787109375, c * 118.00567626953125, c * 49.443206787109375, c * 131.00567626953125, c * 55.443206787109375);
    f[G](c * 140.00567626953125, c * 70.44320678710938, c * 145.00567626953125, c * 87.44320678710938, c * 152.00567626953125, c * 94.44320678710938);
    f[G](c * 149.00567626953125, c * 99.44320678710938, c * 147.00567626953125, c * 98.44320678710938, c * 141.00567626953125, c * 101.44320678710938);
    f[G](c * 147.00567626953125, c * 108.44320678710938, c * 147.00567626953125, c * 111.44320678710938, c * 147.00567626953125, c * 112.44320678710938);
    f[G](c * 143.00567626953125, c * 112.44320678710938, c * 141.00567626953125, c * 112.44320678710938, c * 137.00567626953125, c * 111.44320678710938);
    f[G](c * 138.00567626953125, c * 117.44320678710938, c * 138.00567626953125, c * 120.44320678710938, c * 138.00567626953125, c * 124.44320678710938);
    f[G](c * 125.00567626953125, c * 107.44320678710938, c * 121.00567626953125, c * 124.44320678710938, c * 110.00567626953125, c * 141.44320678710938);
    f[G](c * 102.00567626953125, c * 158.44320678710938, c * 89.00567626953125, c * 158.44320678710938, c * 80.00567626953125, c * 144.44320678710938);
    f[G](c * 61.00567626953125, c * 111.44320678710938, c * 56.00567626953125, c * 117.44320678710938, c * 48.00567626953125, c * 120.44320678710938);
    f[G](c * 46.00567626953125, c * 118.44320678710938, c * 47.00567626953125, c * 112.44320678710938, c * 48.00567626953125, c * 107.44320678710938);
    f[G](c * 43.00567626953125, c * 111.44320678710938, c * 40.00567626953125, c * 111.44320678710938, c * 37.00567626953125, c * 110.44320678710938);
    f[G](c * 39.50567626953125, c * 104.94320678710938, c * 39.50567626953125, c * 104.94320678710938, c * 42.00567626953125, c * 99.44320678710938);
    f[G](c * 33.00567626953125, c * 99.44320678710938, c * 33.00567626953125, c * 98.44320678710938, c * 33.00567626953125, c * 96.44320678710938);
    f[X]();
    jc(f, d[0], d[0], c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 51.00567626953125, c * 72.53409576416016);
    f[G](c * 48.00567626953125, c * 56.534095764160156, c * 48.00567626953125, c * 49.534095764160156, c * 54.00567626953125, c * 35.534095764160156);
    f[G](c * 58.00567626953125, c * 26.534095764160156, c * 65.00567626953125, c * 27.534095764160156, c * 73.00567626953125, c * 40.534095764160156);
    f[G](c * 81.00567626953125, c * 49.534095764160156, c * 82.00567626953125, c * 50.534095764160156, c * 83.00567626953125, c * 51.534095764160156);
    f[G](c * 77.00567626953125, c * 71.53409576416016, c * 64.00567626953125, c * 75.53409576416016, c * 51.00567626953125, c * 72.53409576416016);
    f[X]();
    jc(f, d[0], d[0], c * 2);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 105.00567626953125, c * 50.53410339355469);
    f[G](c * 112.00567626953125, c * 48.53410339355469, c * 125.00567626953125, c * 21.534103393554688, c * 132.00567626953125, c * 33.53410339355469);
    f[G](c * 138.00567626953125, c * 42.53410339355469, c * 140.00567626953125, c * 64.53410339355469, c * 136.00567626953125, c * 75.53410339355469);
    f[X]();
    jc(f, d[0], d[0], c * 2);
    return e;
  }(1.1, ["#BB0000"]));
  sprite[327] = Fb(oc(Math[D], function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 238;
    e.height = c * 230;
    f[Ia](c * -93, c * -110);
    lc(f, c * 213.5, c * 256.75, c * 75);
    jc(f, d);
    lc(f, c * 213.5, c * 175.75, c * 25);
    jc(f, d);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 156.5, c * 137.75);
    f[G](c * 170.5, c * 173.75, c * 195.5, c * 177.75, c * 209.5, c * 177.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 217.5, c * 178.75);
    f[G](c * 251.5, c * 177.75, c * 263.5, c * 153.75, c * 270.5, c * 140.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 130.5, c * 124.75);
    f[G](c * 153.5, c * 185.75, c * 198.5, c * 185.75, c * 213.5, c * 185.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 214.5, c * 183.75);
    f[G](c * 265.5, c * 192.75, c * 293.5, c * 141.75, c * 297.5, c * 124.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 107.5, c * 213.75);
    f[G](c * 151.5, c * 190.75, c * 198.5, c * 184.75, c * 210.5, c * 184.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 212.5, c * 187.75);
    f[G](c * 258.5, c * 182.75, c * 286.5, c * 194.75, c * 314.5, c * 206.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 102.5, c * 258.75);
    f[G](c * 142.5, c * 200.75, c * 193.5, c * 194.75, c * 211.5, c * 185.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 214.5, c * 192.75);
    f[G](c * 276.5, c * 194.75, c * 306.5, c * 233.75, c * 316.5, c * 246.75);
    f[m] = c * 17;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 219.5, c * 158.75);
    f[G](c * 226.5, c * 159.75, c * 227.5, c * 147.75, c * 219.5, c * 145.75);
    f[X]();
    f[m] = c * 10;
    f[S] = d;
    f[M]();
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 210.5, c * 160.75);
    f[G](c * 203.5, c * 159.75, c * 199.5, c * 146.75, c * 210.5, c * 145.75);
    f[X]();
    f[m] = c * 10;
    f[S] = d;
    f[M]();
    return e;
  }(0.9, "#BB0000")));
  sprite[23] = [];
  sprite[23][0] = Fb(Re(0.55, true, ["#c9a65f", "#ae863f", "#655530", "#4a391c", "#ebdd79", "#4a421c"]));
  sprite[23][1] = Fb(Re(0.55, true, ["#15514f", "#0f3f3d", "#123335", "#0d2d2b", "#2b6664", "#070d16"]));
  sprite[58] = [];
  sprite[58][0] = Fb(Se(0.55, true, ["#252525", "#73583e", "#573f29", "#7d6144"]));
  sprite[58][1] = Fb(Se(0.55, true, ["#0d3b39", "#144642", "#0b3230", "#154f4b"]));
  sprite[25] = [];
  sprite[25][0] = Fb(Te(0.6, true, ["#252525", "#808080", "#4a4a4a", "#9e9c8b", "#615c53", "#686969", "#8a8776", "#555555", "#747474", "#969696", "#454545"]));
  sprite[25][1] = Fb(Te(0.6, true, ["#030d14", "#1c4a4a", "#102d2d", "#255756", "#163d3c", "#194544", "#1f5252", "#184141", "#1c4a4a", "#255756", "#163a3a"]));
  sprite[26] = [];
  sprite[26][0] = Fb(Ue(0.58, 0, ["#dbce71", "#b29c32", "#c4bc51"]));
  sprite[26][1] = Fb(Ue(0.58, 0, ["#2b7c57", "#15543c", "#1a7961"]));
  sprite[27] = [];
  sprite[27][0] = Fb(Ve(0.69, 0, ["#717171", "#485252", "#555555", "#65c7cd", "#4aadad", "#358d8b", "#c1e6ea", "#a6dce4"]));
  sprite[27][1] = Fb(Ve(0.69, 0, ["#183f3f", "#092121", "#123335", "#2b9390", "#277a74", "#1f665f", "#83ddd4", "#59c9c0"]));
  sprite[407] = [];
  sprite[407][0] = [];
  sprite[407][1] = [];
  sprite[407][0][Na](Fb(Be(1.3, ["#0a2d18", "#124c34", "#227248", "#ccedd9", "#2d7a55", "#3c9660", "#afddc1", "#bbefd0", "#0a2d18", "#e4efe8"])));
  sprite[407][0][Na](Fb(Ae(1.5, ["#191919", "#134d35", "#247349", "#afddc1", "#bbefd0", "#e4efe8"])));
  sprite[407][0][Na](Fb(ze(1.5, ["#191919", "#134d35", "#247349", "#cde7d6", "#122d1c", "#e3eee7"])));
  sprite[407][1][Na](Fb(Be(1.3, ["#000000", "#0e3638", "#174a51", "#328587", "#174a51", "#1d5559", "#328587", "#48a8aa", "#0a2728", "#56afac"])));
  sprite[407][1][Na](Fb(Ae(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#48a8aa", "#56afac"])));
  sprite[407][1][Na](Fb(ze(1.5, ["#000000", "#0e3638", "#174a51", "#328587", "#0a2728", "#56afac"])));
  sprite[443] = [];
  sprite[443][0] = Fb(Oe(1, ["#292b2b", "#57aba6", "#80ccca", "#c42333", "#a4dad9", "#3e8294", "#ffffff", "#57aba6", "#ffffff"]));
  sprite[443][1] = Fb(Oe(1, ["#050505", "#1d3a38", "#0b514a", "#200333", "#327570", "#1d3a38", "#ffffff", "#0b514a", "#63afa9"]));
  sprite[445] = [];
  sprite[445][0] = Fb(Pe(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
  sprite[445][1] = Fb(Pe(1, ["#050505", "#327570", "#021724", "#200333"]));
  sprite[446] = [];
  sprite[446][0] = Fb(Qe(1, ["#292b2b", "#a4dad9", "#1f3f3f", "#c1233b"]));
  sprite[446][1] = Fb(Qe(1, ["#050505", "#327570", "#021724", "#200333"]));
  sprite[237] = [];
  sprite[237][0] = [];
  sprite[237][1] = [];
  sprite[237][0] = [IMAGES.ﱣ︄︁︄, IMAGES.ﱢ︄︁︄, IMAGES.ﱞ︅︁︄, IMAGES.ﱠ︅︁︄, IMAGES.ﱟ︅︁︄, IMAGES.ﱡ︅︁︄, IMAGES.ﱣ︅︁︄, IMAGES.ﱢ︅︁︄, IMAGES.ﱞ︆︁︄, IMAGES.ﱠ︆︁︄, IMAGES.ﱟ︆︁︄, IMAGES.ﱡ︆︁︄, IMAGES.ﱣ︆︁︄, IMAGES.ﱢ︆︁︄, IMAGES.ﱞ︇︁︄, IMAGES.ﱠ︇︁︄, IMAGES.ﱟ︇︁︄, IMAGES.ﱡ︇︁︄, IMAGES.ﱣ︇︁︄, IMAGES.ﱢ︇︁︄, IMAGES.ﱞ︈︁︄, IMAGES.ﱠ︈︁︄, IMAGES.ﱟ︈︁︄, IMAGES.ﱡ︈︁︄, IMAGES.ﱣ︈︁︄, IMAGES.ﱢ︈︁︄, IMAGES.ﱞ︉︁︄, IMAGES.ﱠ︉︁︄, IMAGES.ﱟ︉︁︄, IMAGES.ﱡ︉︁︄, IMAGES.ﱣ︉︁︄, IMAGES.ﱢ︉︁︄, IMAGES.ﱞ︊︁︄, IMAGES.ﱠ︊︁︄, IMAGES.ﱟ︊︁︄, IMAGES.ﱡ︊︁︄, IMAGES.ﱣ︊︁︄, IMAGES.ﱢ︊︁︄, IMAGES.ﱞ︋︁︄, IMAGES.ﱠ︋︁︄, IMAGES.ﱟ︋︁︄, IMAGES.ﱡ︋︁︄, IMAGES.ﱣ︋︁︄, IMAGES.ﱢ︋︁︄, IMAGES.ﱞ︌︁︄, IMAGES.ﱠ︌︁︄, IMAGES.ﱟ︌︁︄, IMAGES.ﱡ︌︁︄, IMAGES.ﱣ︌︁︄, IMAGES.ﱢ︌︁︄, IMAGES.ﱞ︍︁︄, IMAGES.ﱠ︍︁︄, IMAGES.ﱟ︍︁︄, IMAGES.ﱡ︍︁︄, IMAGES.ﱣ︍︁︄, IMAGES.ﱢ︍︁︄];
  sprite[237][1] = [IMAGES.ﱞ︎︁︄, IMAGES.ﱠ︎︁︄, IMAGES.ﱟ︎︁︄, IMAGES.ﱡ︎︁︄, IMAGES.ﱣ︎︁︄, IMAGES.ﱢ︎︁︄, IMAGES.ﱞ️︁︄, IMAGES.ﱠ️︁︄, IMAGES.ﱟ️︁︄, IMAGES.ﱡ️︁︄, IMAGES.ﱣ️︁︄, IMAGES.ﱢ️︁︄, IMAGES.ﱞ︀︂︄, IMAGES.ﱠ︀︂︄, IMAGES.ﱟ︀︂︄, IMAGES.ﱡ︀︂︄, IMAGES.ﱣ︀︂︄, IMAGES.ﱢ︀︂︄, IMAGES.ﱞ︁︂︄, IMAGES.ﱠ︁︂︄, IMAGES.ﱟ︁︂︄, IMAGES.ﱡ︁︂︄, IMAGES.ﱣ︁︂︄, IMAGES.ﱢ︁︂︄, IMAGES.ﱞ︂︂︄, IMAGES.ﱠ︂︂︄, IMAGES.ﱟ︂︂︄, IMAGES.ﱡ︂︂︄, IMAGES.ﱣ︂︂︄, IMAGES.ﱢ︂︂︄, IMAGES.ﱞ︃︂︄, IMAGES.ﱠ︃︂︄, IMAGES.ﱟ︃︂︄, IMAGES.ﱡ︃︂︄, IMAGES.ﱣ︃︂︄, IMAGES.ﱢ︃︂︄, IMAGES.ﱞ︄︂︄, IMAGES.ﱠ︄︂︄, IMAGES.ﱟ︄︂︄, IMAGES.ﱡ︄︂︄, IMAGES.ﱣ︄︂︄, IMAGES.ﱢ︄︂︄, IMAGES.ﱞ︅︂︄, IMAGES.ﱠ︅︂︄, IMAGES.ﱟ︅︂︄, IMAGES.ﱡ︅︂︄, IMAGES.ﱣ︅︂︄, IMAGES.ﱢ︅︂︄, IMAGES.ﱞ︆︂︄, IMAGES.ﱠ︆︂︄, IMAGES.ﱟ︆︂︄, IMAGES.ﱡ︆︂︄, IMAGES.ﱣ︆︂︄, IMAGES.ﱢ︆︂︄, IMAGES.ﱞ︇︂︄, IMAGES.ﱠ︇︂︄];
  sprite[670] = [];
  sprite[670][0] = [];
  sprite[670][1] = [];
  sprite[670][0][Na](Fb(Bd(1.1, false, ["#252B28", "#747471", "#83827e"], 0)));
  sprite[670][0][Na](Fb(Bd(0.9, false, ["#252B28", "#747471", "#83827e"], 1)));
  sprite[670][0][Na](Fb(Bd(1, false, ["#252B28", "#747471", "#83827e"], 2)));
  sprite[670][0][Na](Fb(Bd(0.9, false, ["#252B28", "#747471", "#83827e"], 2)));
  sprite[670][1][Na](Fb(Bd(1.1, false, ["#030d14", "#123335", "#183f3f"], 0)));
  sprite[670][1][Na](Fb(Bd(0.9, false, ["#030d14", "#123335", "#183f3f"], 1)));
  sprite[670][1][Na](Fb(Bd(1, false, ["#030d14", "#123335", "#183f3f"], 2)));
  sprite[670][1][Na](Fb(Bd(0.9, false, ["#030d14", "#123335", "#183f3f"], 2)));
  sprite[673] = [];
  sprite[673][0] = [];
  sprite[673][1] = [];
  sprite[673][0][Na](Fb(Bd(1.1, true, ["#252B28", "#58645F", "#75827D"], 2)));
  sprite[673][0][Na](Fb(Bd(0.9, true, ["#252B28", "#58645F", "#75827D"], 2)));
  sprite[673][0][Na](Fb(Bd(1, true, ["#252B28", "#58645F", "#75827D"], 2)));
  sprite[673][0][Na](Fb(Bd(0.9, true, ["#252B28", "#58645F", "#75827D"], 2)));
  sprite[673][1][Na](Fb(Bd(1.1, true, ["#030d14", "#123335", "#183f3f"], 2)));
  sprite[673][1][Na](Fb(Bd(0.9, true, ["#030d14", "#123335", "#183f3f"], 2)));
  sprite[673][1][Na](Fb(Bd(1, true, ["#030d14", "#123335", "#183f3f"], 2)));
  sprite[673][1][Na](Fb(Bd(0.9, true, ["#030d14", "#123335", "#183f3f"], 2)));
  sprite[409] = [];
  sprite[409][0] = [];
  sprite[409][1] = [];
  sprite[409][0][Na](Fb(Cd(1.5, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
  sprite[409][0][Na](Fb(Cd(1.3, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
  sprite[409][0][Na](Fb(Cd(1.1, 0, ["#2b280a", "#ddcf8a", "#f4efc6"])));
  sprite[409][1][Na](Fb(Cd(1.5, 0, ["#0a2728", "#3e8989", "#50a09c"])));
  sprite[409][1][Na](Fb(Cd(1.3, 0, ["#0a2728", "#3e8989", "#50a09c"])));
  sprite[409][1][Na](Fb(Cd(1.1, 0, ["#0a2728", "#3e8989", "#50a09c"])));
  sprite[410] = [];
  sprite[410][0] = [];
  sprite[410][1] = [];
  sprite[410][0][Na](Fb(Dd(1.1, 0, ["#123d38", "#70e0dd", "#95efea"])));
  sprite[410][0][Na](Fb(Dd(0.9, 0, ["#123d38", "#70e0dd", "#95efea"])));
  sprite[410][0][Na](Fb(Dd(0.7, 0, ["#123d38", "#70e0dd", "#95efea"])));
  sprite[410][1][Na](Fb(Dd(1.1, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
  sprite[410][1][Na](Fb(Dd(0.9, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
  sprite[410][1][Na](Fb(Dd(0.7, 0, ["#123d38", "#47b2ac", "#5cccc4"])));
  sprite[115] = [];
  sprite[115][0] = [];
  sprite[115][1] = [];
  sprite[115][0][Na](Fb(Ce(1.7, true, ["#1d051e", "#c27add", "#cd98e5"])));
  sprite[115][0][Na](Fb(Ce(1.5, true, ["#1d051e", "#c27add", "#cd98e5"])));
  sprite[115][0][Na](Fb(Ce(1.3, true, ["#1d051e", "#c27add", "#cd98e5"])));
  sprite[115][1][Na](Fb(Ce(1.7, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
  sprite[115][1][Na](Fb(Ce(1.5, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
  sprite[115][1][Na](Fb(Ce(1.3, true, ["#1d051e", "#41aaa0", "#5cccc4"])));
  sprite[672] = [];
  sprite[672][0] = [];
  sprite[672][1] = [];
  sprite[672][0][Na](Fb(De(1, ["#2d53c4"])));
  sprite[672][1][Na](Fb(De(1, ["#2d53c4"])));
  sprite[690] = [];
  sprite[690][0] = [];
  sprite[690][1] = [];
  sprite[690][0][Na](Fb(De(1, ["#c4912d"])));
  sprite[690][1][Na](Fb(De(1, ["#c4912d"])));
  sprite[674] = [];
  sprite[674][0] = Fb(Le(1, ["#414040"]));
  sprite[674][1] = Fb(Le(1, ["#153635"]));
  sprite[502] = [];
  sprite[502][0] = Fb(Ud(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
  sprite[502][1] = Fb(Ud(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
  sprite[503] = [];
  sprite[503][0] = Fb(Vd(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
  sprite[503][1] = Fb(Vd(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
  sprite[506] = [];
  sprite[506][0] = Fb(Vd(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
  sprite[506][1] = Fb(Vd(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
  sprite[505] = [];
  sprite[505][0] = Fb(Zd(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
  sprite[505][1] = Fb(Zd(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
  sprite[504] = [];
  sprite[504][0] = Fb(Wd(1, false, ["#EBF2F0", "#EBF2F0", "#b2d4d1", "#b2d4d1", "#EBF2F0", "#b2d4d1"]));
  sprite[504][1] = Fb(Wd(1, false, ["#136167", "#136167", "#24878f", "#24878f", "#136167", "#24878f"]));
  sprite[413] = [];
  sprite[413][0] = Fb(Me(0.9, ["#1d051e", "#ffffff", "#c41c50", "#2c2e2d", "#c63450", "#f7e7f0"]));
  sprite[413][1] = Fb(Me(0.9, ["#123d38", "#1a847f", "#200333", "#131919", "#01333a", "#b6f2db"]));
  sprite[439] = [];
  sprite[439][0] = Fb(Ne(0.9, ["#1d051e", "#ffffff", "#c41c50", "#c63450", "#ffffff", "#f7e7f0", "#2b2d2d"]));
  sprite[439][1] = Fb(Ne(0.9, ["#123d38", "#1a847f", "#200333", "#01333a", "#ffffff", "#b6f2db", "#2b2d2d"]));
  sprite[253] = [];
  sprite[812] = [];
  sprite[510] = [];
  sprite[813] = [];
  for (e = 0; e < 2; e++) {
    sprite[253][e] = document[p]("canvas");
    sprite[253][e].width = 193;
    sprite[253][e].height = 193;
    sprite[812][e] = sprite[253][e][T]("2d");
    sprite[510][e] = document[p]("canvas");
    sprite[510][e].width = 600;
    sprite[510][e].height = 600;
    sprite[813][e] = sprite[510][e][T]("2d");
  }
  if (!c.Animation.frame) {
    for (var i = 0; i < 1; i--);
  }
  sprite[469] = [];
  sprite[469][0] = Fb(Le(1, ["#c8e0de"]));
  sprite[469][1] = Fb(Le(1, ["#147071"]));
  sprite[470] = [];
  sprite[470][0] = Fb(Le(1, ["#231912"]));
  sprite[470][1] = Fb(Le(1, ["#021719"]));
  sprite[691] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 253;
    e.height = c * 192;
    f[g]();
    f[Ia](c * 37, c * 94);
    kc(f, c * -7, c * -20, c * 14, c * 37, c * 20);
    f[Qa]();
    jc(f, d[0]);
    f[g]();
    f[Ia](c * 131, c * 94);
    kc(f, c * -84, c * -67, c * 168, c * 134, c * 20);
    f[Qa]();
    jc(f, d[0], d[0], c * 13);
    f[g]();
    f[Ia](c * 223, c * 94.5);
    kc(f, c * -5, c * -18.5, c * 10, c * 37, c * 20);
    f[Qa]();
    jc(f, d[0]);
    f[g]();
    f[Ia](c * 128.5, c * 170.5);
    kc(f, c * -22.5, c * -6.5, c * 45, c * 13, c * 20);
    f[Qa]();
    jc(f, d[0]);
    return e;
  }(0.5, ["#BB0000"]));
  sprite[455] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 161;
    e.height = c * 190;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 9, c * 93);
    f[G](c * 17, c * 95, c * 19, c * 95, c * 21, c * 95);
    f[G](c * 9, c * 83, c * 17, c * 93, c * 4, c * 76);
    f[G](c * 11, c * 75, c * 11, c * 75, c * 18, c * 75);
    f[G](c * 13, c * 67, c * 13, c * 67, c * 7, c * 59);
    f[G](c * 14, c * 59, c * 14, c * 59, c * 21, c * 59);
    f[G](c * 46, c * 35, c * 35, c * 45, c * 49, c * 31);
    f[G](c * 53, c * 24, c * 51, c * 21, c * 51, c * 16);
    f[G](c * 63, c * 23, c * 63, c * 24, c * 69, c * 29);
    f[G](c * 76, c * 7, c * 75, c * 11, c * 76, c * 6);
    f[G](c * 81, c * 12, c * 84, c * 18, c * 89, c * 27);
    f[G](c * 95, c * 25, c * 100, c * 16, c * 105, c * 14);
    f[G](c * 103, c * 25, c * 111, c * 33, c * 110, c * 34);
    f[G](c * 123, c * 48, c * 123, c * 48, c * 136, c * 62);
    f[G](c * 142, c * 60, c * 147, c * 59, c * 155, c * 58);
    f[G](c * 147, c * 65, c * 147, c * 65, c * 139, c * 73);
    f[G](c * 145, c * 73, c * 145, c * 73, c * 151, c * 73);
    f[G](c * 145, c * 80, c * 145, c * 80, c * 138, c * 87);
    f[G](c * 144, c * 88, c * 144, c * 88, c * 150, c * 89);
    f[G](c * 125, c * 103, c * 125, c * 125, c * 113, c * 141);
    f[G](c * 92, c * 178, c * 85, c * 177, c * 76, c * 178);
    f[G](c * 64, c * 179, c * 51, c * 164, c * 35, c * 131);
    f[G](c * 18, c * 95, c * 13, c * 99, c * 8, c * 93);
    f[X]();
    jc(f, d, d, c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 25, c * 63);
    f[G](c * 16, c * 58, c * 17, c * 51, c * 17, c * 33);
    f[G](c * 19, c * 12, c * 21, c * 12, c * 32, c * 17);
    f[G](c * 63, c * 31, c * 66, c * 45, c * 66, c * 54);
    jc(f, d, d, c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 91, c * 53);
    f[G](c * 91, c * 40, c * 98, c * 33, c * 121, c * 20);
    f[G](c * 137, c * 12, c * 137, c * 16, c * 139, c * 27);
    f[G](c * 141, c * 49, c * 140, c * 57, c * 134, c * 64);
    jc(f, d, d, c * 4);
    return e;
  }(0.9, "#BB0000"));
  sprite[456] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 147;
    e.height = c * 172;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 8, c * 50);
    f[G](c * 15, c * 16, c * 49, c * 6, c * 67, c * 6);
    f[G](c * 121, c * 3, c * 128, c * 32, c * 135, c * 48);
    f[G](c * 146, c * 96, c * 124, c * 131, c * 96, c * 135);
    f[G](c * 96, c * 158, c * 79, c * 156, c * 75, c * 156);
    f[G](c * 50, c * 154, c * 53, c * 150, c * 52, c * 135);
    f[G](c * 2, c * 127, c * 3, c * 87, c * 8, c * 50);
    f[X]();
    jc(f, d, d, c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 14, c * 57);
    f[G](c * 2, c * 50, c * 5, c * 22, c * 24, c * 22);
    f[G](c * 41, c * 21, c * 54, c * 32, c * 55, c * 48);
    jc(f, d, d, c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 93, c * 47);
    f[G](c * 94, c * 24, c * 116, c * 21, c * 120, c * 20);
    f[G](c * 144, c * 17, c * 146, c * 52, c * 133, c * 58);
    jc(f, d, d, c * 4);
    return e;
  }(0.9, "#BB0000"));
  sprite[457] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 271;
    e.height = c * 366;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 133, c * 99);
    f[G](c * 186, c * 123, c * 199, c * 152, c * 209, c * 169);
    f[G](c * 228, c * 205, c * 224, c * 245, c * 190, c * 276);
    f[G](c * 161, c * 296, c * 99, c * 292, c * 79, c * 274);
    f[G](c * 49, c * 253, c * 47, c * 214, c * 50, c * 197);
    f[G](c * 61, c * 143, c * 102, c * 113, c * 131, c * 99);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 73, c * 270);
    f[G](c * 79, c * 280, c * 77, c * 280, c * 78, c * 287);
    f[G](c * 78, c * 290, c * 83, c * 291, c * 82, c * 299);
    f[G](c * 81, c * 301, c * 87, c * 301, c * 92, c * 314);
    f[G](c * 94, c * 319, c * 100, c * 321, c * 107, c * 320);
    f[G](c * 111, c * 323, c * 114, c * 324, c * 119, c * 320);
    f[G](c * 137, c * 321, c * 146, c * 323, c * 139, c * 320);
    f[G](c * 141, c * 324, c * 150, c * 324, c * 153, c * 320);
    f[G](c * 168, c * 319, c * 171, c * 316, c * 173, c * 307);
    f[G](c * 180, c * 305, c * 180, c * 301, c * 178, c * 296);
    f[G](c * 183, c * 296, c * 185, c * 289, c * 188, c * 279);
    f[G](c * 171, c * 286, c * 149, c * 290, c * 132, c * 289);
    f[G](c * 101, c * 290, c * 86, c * 280, c * 74, c * 271);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 76, c * 252);
    f[G](c * 85, c * 294, c * 96, c * 314, c * 103, c * 314);
    f[G](c * 106, c * 316, c * 151, c * 314, c * 156, c * 314);
    f[G](c * 169, c * 317, c * 182, c * 285, c * 191, c * 256);
    f[G](c * 134.5, c * 254, c * 134.5, c * 254, c * 78, c * 252);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 84, c * 257);
    f[G](c * 122, c * 273, c * 146, c * 268, c * 179, c * 261);
    f[G](c * 190, c * 258, c * 187, c * 266, c * 178, c * 272);
    f[G](c * 160, c * 284, c * 123, c * 282, c * 100, c * 277);
    f[G](c * 73, c * 260, c * 79, c * 257, c * 84, c * 257);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 125, c * 65);
    f[G](c * 133, c * 45, c * 136, c * 42, c * 141, c * 55);
    f[G](c * 151, c * 96, c * 164, c * 117, c * 175, c * 134);
    f[G](c * 203, c * 181, c * 207, c * 182, c * 208, c * 215);
    f[G](c * 206, c * 240, c * 205, c * 246, c * 184, c * 258);
    f[G](c * 161, c * 267, c * 131, c * 272, c * 86, c * 258);
    f[G](c * 67, c * 252, c * 68, c * 239, c * 64, c * 216);
    f[G](c * 62, c * 194, c * 72, c * 169, c * 92, c * 142);
    f[G](c * 106, c * 121, c * 114, c * 101, c * 125, c * 65);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 115, c * 37);
    f[G](c * 116, c * 28, c * 119, c * 27, c * 126, c * 37);
    f[G](c * 134, c * 48, c * 134, c * 49, c * 132, c * 59);
    f[G](c * 131, c * 67, c * 127, c * 65, c * 120, c * 56);
    f[G](c * 114, c * 49, c * 113, c * 43, c * 115, c * 38);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 146, c * 34);
    f[G](c * 152, c * 28, c * 155, c * 27, c * 157, c * 39);
    f[G](c * 157, c * 45, c * 157, c * 49, c * 150, c * 56);
    f[G](c * 141, c * 66, c * 138, c * 66, c * 138, c * 57);
    f[G](c * 137, c * 50, c * 137, c * 47, c * 141, c * 42);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 143, c * 69);
    f[G](c * 148, c * 56, c * 156, c * 50, c * 158, c * 58);
    f[G](c * 159, c * 64, c * 160, c * 67, c * 153, c * 77);
    f[G](c * 148, c * 83, c * 145, c * 84, c * 143, c * 77);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 149, c * 92);
    f[G](c * 149, c * 89, c * 151, c * 84, c * 156, c * 79);
    f[G](c * 161, c * 73, c * 163, c * 78, c * 162, c * 86);
    f[G](c * 161, c * 91, c * 155, c * 99, c * 152, c * 98);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 111, c * 61);
    f[G](c * 114, c * 51, c * 117, c * 51, c * 124, c * 64);
    f[G](c * 128, c * 68, c * 128, c * 76, c * 126, c * 79);
    f[G](c * 123, c * 84, c * 122, c * 82, c * 115, c * 74);
    f[G](c * 112, c * 67, c * 115, c * 74, c * 115, c * 74);
    f[G](c * 111, c * 68, c * 111, c * 66, c * 111, c * 62);
    f[X]();
    jc(f, d[0]);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 107, c * 81);
    f[G](c * 108, c * 74, c * 112, c * 73, c * 118, c * 84);
    f[G](c * 122, c * 88, c * 122, c * 93, c * 121, c * 98);
    f[G](c * 114, c * 98, c * 113, c * 98, c * 109, c * 90);
    f[G](c * 107, c * 87, c * 106, c * 85, c * 107, c * 82);
    f[X]();
    jc(f, d[0]);
    return e;
  }(1, ["#BB0000"]));
  sprite[460] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 85;
    e.height = c * 145;
    f[Ia](c * -20, c * -95);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 50, c * 105);
    f[G](c * 52, c * 119, c * 64, c * 137, c * 71, c * 146);
    f[G](c * 71, c * 161, c * 74, c * 169, c * 79, c * 179);
    f[G](c * 68, c * 192, c * 70, c * 204, c * 69, c * 216);
    f[G](c * 50, c * 189.5, c * 50, c * 189.5, c * 31, c * 163);
    f[X]();
    jc(f, d);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 44, c * 106);
    f[G](c * 49, c * 90, c * 58, c * 104, c * 51, c * 121);
    f[G](c * 45, c * 143, c * 41, c * 151, c * 37, c * 162);
    f[G](c * 48, c * 180, c * 58, c * 188, c * 76, c * 205);
    f[G](c * 104, c * 209, c * 105, c * 229, c * 92, c * 235);
    f[G](c * 76, c * 239, c * 75, c * 232, c * 56, c * 213);
    f[G](c * 31, c * 187, c * 28, c * 176, c * 23, c * 162);
    f[G](c * 38, c * 131, c * 40, c * 120, c * 44, c * 106);
    f[X]();
    jc(f, d, d, c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 30, c * 159);
    f[G](c * 46, c * 157, c * 59, c * 152, c * 68, c * 148);
    f[G](c * 63, c * 155, c * 52, c * 160, c * 44, c * 164);
    f[G](c * 59, c * 169, c * 66, c * 174, c * 75, c * 178);
    f[G](c * 58, c * 178, c * 49, c * 175, c * 37, c * 174);
    f[X]();
    jc(f, d);
    return e;
  }(0.8, "#BB0000"));
  sprite[461] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 85;
    e.height = c * 145;
    f[Ia](c * -165, c * -95);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 217, c * 103);
    f[G](c * 209, c * 129, c * 203, c * 137, c * 195, c * 146);
    f[G](c * 195, c * 159, c * 194, c * 167, c * 189, c * 178);
    f[G](c * 193, c * 186, c * 196, c * 195, c * 198, c * 216);
    f[G](c * 217.5, c * 189.5, c * 217.5, c * 189.5, c * 237, c * 163);
    f[X]();
    jc(f, d);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 231, c * 163);
    f[G](c * 221, c * 139, c * 218, c * 128, c * 215, c * 114);
    f[G](c * 213, c * 102, c * 220, c * 92, c * 222, c * 107);
    f[G](c * 224, c * 118, c * 233, c * 138, c * 244, c * 161);
    f[G](c * 235, c * 188, c * 224, c * 198, c * 204, c * 221);
    f[G](c * 190, c * 233, c * 190, c * 235, c * 180, c * 235);
    f[G](c * 167, c * 235, c * 164, c * 216, c * 175, c * 211);
    f[G](c * 176, c * 208, c * 181, c * 207, c * 191, c * 205);
    f[G](c * 213, c * 186, c * 218, c * 180, c * 230, c * 163);
    f[X]();
    jc(f, d, d, c * 4);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 234, c * 154);
    f[G](c * 227, c * 156, c * 222, c * 156, c * 199, c * 148);
    f[G](c * 201, c * 151, c * 216, c * 159, c * 224, c * 162);
    f[G](c * 209, c * 169.5, c * 209, c * 169.5, c * 194, c * 177);
    f[G](c * 213.5, c * 175, c * 213.5, c * 175, c * 233, c * 173);
    f[X]();
    jc(f, d);
    return e;
  }(0.8, "#BB0000"));
  sprite[316] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    var g = c * 85;
    var i = c * 115;
    var k = c * 4;
    e.width = g;
    e.height = i;
    f[Ia](c * -130, c * -60);
    f[ua] = 1;
    f[Y]();
    f[G](c * 190, c * 87, c * 201, c * 59, c * 208, c * 64);
    f[G](c * 213, c * 68, c * 204, c * 93, c * 195, c * 109);
    f[G](c * 195, c * 109, c * 202, c * 124, c * 191, c * 141);
    f[G](c * 182, c * 151, c * 164, c * 155, c * 148, c * 144);
    f[G](c * 136, c * 135, c * 138, c * 111, c * 145, c * 104);
    f[G](c * 140, c * 92, c * 131, c * 67, c * 138, c * 63);
    f[G](c * 145, c * 61, c * 153, c * 82, c * 155, c * 96);
    f[G](c * 167, c * 91, c * 178, c * 92, c * 187, c * 98);
    f[X]();
    jc(f, d, d, k);
    return e;
  }(0.9, "#BB0000"));
  sprite[273] = Fb(qc(0.6, "#BB0000"));
  sprite[274] = Fb(qc(0.6, "#1CE7E0"));
  sprite[275] = Fb(qc(0.6, "#DBE71C"));
  sprite[302] = Fb(qc(0.6, "#00BB00"));
  sprite[596] = [];
  sprite[596][0] = Fb(Le(1, ["#dac291"]));
  sprite[596][1] = Fb(Le(1, ["#0D423D"]));
  sprite[692] = [];
  sprite[692][0] = Fb(Le(1, ["#dac291"]));
  sprite[692][1] = Fb(Le(1, ["#0D423D"]));
  sprite[782] = [];
  sprite[782][0] = Fb(vf(0.3, true, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#1a6470"]));
  sprite[782][1] = Fb(vf(0.3, true, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#09373F"]));
  sprite[176] = [];
  sprite[176][0] = Fb(vf(0.3, true, ["#1e2021", "#717273", "#606162", "#a09f9f", "#878787", "#454545"]));
  sprite[176][1] = Fb(vf(0.3, true, ["#1e2021", "#1a4545", "#163a3a", "#245d5d", "#1f5454", "#0b2121"]));
  sprite[121] = [Fb(If(1, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
  sprite[122] = [Fb(If(1, 0, ["#C6AF81", "#C98435", "#B26F31", "#53A4D5", "#388AC7", "#C1C0C0", "#EAEAEA"]))];
  sprite[597] = [];
  sprite[597][0] = [];
  sprite[597][1] = [];
  sprite[597][0][Na](Fb(Ee(1, ["#0B6A84"])));
  sprite[597][0][Na](Fb(Fe(1, ["#0B6A84"])));
  sprite[597][0][Na](Fb(Ge(1, ["#0B6A84"])));
  sprite[597][0][Na](Fb(He(1, ["#0B6A84"])));
  sprite[597][0][Na](Fb(Ie(1, ["#0B6A84"])));
  sprite[597][0][Na](Fb(Je(1, ["#0B6A84"])));
  sprite[597][0][Na](Fb(Ke(1, ["#0B6A84"])));
  sprite[597][1][Na](Fb(Ee(1, ["#09373F"])));
  sprite[597][1][Na](Fb(Fe(1, ["#09373F"])));
  sprite[597][1][Na](Fb(Ge(1, ["#09373F"])));
  sprite[597][1][Na](Fb(He(1, ["#09373F"])));
  sprite[597][1][Na](Fb(Ie(1, ["#09373F"])));
  sprite[597][1][Na](Fb(Je(1, ["#09373F"])));
  sprite[597][1][Na](Fb(Ke(1, ["#09373F"])));
  sprite[686] = [];
  sprite[686][0] = [];
  sprite[686][1] = [];
  sprite[686][0][Na](Fb(ue(1.7, ["#FBEFBC"], 0)));
  sprite[686][0][Na](Fb(ue(1.9, ["#FBEFBC"], 1)));
  sprite[686][0][Na](Fb(ue(1.7, ["#FBEFBC"], 2)));
  sprite[686][1][Na](Fb(ue(1.7, ["#0F4C48"], 0)));
  sprite[686][1][Na](Fb(ue(1.9, ["#0F4C48"], 1)));
  sprite[686][1][Na](Fb(ue(1.7, ["#0F4C48"], 2)));
  sprite[688] = [];
  sprite[688][0] = [];
  sprite[688][1] = [];
  sprite[688][0][Na](Fb(ue(1.8, ["#A9D6D3"], 0)));
  sprite[688][0][Na](Fb(ue(2, ["#A9D6D3"], 1)));
  sprite[688][0][Na](Fb(ue(1.8, ["#A9D6D3"], 2)));
  sprite[688][1][Na](Fb(ue(1.8, ["#115E60"], 0)));
  sprite[688][1][Na](Fb(ue(2, ["#115E60"], 1)));
  sprite[688][1][Na](Fb(ue(1.8, ["#115E60"], 2)));
  sprite[689] = [];
  sprite[689][0] = [];
  sprite[689][1] = [];
  sprite[689][0][Na](Fb(ue(1.9, ["#2A8B9B"], 0)));
  sprite[689][0][Na](Fb(ue(2.1, ["#2A8B9B"], 1)));
  sprite[689][0][Na](Fb(ue(1.9, ["#2A8B9B"], 2)));
  sprite[689][1][Na](Fb(ue(1.9, ["#0F464C"], 0)));
  sprite[689][1][Na](Fb(ue(2.1, ["#0F464C"], 1)));
  sprite[689][1][Na](Fb(ue(1.9, ["#0F464C"], 2)));
  sprite[687] = [];
  sprite[687][0] = [];
  sprite[687][1] = [];
  sprite[687][0][Na](Fb(Qd(0.8, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
  sprite[687][0][Na](Fb(Qd(1, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
  sprite[687][0][Na](Fb(Qd(1.2, ["#231F20", "#0c8e5b", "#037542", "#077b49"])));
  sprite[687][1][Na](Fb(Qd(0.8, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
  sprite[687][1][Na](Fb(Qd(1, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
  sprite[687][1][Na](Fb(Qd(1.2, ["#041e22", "#124949", "#0e3838", "#0a4049"])));
  sprite[631] = [];
  sprite[631][0] = Fb(pf(0.8, ["#1e2021", "#B6222A", "#201851", "#342C7C", "#F4F4F4", "#D3D3D3", "#6765CE", "#593CC6", "#433BAD", "#342C7C", "#052830", "#EAEAEA", "#B6222A", "#FFFFFF"]));
  sprite[631][1] = Fb(pf(0.8, ["#0c0c0d", "#462966", "#081B2D", "#342C7C", "#9AAAAD", "#72898C", "#133556", "#296D9B", "#25557C", "#133556", "#0D2A42", "#EAEAEA", "#462966", "#72898C"]));
  sprite[681] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 376;
    e.height = c * 371;
    f[ua] = 1;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 191.633544921875, c * 123.98580932617188);
    f[G](c * 215.633544921875, c * 85.98580932617188, c * 187.633544921875, c * 71.98580932617188, c * 202.633544921875, c * 19.985809326171875);
    f[G](c * 231.633544921875, c * 68.98580932617188, c * 253.633544921875, c * 71.98580932617188, c * 256.633544921875, c * 93.98580932617188);
    f[G](c * 306.633544921875, c * 64.98580932617188, c * 319.633544921875, c * 61.985809326171875, c * 350.633544921875, c * 58.985809326171875);
    f[G](c * 280.633544921875, c * 86.98580932617188, c * 281.633544921875, c * 106.98580932617188, c * 268.633544921875, c * 130.98580932617188);
    f[G](c * 295.633544921875, c * 158.98580932617188, c * 328.633544921875, c * 155.98580932617188, c * 353.633544921875, c * 90.98580932617188);
    f[G](c * 371.633544921875, c * 158.98580932617188, c * 337.633544921875, c * 210.98580932617188, c * 286.633544921875, c * 209.98580932617188);
    f[G](c * 323.633544921875, c * 230.98580932617188, c * 317.633544921875, c * 274.9858093261719, c * 356.633544921875, c * 305.9858093261719);
    f[G](c * 288.633544921875, c * 297.9858093261719, c * 288.633544921875, c * 265.9858093261719, c * 275.633544921875, c * 266.9858093261719);
    f[G](c * 280.633544921875, c * 294.9858093261719, c * 315.633544921875, c * 306.9858093261719, c * 336.633544921875, c * 316.9858093261719);
    f[G](c * 295.633544921875, c * 318.9858093261719, c * 264.633544921875, c * 302.9858093261719, c * 254.633544921875, c * 289.9858093261719);
    f[G](c * 252.633544921875, c * 301.9858093261719, c * 224.633544921875, c * 315.9858093261719, c * 201.633544921875, c * 356.9858093261719);
    f[G](c * 195.633544921875, c * 313.9858093261719, c * 195.633544921875, c * 308.9858093261719, c * 196.633544921875, c * 307.9858093261719);
    f[G](c * 197.633544921875, c * 289.9858093261719, c * 207.633544921875, c * 283.9858093261719, c * 195.633544921875, c * 258.9858093261719);
    f[G](c * 182.633544921875, c * 282.9858093261719, c * 190.633544921875, c * 287.9858093261719, c * 193.633544921875, c * 297.9858093261719);
    f[G](c * 195.633544921875, c * 306.9858093261719, c * 191.633544921875, c * 334.9858093261719, c * 187.633544921875, c * 354.9858093261719);
    f[G](c * 165.633544921875, c * 320.9858093261719, c * 138.633544921875, c * 307.9858093261719, c * 135.633544921875, c * 288.9858093261719);
    f[G](c * 110.633544921875, c * 318.9858093261719, c * 68.633544921875, c * 323.9858093261719, c * 49.633544921875, c * 320.9858093261719);
    f[G](c * 88.633544921875, c * 308.9858093261719, c * 108.633544921875, c * 284.9858093261719, c * 118.633544921875, c * 258.9858093261719);
    f[G](c * 86.633544921875, c * 264.9858093261719, c * 75.633544921875, c * 310.9858093261719, c * 19.633544921875, c * 304.9858093261719);
    f[G](c * 54.633544921875, c * 276.9858093261719, c * 59.633544921875, c * 214.98580932617188, c * 105.633544921875, c * 205.98580932617188);
    f[G](c * 14.633544921875, c * 201.98580932617188, c * 24.633544921875, c * 141.98580932617188, c * 25.633544921875, c * 82.98580932617188);
    f[G](c * 49.633544921875, c * 168.98580932617188, c * 87.633544921875, c * 141.98580932617188, c * 112.633544921875, c * 123.98580932617188);
    f[G](c * 95.633544921875, c * 75.98580932617188, c * 70.633544921875, c * 68.98580932617188, c * 35.633544921875, c * 50.985809326171875);
    f[G](c * 70.633544921875, c * 53.985809326171875, c * 102.633544921875, c * 65.98580932617188, c * 125.633544921875, c * 84.98580932617188);
    f[G](c * 133.633544921875, c * 69.98580932617188, c * 166.633544921875, c * 42.985809326171875, c * 176.633544921875, c * 21.985809326171875);
    f[G](c * 185.633544921875, c * 49.985809326171875, c * 168.633544921875, c * 95.98580932617188, c * 191.633544921875, c * 121.98580932617188);
    f[X]();
    jc(f, d[0], d[0], c * 12);
    return e;
  }(0.8, ["#B6222A"]));
  sprite[667] = [];
  sprite[667][0] = Fb(Af(0.8, 0, ["#1e2021", "#961B1B", "#702727", "#C43B3B", "#d15151", "#B71C1C", "#E8E8E8", "#752E2E", "#891818"]));
  sprite[667][1] = Fb(Af(0.8, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966", "#321C56", "#1C073D", "#FFFFFF", "#1C0833", "#1B1238"]));
  sprite[682] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 158;
    e.height = c * 201;
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 96.5, c * 76.421875);
    f[G](c * 100.5, c * 64.421875, c * 103.5, c * 62.421875, c * 110.5, c * 65.421875);
    f[G](c * 116.5, c * 66.421875, c * 117.5, c * 67.421875, c * 112.5, c * 73.421875);
    f[G](c * 107, c * 79.921875, c * 107, c * 79.921875, c * 101.5, c * 86.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 61.5, c * 78.421875);
    f[G](c * 57.5, c * 73.421875, c * 51.5, c * 66.421875, c * 45.5, c * 68.421875);
    f[G](c * 32.5, c * 73.421875, c * 38.5, c * 75.421875, c * 46.5, c * 81.421875);
    f[G](c * 51.5, c * 84.921875, c * 51.5, c * 84.921875, c * 56.5, c * 88.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 116.5, c * 127.421875);
    f[G](c * 124.5, c * 108.421875, c * 129.5, c * 104.421875, c * 141.5, c * 107.421875);
    f[G](c * 156.5, c * 112.421875, c * 153.5, c * 113.421875, c * 132.5, c * 134.421875);
    f[G](c * 123.5, c * 141.921875, c * 123.5, c * 141.921875, c * 114.5, c * 149.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 41.5, c * 134.421875);
    f[G](c * 30.5, c * 119.421875, c * 25.5, c * 111.421875, c * 12.5, c * 115.421875);
    f[G](c * 4.5, c * 120.421875, c * 4.5, c * 121.421875, c * 26.5, c * 142.421875);
    f[G](c * 35, c * 149.921875, c * 35, c * 149.921875, c * 43.5, c * 157.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 78.5, c * 51.921875);
    f[G](c * 99.5, c * 75.921875, c * 110.5, c * 96.921875, c * 118.5, c * 120.921875);
    f[G](c * 121.5, c * 140.921875, c * 107.5, c * 179.921875, c * 75.5, c * 183.921875);
    f[G](c * 30.5, c * 169.921875, c * 37.5, c * 131.921875, c * 34.5, c * 120.921875);
    f[G](c * 41.5, c * 89.921875, c * 61.5, c * 67.921875, c * 78.5, c * 51.921875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 72.5, c * 72.421875);
    f[G](c * 76.5, c * 79.421875, c * 79.5, c * 80.421875, c * 83.5, c * 73.421875);
    f[G](c * 80.5, c * 96.921875, c * 79.5, c * 114.421875, c * 77.5, c * 120.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 42.5, c * 163.421875);
    f[G](c * 62.5, c * 185.421875, c * 86.5, c * 186.421875, c * 111.5, c * 165.421875);
    f[G](c * 107.5, c * 176.421875, c * 95.5, c * 187.421875, c * 75.5, c * 188.421875);
    f[G](c * 53.5, c * 188.421875, c * 43.5, c * 171.421875, c * 42.5, c * 164.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 79.5, c * 61.421875);
    f[G](c * 88.5, c * 31.421875, c * 81.5, c * 16.421875, c * 75.5, c * 7.421875);
    f[G](c * 77.5, c * 28.421875, c * 77.5, c * 37.421875, c * 68.5, c * 42.421875);
    f[G](c * 79.5, c * 57.421875, c * 79.5, c * 58.421875, c * 80.5, c * 61.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 72.5, c * 72.421875);
    f[G](c * 76.5, c * 79.421875, c * 79.5, c * 80.421875, c * 83.5, c * 73.421875);
    f[G](c * 80.5, c * 96.921875, c * 79.5, c * 114.421875, c * 77.5, c * 120.421875);
    f[X]();
    jc(f, d[0], d[0], c * 10);
    return e;
  }(0.8, ["#B6222A"]));
  sprite[896] = [];
  sprite[896][0] = Fb(Bc(0.4, 0, ["#1e2021", "#db6f26", "#ffffff", "#000000", "#833813"], 0));
  sprite[896][1] = Fb(Bc(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
  sprite[897] = [];
  sprite[897][0] = Fb(Bc(0.4, 0, ["#1e2021", "#d35e35", "#ffffff", "#000000", "#000000"], 1));
  sprite[897][1] = Fb(Bc(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 1));
  sprite[Rb.ﱞ︈︅︄] = [];
  sprite[Rb.ﱞ︈︅︄][0] = Fb(Bc(0.4, 0, ["#1e2021", "#2973a5", "#ffffff", "#ffff00", "#000000", "#03243f", "#f2ec30", "#162f6d"], 0));
  sprite[Rb.ﱞ︈︅︄][1] = Fb(Bc(0.4, 0, ["#0c0c0d", "#21112D", "#281A49", "#462966"], 0));
  sprite[898] = Fb(Cc(0.4, ["#B6222A"]));
  sprite[899] = Fb(Cc(0.4, ["#B6222A"]));
  sprite[Rb.ﱠ︈︅︄] = Fb(Cc(0.4, ["#B6222A"]));
  sprite[224] = Fb(ae(0.35, true, ["#0d1b1c", "#c04933", "#a33e2b", "#ee593d", "#c04933"]));
  sprite[223] = Fb(qd(0.35, true, ["#1e2021", "#ed5f4f", "#ce4545", "#ffffff", "#e2dad7"]));
  sprite[880] = [];
  sprite[880][0] = Fb(md(0.35, 0, ["#1e2021", "#e45936", "#B6222A", "#B6222A", "#FFFFFF"], 1));
  sprite[880][1] = Fb(md(0.35, 0, ["#0c0c0d", "#613577", "#462966", "#1C073D", "#FFFFFF"], 1));
  sprite[881] = [];
  sprite[881][0] = Fb(md(0.35, 0, ["#1e2021", "#e45936", "#ffffff", "#181414", "#FFFFFF"], 0));
  sprite[881][1] = Fb(md(0.35, 0, ["#0c0c0d", "#34255d", "#563f83", "#180f21", "#FFFFFF"], 0));
  sprite[888] = [];
  sprite[888][0] = Fb(od(0.35, 0, ["#1e2021", "#e45936", "#ffffff"]));
  sprite[888][1] = Fb(od(0.35, 0, ["#0c0c0d", "#34255d", "#563f83"]));
  sprite[889] = [];
  sprite[889][0] = Fb(pd(0.42, 0, ["#1e2021", "#e45936", "#ffffff"]));
  sprite[889][1] = Fb(pd(0.42, 0, ["#0c0c0d", "#34255d", "#563f83"]));
  sprite[890] = [];
  sprite[890][0] = Fb(od(0.35, 0, ["#1e2021", "#e45936", "#B6222A"]));
  sprite[890][1] = Fb(od(0.35, 0, ["#0c0c0d", "#613577", "#462966"]));
  sprite[891] = [];
  sprite[891][0] = Fb(pd(0.42, 0, ["#1e2021", "#e45936", "#B6222A"]));
  sprite[891][1] = Fb(pd(0.42, 0, ["#0c0c0d", "#613577", "#462966"]));
  sprite[882] = Fb(nd(0.35, ["#B6222A"]));
  sprite[883] = Fb(od(0.35, 0, [undefined, "#B6222A"]));
  sprite[884] = Fb(pd(0.35, 0, [undefined, "#B6222A"]));
  sprite[885] = Fb(nd(0.35, ["#22E066"]));
  sprite[886] = Fb(od(0.35, 0, [undefined, "#22E066"]));
  sprite[887] = Fb(pd(0.35, 0, [undefined, "#22E066"]));
  sprite[48] = [];
  sprite[48][0] = Fb(Jd(0.3, true, ["#1e2021", "#65A8B7", "#2E85A0", "#14275B", "#081826", "#1A3163", "#0C1944", "#89C4CE", "#2E85A0"]));
  sprite[48][1] = Fb(Jd(0.3, true, ["#0c0c0d", "#89C9C7", "#469E95", "#092C38", "#072021", "#0E343D", "#071F2D", "#9FD3D3", "#135367"]));
  sprite[47] = [];
  sprite[47][0] = Fb(Kd(0.45, true, ["#C4BC51", "#B29C32", "#201851", "#652D8E", "#1e2021", "#2E85A0"]));
  sprite[47][1] = Fb(Kd(0.45, true, ["#235050", "#357472", "#081B2D", "#342C7C", "#0c0c0d", "#135367"]));
  sprite[135] = [];
  sprite[135][0] = Fb(yf(0.63, true, ["#1e2021", "#352E1E", "#4C3B19", "#574122"]));
  sprite[135][1] = Fb(yf(0.63, true, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
  sprite[119] = [];
  sprite[119][0] = Fb(uf(1, true, ["#1e2021", "#332715", "#4C3B19", "#574122"]));
  sprite[119][1] = Fb(uf(1, true, ["#0c0c0d", "#071f22", "#0d2e33", "#184747"]));
  sprite[215] = [];
  sprite[215][0] = IMAGES.ﱞ︀︅︄;
  sprite[215][1] = IMAGES.ﱠ︀︅︄;
  sprite[184] = [];
  sprite[184][0] = Fb(uc(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
  sprite[184][1] = Fb(uc(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
  sprite[847] = [sprite[184]];
  sprite[847][1] = [];
  sprite[847][2] = [];
  sprite[847][1][0] = Fb(vc(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
  sprite[847][1][1] = Fb(vc(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
  sprite[847][2][0] = Fb(wc(0.59, 0, ["#0d1b1c", "#44301b", "#57442a", "#523e26"]));
  sprite[847][2][1] = Fb(wc(0.59, 0, ["#0c0c0d", "#062124", "#10373d", "#0f3333"]));
  sprite[49] = [];
  sprite[49][0] = Fb(oc(3 - Math[D] / 2, zf(0.6, true, ["#1e2021", "#674C2A", "#4C3B19", "#594225", "#1678a2"])));
  sprite[49][1] = Fb(oc(3 - Math[D] / 2, zf(0.6, true, ["#0c0c0d", "#07383c", "#0c4e53", "#042b2e", "#0c5975", "#11546c"])));
  sprite[722] = [];
  sprite[722][0] = Fb(Lc(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#8b1008"], 0));
  sprite[722][1] = Fb(Lc(0.3, ["#1F5453", "#123335", "#1D4947", "#1F5453", "#0c2629"], 0));
  sprite[792] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 650;
    e.height = c * 650;
    f[I](1.9, 1.9);
    f[g]();
    f[Ia](c * 202.5, c * 147.5);
    kc(f, c * -96.5, c * -21.5, c * 193, c * 193, c * 0);
    f[Qa]();
    jc(f, d[4], d[1], c * 12);
    f[g]();
    f[Ia](c * 203.5, c * 121.5);
    kc(f, c * -115.5, c * -20.5, c * 231, c * 41, c * 10);
    f[Qa]();
    jc(f, d[3], d[1], c * 12);
    f[g]();
    f[Ia](c * 203.5, c * 299);
    kc(f, c * -115.5, c * -20, c * 231, c * 40, c * 10);
    f[Qa]();
    jc(f, d[3], d[1], c * 12);
    f[g]();
    f[Ia](c * 298.5, c * 210);
    kc(f, c * -20.5, c * -109, c * 41, c * 218, c * 10);
    f[Qa]();
    jc(f, d[3], d[1], c * 12);
    f[g]();
    f[Ia](c * 108.5, c * 210);
    kc(f, c * -20.5, c * -109, c * 41, c * 218, c * 10);
    f[Qa]();
    jc(f, d[3], d[1], c * 12);
    f[g]();
    f[Ia](c * 204, c * 121.5);
    kc(f, c * -92, c * -9.5, c * 184, c * 19, c * 10);
    f[Qa]();
    jc(f, d[3], d[3], c * 10);
    f[g]();
    f[Ia](c * 197, c * 299);
    kc(f, c * 85, c * -9, c * -170, c * 18, c * 10);
    f[Qa]();
    jc(f, d[3], d[3], c * 10);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 94, c * 317);
    f[G](c * 110.5, c * 299.5, c * 110.5, c * 299.5, c * 127, c * 282);
    f[X]();
    jc(f, undefined, d[1], c * 12);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 279, c * 142);
    f[G](c * 296.5, c * 125.5, c * 296.5, c * 125.5, c * 314, c * 109);
    f[X]();
    jc(f, undefined, d[1], c * 12);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 93, c * 106);
    f[G](c * 110.5, c * 124, c * 110.5, c * 124, c * 128, c * 142);
    f[X]();
    jc(f, undefined, d[1], c * 12);
    f[Y]();
    f[Ga] = "round";
    f[ea] = "round";
    f[K](c * 281, c * 282);
    f[G](c * 296, c * 297.5, c * 296, c * 297.5, c * 311, c * 313);
    f[X]();
    jc(f, undefined, d[1], c * 12);
    return e;
  }(0.3, ["#ad8850", "#714f24", "#9f7d4a", "#b38e59", "#413624"]));
  sprite[723] = Fb(function (c, d) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = c * 400;
    e.height = c * 400;
    f[g]();
    f[Ia](c * 202.5, c * 147.5);
    kc(f, c * -96.5, c * -21.5, c * 193, c * 43, c * 0);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    f[g]();
    f[Ia](c * 202.5, c * 190.5);
    kc(f, c * 96.5, c * -21.5, c * -193, c * 43, c * 0);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    f[g]();
    f[Ia](c * 202.5, c * 233.5);
    kc(f, c * -96.5, c * -20.5, c * 193, c * 41, c * 0);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    f[g]();
    f[Ia](c * 202.5, c * 275);
    kc(f, c * 96.5, c * -21, c * -193, c * 42, c * 0);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    f[g]();
    f[Ia](c * 203.5, c * 121.5);
    kc(f, c * -115.5, c * -20.5, c * 231, c * 41, c * 10);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    f[g]();
    f[Ia](c * 203.5, c * 299);
    kc(f, c * -115.5, c * -20, c * 231, c * 40, c * 10);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    f[g]();
    f[Ia](c * 298.5, c * 210);
    kc(f, c * -20.5, c * -109, c * 41, c * 218, c * 10);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    f[g]();
    f[Ia](c * 108.5, c * 210);
    kc(f, c * -20.5, c * -109, c * 41, c * 218, c * 10);
    f[Qa]();
    jc(f, d[0], d[0], c * 12);
    return e;
  }(0.3, ["#BB0000"]));
  sprite[652] = Uc(1, [{
    f: Bf,
    x: 0,
    y: 0,
    a: 1,
    r: 0,
    c: ["#B3AA8E", "#817961", "#EBEAE2", "#E0DFD8"]
  }], 0.25, ["#d2c77b", "#e7dc8f", "#bfb360"], 0.7);
  sprite[144] = Uc(1.5, [{
    f: hf,
    x: 0,
    y: 0,
    a: 1,
    r: 0,
    c: ["#120202", "#750a0a", "#991616", "#120202"]
  }], 0.45, ["#5bbcc9", "#73d2df", "#4daab6"], 0.9);
  sprite[663] = Nf(0.35, ["#072428", "#67A242", "#67A242"], 0);
  sprite[664] = Nf(0.35, ["#172130", "#649BB2", "#FFFFFF", "#FFFFFF", "#90C2D3", "#649BB2", "#84BDD1", "#2F5866"], 1);
  sprite[665] = Nf(0.35, ["#3F0B11", "#B13424", "#FFFFFF", "#B13424", "#7e180b"], 2);
  sprite[666] = Nf(0.35, ["#1B2F4C", "#29488E", "#76c3e8", "#ffffff"], 3);
  if (mobile) {
    sprite[272] = Fb(function (c) {
      var d = document[p]("canvas");
      var e = d[T]("2d");
      var f = c * 200;
      var g = c * 180;
      var i = c * 8;
      d.width = f;
      d.height = g;
      e[Y]();
      kc(e, 0, 0, f, g - i, i);
      e[ua] = 0.8;
      jc(e, "#1D6055");
      e[ua] = 1;
      var k = zd(c, "Leaderboard", 25, "#FFF");
      e[r](k, (f - k.width) / 2, c * 5);
      return d;
    }(1));
  } else {
    sprite[272] = Fb(function (c) {
      var d = document[p]("canvas");
      var e = d[T]("2d");
      var f = c * 200;
      var g = c * 270;
      var i = c * 8;
      d.width = f;
      d.height = g + 20;
      e[Y]();
      kc(e, 0, 0, f, g - i, i);
      e[ua] = 0.5;
      jc(e, "#1D6055");
      e[ua] = 1;
      var k = zd(c, "Leaderboard", 25, "#FFF");
      e[r](k, (f - k.width) / 2, c * 5);
      return d;
    }(1));
  }
  if (mobile) {
    sprite[261] = Fb(function (c) {
      var d = document[p]("canvas");
      var e = d[T]("2d");
      var f = c * 335;
      var g = c * 250;
      var i = c * 120;
      var k = c * 20;
      var m = c * 35;
      var n = c * 65;
      var o = c * 2;
      var q = c * 4;
      d.width = f;
      d.height = i;
      e[Y]();
      e[Ia](0, c * 15);
      kc(e, n, 0, g, k, o);
      jc(e, null, "#69A148", q);
      e[Ia](0, m);
      kc(e, n, 0, g, k, o);
      jc(e, null, "#AF352A", q);
      e[Ia](0, m);
      kc(e, n, 0, g, k, o);
      jc(e, null, "#669BB1", q);
      return d;
    }(0.75));
  } else {
    sprite[261] = Fb(function (c) {
      var d = document[p]("canvas");
      var e = d[T]("2d");
      var f = c * 950;
      var g = c * 180;
      var i = c * 50;
      var k = c * 20;
      var m = c * 240;
      var n = c * 35;
      var o = c * 1;
      var q = c * 4;
      var s = c * 4;
      d.width = f;
      d.height = i;
      e[Ia](0, c * 15);
      kc(e, n, o, g, k, q);
      jc(e, null, "#69A148", s);
      var t = sprite[663];
      e[r](t, 17, -8);
      e[Ia](m, 0);
      kc(e, n, o, g, k, q);
      jc(e, null, "#AF352A", s);
      t = sprite[665];
      e[r](t, 17, -9);
      e[Ia](m, 0);
      kc(e, n, o, g, k, q);
      jc(e, null, "#669BB1", s);
      t = sprite[664];
      e[r](t, 17, -8);
      e[Ia](m, 0);
      kc(e, n, o, g, k, q);
      jc(e, null, "#074A87", s);
      t = sprite[666];
      e[r](t, 17, -8);
      return d;
    }(1));
  }
  if (mobile) {
    sprite[602] = Fb(Of(0.75));
  } else {
    sprite[602] = Fb(Of(1));
  }
  sprite[786] = Fb(Te(0.16, true, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"]));
  sprite[531] = Fb(oc(5.8, kd(0.15, true, ["rgba(0, 0, 0, 0)", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF"])));
  sprite[277] = [];
  sprite[501] = [];
  for (e = 0; e < Ki.ﱟ︈︅︄ + 2; e++) {
    sprite[501][e] = zd(1, "" + (e + 1), 12, "#FFF");
  }
  sprite[702] = [];
  sprite[702][Na](Fb(Pf(0.12, ["#442F19", "#2C2112", "#C09D6F", "#A37943", "#eda80d"])));
  sprite[702][Na](Fb(Pf(0.12, ["#553b20", "#3e2f1a", "#d1ad7d", "#b3864c", "#eda80d"], 1)));
  sprite[702][Na](Fb(Pf(0.12, ["#30200f", "#20180c", "#a78559", "#855f2f", "#b37d08"], 1)));
  sprite[719] = [];
  sprite[719][Na](Fb(function (c) {
    var d = document[p]("canvas");
    var e = d[T]("2d");
    d.width = c * 321;
    d.height = c * 345;
    e[Ia](0, c * 5);
    e[Ia](0, c * 20);
    lc(e, c * 160.5, c * 159.5, c * 156.39595138242822);
    jc(e, "#322413", "#322413", c * 4);
    e[Ia](0, c * -20);
    lc(e, c * 160.5, c * 159.5, c * 156.39595138242822);
    jc(e, "#392C16", "#5E3E1A", c * 10);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 31.999969482421875, c * 163.07290649414062);
    e[G](c * 22.999969482421875, c * 67.07290649414062, c * 106, c * 20.072906494140625, c * 162, c * 23.072906494140625);
    e[G](c * 269.9999694824219, c * 31.072906494140625, c * 292.9999694824219, c * 120.07290649414062, c * 294.9999694824219, c * 161.07290649414062);
    e[G](c * 165.49996948242188, c * 162.07290649414062, c * 165.49996948242188, c * 162.07290649414062, c * 35.999969482421875, c * 163.07290649414062);
    e[X]();
    jc(e, "#12432D");
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 32.999969482421875, c * 165.07290649414062);
    e[G](c * 16.999969482421875, c * 221.07290649414062, c * 85, c * 289.0729064941406, c * 156, c * 294.0729064941406);
    e[G](c * 263.9999694824219, c * 293.0729064941406, c * 295.9999694824219, c * 199.07290649414062, c * 294.9999694824219, c * 159.07290649414062);
    e[X]();
    jc(e, "#3A2A0D");
    lc(e, c * 161, c * 158.07290649414062, c * 133.4053971921676);
    jc(e, undefined, "#5E3E1A", c * 10);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 31.999969482421875, c * 161.62844848632812);
    e[G](c * 162.49996948242188, c * 161.62844848632812, c * 162.49996948242188, c * 161.62844848632812, c * 292.9999694824219, c * 161.62844848632812);
    e[X]();
    jc(e, undefined, "#5E3E1A", c * 12);
    e[Ia](0, c * 8);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 66, c * 158.29513549804688);
    e[G](c * 86, c * 158.29513549804688, c * 86, c * 158.29513549804688, c * 106, c * 158.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 57.999969482421875, c * 117.29513549804688);
    e[G](c * 85, c * 128.29513549804688, c * 85, c * 128.29513549804688, c * 113, c * 139.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 95, c * 90.29513549804688);
    e[G](c * 112, c * 105.79513549804688, c * 112, c * 105.79513549804688, c * 129, c * 121.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 116, c * 52.850677490234375);
    e[G](c * 130, c * 83.85067749023438, c * 130, c * 83.85067749023438, c * 144, c * 114.85067749023438);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 159, c * 61.295135498046875);
    e[G](c * 160.49996948242188, c * 92.29513549804688, c * 160.49996948242188, c * 92.29513549804688, c * 160, c * 123.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 203, c * 51.295135498046875);
    e[G](c * 190.49996948242188, c * 83.29513549804688, c * 190.49996948242188, c * 83.29513549804688, c * 176, c * 115.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 225, c * 89.29513549804688);
    e[G](c * 210.49996948242188, c * 104.79513549804688, c * 210.49996948242188, c * 104.79513549804688, c * 194, c * 120.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 266.9999694824219, c * 112.29513549804688);
    e[G](c * 233.49996948242188, c * 127.29513549804688, c * 233.49996948242188, c * 127.29513549804688, c * 199, c * 142.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 256.9999694824219, c * 155.29513549804688);
    e[G](c * 238.49996948242188, c * 156.29513549804688, c * 238.49996948242188, c * 156.29513549804688, c * 219, c * 157.29513549804688);
    e[X]();
    jc(e, undefined, "#c7a726", c * 12);
    e[Ia](0, c * -8);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 66, c * 158.29513549804688);
    e[G](c * 86, c * 158.29513549804688, c * 86, c * 158.29513549804688, c * 106, c * 158.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 57.999969482421875, c * 117.29513549804688);
    e[G](c * 85, c * 128.29513549804688, c * 85, c * 128.29513549804688, c * 113, c * 139.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 95, c * 90.29513549804688);
    e[G](c * 112, c * 105.79513549804688, c * 112, c * 105.79513549804688, c * 129, c * 121.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 116, c * 52.850677490234375);
    e[G](c * 130, c * 83.85067749023438, c * 130, c * 83.85067749023438, c * 144, c * 114.85067749023438);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 159, c * 61.295135498046875);
    e[G](c * 160.49996948242188, c * 92.29513549804688, c * 160.49996948242188, c * 92.29513549804688, c * 160, c * 123.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 203, c * 51.295135498046875);
    e[G](c * 190.49996948242188, c * 83.29513549804688, c * 190.49996948242188, c * 83.29513549804688, c * 176, c * 115.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 225, c * 89.29513549804688);
    e[G](c * 210.49996948242188, c * 104.79513549804688, c * 210.49996948242188, c * 104.79513549804688, c * 194, c * 120.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 266.9999694824219, c * 112.29513549804688);
    e[G](c * 233.49996948242188, c * 127.29513549804688, c * 233.49996948242188, c * 127.29513549804688, c * 199, c * 142.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 256.9999694824219, c * 155.29513549804688);
    e[G](c * 238.49996948242188, c * 156.29513549804688, c * 238.49996948242188, c * 156.29513549804688, c * 219, c * 157.29513549804688);
    e[X]();
    jc(e, undefined, "#EDCE4F", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 94.00003051757812, c * 164.40341186523438);
    e[G](c * 162.50003051757812, c * 164.40341186523438, c * 230.00003051757812, c * 165.40341186523438, c * 231.00003051757812, c * 164.40341186523438);
    e[G](c * 214.00003051757812, c * 267.4034118652344, c * 92.00003051757812, c * 243.40341186523438, c * 93.00003051757812, c * 165.40341186523438);
    e[X]();
    jc(e, "#704618", "#5D3D1A", c * 8);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 96, c * 166);
    e[G](c * 88, c * 117, c * 129, c * 92, c * 161, c * 91);
    e[G](c * 201, c * 90, c * 223, c * 121, c * 230, c * 161);
    e[X]();
    jc(e, "#ECBE35", "#EDCE4F", c * 8);
    lc(e, c * 160.00003051757812, c * 166.49432373046875, c * 28.30194339616981);
    jc(e, "#392C16", "#5E3E1A", c * 10);
    return d;
  }(0.22)));
  sprite[719][Na](Fb(function (c) {
    var d = document[p]("canvas");
    var e = d[T]("2d");
    d.width = c * 321;
    d.height = c * 345;
    e[Ia](0, c * 5);
    e[Ia](0, c * 20);
    lc(e, c * 160.5, c * 159.5, c * 156.39595138242822);
    jc(e, "#322413", "#322413", c * 4);
    e[Ia](0, c * -20);
    lc(e, c * 160.5, c * 159.5, c * 156.39595138242822);
    jc(e, "#392C16", "#5E3E1A", c * 10);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 31.999969482421875, c * 163.07290649414062);
    e[G](c * 22.999969482421875, c * 67.07290649414062, c * 106, c * 20.072906494140625, c * 162, c * 23.072906494140625);
    e[G](c * 269.9999694824219, c * 31.072906494140625, c * 292.9999694824219, c * 120.07290649414062, c * 294.9999694824219, c * 161.07290649414062);
    e[G](c * 165.49996948242188, c * 162.07290649414062, c * 165.49996948242188, c * 162.07290649414062, c * 35.999969482421875, c * 163.07290649414062);
    e[X]();
    jc(e, "#3A2A0D");
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 32.999969482421875, c * 165.07290649414062);
    e[G](c * 16.999969482421875, c * 221.07290649414062, c * 85, c * 289.0729064941406, c * 156, c * 294.0729064941406);
    e[G](c * 263.9999694824219, c * 293.0729064941406, c * 295.9999694824219, c * 199.07290649414062, c * 294.9999694824219, c * 159.07290649414062);
    e[X]();
    jc(e, "#071A1B");
    lc(e, c * 161, c * 158.07290649414062, c * 133.4053971921676);
    jc(e, undefined, "#5E3E1A", c * 10);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 31.999969482421875, c * 161.62844848632812);
    e[G](c * 162.49996948242188, c * 161.62844848632812, c * 162.49996948242188, c * 161.62844848632812, c * 292.9999694824219, c * 161.62844848632812);
    e[X]();
    jc(e, undefined, "#5E3E1A", c * 12);
    e[Ia](0, c * 8);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 66, c * 158.29513549804688);
    e[G](c * 86, c * 158.29513549804688, c * 86, c * 158.29513549804688, c * 106, c * 158.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 57.999969482421875, c * 117.29513549804688);
    e[G](c * 85, c * 128.29513549804688, c * 85, c * 128.29513549804688, c * 113, c * 139.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 95, c * 90.29513549804688);
    e[G](c * 112, c * 105.79513549804688, c * 112, c * 105.79513549804688, c * 129, c * 121.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 116, c * 52.850677490234375);
    e[G](c * 130, c * 83.85067749023438, c * 130, c * 83.85067749023438, c * 144, c * 114.85067749023438);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 159, c * 61.295135498046875);
    e[G](c * 160.49996948242188, c * 92.29513549804688, c * 160.49996948242188, c * 92.29513549804688, c * 160, c * 123.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 203, c * 51.295135498046875);
    e[G](c * 190.49996948242188, c * 83.29513549804688, c * 190.49996948242188, c * 83.29513549804688, c * 176, c * 115.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 225, c * 89.29513549804688);
    e[G](c * 210.49996948242188, c * 104.79513549804688, c * 210.49996948242188, c * 104.79513549804688, c * 194, c * 120.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 266.9999694824219, c * 112.29513549804688);
    e[G](c * 233.49996948242188, c * 127.29513549804688, c * 233.49996948242188, c * 127.29513549804688, c * 199, c * 142.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 256.9999694824219, c * 155.29513549804688);
    e[G](c * 238.49996948242188, c * 156.29513549804688, c * 238.49996948242188, c * 156.29513549804688, c * 219, c * 157.29513549804688);
    e[X]();
    jc(e, undefined, "#281C08", c * 12);
    e[Ia](0, c * -8);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 66, c * 158.29513549804688);
    e[G](c * 86, c * 158.29513549804688, c * 86, c * 158.29513549804688, c * 106, c * 158.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 57.999969482421875, c * 117.29513549804688);
    e[G](c * 85, c * 128.29513549804688, c * 85, c * 128.29513549804688, c * 113, c * 139.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 95, c * 90.29513549804688);
    e[G](c * 112, c * 105.79513549804688, c * 112, c * 105.79513549804688, c * 129, c * 121.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 116, c * 52.850677490234375);
    e[G](c * 130, c * 83.85067749023438, c * 130, c * 83.85067749023438, c * 144, c * 114.85067749023438);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 159, c * 61.295135498046875);
    e[G](c * 160.49996948242188, c * 92.29513549804688, c * 160.49996948242188, c * 92.29513549804688, c * 160, c * 123.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 203, c * 51.295135498046875);
    e[G](c * 190.49996948242188, c * 83.29513549804688, c * 190.49996948242188, c * 83.29513549804688, c * 176, c * 115.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 225, c * 89.29513549804688);
    e[G](c * 210.49996948242188, c * 104.79513549804688, c * 210.49996948242188, c * 104.79513549804688, c * 194, c * 120.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 266.9999694824219, c * 112.29513549804688);
    e[G](c * 233.49996948242188, c * 127.29513549804688, c * 233.49996948242188, c * 127.29513549804688, c * 199, c * 142.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 256.9999694824219, c * 155.29513549804688);
    e[G](c * 238.49996948242188, c * 156.29513549804688, c * 238.49996948242188, c * 156.29513549804688, c * 219, c * 157.29513549804688);
    e[X]();
    jc(e, undefined, "#5E3C10", c * 12);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 96, c * 166);
    e[G](c * 88, c * 117, c * 129, c * 92, c * 161, c * 91);
    e[G](c * 201, c * 90, c * 223, c * 121, c * 230, c * 161);
    e[X]();
    jc(e, "#704618", "#5D3D1A", c * 8);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 94.00003051757812, c * 164.40341186523438);
    e[G](c * 162.50003051757812, c * 164.40341186523438, c * 230.00003051757812, c * 165.40341186523438, c * 231.00003051757812, c * 164.40341186523438);
    e[G](c * 214.00003051757812, c * 267.4034118652344, c * 92.00003051757812, c * 243.40341186523438, c * 93.00003051757812, c * 165.40341186523438);
    e[X]();
    jc(e, "#E1DDD5", "#EAE7E4", c * 8);
    lc(e, c * 160.00003051757812, c * 166.49432373046875, c * 28.30194339616981);
    jc(e, "#392C16", "#5E3E1A", c * 10);
    return d;
  }(0.22)));
  sprite[720] = Fb(function (c) {
    var d = document[p]("canvas");
    var e = d[T]("2d");
    d.width = c * 321;
    d.height = c * 345;
    e[Ia](0, c * 5);
    lc(e, c * 161.00003051757812, c * 165.40341186523438, c * 20.808652046684813);
    jc(e, "#C09D6F", "#A37943", c * 10);
    e[Y]();
    e[Ga] = "round";
    e[ea] = "round";
    e[K](c * 162.00003051757812, c * 48.403411865234375);
    e[G](c * 172.50003051757812, c * 67.40341186523438, c * 172.50003051757812, c * 67.40341186523438, c * 183.00003051757812, c * 86.40341186523438);
    e[G](c * 160.50003051757812, c * 86.40341186523438, c * 160.50003051757812, c * 86.40341186523438, c * 138.00003051757812, c * 86.40341186523438);
    e[X]();
    jc(e, "#C09D6F", "#A37943", c * 10);
    e[g]();
    e[Ia](c * 161.50003051757812, c * 117.90341186523438);
    kc(e, c * -5.5, c * -37.5, c * 11, c * 75, c * 10);
    e[Qa]();
    jc(e, "#C09D6F", "#A37943", c * 10);
    e[g]();
    e[Ia](c * 162.00003051757812, c * 78.90341186523438);
    kc(e, c * -10, c * -5.5, c * 20, c * 11, c * 1);
    e[Qa]();
    jc(e, "#C09D6F");
    lc(e, c * 161.00003051757812, c * 163.6761474609375, c * 17.08800749063506);
    jc(e, "#C09D6F");
    return d;
  }(0.22));
  sprite[721] = [];
  sprite[721][Na](Fb(Fc(1.5, ["#795026", "#654320", "#eda80d"], 0)));
  sprite[721][Na](Fb(Fc(1.5, ["#8f5e2c", "#7a5126", "#eda80d"], 1)));
  sprite[721][Na](Fb(Fc(1.5, ["#67441f", "#573819", "#9c6e08"], 1)));
  sprite[540] = IMAGES.ﱞ︈︁︂;
  sprite[541] = IMAGES.ﱠ︈︁︂;
  sprite[542] = IMAGES.ﱟ︈︁︂;
  sprite[543] = IMAGES.ﱡ︈︁︂;
  sprite[511] = zd(1, "Show spectators", 25, "#FFF", undefined, undefined, "#000", 5, 220);
  sprite[519] = zd(1, "Reconnecting...", 30, "#FFF");
}
function Xf() {
  var c = fj.time;
  if (sprite[279]) {
    gb[r](sprite[279][c][1], jb + 480, kb + 190);
    gb[r](sprite[279][c][2], jb + 180, kb - 430);
    gb[r](sprite[279][c][1], jb - 855, kb + 100);
    gb[r](sprite[279][c][0], jb - 550, kb - 300);
    gb[r](sprite[279][c][0], jb - 1020, kb - 520);
  }
  if (sprite[102]) {
    gb[r](sprite[102][c][1], jb - 80, kb - 640);
    gb[r](sprite[102][c][1], jb + 80, kb + 490);
    gb[r](sprite[102][c][2], jb - 180, kb - 700);
    gb[r](sprite[102][c][0], jb + 550, kb + 100);
    gb[r](sprite[102][c][1], jb + 450, kb + 300);
    gb[r](sprite[102][c][1], jb + 780, kb + 300);
    gb[r](sprite[102][c][2], jb + 980, kb + 200);
    gb[r](sprite[102][c][2], jb + 680, kb + 600);
    gb[r](sprite[102][c][2], jb - 380, kb + 100);
    gb[r](sprite[102][c][2], jb + 280, kb + 250);
  }
  if (sprite[104]) {
    gb[r](sprite[104][c][0], jb - 590, kb);
    gb[r](sprite[104][c][0], jb + 120, kb - 390);
    gb[r](sprite[104][c][0], jb - 270, kb + 340);
  }
  if (sprite[103]) {
    gb[r](sprite[103][c][4], jb - 700, kb - 600);
    gb[r](sprite[103][c][2], jb - 970, kb - 250);
    gb[r](sprite[103][c][5], jb - 720, kb - 200);
    gb[r](sprite[103][c][2], jb - 1020, kb + 340);
    gb[r](sprite[103][c][0], jb - 1120, kb - 0);
    gb[r](sprite[103][c][1], jb - 650, kb - 330);
    gb[r](sprite[103][c][4], jb - 495, kb - 90);
    gb[r](sprite[103][c][3], jb - 520, kb + 340);
    gb[r](sprite[103][c][2], jb + 830, kb - 520);
  }
  sprite[407];
  if (hj && gj) {
    var d = hj.ﱡ︈︋︁.x;
    var e = hj.ﱡ︈︋︁.y;
    hj.ﱡ︈︋︁.x = jb;
    hj.ﱡ︈︋︁.y = kb;
    var f = gj.time;
    gj.time = fj.time;
    var g;
    var i = fj.items;
    i[2].x = 400;
    i[2].y = 100;
    i[2].draw(108);
    (g = i[1]).x = -500;
    g.y = 100;
    g.ﱡ︈︅︄[0].x = g.x - 20.5;
    g.ﱡ︈︅︄[0].y = g.y - 22.5;
    g.ﱡ︈︅︄[1].x = g.x - 35.5;
    g.ﱡ︈︅︄[1].y = g.y + 7.5;
    g.ﱡ︈︅︄[2].x = g.x + 7.5;
    g.ﱡ︈︅︄[2].y = g.y - 30;
    g.ﱡ︈︅︄[3].x = g.x + 22.5;
    g.ﱡ︈︅︄[3].y = g.y;
    g.ﱡ︈︅︄[4].x = g.x - 7.5;
    g.ﱡ︈︅︄[4].y = g.y + 14.5;
    for (var k = 0; k < g.info; k++) {
      g.ﱡ︈︅︄[k].draw(288);
    }
    (g = i[3]).x = 210;
    g.y = -290;
    g.ﱡ︈︅︄[0].x = g.x - 20.5;
    g.ﱡ︈︅︄[0].y = g.y - 22.5;
    g.ﱡ︈︅︄[1].x = g.x - 35.5;
    g.ﱡ︈︅︄[1].y = g.y + 7.5;
    g.ﱡ︈︅︄[2].x = g.x + 7.5;
    g.ﱡ︈︅︄[2].y = g.y - 30;
    g.ﱡ︈︅︄[3].x = g.x + 22.5;
    g.ﱡ︈︅︄[3].y = g.y;
    g.ﱡ︈︅︄[4].x = g.x - 7.5;
    g.ﱡ︈︅︄[4].y = g.y + 14.5;
    for (k = 0; k < g.info; k++) {
      g.ﱡ︈︅︄[k].draw(288);
    }
    i[0].x = 450;
    i[0].y = -100;
    i[0].ﱣ︈︅︄(107);
    i[0].ﱢ︈︅︄();
    hj.ﱡ︈︋︁.x = d;
    hj.ﱡ︈︋︁.y = e;
    gj.time = f;
  }
}
function Yf(c, d, e, f, g, i, k, m, n, o) {
  if (!(d.ﱞ︇︅︄ !== undefined && d.ﱞ︇︅︄() !== 1)) {
    if (o !== undefined) {
      c[r](d, e, f, Math[ba](1, g), Math[ba](1, i), k, m, n, o);
    } else if (i !== undefined) {
      c[r](d, e, f, g, i);
    } else {
      c[r](d, e, f);
    }
  }
}
function Zf() {
  var c = jj.ﱞ︉︅︄;
  var e = c.id;
  if (c.activated === 1 && c.display === 1) {
    if (INFO_BOX[e] === undefined) {
      INFO_BOX[e] = function (c) {
        var e = document[p]("canvas");
        var f = e[T]("2d");
        var g = cc[c];
        f[U] = "20px Baloo Paaji";
        var i = 0;
        if (g[Oa] >= 1) {
          i = Math[ba](0, f[ka](g[0]).width);
        }
        f[U] = "17px Baloo Paaji";
        if (g[Oa] >= 2) {
          i = Math[ba](i, f[ka](g[1]).width);
        }
        f[U] = "14px Baloo Paaji";
        dc = 2;
        for (; dc < g[Oa]; dc++) {
          i = Math[ba](i, f[ka](g[dc]).width);
        }
        var k = i + 35;
        var m = 0;
        m = g[Oa] === 1 ? 55 : g[Oa] === 2 ? 85 : (g[Oa] - 2) * 26 + 85;
        e.width = k;
        e.height = m;
        kc(f, 0, 0, k, m, 10);
        f[d] = "#000000";
        f[ua] = 0.5;
        f[xa]();
        if (g[Oa] >= 1) {
          f[oa] = "middle";
          f[U] = "20px Baloo Paaji";
          f[ua] = 1;
          f[d] = "#e2c340";
          f[sa](g[0], 15, 28);
        }
        if (g[Oa] >= 2) {
          f[U] = "17px Baloo Paaji";
          f[d] = "#ffffff";
          f[sa](g[1], 15, 55);
          m = 55;
        }
        if (g[Oa] >= 3) {
          f[U] = "14px Baloo Paaji";
          f[ua] = 0.7;
          dc = 2;
          f[U] = "14px Baloo Paaji";
          f[ua] = 0.7;
          dc = 2;
          for (; dc < g[Oa]; dc++) {
            f[sa](g[dc], 15, m + 28);
            m += 26;
          }
        }
        return e;
      }(e);
    }
    if (c.ﱟ︌︉︂ === 1) {
      Yf(gb, INFO_BOX[e], c.x, c.y);
    } else if (c.x - 80 + INFO_BOX[e].width > hb) {
      Yf(gb, INFO_BOX[e], hb - INFO_BOX[e].width - 10, c.y - INFO_BOX[e].height - 10);
    } else {
      Yf(gb, INFO_BOX[e], c.x - 80, c.y - INFO_BOX[e].height - 10);
    }
  }
}
function $f(c, d, e) {
  var f = sprite[501][c];
  var g = d.info.translate.x + mb * 5;
  var i = d.info.translate.y + mb * 5;
  if (d.info.state == Ai || e) {
    i += mb * 5;
  }
  Yf(gb, f, g, i);
}
function _f(c, d) {
  if (!sprite[277][c]) {
    sprite[277][c] = zd(mb, "x" + c, 17, "#FFF");
  }
  var e = sprite[277][c];
  var f = d.info.translate.x + d.info.ﱡ︃︉︂[0].width - e.width - mb * 14;
  var g = d.info.translate.y + d.info.ﱡ︃︉︂[0].height - e.height - mb * 19;
  if (d.info.state == Ai) {
    g += mb * 5;
  }
  Yf(gb, e, f, g);
}
function ag() {
  if (!(hj.ﱠ︉︅︄.open || hj.ﱟ︉︅︄.open || hj.ﱡ︉︅︄.open || hj.ﱣ︉︅︄.open || hj.ﱢ︉︅︄.open)) {
    hj[N].open = false;
    var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    var d = Ki.ﱟ︊︅︄;
    if (c) {
      for (var e = 0; e < gj.ﱠ︀️︄[36][Oa]; e++) {
        var f = gj.ﱠ︀️︄[36][e];
        var g = Utils.ﱡ️︊︁(f, c);
        if (g < d && f.info === 0 && f.ﱡ︊︅︄ === hj.id) {
          hj[N].open = true;
          d = g;
          hj[N].ﱣ︊︅︄ = f.id;
        }
      }
      if (d < Ki.ﱟ︊︅︄) {
        jj[N].button.draw(gb);
      }
    }
  }
}
function bg() {
  if (!(hj.ﱠ︉︅︄.open || hj.ﱟ︉︅︄.open || hj.ﱡ︉︅︄.open || hj.ﱢ︉︅︄.open)) {
    hj.ﱣ︉︅︄.open = false;
    var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    var d = Ki.ﱢ︊︅︄;
    if (c) {
      for (var e = 0; e < gj.ﱠ︀️︄[34][Oa]; e++) {
        var f = gj.ﱠ︀️︄[34][e];
        var g = Utils.ﱡ️︊︁(f, c);
        if (g < d) {
          d = g;
          hj.ﱣ︉︅︄.open = true;
          hj.ﱣ︉︅︄.ﱞ︋︅︄ = f.info & 31;
          hj.ﱣ︉︅︄.ﱠ︋︅︄ = (f.info & 992) >> 5;
          hj.ﱣ︉︅︄.ﱟ︋︅︄ = (f.info & 31744) >> 10;
          hj.ﱣ︉︅︄.ﱡ︊︅︄ = f.ﱡ︊︅︄;
          hj.ﱣ︉︅︄.ﱣ︊︅︄ = f.id;
        }
      }
      if (d < Ki.ﱢ︊︅︄) {
        var i = sprite[716];
        var k = (m = jj.ﱡ︋︅︄).info.translate.x - 32;
        Yf(gb, i, k, 0);
        if (hj.ﱣ︉︅︄.ﱞ︋︅︄ > 0) {
          m.draw(gb);
          if ((n = hj.ﱣ︉︅︄.ﱞ︋︅︄) > 1) {
            _f(n, m);
          }
        }
        var m = jj.ﱣ︋︅︄;
        if (hj.ﱣ︉︅︄.ﱟ︋︅︄ > 0) {
          m.draw(gb);
          if ((n = hj.ﱣ︉︅︄.ﱟ︋︅︄) > 1) {
            _f(n, m);
          }
        }
        var n;
        m = jj.ﱢ︋︅︄;
        if (hj.ﱣ︉︅︄.ﱠ︋︅︄ > 0) {
          m.draw(gb);
          if ((n = hj.ﱣ︉︅︄.ﱠ︋︅︄) > 1) {
            _f(n, m);
          }
        }
      }
    }
  }
}
function cg() {
  if (!hj.ﱠ︉︅︄.open && !hj.ﱟ︉︅︄.open) {
    hj.ﱢ︉︅︄.open = false;
    var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    var d = Ki.ﱞ︌︅︄;
    if (c) {
      for (var e = 0; e < Ni[Oa]; e++) {
        for (var f = Ni[e][0], g = Ni[e][1], i = 0; i < gj.ﱠ︀️︄[f][Oa]; i++) {
          var k = gj.ﱠ︀️︄[f][i];
          var m = Utils.ﱡ️︊︁(k, c);
          if (m < d) {
            d = m;
            hj.ﱢ︉︅︄.ﱠ︌︅︄ = g;
            hj.ﱢ︉︅︄.type = f;
            hj.ﱢ︉︅︄.open = true;
            hj.ﱢ︉︅︄.ﱞ︋︅︄ = k.info & 255;
            hj.ﱢ︉︅︄.ﱟ︌︅︄ = (k.info & 65280) >> 8;
            hj.ﱢ︉︅︄.ﱡ︊︅︄ = k.ﱡ︊︅︄;
            hj.ﱢ︉︅︄.ﱣ︊︅︄ = k.id;
          }
        }
      }
      if (d < Ki.ﱞ︌︅︄) {
        var n;
        var o = sprite[650];
        var p = (q = jj.ﱡ︌︅︄).info.translate.x - 33;
        Yf(gb, o, p, 0);
        if (hj.ﱢ︉︅︄.ﱞ︋︅︄ > 0) {
          q.draw(gb);
          if ((n = hj.ﱢ︉︅︄.ﱞ︋︅︄) > 1) {
            _f(n, q);
          }
        }
        switch (hj.ﱢ︉︅︄.ﱠ︌︅︄) {
          case 102:
            var q = jj.ﱣ︌︅︄;
            break;
          case 105:
            q = jj.ﱢ︌︅︄;
            break;
          case 106:
            q = jj.ﱞ︍︅︄;
            break;
          case 115:
            q = jj.ﱠ︍︅︄;
            break;
          case 196:
            q = jj.ﱟ︍︅︄;
        }
        if (hj.ﱢ︉︅︄.ﱟ︌︅︄ > 0) {
          q.draw(gb);
          if ((n = hj.ﱢ︉︅︄.ﱟ︌︅︄) > 1) {
            _f(n, q);
          }
        }
      }
    }
  }
}
function dg() {
  if (!hj.ﱠ︉︅︄.open && !hj.ﱟ︉︅︄.open) {
    hj.ﱡ︉︅︄.open = false;
    var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    var d = Ki.ﱡ︍︅︄;
    if (c) {
      for (var e = 0; e < gj.ﱠ︀️︄[32][Oa]; e++) {
        var f = gj.ﱠ︀️︄[32][e];
        var g = Utils.ﱡ️︊︁(f, c);
        if (g < d) {
          d = g;
          hj.ﱡ︉︅︄.open = true;
          hj.ﱡ︉︅︄.ﱣ︍︅︄ = f.info & 255;
          hj.ﱡ︉︅︄.ﱠ︋︅︄ = (f.info & 65280) >> 8;
          hj.ﱡ︉︅︄.ﱡ︊︅︄ = f.ﱡ︊︅︄;
          hj.ﱡ︉︅︄.ﱣ︊︅︄ = f.id;
        }
      }
      if (d < Ki.ﱡ︍︅︄) {
        var i = sprite[649];
        var k = (n = jj.ﱢ︍︅︄).info.translate.x - 33;
        Yf(gb, i, k, 0);
        if (hj.ﱡ︉︅︄.ﱣ︍︅︄ > 0) {
          n.draw(gb);
          if ((m = hj.ﱡ︉︅︄.ﱣ︍︅︄) > 1) {
            _f(m, n);
          }
        }
        var m;
        var n = jj.ﱞ︎︅︄;
        if (hj.ﱡ︉︅︄.ﱠ︋︅︄ > 0) {
          n.draw(gb);
          if ((m = hj.ﱡ︉︅︄.ﱠ︋︅︄) > 1) {
            _f(m, n);
          }
        }
      }
    }
  }
}
function eg() {
  if (!hj.ﱠ︉︅︄.open) {
    hj.ﱟ︉︅︄.ﱠ︎︅︄ = 0;
    hj.ﱟ︉︅︄.open = false;
    var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    var d = Ki.ﱟ︎︅︄;
    if (c) {
      for (var e = 0; e < gj.ﱠ︀️︄[18][Oa]; e++) {
        var f = gj.ﱠ︀️︄[18][e];
        var g = Utils.ﱡ️︊︁(f, c);
        if (g < d) {
          d = g;
          hj.ﱟ︉︅︄.open = true;
          hj.ﱟ︉︅︄.ﱠ︎︅︄ = f.info;
          hj.ﱟ︉︅︄.ﱡ︊︅︄ = f.ﱡ︊︅︄;
          hj.ﱟ︉︅︄.ﱣ︊︅︄ = f.id;
        }
      }
      if (d < Ki.ﱟ︎︅︄) {
        var i = sprite[405];
        var k = jj.ﱡ︎︅︄;
        var m = Math[A](k.info.translate.x + (k.info.ﱡ︃︉︂[0].width - i.width) / 2);
        var n = Math[A](k.info.translate.y + (k.info.ﱡ︃︉︂[0].height - i.height) / 2) + 3;
        Yf(gb, i, m, n);
        if (hj.ﱟ︉︅︄.ﱠ︎︅︄ > 0) {
          k.draw(gb);
          var o = hj.ﱟ︉︅︄.ﱠ︎︅︄;
          if (o > 1) {
            _f(o, k);
          }
        }
      }
    }
  }
}
function fg() {
  hj.ﱣ︎︅︄.open = false;
  var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
  var d = Ki.ﱢ︎︅︄;
  if (c) {
    for (var e = 0; e < gj.ﱠ︀️︄[22][Oa]; e++) {
      var f = gj.ﱠ︀️︄[22][e];
      var g = Utils.ﱡ️︊︁(f, c);
      if (g < d) {
        d = g;
        hj.ﱣ︎︅︄.open = true;
        hj.ﱣ︎︅︄.ﱡ︊︅︄ = f.ﱡ︊︅︄;
        hj.ﱣ︎︅︄.ﱣ︊︅︄ = f.id;
      }
    }
    if (d < Ki.ﱢ︎︅︄) {
      jj.ﱣ︎︅︄.draw(gb);
    }
  }
}
function gg() {
  hj.ﱞ️︅︄.id = -1;
  hj.ﱞ️︅︄.ﱡ︊︅︄ = -1;
  if (!(hj.ﱠ️︅︄ || hj.ﱞ️︅︄.ﱠ︌︎︄ || hj.ﱟ️︅︄)) {
    var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    var d = Ki.ﱡ️︅︄;
    if (c) {
      for (var e = 0; e < gj.ﱠ︀️︄[29][Oa]; e++) {
        var f = gj.ﱠ︀️︄[29][e];
        var g = Utils.ﱡ️︊︁(f, c);
        if (g < d) {
          d = g;
          hj.ﱞ️︅︄.id = f.id;
          hj.ﱞ️︅︄.ﱡ︊︅︄ = f.ﱡ︊︅︄;
          hj.ﱞ️︅︄.info = f.info;
          hj.ﱞ️︅︄.ﱢ︎︎︄ = (f.info & 16) >> 4;
        }
      }
    }
    var i = jj.ﱣ️︅︄;
    jj.ﱣ️︅︄ = -1;
    if (hj.ﱞ️︅︄.ﱡ︊︅︄ == -1 || hj.ﱢ️︅︄[Oa] != 0 && hj.id != hj.ﱞ️︅︄.ﱡ︊︅︄) {
      if (hj.ﱢ️︅︄[Oa] != 0 && hj.ﱢ️︅︄[0] != hj.id) {
        jj.ﱣ️︅︄ = 2;
      } else if (hj.ﱢ️︅︄[Oa] != 0 && hj.ﱢ️︅︄[0] == hj.id) {
        jj.ﱣ️︅︄ = 1;
      } else if (hj.ﱢ️︅︄[Oa] != 0) {
        jj.ﱣ️︅︄ = 3;
      }
    } else if (hj.ﱢ️︅︄[Oa] == 0 && hj.ﱞ️︅︄.info >= 8) {
      jj.ﱣ️︅︄ = 4;
    } else if (hj.ﱢ️︅︄[Oa] == 0) {
      jj.ﱣ️︅︄ = 3;
    } else {
      jj.ﱣ️︅︄ = 0;
    }
    if (jj.ﱣ️︅︄ != -1) {
      jj.ﱞ︀︆︄[jj.ﱣ️︅︄].button.draw(gb);
    }
    var k = document[fa]("team_box")[Z];
    if (jj.ﱣ️︅︄ != -1 && jj.ﱣ️︅︄ != i && k.display == "inline-block") {
      jj.ﱞ︀︆︄[jj.ﱣ️︅︄].action();
    }
  }
}
function hg() {
  hj.ﱠ︉︅︄.id = -1;
  hj.ﱠ︉︅︄.ﱢ︎︎︄ = false;
  hj.ﱠ︉︅︄.ﱣ︎︎︄ = false;
  hj.ﱠ︉︅︄.ﱠ︀︆︄ = false;
  hj.ﱠ︉︅︄.ﱟ︀︆︄ = false;
  hj.ﱠ︉︅︄.open = false;
  var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
  var d = Ki.ﱡ︀︆︄;
  if (c) {
    for (var e = 0; e < gj.ﱠ︀️︄[11][Oa]; e++) {
      var f = gj.ﱠ︀️︄[11][e];
      var g = Utils.ﱡ️︊︁(f, c);
      if (g < d) {
        d = g;
        hj.ﱠ︉︅︄.open = true;
        hj.ﱠ︉︅︄.id = f.action < 2 ? -1 : Math[A]((f.action - 1) / 2);
        hj.ﱠ︉︅︄.ﱠ︎︅︄ = f.info;
        hj.ﱠ︉︅︄.ﱡ︊︅︄ = f.ﱡ︊︅︄;
        hj.ﱠ︉︅︄.ﱣ︊︅︄ = f.id;
        hj.ﱠ︉︅︄.ﱣ︎︎︄ = f.ﱢ︎︎︄;
        hj.ﱠ︉︅︄.ﱢ︎︎︄ = !(!f.ﱢ︎︎︄ || hj.id == f.ﱡ︊︅︄ || hj.ﱣ︀︆︄(f.ﱡ︊︅︄));
        hj.ﱠ︉︅︄.ﱟ︀︆︄ = f.ﱡ︊︅︄ === hj.id && !hj.ﱠ︉︅︄.ﱣ︎︎︄ && hj.ﱞ︁︆︄.ﱢ︀︆︄(142) != -1;
        if (hj.ﱠ︉︅︄.ﱣ︎︎︄ && hj.ﱞ︁︆︄.ﱢ︀︆︄(152) != -1) {
          hj.ﱠ︉︅︄.ﱠ︀︆︄ = true;
        }
      }
    }
    if (d < Ki.ﱡ︀︆︄) {
      var i = sprite[333];
      var k = jj.ﱠ︁︆︄[0];
      var m = Math[A](k.info.translate.x + (k.info.ﱡ︃︉︂[0].width - i.width) / 2);
      var n = Math[A](k.info.translate.y + (k.info.ﱡ︃︉︂[0].height - i.height) / 2) + 3;
      Yf(gb, i, m, n);
      if ((!hj.ﱠ︉︅︄.ﱢ︎︎︄ || hj.ﱠ︉︅︄.ﱡ︊︅︄ === hj.id) && hj.ﱠ︉︅︄.id >= 0) {
        (k = jj.ﱠ︁︆︄[hj.ﱠ︉︅︄.id]).draw(gb);
        var o = hj.ﱠ︉︅︄.ﱠ︎︅︄;
        if (o > 1) {
          _f(o, k);
        }
      }
      if (hj.ﱠ︉︅︄.ﱢ︎︎︄) {
        jj.ﱟ︁︆︄.draw(gb);
      } else if (hj.ﱠ︉︅︄.ﱟ︀︆︄) {
        jj.ﱡ︁︆︄.draw(gb);
      }
      if (hj.ﱠ︉︅︄.ﱠ︀︆︄) {
        jj.ﱣ︁︆︄.draw(gb);
      }
    }
  }
}
function ig() {
  if (hj.ﱢ︁︆︄) {
    gb[ua] = 0.5;
    gb[d] = "#000";
    gb[pa](0, 0, hb, ib);
    gb[ua] = 0.8;
    var c = sprite[510][gj.time];
    var e = jb - c.width / 2;
    var f = kb - c.height / 2;
    Yf(gb, c, e, f);
    gb[ua] = 1;
    if (jj.ﱞ︂︆︄.marker.x > -1) {
      gb[d] = "#660000";
      lc(gb, e + jj.ﱞ︂︆︄.marker.x * 3 * mb, f + jj.ﱞ︂︆︄.marker.y * 3 * mb, mb * 14);
      gb[xa]();
    }
    for (var g = jj.ﱞ︂︆︄.players, i = 0; i < g[Oa]; i++) {
      var k = g[i];
      gb[d] = (gj.time, "#ff0000");
      lc(gb, e + k.x / (gj.ﱣ︆︅︄ * 100) * 600 * mb, f + k.y / (gj.ﱢ︆︅︄ * 100) * 600 * mb, mb * 6);
      gb[xa]();
    }
    var m = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    if (m) {
      gb[d] = gj.time ? "#fff" : "#e39716";
      lc(gb, e + m.x / (gj.ﱣ︆︅︄ * 100) * 600 * mb, f + m.y / (gj.ﱢ︆︅︄ * 100) * 600 * mb, mb * 12);
      gb[xa]();
    }
  }
}
function jg() {
  if (hj.reconnect.enabled) {
    gb[ua] = 0.9;
    gb[d] = "#000";
    kc(gb, jb - 150, kb - 90, 300, 180, 15);
    gb[xa]();
    gb[ua] = 1;
    var c = sprite[295];
    gb[g]();
    hj.reconnect.rotate = (hj.reconnect.rotate + nj * 2) % (Math[D] * 2);
    gb[Ia](hb / 2, ib / 2 - 25);
    gb[ra](hj.reconnect.rotate);
    Yf(gb, c, -c.width / 2, -c.height / 2);
    gb[Qa]();
    c = sprite[519];
    Yf(gb, c, (hb - c.width) / 2, (ib - c.height) / 2 + 25);
  }
}
function kg() {
  if (hj.ﱞ︁︆︄.ﱠ︂︆︄[Oa] > 0) {
    var c = {
      x: jj.ﱞ︂︆︄.translate.x,
      y: jj.ﱞ︂︆︄.translate.y - mb * 120
    };
  } else {
    c = {
      x: jj.ﱞ︂︆︄.translate.x,
      y: jj.ﱞ︂︆︄.translate.y - mb * 50
    };
  }
  gb[ua] = 0.8;
  var e = sprite[253][gj.time];
  Yf(gb, e, c.x, c.y);
  gb[ua] = 1;
  if (jj.ﱞ︂︆︄.marker.x > -1) {
    gb[d] = "#660000";
    lc(gb, c.x + jj.ﱞ︂︆︄.marker.x * mb, c.y + jj.ﱞ︂︆︄.marker.y * mb, mb * 5);
    gb[xa]();
  }
  for (var f = mb, g = jj.ﱞ︂︆︄.players, i = 0; i < g[Oa]; i++) {
    var k = g[i];
    gb[d] = (gj.time, "#ff0000");
    lc(gb, c.x + k.x / (gj.ﱣ︆︅︄ * 100) * 193 * mb, c.y + k.y / (gj.ﱢ︆︅︄ * 100) * 193 * mb, mb * 2);
    gb[xa]();
  }
  var m = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
  if (m) {
    gb[d] = gj.time ? "#fff" : "#e39716";
    lc(gb, c.x + m.x / (gj.ﱣ︆︅︄ * 100) * 193 * mb, c.y + m.y / (gj.ﱢ︆︅︄ * 100) * 193 * mb, mb * 4);
    gb[xa]();
  }
  mb = f;
}
render_minimap = function () {
  for (var c = 0; c < 2; c++) {
    sprite[812][c][Ea](0, 0, 193, 193);
    sprite[812][c][r](MINIMAP_UTILS.MAP[c], 0, 0, 193, 193);
    sprite[813][c][Ea](0, 0, 600, 600);
    sprite[813][c][r](MINIMAP_UTILS.MAP[c], 0, 0, 600, 600);
    for (var d = gj.ﱟ︂︆︄[Oa] - 1; d >= 0; d--) {
      var e = gj.ﱟ︂︆︄[d];
      var f = e.x1 * 193 / (gj.ﱣ︆︅︄ * 100);
      var g = e.y1 * 193 / (gj.ﱢ︆︅︄ * 100);
      var i = e.w * 193 / (gj.ﱣ︆︅︄ * 100);
      var k = e.ﱟ︁︋︁ * 193 / (gj.ﱢ︆︅︄ * 100);
      var m = e.x1 * 600 / (gj.ﱣ︆︅︄ * 100);
      var n = e.y1 * 600 / (gj.ﱢ︆︅︄ * 100);
      var o = e.w * 600 / (gj.ﱣ︆︅︄ * 100);
      var p = e.ﱟ︁︋︁ * 600 / (gj.ﱢ︆︅︄ * 100);
      if (e.t === gj.ﱡ︂︆︄) {
        sprite[812][c][r](MINIMAP_UTILS.FOREST[c], f, g, i, k);
        sprite[813][c][r](MINIMAP_UTILS.FOREST[c], m, n, o, p);
      }
      if (e.t === gj.ﱣ︂︆︄) {
        sprite[812][c][r](MINIMAP_UTILS.WINTER[c], f, g, i, k);
        sprite[813][c][r](MINIMAP_UTILS.WINTER[c], m, n, o, p);
      }
      if (e.t === gj.ﱢ︂︆︄) {
        sprite[812][c][r](MINIMAP_UTILS.LAVA[c], f, g, i, k);
        sprite[813][c][r](MINIMAP_UTILS.LAVA[c], m, n, o, p);
      }
      if (e.t === gj.ﱞ︃︆︄) {
        sprite[812][c][r](MINIMAP_UTILS.CAVE[c], f, g, i, k);
        sprite[813][c][r](MINIMAP_UTILS.CAVE[c], m, n, o, p);
      }
      if (e.t === gj.ﱠ︃︆︄) {
        sprite[812][c][r](MINIMAP_UTILS.DESERT[c], f, g, i, k);
        sprite[813][c][r](MINIMAP_UTILS.DESERT[c], m, n, o, p);
      }
    }
  }
};
render_cosmetics = function () {
  COSMETICS = {
    ﱟ︃︆︄: [{
      id: 0,
      ﱡ︃︆︄: IMAGES.ﱟ︂︌︂,
      ﱣ︃︆︄: IMAGES.ﱡ︂︌︂,
      ﱢ︃︆︄: IMAGES.ﱞ︉︌︂,
      ﱞ︄︆︄: IMAGES.ﱠ︉︌︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Starver"
    }, {
      id: 3,
      ﱡ︃︆︄: IMAGES.ﱟ︃︌︂,
      ﱣ︃︆︄: IMAGES.ﱡ︃︌︂,
      ﱢ︃︆︄: IMAGES.ﱞ︊︌︂,
      ﱞ︄︆︄: IMAGES.ﱠ︊︌︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Angry"
    }, {
      id: 2,
      ﱡ︃︆︄: IMAGES.ﱞ︃︌︂,
      ﱣ︃︆︄: IMAGES.ﱠ︃︌︂,
      ﱢ︃︆︄: IMAGES.ﱣ︉︌︂,
      ﱞ︄︆︄: IMAGES.ﱢ︉︌︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Sad"
    }, {
      id: 9,
      ﱡ︃︆︄: IMAGES.ﱟ︅︌︂,
      ﱣ︃︆︄: IMAGES.ﱡ︅︌︂,
      ﱢ︃︆︄: IMAGES.ﱞ︌︌︂,
      ﱞ︄︆︄: IMAGES.ﱠ︌︌︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Happy 1"
    }, {
      id: 1,
      ﱡ︃︆︄: IMAGES.ﱣ︂︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ︂︌︂,
      ﱢ︃︆︄: IMAGES.ﱟ︉︌︂,
      ﱞ︄︆︄: IMAGES.ﱡ︉︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "What?"
    }, {
      id: 4,
      ﱡ︃︆︄: IMAGES.ﱣ︃︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ︃︌︂,
      ﱢ︃︆︄: IMAGES.ﱟ︊︌︂,
      ﱞ︄︆︄: IMAGES.ﱡ︊︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Suspicious"
    }, {
      id: 5,
      ﱡ︃︆︄: IMAGES.ﱞ︄︌︂,
      ﱣ︃︆︄: IMAGES.ﱠ︄︌︂,
      ﱢ︃︆︄: IMAGES.ﱣ︊︌︂,
      ﱞ︄︆︄: IMAGES.ﱢ︊︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Scar"
    }, {
      id: 6,
      ﱡ︃︆︄: IMAGES.ﱟ︄︌︂,
      ﱣ︃︆︄: IMAGES.ﱡ︄︌︂,
      ﱢ︃︆︄: IMAGES.ﱞ︋︌︂,
      ﱞ︄︆︄: IMAGES.ﱠ︋︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "In Trouble"
    }, {
      id: 7,
      ﱡ︃︆︄: IMAGES.ﱣ︄︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ︄︌︂,
      ﱢ︃︆︄: IMAGES.ﱟ︋︌︂,
      ﱞ︄︆︄: IMAGES.ﱡ︋︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Cute"
    }, {
      id: 8,
      ﱡ︃︆︄: IMAGES.ﱞ︅︌︂,
      ﱣ︃︆︄: IMAGES.ﱠ︅︌︂,
      ﱢ︃︆︄: IMAGES.ﱣ︋︌︂,
      ﱞ︄︆︄: IMAGES.ﱢ︋︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bored 1"
    }, {
      id: 10,
      ﱡ︃︆︄: IMAGES.ﱣ︅︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ︅︌︂,
      ﱢ︃︆︄: IMAGES.ﱟ︌︌︂,
      ﱞ︄︆︄: IMAGES.ﱡ︌︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Happy 2"
    }, {
      id: 11,
      ﱡ︃︆︄: IMAGES.ﱞ︆︌︂,
      ﱣ︃︆︄: IMAGES.ﱠ︆︌︂,
      ﱢ︃︆︄: IMAGES.ﱣ︌︌︂,
      ﱞ︄︆︄: IMAGES.ﱢ︌︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Crazy"
    }, {
      id: 12,
      ﱡ︃︆︄: IMAGES.ﱟ︆︌︂,
      ﱣ︃︆︄: IMAGES.ﱡ︆︌︂,
      ﱢ︃︆︄: IMAGES.ﱞ︍︌︂,
      ﱞ︄︆︄: IMAGES.ﱠ︍︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Happy 3"
    }, {
      id: 13,
      ﱡ︃︆︄: IMAGES.ﱣ︆︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ︆︌︂,
      ﱢ︃︆︄: IMAGES.ﱟ︍︌︂,
      ﱞ︄︆︄: IMAGES.ﱡ︍︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Very Cute"
    }, {
      id: 14,
      ﱡ︃︆︄: IMAGES.ﱞ︇︌︂,
      ﱣ︃︆︄: IMAGES.ﱠ︇︌︂,
      ﱢ︃︆︄: IMAGES.ﱣ︍︌︂,
      ﱞ︄︆︄: IMAGES.ﱢ︍︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Curious"
    }, {
      id: 15,
      ﱡ︃︆︄: IMAGES.ﱟ︇︌︂,
      ﱣ︃︆︄: IMAGES.ﱡ︇︌︂,
      ﱢ︃︆︄: IMAGES.ﱞ︎︌︂,
      ﱞ︄︆︄: IMAGES.ﱠ︎︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bored 2"
    }, {
      id: 16,
      ﱡ︃︆︄: IMAGES.ﱣ︇︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ︇︌︂,
      ﱢ︃︆︄: IMAGES.ﱟ︎︌︂,
      ﱞ︄︆︄: IMAGES.ﱡ︎︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Happy 4"
    }, {
      id: 17,
      ﱡ︃︆︄: IMAGES.ﱞ︈︌︂,
      ﱣ︃︆︄: IMAGES.ﱠ︈︌︂,
      ﱢ︃︆︄: IMAGES.ﱣ︎︌︂,
      ﱞ︄︆︄: IMAGES.ﱢ︎︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Scar 2"
    }, {
      id: 18,
      ﱡ︃︆︄: IMAGES.ﱟ︈︌︂,
      ﱣ︃︆︄: IMAGES.ﱡ︈︌︂,
      ﱢ︃︆︄: IMAGES.ﱞ️︌︂,
      ﱞ︄︆︄: IMAGES.ﱠ️︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Sick"
    }, {
      id: 19,
      ﱡ︃︆︄: IMAGES.ﱣ︈︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ︈︌︂,
      ﱢ︃︆︄: IMAGES.ﱟ️︌︂,
      ﱞ︄︆︄: IMAGES.ﱡ️︌︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Somnambule"
    }, {
      id: 24,
      ﱡ︃︆︄: IMAGES.ﱢ︌︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︍︅︃,
      ﱢ︃︆︄: IMAGES.ﱠ️︈︃,
      ﱞ︄︆︄: IMAGES.ﱟ️︈︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Pixelbitie",
      name: "Feel Bad"
    }, {
      id: 23,
      ﱡ︃︆︄: IMAGES.ﱡ︊︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︊︅︃,
      ﱢ︃︆︄: IMAGES.ﱢ︌︈︃,
      ﱞ︄︆︄: IMAGES.ﱞ︍︈︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Pixelbitie",
      name: "Mmmh."
    }, {
      id: 103,
      ﱡ︃︆︄: IMAGES.ﱡ︄︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︄︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︆︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︇︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Panic"
    }, {
      id: 105,
      ﱡ︃︆︄: IMAGES.ﱠ︅︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︅︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︇︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︇︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Hypnotic"
    }, {
      id: 106,
      ﱡ︃︆︄: IMAGES.ﱡ︅︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︅︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︇︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︈︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Stars in the eyes"
    }, {
      id: 104,
      ﱡ︃︆︄: IMAGES.ﱢ︄︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︅︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︇︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︇︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Scared at night"
    }, {
      id: 20,
      ﱡ︃︆︄: IMAGES.ﱡ︈︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︈︅︃,
      ﱢ︃︆︄: IMAGES.ﱢ︈︅︃,
      ﱞ︄︆︄: IMAGES.ﱞ︉︅︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Vampire"
    }, {
      id: 21,
      ﱡ︃︆︄: IMAGES.ﱠ︉︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︉︅︃,
      ﱢ︃︆︄: IMAGES.ﱡ︉︅︃,
      ﱞ︄︆︄: IMAGES.ﱣ︉︅︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Zombie"
    }, {
      id: 22,
      ﱡ︃︆︄: IMAGES.ﱠ︇︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︇︅︃,
      ﱢ︃︆︄: IMAGES.ﱡ︇︅︃,
      ﱞ︄︆︄: IMAGES.ﱣ︇︅︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Pixelbitie",
      name: "Devaster"
    }, {
      id: 116,
      ﱡ︃︆︄: IMAGES.ﱢ︈︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︉︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︋︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︋︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Fukss",
      name: "Dead Devaster"
    }, {
      id: 27,
      ﱡ︃︆︄: IMAGES.ﱢ︀︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︁︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︃︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︃︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Winter",
      name: "Cactus"
    }, {
      id: 28,
      ﱡ︃︆︄: IMAGES.ﱠ︁︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︁︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︃︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︃︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Bee"
    }, {
      id: 49,
      ﱡ︃︆︄: IMAGES.ﱡ︂︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︂︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︄︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︅︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Taco4Life",
      name: "Camo Skin"
    }, {
      id: 58,
      ﱡ︃︆︄: IMAGES.ﱢ︅︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︆︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︈︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︈︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Blue Limax Skin"
    }, {
      id: 59,
      ﱡ︃︆︄: IMAGES.ﱡ︅︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︅︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︇︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︈︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Red Limax Skin"
    }, {
      id: 94,
      ﱡ︃︆︄: IMAGES.ﱡ︁︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︁︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︃︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︄︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Taco4Life",
      name: "Mr. Pumpkin"
    }, {
      id: 109,
      ﱡ︃︆︄: IMAGES.ﱡ︆︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︆︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︈︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︉︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Wood"
    }, {
      id: 114,
      ﱡ︃︆︄: IMAGES.ﱠ︈︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︈︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︊︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︊︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Zebra"
    }, {
      id: 120,
      ﱡ︃︆︄: IMAGES.ﱠ︊︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︊︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︌︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︌︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "CrysTal",
      name: "Tiger"
    }, {
      id: 134,
      ﱡ︃︆︄: IMAGES.ﱢ︎︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ️︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︁︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︁︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Franchestcreator",
      name: "Day or Night"
    }, {
      id: 135,
      ﱡ︃︆︄: IMAGES.ﱠ️︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ️︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︁︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︁︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Poinet",
      name: "Square Starver"
    }, {
      id: 136,
      ﱡ︃︆︄: IMAGES.ﱡ️︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ️︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︁︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︂︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Voodoo Doll"
    }, {
      id: 137,
      ﱡ︃︆︄: IMAGES.ﱢ️︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︀︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︂︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︂︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Frankenstein"
    }, {
      id: 138,
      ﱡ︃︆︄: IMAGES.ﱡ︀︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︀︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︂︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︃︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Mummy"
    }, {
      id: 139,
      ﱡ︃︆︄: IMAGES.ﱢ︀︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︁︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︃︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︃︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Werewolf"
    }, {
      id: 140,
      ﱡ︃︆︄: IMAGES.ﱠ︁︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︁︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︃︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︃︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Cthulhu"
    }, {
      id: 141,
      ﱡ︃︆︄: IMAGES.ﱡ︁︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︁︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︃︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︄︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Sea Man"
    }, {
      id: 142,
      ﱡ︃︆︄: IMAGES.ﱢ︁︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︂︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︄︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︄︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Pumpkin"
    }, {
      id: 148,
      ﱡ︃︆︄: IMAGES.ﱢ︃︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︄︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︆︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︆︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Snowman"
    }, {
      id: 149,
      ﱡ︃︆︄: IMAGES.ﱠ︄︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︄︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︆︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︆︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Christmas Tree Man"
    }, {
      id: 150,
      ﱡ︃︆︄: IMAGES.ﱡ︄︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︄︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︆︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︇︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Mrs Bell"
    }, {
      id: 151,
      ﱡ︃︆︄: IMAGES.ﱢ︄︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︅︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︇︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︇︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Elfy"
    }, {
      id: 152,
      ﱡ︃︆︄: IMAGES.ﱠ︅︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︅︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︇︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︇︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Mr Present"
    }, {
      id: 153,
      ﱡ︃︆︄: IMAGES.ﱡ︅︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︅︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︇︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︈︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "My Dear Old Deer"
    }, {
      id: 154,
      ﱡ︃︆︄: IMAGES.ﱢ︅︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︆︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︈︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︈︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr Angel"
    }, {
      id: 155,
      ﱡ︃︆︄: IMAGES.ﱠ︆︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︆︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︈︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︈︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr Ice Cube"
    }, {
      id: 156,
      ﱡ︃︆︄: IMAGES.ﱡ︆︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︆︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︈︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︉︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr Snowman"
    }, {
      id: 159,
      ﱡ︃︆︄: IMAGES.ﱡ︇︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︇︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︉︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︊︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "CrysTal",
      name: "Crystal Sky Skin"
    }, {
      id: 167,
      ﱡ︃︆︄: IMAGES.ﱠ︊︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︊︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︌︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︌︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Franchestcreator",
      name: "Radioactive Starver"
    }, {
      id: 169,
      ﱡ︃︆︄: IMAGES.ﱠ︋︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︋︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︍︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︍︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "TheScaryBlaze",
      name: "Eaten Cookie"
    }, {
      id: 170,
      ﱡ︃︆︄: IMAGES.ﱡ︋︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︋︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︍︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︎︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "aloner",
      name: "Blob Thing"
    }, {
      id: 172,
      ﱡ︃︆︄: IMAGES.ﱠ︌︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︌︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︎︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︎︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "aloner",
      name: "Machine Mask"
    }, {
      id: 29,
      ﱡ︃︆︄: IMAGES.ﱠ︋︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︋︅︃,
      ﱢ︃︆︄: IMAGES.ﱡ︍︈︃,
      ﱞ︄︆︄: IMAGES.ﱣ︍︈︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Pixelbitie",
      name: "Lollipop 1"
    }, {
      id: 30,
      ﱡ︃︆︄: IMAGES.ﱡ︋︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︋︅︃,
      ﱢ︃︆︄: IMAGES.ﱢ︍︈︃,
      ﱞ︄︆︄: IMAGES.ﱞ︎︈︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Lollipop 2"
    }, {
      id: 31,
      ﱡ︃︆︄: IMAGES.ﱢ︋︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︌︅︃,
      ﱢ︃︆︄: IMAGES.ﱠ︎︈︃,
      ﱞ︄︆︄: IMAGES.ﱟ︎︈︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Lollipop 3"
    }, {
      id: 32,
      ﱡ︃︆︄: IMAGES.ﱠ︌︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︌︅︃,
      ﱢ︃︆︄: IMAGES.ﱡ︎︈︃,
      ﱞ︄︆︄: IMAGES.ﱣ︎︈︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Lollipop 4"
    }, {
      id: 33,
      ﱡ︃︆︄: IMAGES.ﱠ︍︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︍︅︃,
      ﱢ︃︆︄: IMAGES.ﱡ️︈︃,
      ﱞ︄︆︄: IMAGES.ﱣ️︈︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Sushui",
      name: "Yellow Bird"
    }, {
      id: 34,
      ﱡ︃︆︄: IMAGES.ﱡ︍︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︍︅︃,
      ﱢ︃︆︄: IMAGES.ﱢ️︈︃,
      ﱞ︄︆︄: IMAGES.ﱞ︀︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Sushui",
      name: "Red Bird"
    }, {
      id: 35,
      ﱡ︃︆︄: IMAGES.ﱢ︍︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︎︅︃,
      ﱢ︃︆︄: IMAGES.ﱠ︀︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︀︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Sushui",
      name: "Blue Bird"
    }, {
      id: 37,
      ﱡ︃︆︄: IMAGES.ﱠ︀︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︀︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︂︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︂︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Owl"
    }, {
      id: 52,
      ﱡ︃︆︄: IMAGES.ﱡ︃︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︃︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︅︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︆︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Nemo"
    }, {
      id: 53,
      ﱡ︃︆︄: IMAGES.ﱢ︃︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︄︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︆︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︆︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Bread"
    }, {
      id: 74,
      ﱡ︃︆︄: IMAGES.ﱢ︊︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︋︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︍︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︍︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Communist & Taco4Life",
      name: "Mr. Bread 2"
    }, {
      id: 75,
      ﱡ︃︆︄: IMAGES.ﱠ︋︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︋︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︍︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︍︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Communist & Taco4Life",
      name: "Mr. Bread 3"
    }, {
      id: 60,
      ﱡ︃︆︄: IMAGES.ﱠ︆︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︆︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︈︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︈︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Red Berry"
    }, {
      id: 61,
      ﱡ︃︆︄: IMAGES.ﱡ︆︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︆︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︈︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︉︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Berry"
    }, {
      id: 70,
      ﱡ︃︆︄: IMAGES.ﱡ︉︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︉︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︋︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︌︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Cake"
    }, {
      id: 71,
      ﱡ︃︆︄: IMAGES.ﱢ︉︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︊︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︌︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︌︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Christmas Cake"
    }, {
      id: 77,
      ﱡ︃︆︄: IMAGES.ﱢ︋︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︌︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︎︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︎︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Pancakez",
      name: "Mr. Pancake"
    }, {
      id: 87,
      ﱡ︃︆︄: IMAGES.ﱠ️︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ️︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︁︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︁︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Mr. Taco"
    }, {
      id: 78,
      ﱡ︃︆︄: IMAGES.ﱠ︌︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︌︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︎︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︎︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Mr. Bottle"
    }, {
      id: 79,
      ﱡ︃︆︄: IMAGES.ﱡ︌︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︌︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︎︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ️︉︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Mr. Bottle 2"
    }, {
      id: 97,
      ﱡ︃︆︄: IMAGES.ﱠ︂︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︂︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︄︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︄︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Pink Rabbit"
    }, {
      id: 102,
      ﱡ︃︆︄: IMAGES.ﱠ︄︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︄︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︆︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︆︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Marshmallow"
    }, {
      id: 107,
      ﱡ︃︆︄: IMAGES.ﱢ︅︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︆︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︈︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︈︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Fox"
    }, {
      id: 132,
      ﱡ︃︆︄: IMAGES.ﱠ︎︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︎︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︀︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︀︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Raccoon"
    }, {
      id: 111,
      ﱡ︃︆︄: IMAGES.ﱠ︇︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︇︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︉︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︉︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Cloud"
    }, {
      id: 113,
      ﱡ︃︆︄: IMAGES.ﱢ︇︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︈︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︊︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︊︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Moon"
    }, {
      id: 117,
      ﱡ︃︆︄: IMAGES.ﱠ︉︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︉︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︋︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︋︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Mr. Panda"
    }, {
      id: 118,
      ﱡ︃︆︄: IMAGES.ﱡ︉︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︉︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︋︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︌︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Mr. Strawberry"
    }, {
      id: 119,
      ﱡ︃︆︄: IMAGES.ﱢ︉︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︊︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︌︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︌︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito & Sushuui",
      name: "Mummy"
    }, {
      id: 122,
      ﱡ︃︆︄: IMAGES.ﱢ︊︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︋︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︍︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︍︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Dino"
    }, {
      id: 127,
      ﱡ︃︆︄: IMAGES.ﱡ︌︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︌︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︎︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ️︊︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Mr. Koala"
    }, {
      id: 160,
      ﱡ︃︆︄: IMAGES.ﱢ︇︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︈︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︊︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︊︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Bottle Protection"
    }, {
      id: 162,
      ﱡ︃︆︄: IMAGES.ﱡ︈︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︈︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︊︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︋︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "CrysTal",
      name: "Leaf Man"
    }, {
      id: 166,
      ﱡ︃︆︄: IMAGES.ﱢ︉︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︊︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︌︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︌︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Bubble"
    }, {
      id: 174,
      ﱡ︃︆︄: IMAGES.ﱢ︊︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︋︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︍︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︍︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "upfiz",
      name: "Potato"
    }, {
      id: 171,
      ﱡ︃︆︄: IMAGES.ﱢ︋︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︌︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︎︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︎︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "aloner",
      name: "Axolotl"
    }, {
      id: 25,
      ﱡ︃︆︄: IMAGES.ﱡ︌︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︌︅︃,
      ﱢ︃︆︄: IMAGES.ﱢ︎︈︃,
      ﱞ︄︆︄: IMAGES.ﱞ︍︈︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Pixelbitie",
      name: "Test Dummy"
    }, {
      id: 41,
      ﱡ︃︆︄: IMAGES.ﱢ︇︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︈︅︃,
      ﱢ︃︆︄: IMAGES.ﱠ︈︅︃,
      ﱞ︄︆︄: IMAGES.ﱟ︈︅︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Star-ver"
    }, {
      id: 43,
      ﱡ︃︆︄: IMAGES.ﱠ︎︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︎︅︃,
      ﱢ︃︆︄: IMAGES.ﱡ︀︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︀︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Communist",
      name: "Starver Chest"
    }, {
      id: 88,
      ﱡ︃︆︄: IMAGES.ﱡ️︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ️︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︁︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︂︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Communist",
      name: "Starver Workbench"
    }, {
      id: 121,
      ﱡ︃︆︄: IMAGES.ﱡ︊︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︊︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︌︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︍︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Fish"
    }, {
      id: 39,
      ﱡ︃︆︄: IMAGES.ﱢ︁︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︂︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︄︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︄︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Negligent4Dia",
      name: "Crab"
    }, {
      id: 40,
      ﱡ︃︆︄: IMAGES.ﱠ︂︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︂︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︄︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︄︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Negligent4Dia",
      name: "Piranha"
    }, {
      id: 36,
      ﱡ︃︆︄: IMAGES.ﱢ️︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︀︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︂︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︂︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Winter Fox"
    }, {
      id: 69,
      ﱡ︃︆︄: IMAGES.ﱠ︉︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︉︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︋︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︋︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Zed",
      name: "Baby Foxy"
    }, {
      id: 51,
      ﱡ︃︆︄: IMAGES.ﱠ︃︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︃︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︅︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︅︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "HOWI",
      name: "Winter Bear"
    }, {
      id: 133,
      ﱡ︃︆︄: IMAGES.ﱡ︎︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︎︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︀︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︁︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Hawk"
    }, {
      id: 55,
      ﱡ︃︆︄: IMAGES.ﱡ︄︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︄︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︆︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︇︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Nice Little Yuki"
    }, {
      id: 68,
      ﱡ︃︆︄: IMAGES.ﱢ︈︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︉︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︋︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︋︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Baby Yuki"
    }, {
      id: 62,
      ﱡ︃︆︄: IMAGES.ﱢ︆︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︇︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︉︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︉︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Carrot"
    }, {
      id: 56,
      ﱡ︃︆︄: IMAGES.ﱢ︄︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︅︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︇︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︇︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Bat Limax"
    }, {
      id: 72,
      ﱡ︃︆︄: IMAGES.ﱠ︊︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︊︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︌︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︌︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Mr. Crate"
    }, {
      id: 73,
      ﱡ︃︆︄: IMAGES.ﱡ︊︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︊︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︌︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︍︉︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Taco4Life & eogito",
      name: "Mr. Spider"
    }, {
      id: 93,
      ﱡ︃︆︄: IMAGES.ﱠ︁︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︁︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︃︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︃︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Anyone want to play?",
      name: "Mr. Spider 2"
    }, {
      id: 82,
      ﱡ︃︆︄: IMAGES.ﱡ︍︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︍︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ️︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︀︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Blue Starfish"
    }, {
      id: 83,
      ﱡ︃︆︄: IMAGES.ﱢ︍︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︎︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︀︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︀︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Orange Starfish"
    }, {
      id: 84,
      ﱡ︃︆︄: IMAGES.ﱠ︎︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︎︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︀︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︀︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Pink Starfish"
    }, {
      id: 85,
      ﱡ︃︆︄: IMAGES.ﱡ︎︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︎︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︀︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︁︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. ShellMauve"
    }, {
      id: 86,
      ﱡ︃︆︄: IMAGES.ﱢ︎︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ️︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︁︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︁︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Shell Bead"
    }, {
      id: 96,
      ﱡ︃︆︄: IMAGES.ﱡ︂︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︂︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︄︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︅︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Fukss",
      name: "Angry Crab"
    }, {
      id: 98,
      ﱡ︃︆︄: IMAGES.ﱢ︂︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︃︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︅︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︅︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Penguin"
    }, {
      id: 126,
      ﱡ︃︆︄: IMAGES.ﱠ︌︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︌︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︎︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︎︊︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Anyone want to play?",
      name: "Mr. Boar"
    }, {
      id: 145,
      ﱡ︃︆︄: IMAGES.ﱢ︂︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︃︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︅︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︅︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "I saw you"
    }, {
      id: 146,
      ﱡ︃︆︄: IMAGES.ﱠ︃︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︃︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︅︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︅︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "It was funny"
    }, {
      id: 147,
      ﱡ︃︆︄: IMAGES.ﱡ︃︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︃︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︅︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︆︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "You can scream"
    }, {
      id: 158,
      ﱡ︃︆︄: IMAGES.ﱠ︇︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︇︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︉︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︉︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Mr. Book"
    }, {
      id: 163,
      ﱡ︃︆︄: IMAGES.ﱢ︈︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︉︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︋︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︋︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Anyone want to play?",
      name: "Mr. Mammoth"
    }, {
      id: 164,
      ﱡ︃︆︄: IMAGES.ﱠ︉︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︉︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︋︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︋︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "SoOw",
      name: "Mr. Mammoth 2"
    }, {
      id: 161,
      ﱡ︃︆︄: IMAGES.ﱠ︈︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︈︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︊︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︊︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Nightmare"
    }, {
      id: 168,
      ﱡ︃︆︄: IMAGES.ﱡ︊︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︊︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︌︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︍︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Shiny Crystal"
    }, {
      id: 173,
      ﱡ︃︆︄: IMAGES.ﱡ︌︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︌︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︎︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ️︋︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Water skin"
    }, {
      id: 42,
      ﱡ︃︆︄: IMAGES.ﱠ️︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ️︅︃,
      ﱢ︃︆︄: IMAGES.ﱡ︁︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︁︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Will-O'-The-Wisp"
    }, {
      id: 91,
      ﱡ︃︆︄: IMAGES.ﱡ︀︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︀︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︂︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︃︊︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "ExpertyAnimations",
      name: "Flame"
    }, {
      id: 26,
      ﱡ︃︆︄: IMAGES.ﱡ️︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ️︅︃,
      ﱢ︃︆︄: IMAGES.ﱢ︁︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︂︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Be a Tree"
    }, {
      id: 38,
      ﱡ︃︆︄: IMAGES.ﱡ︀︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︀︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︂︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︃︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Toxic Mutant"
    }, {
      id: 50,
      ﱡ︃︆︄: IMAGES.ﱢ︂︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︃︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︅︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︅︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Communist",
      name: "Mr. Tomato"
    }, {
      id: 54,
      ﱡ︃︆︄: IMAGES.ﱠ︄︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︄︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︆︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︆︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Mauve, the Lapa"
    }, {
      id: 57,
      ﱡ︃︆︄: IMAGES.ﱠ︅︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︅︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︇︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︇︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Golden Fish"
    }, {
      id: 64,
      ﱡ︃︆︄: IMAGES.ﱡ︇︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︇︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︉︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︊︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "LapaMauve"
    }, {
      id: 65,
      ﱡ︃︆︄: IMAGES.ﱢ︇︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︈︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ︊︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︊︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "LapaMauve "
    }, {
      id: 92,
      ﱡ︃︆︄: IMAGES.ﱢ︀︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︁︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︃︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︃︊︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Burger"
    }, {
      id: 66,
      ﱡ︃︆︄: IMAGES.ﱠ︈︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︈︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︊︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︊︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Tropical Starver"
    }, {
      id: 80,
      ﱡ︃︆︄: IMAGES.ﱢ︌︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︍︆︃,
      ﱢ︃︆︄: IMAGES.ﱠ️︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ️︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. ShellPink"
    }, {
      id: 81,
      ﱡ︃︆︄: IMAGES.ﱠ︍︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︍︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ️︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ️︉︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. OranShell"
    }, {
      id: 99,
      ﱡ︃︆︄: IMAGES.ﱠ︃︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︃︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︅︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︅︊︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Pepe"
    }, {
      id: 100,
      ﱡ︃︆︄: IMAGES.ﱡ︃︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︃︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︅︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︆︊︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "fatant",
      name: "Mr. Ant"
    }, {
      id: 115,
      ﱡ︃︆︄: IMAGES.ﱡ︈︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︈︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︊︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︋︊︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Mr. Watermelon"
    }, {
      id: 101,
      ﱡ︃︆︄: IMAGES.ﱢ︃︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︄︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︆︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︆︊︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Mr. Thornbush"
    }, {
      id: 131,
      ﱡ︃︆︄: IMAGES.ﱢ︍︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︎︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︀︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︀︋︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Cthulhu"
    }, {
      id: 143,
      ﱡ︃︆︄: IMAGES.ﱠ︂︈︃,
      ﱣ︃︆︄: IMAGES.ﱟ︂︈︃,
      ﱢ︃︆︄: IMAGES.ﱡ︄︋︃,
      ﱞ︄︆︄: IMAGES.ﱣ︄︋︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Mr. Cactus"
    }, {
      id: 144,
      ﱡ︃︆︄: IMAGES.ﱡ︂︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︂︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︄︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︅︋︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Momo"
    }, {
      id: 95,
      ﱡ︃︆︄: IMAGES.ﱢ︁︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︂︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︄︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︄︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Mr. Garlic"
    }, {
      id: 76,
      ﱡ︃︆︄: IMAGES.ﱡ︋︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︋︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︍︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︎︉︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Robot Dragon"
    }, {
      id: 44,
      ﱡ︃︆︄: IMAGES.ﱢ︊︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︋︅︃,
      ﱢ︃︆︄: IMAGES.ﱠ︍︈︃,
      ﱞ︄︆︄: IMAGES.ﱟ︍︈︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Lava Dragon Version 1"
    }, {
      id: 90,
      ﱡ︃︆︄: IMAGES.ﱠ︀︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︀︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︂︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︂︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "ExpertyAnimations",
      name: "Lava Dragon Version 2"
    }, {
      id: 124,
      ﱡ︃︆︄: IMAGES.ﱡ︋︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︋︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︍︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︎︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Lava Dragon Version 3"
    }, {
      id: 45,
      ﱡ︃︆︄: IMAGES.ﱡ︎︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︎︅︃,
      ﱢ︃︆︄: IMAGES.ﱢ︀︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︁︉︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Sushui",
      name: "Ice Dragon Version 1"
    }, {
      id: 46,
      ﱡ︃︆︄: IMAGES.ﱢ︎︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ️︅︃,
      ﱢ︃︆︄: IMAGES.ﱠ︁︉︃,
      ﱞ︄︆︄: IMAGES.ﱟ︁︉︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Ice Dragon Version 2"
    }, {
      id: 108,
      ﱡ︃︆︄: IMAGES.ﱠ︆︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︆︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︈︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︈︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Ice Dragon Version 3"
    }, {
      id: 123,
      ﱡ︃︆︄: IMAGES.ﱠ︋︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︋︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ︍︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ︍︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Baby Dragon Version 1"
    }, {
      id: 128,
      ﱡ︃︆︄: IMAGES.ﱢ︌︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︍︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ️︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ️︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Baby Dragon Version 2"
    }, {
      id: 125,
      ﱡ︃︆︄: IMAGES.ﱢ︋︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︌︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︎︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︎︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Baby Lava"
    }, {
      id: 47,
      ﱡ︃︆︄: IMAGES.ﱡ︁︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︁︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︃︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︄︉︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Kraken"
    }, {
      id: 129,
      ﱡ︃︆︄: IMAGES.ﱠ︍︇︃,
      ﱣ︃︆︄: IMAGES.ﱟ︍︇︃,
      ﱢ︃︆︄: IMAGES.ﱡ️︊︃,
      ﱞ︄︆︄: IMAGES.ﱣ️︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Sandworm"
    }, {
      id: 63,
      ﱡ︃︆︄: IMAGES.ﱠ︇︆︃,
      ﱣ︃︆︄: IMAGES.ﱟ︇︆︃,
      ﱢ︃︆︄: IMAGES.ﱡ︉︉︃,
      ﱞ︄︆︄: IMAGES.ﱣ︉︉︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Golden Bread"
    }, {
      id: 67,
      ﱡ︃︆︄: IMAGES.ﱡ︈︆︃,
      ﱣ︃︆︄: IMAGES.ﱣ︈︆︃,
      ﱢ︃︆︄: IMAGES.ﱢ︊︉︃,
      ﱞ︄︆︄: IMAGES.ﱞ︋︉︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "ForgottenHeroe",
      name: "Starver Ores"
    }, {
      id: 130,
      ﱡ︃︆︄: IMAGES.ﱡ︍︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︍︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ️︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︀︋︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Poo"
    }, {
      id: 89,
      ﱡ︃︆︄: IMAGES.ﱢ️︆︃,
      ﱣ︃︆︄: IMAGES.ﱞ︀︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︂︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︂︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Poinet",
      name: "Volcano Starver"
    }, {
      id: 112,
      ﱡ︃︆︄: IMAGES.ﱡ︇︇︃,
      ﱣ︃︆︄: IMAGES.ﱣ︇︇︃,
      ﱢ︃︆︄: IMAGES.ﱢ︉︊︃,
      ﱞ︄︆︄: IMAGES.ﱞ︊︊︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Lava Starver"
    }, {
      id: 48,
      ﱡ︃︆︄: IMAGES.ﱢ︉︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︊︅︃,
      ﱢ︃︆︄: IMAGES.ﱠ︊︅︃,
      ﱞ︄︆︄: IMAGES.ﱟ︊︅︃,
      ﱠ︄︆︄: RARITY.SPECIAL,
      ﱟ︄︆︄: "eogito",
      name: "Robot"
    }, {
      id: 110,
      ﱡ︃︆︄: IMAGES.ﱢ︆︇︃,
      ﱣ︃︆︄: IMAGES.ﱞ︇︇︃,
      ﱢ︃︆︄: IMAGES.ﱠ︉︊︃,
      ﱞ︄︆︄: IMAGES.ﱟ︉︊︃,
      ﱠ︄︆︄: RARITY.SPECIAL,
      ﱟ︄︆︄: "pizza wa",
      name: "Blue Butterfly"
    }, {
      id: 157,
      ﱡ︃︆︄: IMAGES.ﱢ︆︈︃,
      ﱣ︃︆︄: IMAGES.ﱞ︇︈︃,
      ﱢ︃︆︄: IMAGES.ﱠ︉︋︃,
      ﱞ︄︆︄: IMAGES.ﱟ︉︋︃,
      ﱠ︄︆︄: RARITY.SPECIAL,
      ﱟ︄︆︄: "eogito",
      name: "Yrifox"
    }, {
      id: 165,
      ﱡ︃︆︄: IMAGES.ﱡ︉︈︃,
      ﱣ︃︆︄: IMAGES.ﱣ︉︈︃,
      ﱢ︃︆︄: IMAGES.ﱢ︋︋︃,
      ﱞ︄︆︄: IMAGES.ﱞ︌︋︃,
      ﱠ︄︆︄: RARITY.SPECIAL,
      ﱟ︄︆︄: "OmarJr13",
      name: "Blob Skin"
    }],
    ﱡ︃︌︁: [{
      id: 0,
      ﱡ︃︆︄: IMAGES.ﱟ︁︍︂,
      ﱣ︃︆︄: IMAGES.ﱡ︁︍︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Bag 1"
    }, {
      id: 1,
      ﱡ︃︆︄: IMAGES.ﱡ️︋︃,
      ﱣ︃︆︄: IMAGES.ﱣ️︋︃,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Bag"
    }, {
      id: 2,
      ﱡ︃︆︄: IMAGES.ﱢ︀︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︁︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bag 2"
    }, {
      id: 3,
      ﱡ︃︆︄: IMAGES.ﱠ︁︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︁︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bag 3"
    }, {
      id: 4,
      ﱡ︃︆︄: IMAGES.ﱡ︁︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︁︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bag 4"
    }, {
      id: 5,
      ﱡ︃︆︄: IMAGES.ﱢ︁︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︂︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bag 5"
    }, {
      id: 11,
      ﱡ︃︆︄: IMAGES.ﱡ︆︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︆︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wood Pickaxe Bag"
    }, {
      id: 19,
      ﱡ︃︆︄: IMAGES.ﱠ︄︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︄︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io ",
      name: "Wood Carrier"
    }, {
      id: 37,
      ﱡ︃︆︄: IMAGES.ﱢ︊︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︋︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Bag 6"
    }, {
      id: 39,
      ﱡ︃︆︄: IMAGES.ﱡ︋︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︋︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Bag with Wooden Swords"
    }, {
      id: 44,
      ﱡ︃︆︄: IMAGES.ﱠ︍︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︍︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Communist",
      name: "Big Bag"
    }, {
      id: 7,
      ﱡ︃︆︄: IMAGES.ﱢ︃︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︄︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Communist",
      name: "Bag 6"
    }, {
      id: 8,
      ﱡ︃︆︄: IMAGES.ﱟ️︋︂,
      ﱣ︃︆︄: IMAGES.ﱡ️︋︂,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Easter Bag"
    }, {
      id: 9,
      ﱡ︃︆︄: IMAGES.ﱠ️︋︃,
      ﱣ︃︆︄: IMAGES.ﱟ️︋︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Star Bag"
    }, {
      id: 10,
      ﱡ︃︆︄: IMAGES.ﱡ︂︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︂︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Winter Bag"
    }, {
      id: 20,
      ﱡ︃︆︄: IMAGES.ﱡ︄︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︄︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io ",
      name: "Stone Carrier"
    }, {
      id: 24,
      ﱡ︃︆︄: IMAGES.ﱢ︆︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︇︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Stone Pickaxe Bag"
    }, {
      id: 6,
      ﱡ︃︆︄: IMAGES.ﱡ︃︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︃︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Communist",
      name: "Bag Camouflage"
    }, {
      id: 38,
      ﱡ︃︆︄: IMAGES.ﱠ︋︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︋︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Bag with Stone Swords"
    }, {
      id: 54,
      ﱡ︃︆︄: IMAGES.ﱡ︀︍︃,
      ﱣ︃︆︄: IMAGES.ﱣ︀︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Cow Bag"
    }, {
      id: 59,
      ﱡ︃︆︄: IMAGES.ﱠ︂︍︃,
      ﱣ︃︆︄: IMAGES.ﱟ︂︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "CrysTal",
      name: "Starver Bag"
    }, {
      id: 62,
      ﱡ︃︆︄: IMAGES.ﱠ︃︍︃,
      ﱣ︃︆︄: IMAGES.ﱟ︃︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "CrysTal",
      name: "Crystal Sky Bag"
    }, {
      id: 13,
      ﱡ︃︆︄: IMAGES.ﱢ︂︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︃︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Honey Pot"
    }, {
      id: 21,
      ﱡ︃︆︄: IMAGES.ﱢ︄︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︅︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io ",
      name: "Gold Carrier"
    }, {
      id: 30,
      ﱡ︃︆︄: IMAGES.ﱠ︇︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︇︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Gold Pickaxe Bag"
    }, {
      id: 29,
      ﱡ︃︆︄: IMAGES.ﱠ︉︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︉︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Ariel",
      name: "Mr and Mrs Bakers"
    }, {
      id: 41,
      ﱡ︃︆︄: IMAGES.ﱠ︌︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︌︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Bag with Golden Swords"
    }, {
      id: 47,
      ﱡ︃︆︄: IMAGES.ﱠ︎︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︎︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Explorer Bag"
    }, {
      id: 51,
      ﱡ︃︆︄: IMAGES.ﱡ️︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ️︌︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Bamboo Bag"
    }, {
      id: 53,
      ﱡ︃︆︄: IMAGES.ﱠ︀︍︃,
      ﱣ︃︆︄: IMAGES.ﱟ︀︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Mummy Bag"
    }, {
      id: 58,
      ﱡ︃︆︄: IMAGES.ﱢ︁︍︃,
      ﱣ︃︆︄: IMAGES.ﱞ︂︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Watermelon Bag"
    }, {
      id: 60,
      ﱡ︃︆︄: IMAGES.ﱡ︂︍︃,
      ﱣ︃︆︄: IMAGES.ﱞ︃︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Garlic Bag"
    }, {
      id: 61,
      ﱡ︃︆︄: IMAGES.ﱢ︂︍︃,
      ﱣ︃︆︄: IMAGES.ﱣ︂︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Pumpkin Bag"
    }, {
      id: 64,
      ﱡ︃︆︄: IMAGES.ﱢ︃︍︃,
      ﱣ︃︆︄: IMAGES.ﱞ︄︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "upfiz",
      name: "Oil Barel bag"
    }, {
      id: 67,
      ﱡ︃︆︄: IMAGES.ﱡ︅︍︃,
      ﱣ︃︆︄: IMAGES.ﱣ︅︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Tree Bag"
    }, {
      id: 14,
      ﱡ︃︆︄: IMAGES.ﱢ️︋︃,
      ﱣ︃︆︄: IMAGES.ﱞ︀︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "a Rabbit in my Bag"
    }, {
      id: 15,
      ﱡ︃︆︄: IMAGES.ﱠ︀︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︀︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Bird's nest"
    }, {
      id: 16,
      ﱡ︃︆︄: IMAGES.ﱡ︀︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︀︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "a Fish on your Back"
    }, {
      id: 17,
      ﱡ︃︆︄: IMAGES.ﱠ︂︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︂︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "a Squirrel in my Bag"
    }, {
      id: 22,
      ﱡ︃︆︄: IMAGES.ﱠ︅︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︅︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io ",
      name: "Diamond Carrier"
    }, {
      id: 12,
      ﱡ︃︆︄: IMAGES.ﱠ︆︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︆︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Resources Bag"
    }, {
      id: 32,
      ﱡ︃︆︄: IMAGES.ﱡ︇︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︇︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Diamond Pickaxe Bag"
    }, {
      id: 40,
      ﱡ︃︆︄: IMAGES.ﱢ︋︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︌︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Bag with Diamond Swords"
    }, {
      id: 45,
      ﱡ︃︆︄: IMAGES.ﱡ︍︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︍︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "My Cake Bag"
    }, {
      id: 46,
      ﱡ︃︆︄: IMAGES.ﱢ︍︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︎︌︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "My Christmas Cake Bag"
    }, {
      id: 52,
      ﱡ︃︆︄: IMAGES.ﱢ️︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︀︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Fish Bag"
    }, {
      id: 65,
      ﱡ︃︆︄: IMAGES.ﱠ︄︍︃,
      ﱣ︃︆︄: IMAGES.ﱟ︄︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Cloud Bag"
    }, {
      id: 68,
      ﱡ︃︆︄: IMAGES.ﱢ︄︍︃,
      ﱣ︃︆︄: IMAGES.ﱞ︅︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Bee Bag"
    }, {
      id: 48,
      ﱡ︃︆︄: IMAGES.ﱡ︎︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︎︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "fatant",
      name: "Natural Bag"
    }, {
      id: 23,
      ﱡ︃︆︄: IMAGES.ﱡ︅︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︅︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io ",
      name: "Amethyst Carrier"
    }, {
      id: 25,
      ﱡ︃︆︄: IMAGES.ﱢ︇︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︈︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Amethyst Pickaxe Bag"
    }, {
      id: 28,
      ﱡ︃︆︄: IMAGES.ﱢ︈︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︉︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Your Baby"
    }, {
      id: 33,
      ﱡ︃︆︄: IMAGES.ﱡ︉︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︉︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Tropical Bag"
    }, {
      id: 43,
      ﱡ︃︆︄: IMAGES.ﱢ︌︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︍︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Bag with Amethyst Swords"
    }, {
      id: 35,
      ﱡ︃︆︄: IMAGES.ﱠ︊︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︊︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Ice Bag"
    }, {
      id: 50,
      ﱡ︃︆︄: IMAGES.ﱠ️︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ️︌︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Thornbush Bag"
    }, {
      id: 56,
      ﱡ︃︆︄: IMAGES.ﱠ︁︍︃,
      ﱣ︃︆︄: IMAGES.ﱟ︁︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Autumn Bag"
    }, {
      id: 57,
      ﱡ︃︆︄: IMAGES.ﱡ︁︍︃,
      ﱣ︃︆︄: IMAGES.ﱣ︁︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Dino Egg Bag"
    }, {
      id: 66,
      ﱡ︃︆︄: IMAGES.ﱡ︄︍︃,
      ﱣ︃︆︄: IMAGES.ﱣ︄︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Magic Cloud Bag"
    }, {
      id: 69,
      ﱡ︃︆︄: IMAGES.ﱠ︅︍︃,
      ﱣ︃︆︄: IMAGES.ﱟ︅︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Chest Bag"
    }, {
      id: 31,
      ﱡ︃︆︄: IMAGES.ﱢ︅︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︆︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io ",
      name: "Reidite Carrier"
    }, {
      id: 18,
      ﱡ︃︆︄: IMAGES.ﱠ︃︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︃︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Lava Bag"
    }, {
      id: 49,
      ﱡ︃︆︄: IMAGES.ﱢ︎︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ️︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Lava Bag 2"
    }, {
      id: 36,
      ﱡ︃︆︄: IMAGES.ﱡ︊︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︊︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Dragon Bag"
    }, {
      id: 55,
      ﱡ︃︆︄: IMAGES.ﱢ︀︍︃,
      ﱣ︃︆︄: IMAGES.ﱞ︁︍︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Winter Ice Bag"
    }, {
      id: 26,
      ﱡ︃︆︄: IMAGES.ﱠ︈︌︃,
      ﱣ︃︆︄: IMAGES.ﱟ︈︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Reidite Pickaxe Bag"
    }, {
      id: 27,
      ﱡ︃︆︄: IMAGES.ﱡ︈︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︈︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Octopus Bowl"
    }, {
      id: 34,
      ﱡ︃︆︄: IMAGES.ﱢ︉︌︃,
      ﱣ︃︆︄: IMAGES.ﱞ︊︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Cave Bag"
    }, {
      id: 42,
      ﱡ︃︆︄: IMAGES.ﱡ︌︌︃,
      ﱣ︃︆︄: IMAGES.ﱣ︌︌︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Bag with Reidite Swords"
    }, {
      id: 63,
      ﱡ︃︆︄: IMAGES.ﱡ︃︍︃,
      ﱣ︃︆︄: IMAGES.ﱣ︃︍︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Engineer Bag"
    }],
    ﱟ︇︎︁: [{
      id: 0,
      ﱡ︃︆︄: IMAGES.ﱣ︎️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︎️︃,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Dead Box"
    }, {
      id: 1,
      ﱡ︃︆︄: IMAGES.ﱟ︎️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︎️︃,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "eogito",
      name: "Hidden item"
    }, {
      id: 2,
      ﱡ︃︆︄: IMAGES.ﱣ︌️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︌️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Box 1"
    }, {
      id: 3,
      ﱡ︃︆︄: IMAGES.ﱞ︍️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︍️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Box 2"
    }, {
      id: 4,
      ﱡ︃︆︄: IMAGES.ﱟ︍️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︍️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Box 3"
    }, {
      id: 5,
      ﱡ︃︆︄: IMAGES.ﱣ︍️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︍️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Broken Wooden Box"
    }, {
      id: 6,
      ﱡ︃︆︄: IMAGES.ﱞ︎️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︎️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Box"
    }, {
      id: 7,
      ﱡ︃︆︄: IMAGES.ﱞ️️︃,
      ﱣ︃︆︄: IMAGES.ﱠ️️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Battle Box"
    }, {
      id: 8,
      ﱡ︃︆︄: IMAGES.ﱟ️️︃,
      ﱣ︃︆︄: IMAGES.ﱡ️️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Box with a Cross"
    }, {
      id: 9,
      ﱡ︃︆︄: IMAGES.ﱣ️️︃,
      ﱣ︃︆︄: IMAGES.ﱢ️️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Box with Bubbles"
    }, {
      id: 10,
      ﱡ︃︆︄: IMAGES.ﱞ︀︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︀︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden Box with Eyes"
    }, {
      id: 11,
      ﱡ︃︆︄: IMAGES.ﱟ︀︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︀︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Dark Wooden Box"
    }, {
      id: 38,
      ﱡ︃︆︄: IMAGES.ﱟ︉︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︉︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Weddlz",
      name: "Noob Box"
    }, {
      id: 12,
      ﱡ︃︆︄: IMAGES.ﱣ︀︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︀︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Wooden and Stone Box"
    }, {
      id: 14,
      ﱡ︃︆︄: IMAGES.ﱣ︂︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︂︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Star Box 1"
    }, {
      id: 15,
      ﱡ︃︆︄: IMAGES.ﱞ︃︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︃︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Star Box 2"
    }, {
      id: 27,
      ﱡ︃︆︄: IMAGES.ﱞ︆︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︆︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Flower Box"
    }, {
      id: 46,
      ﱡ︃︆︄: IMAGES.ﱞ︌︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︌︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Blue Box"
    }, {
      id: 19,
      ﱡ︃︆︄: IMAGES.ﱟ︃︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︃︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Beehive"
    }, {
      id: 13,
      ﱡ︃︆︄: IMAGES.ﱞ︁︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︁︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Wooden and Golden Box"
    }, {
      id: 21,
      ﱡ︃︆︄: IMAGES.ﱣ︃︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︃︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Gravestone"
    }, {
      id: 25,
      ﱡ︃︆︄: IMAGES.ﱞ︅︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︅︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Communist",
      name: "Sky Box"
    }, {
      id: 29,
      ﱡ︃︆︄: IMAGES.ﱟ︆︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︆︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Golden Box"
    }, {
      id: 34,
      ﱡ︃︆︄: IMAGES.ﱞ︈︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︈︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Communist",
      name: "Water Crate"
    }, {
      id: 35,
      ﱡ︃︆︄: IMAGES.ﱟ︈︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︈︀︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Communist",
      name: "Glass Crate"
    }, {
      id: 16,
      ﱡ︃︆︄: IMAGES.ﱟ︁︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︁︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Wooden and Diamond Box"
    }, {
      id: 18,
      ﱡ︃︆︄: IMAGES.ﱟ︂︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︂︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Don't Hit Me"
    }, {
      id: 26,
      ﱡ︃︆︄: IMAGES.ﱟ︅︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︅︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Underwater Box"
    }, {
      id: 31,
      ﱡ︃︆︄: IMAGES.ﱞ︇︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︇︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Communist",
      name: "Items Pile"
    }, {
      id: 32,
      ﱡ︃︆︄: IMAGES.ﱟ︇︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︇︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Cake Box"
    }, {
      id: 33,
      ﱡ︃︆︄: IMAGES.ﱣ︇︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︇︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Christmas Cake Box"
    }, {
      id: 36,
      ﱡ︃︆︄: IMAGES.ﱣ︈︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︈︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Fukss",
      name: "Crab Box"
    }, {
      id: 42,
      ﱡ︃︆︄: IMAGES.ﱣ︊︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︊︀︄,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Fishing Box"
    }, {
      id: 22,
      ﱡ︃︆︄: IMAGES.ﱞ︄︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︄︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Let me out of here"
    }, {
      id: 17,
      ﱡ︃︆︄: IMAGES.ﱣ︁︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︁︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Wooden and Amethyst Box"
    }, {
      id: 24,
      ﱡ︃︆︄: IMAGES.ﱣ︄︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︄︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Aquarium"
    }, {
      id: 28,
      ﱡ︃︆︄: IMAGES.ﱣ︅︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︅︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Gift Box"
    }, {
      id: 40,
      ﱡ︃︆︄: IMAGES.ﱞ︊︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︊︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Open Watermelon Box"
    }, {
      id: 41,
      ﱡ︃︆︄: IMAGES.ﱟ︊︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︊︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Watermelon Box"
    }, {
      id: 39,
      ﱡ︃︆︄: IMAGES.ﱣ︉︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︉︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Thornbush Box"
    }, {
      id: 43,
      ﱡ︃︆︄: IMAGES.ﱞ︋︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︋︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Rabbit in the Box"
    }, {
      id: 47,
      ﱡ︃︆︄: IMAGES.ﱟ︌︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︌︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Garlic Plot"
    }, {
      id: 48,
      ﱡ︃︆︄: IMAGES.ﱣ︌︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︌︀︄,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Pumpkin Plot"
    }, {
      id: 45,
      ﱡ︃︆︄: IMAGES.ﱣ︋︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︋︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Autumn Box"
    }, {
      id: 44,
      ﱡ︃︆︄: IMAGES.ﱟ︋︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︋︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Winter Box"
    }, {
      id: 20,
      ﱡ︃︆︄: IMAGES.ﱞ︂︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︂︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Metal and Reidite Box"
    }, {
      id: 23,
      ﱡ︃︆︄: IMAGES.ﱟ︄︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︄︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Kraken Box"
    }, {
      id: 30,
      ﱡ︃︆︄: IMAGES.ﱣ︆︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︆︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Lava Box"
    }, {
      id: 37,
      ﱡ︃︆︄: IMAGES.ﱞ︉︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︉︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Lava Box 2"
    }, {
      id: 49,
      ﱡ︃︆︄: IMAGES.ﱞ︍︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︍︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Rabbit"
    }, {
      id: 50,
      ﱡ︃︆︄: IMAGES.ﱟ︍︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︍︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Wolf"
    }, {
      id: 51,
      ﱡ︃︆︄: IMAGES.ﱣ︍︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︍︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Spider"
    }, {
      id: 52,
      ﱡ︃︆︄: IMAGES.ﱞ︎︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ︎︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Hawk"
    }, {
      id: 53,
      ﱡ︃︆︄: IMAGES.ﱟ︎︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ︎︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Bear"
    }, {
      id: 54,
      ﱡ︃︆︄: IMAGES.ﱣ︎︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ︎︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Fox"
    }, {
      id: 55,
      ﱡ︃︆︄: IMAGES.ﱞ️︀︄,
      ﱣ︃︆︄: IMAGES.ﱠ️︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Baby Mammoth"
    }, {
      id: 56,
      ﱡ︃︆︄: IMAGES.ﱟ️︀︄,
      ﱣ︃︆︄: IMAGES.ﱡ️︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Mammoth"
    }, {
      id: 57,
      ﱡ︃︆︄: IMAGES.ﱣ️︀︄,
      ﱣ︃︆︄: IMAGES.ﱢ️︀︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Sandworm"
    }, {
      id: 58,
      ﱡ︃︆︄: IMAGES.ﱞ︀︁︄,
      ﱣ︃︆︄: IMAGES.ﱠ︀︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Vulture"
    }, {
      id: 59,
      ﱡ︃︆︄: IMAGES.ﱟ︀︁︄,
      ﱣ︃︆︄: IMAGES.ﱡ︀︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Kraken"
    }, {
      id: 60,
      ﱡ︃︆︄: IMAGES.ﱣ︀︁︄,
      ﱣ︃︆︄: IMAGES.ﱢ︀︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Piranha"
    }, {
      id: 61,
      ﱡ︃︆︄: IMAGES.ﱞ︁︁︄,
      ﱣ︃︆︄: IMAGES.ﱠ︁︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Baby Dragon"
    }, {
      id: 62,
      ﱡ︃︆︄: IMAGES.ﱟ︁︁︄,
      ﱣ︃︆︄: IMAGES.ﱡ︁︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Baby Lava"
    }, {
      id: 63,
      ﱡ︃︆︄: IMAGES.ﱣ︁︁︄,
      ﱣ︃︆︄: IMAGES.ﱢ︁︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Dragon"
    }, {
      id: 64,
      ﱡ︃︆︄: IMAGES.ﱞ︂︁︄,
      ﱣ︃︆︄: IMAGES.ﱠ︂︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Penguin"
    }, {
      id: 65,
      ﱡ︃︆︄: IMAGES.ﱟ︂︁︄,
      ﱣ︃︆︄: IMAGES.ﱡ︂︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Lava Dragon"
    }, {
      id: 66,
      ﱡ︃︆︄: IMAGES.ﱣ︂︁︄,
      ﱣ︃︆︄: IMAGES.ﱢ︂︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Boar"
    }, {
      id: 67,
      ﱡ︃︆︄: IMAGES.ﱞ︃︁︄,
      ﱣ︃︆︄: IMAGES.ﱠ︃︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Fire mob"
    }, {
      id: 68,
      ﱡ︃︆︄: IMAGES.ﱟ︃︁︄,
      ﱣ︃︆︄: IMAGES.ﱡ︃︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the Crab"
    }, {
      id: 69,
      ﱡ︃︆︄: IMAGES.ﱣ︃︁︄,
      ﱣ︃︆︄: IMAGES.ﱢ︃︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Box of the King Crab"
    }, {
      id: 70,
      ﱡ︃︆︄: IMAGES.ﱞ︄︁︄,
      ﱣ︃︆︄: IMAGES.ﱠ︄︁︄,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "CrysTal",
      name: "Crystal Sky Box"
    }, {
      id: 71,
      ﱡ︃︆︄: IMAGES.ﱟ︄︁︄,
      ﱣ︃︆︄: IMAGES.ﱡ︄︁︄,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Dragon Box"
    }],
    ﱟ︃︌︁: [{
      id: 0,
      ﱡ︃︆︄: IMAGES.ﱟ︍︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︍︎︃,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Book 1"
    }, {
      id: 1,
      ﱡ︃︆︄: IMAGES.ﱟ︎︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︎︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Book 2"
    }, {
      id: 2,
      ﱡ︃︆︄: IMAGES.ﱣ︎︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︎︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Book 3"
    }, {
      id: 3,
      ﱡ︃︆︄: IMAGES.ﱞ️︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ️︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Book 4"
    }, {
      id: 4,
      ﱡ︃︆︄: IMAGES.ﱟ️︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ️︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Damaged Book 1"
    }, {
      id: 18,
      ﱡ︃︆︄: IMAGES.ﱟ︃️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︃️︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "SeveR",
      name: "Damaged Book 2"
    }, {
      id: 5,
      ﱡ︃︆︄: IMAGES.ﱣ︍︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︍︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Doctorpus",
      name: "Scroll"
    }, {
      id: 6,
      ﱡ︃︆︄: IMAGES.ﱞ︎︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︎︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Doctorpus",
      name: "Clipboard"
    }, {
      id: 7,
      ﱡ︃︆︄: IMAGES.ﱣ️︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ️︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Seed Book"
    }, {
      id: 20,
      ﱡ︃︆︄: IMAGES.ﱞ︄️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︄️︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Taco4Life",
      name: "Camo Book"
    }, {
      id: 24,
      ﱡ︃︆︄: IMAGES.ﱟ︅️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︅️︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Communist",
      name: "Stone Tablet"
    }, {
      id: 10,
      ﱡ︃︆︄: IMAGES.ﱣ︁️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︁️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Star Book"
    }, {
      id: 8,
      ﱡ︃︆︄: IMAGES.ﱟ︀️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︀️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Gold Book"
    }, {
      id: 15,
      ﱡ︃︆︄: IMAGES.ﱟ︂️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︂️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Old Mysterious Paper"
    }, {
      id: 17,
      ﱡ︃︆︄: IMAGES.ﱞ︃️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︃️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Gold Engraving"
    }, {
      id: 25,
      ﱡ︃︆︄: IMAGES.ﱣ︅️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︅️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "fatant",
      name: "Ant Book"
    }, {
      id: 32,
      ﱡ︃︆︄: IMAGES.ﱞ︈️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︈️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Mummy Book"
    }, {
      id: 37,
      ﱡ︃︆︄: IMAGES.ﱟ︊️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︊️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Garlic Book"
    }, {
      id: 38,
      ﱡ︃︆︄: IMAGES.ﱞ︊️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︊️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Pumpkin Book"
    }, {
      id: 39,
      ﱡ︃︆︄: IMAGES.ﱣ︊️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︊️︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Christmas Tree Book"
    }, {
      id: 11,
      ﱡ︃︆︄: IMAGES.ﱣ︀️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︀️︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Diamond Book"
    }, {
      id: 9,
      ﱡ︃︆︄: IMAGES.ﱞ︀️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︀️︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Obscure Book"
    }, {
      id: 16,
      ﱡ︃︆︄: IMAGES.ﱣ︂️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︂️︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Rolled Parchment"
    }, {
      id: 22,
      ﱡ︃︆︄: IMAGES.ﱣ︄️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︄️︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Cake Book"
    }, {
      id: 23,
      ﱡ︃︆︄: IMAGES.ﱞ︅️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︅️︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Christmas Cake Book"
    }, {
      id: 30,
      ﱡ︃︆︄: IMAGES.ﱟ︇️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︇️︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "MADBalgouthi",
      name: "Fish Book"
    }, {
      id: 31,
      ﱡ︃︆︄: IMAGES.ﱣ︇️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︇️︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "CrysTal",
      name: "Once upon a time"
    }, {
      id: 13,
      ﱡ︃︆︄: IMAGES.ﱞ︁️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︁️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Amethyst Book"
    }, {
      id: 28,
      ﱡ︃︆︄: IMAGES.ﱣ︆️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︆️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Paint Pallet"
    }, {
      id: 29,
      ﱡ︃︆︄: IMAGES.ﱞ︇️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︇️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "CrysTal",
      name: "Watermelon Book"
    }, {
      id: 27,
      ﱡ︃︆︄: IMAGES.ﱟ︆️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︆️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Thornbush Book"
    }, {
      id: 35,
      ﱡ︃︆︄: IMAGES.ﱞ︉️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︉️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Menu"
    }, {
      id: 36,
      ﱡ︃︆︄: IMAGES.ﱟ︉️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︉️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "CrysTal",
      name: "Lover Letter"
    }, {
      id: 40,
      ﱡ︃︆︄: IMAGES.ﱞ︋️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︋️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Fresh-Baked Cookies"
    }, {
      id: 41,
      ﱡ︃︆︄: IMAGES.ﱟ︋️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︋️︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Inside, there is just a book."
    }, {
      id: 33,
      ﱡ︃︆︄: IMAGES.ﱟ︈️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︈️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Winter Book"
    }, {
      id: 34,
      ﱡ︃︆︄: IMAGES.ﱣ︈️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︈️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Autumn Book"
    }, {
      id: 14,
      ﱡ︃︆︄: IMAGES.ﱟ︁️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︁️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Reidite Book"
    }, {
      id: 12,
      ﱡ︃︆︄: IMAGES.ﱞ︂️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︂️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Lava Book"
    }, {
      id: 26,
      ﱡ︃︆︄: IMAGES.ﱞ︆️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︆️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Lava Book 2"
    }, {
      id: 19,
      ﱡ︃︆︄: IMAGES.ﱣ︃️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︃️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Winter",
      name: "Ocean Mystery"
    }, {
      id: 21,
      ﱡ︃︆︄: IMAGES.ﱟ︄️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︄️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Dragon Book"
    }, {
      id: 42,
      ﱡ︃︆︄: IMAGES.ﱣ︋️︃,
      ﱣ︃︆︄: IMAGES.ﱢ︋️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Engineer Book"
    }, {
      id: 43,
      ﱡ︃︆︄: IMAGES.ﱞ︌️︃,
      ﱣ︃︆︄: IMAGES.ﱠ︌️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Nightmare Book"
    }, {
      id: 44,
      ﱡ︃︆︄: IMAGES.ﱟ︌️︃,
      ﱣ︃︆︄: IMAGES.ﱡ︌️︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "aloner",
      name: "Mystery Book"
    }],
    ﱣ︁︄︂: [{
      id: 0,
      ﱡ︃︆︄: IMAGES.ﱢ︅︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︅︍︃,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Nothing"
    }, {
      id: 2,
      ﱡ︃︆︄: IMAGES.ﱣ️︌︂,
      ﱣ︃︆︄: IMAGES.ﱢ️︌︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Pink Cheeks"
    }, {
      id: 3,
      ﱡ︃︆︄: IMAGES.ﱞ︎︋︂,
      ﱣ︃︆︄: IMAGES.ﱠ︎︋︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Heart"
    }, {
      id: 1,
      ﱡ︃︆︄: IMAGES.ﱣ︍︋︂,
      ﱣ︃︆︄: IMAGES.ﱢ︍︋︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Bandage 1"
    }, {
      id: 4,
      ﱡ︃︆︄: IMAGES.ﱟ︎︋︂,
      ﱣ︃︆︄: IMAGES.ﱡ︎︋︂,
      ﱠ︄︆︄: RARITY.FREE,
      ﱟ︄︆︄: "Starve.io",
      name: "Flower 1"
    }, {
      id: 5,
      ﱡ︃︆︄: IMAGES.ﱞ️︋︂,
      ﱣ︃︆︄: IMAGES.ﱠ️︋︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bow 1"
    }, {
      id: 6,
      ﱡ︃︆︄: IMAGES.ﱞ︀︍︂,
      ﱣ︃︆︄: IMAGES.ﱠ︀︍︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Bandage 2"
    }, {
      id: 7,
      ﱡ︃︆︄: IMAGES.ﱞ︇︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︇︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Flower 2"
    }, {
      id: 8,
      ﱡ︃︆︄: IMAGES.ﱟ︀︍︂,
      ﱣ︃︆︄: IMAGES.ﱡ︀︍︂,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Bandage 3"
    }, {
      id: 36,
      ﱡ︃︆︄: IMAGES.ﱣ︍︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︍︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Foliage"
    }, {
      id: 59,
      ﱡ︃︆︄: IMAGES.ﱟ︁︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︁︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Peaceful"
    }, {
      id: 67,
      ﱡ︃︆︄: IMAGES.ﱞ︄︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︄︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Sparkles"
    }, {
      id: 68,
      ﱡ︃︆︄: IMAGES.ﱟ︄︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︄︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Luxury"
    }, {
      id: 69,
      ﱡ︃︆︄: IMAGES.ﱣ︄︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︄︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Snow Flakes Crown"
    }, {
      id: 17,
      ﱡ︃︆︄: IMAGES.ﱞ︆︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︆︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Glasses 1"
    }, {
      id: 10,
      ﱡ︃︆︄: IMAGES.ﱣ︎︋︂,
      ﱣ︃︆︄: IMAGES.ﱢ︎︋︂,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Bow 2"
    }, {
      id: 11,
      ﱡ︃︆︄: IMAGES.ﱟ︆︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︆︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "pizza wa",
      name: "Little Stars"
    }, {
      id: 12,
      ﱡ︃︆︄: IMAGES.ﱣ︀︍︂,
      ﱣ︃︆︄: IMAGES.ﱢ︀︍︂,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Pirate Eye Patch 1"
    }, {
      id: 44,
      ﱡ︃︆︄: IMAGES.ﱟ︀︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︀︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Taco4Life",
      name: "Pirate Eye Patch 2"
    }, {
      id: 23,
      ﱡ︃︆︄: IMAGES.ﱟ︉︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︉︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Clown nose"
    }, {
      id: 16,
      ﱡ︃︆︄: IMAGES.ﱟ︍︋︂,
      ﱣ︃︆︄: IMAGES.ﱡ︍︋︂,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Eye Patch"
    }, {
      id: 30,
      ﱡ︃︆︄: IMAGES.ﱣ︋︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︋︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "eogito",
      name: "Flower 3"
    }, {
      id: 38,
      ﱡ︃︆︄: IMAGES.ﱟ︎︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︎︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Winter",
      name: "False Nose"
    }, {
      id: 74,
      ﱡ︃︆︄: IMAGES.ﱟ︆︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︆︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Red Cloth"
    }, {
      id: 75,
      ﱡ︃︆︄: IMAGES.ﱣ︆︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︆︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Blue Cloth"
    }, {
      id: 79,
      ﱡ︃︆︄: IMAGES.ﱞ︈︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︈︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Starve.io",
      name: "Transparent Mask"
    }, {
      id: 89,
      ﱡ︃︆︄: IMAGES.ﱟ︋︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︋︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Anyone want to play?",
      name: "Starve.io Anime"
    }, {
      id: 94,
      ﱡ︃︆︄: IMAGES.ﱣ︋︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︋︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︁︉︂,
      ﱟ︄︆︄: "Ant",
      name: "Hero Mask"
    }, {
      id: 15,
      ﱡ︃︆︄: IMAGES.ﱟ︇︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︇︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Star Glasses"
    }, {
      id: 21,
      ﱡ︃︆︄: IMAGES.ﱣ︈︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︈︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Great-aunt's Glasses"
    }, {
      id: 24,
      ﱡ︃︆︄: IMAGES.ﱣ︉︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︉︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Little Starver"
    }, {
      id: 22,
      ﱡ︃︆︄: IMAGES.ﱞ︉︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︉︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Little Glasses"
    }, {
      id: 13,
      ﱡ︃︆︄: IMAGES.ﱣ︆︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︆︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Flower Chain"
    }, {
      id: 29,
      ﱡ︃︆︄: IMAGES.ﱟ︋︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︋︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Horns"
    }, {
      id: 31,
      ﱡ︃︆︄: IMAGES.ﱞ︌︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︌︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Golden Flower"
    }, {
      id: 40,
      ﱡ︃︆︄: IMAGES.ﱞ️︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ️︍︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Sleeping Mask"
    }, {
      id: 57,
      ﱡ︃︆︄: IMAGES.ﱟ︂︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︂︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "Taco4Life",
      name: "Fish on your head"
    }, {
      id: 58,
      ﱡ︃︆︄: IMAGES.ﱞ︁︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︁︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Rose"
    }, {
      id: 91,
      ﱡ︃︆︄: IMAGES.ﱟ︌︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︌︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "upfiz",
      name: "Grey Scarf"
    }, {
      id: 92,
      ﱡ︃︆︄: IMAGES.ﱣ︌︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︌︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "upfiz",
      name: "Black Scarf"
    }, {
      id: 93,
      ﱡ︃︆︄: IMAGES.ﱞ︍︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︍︎︃,
      ﱠ︄︆︄: RARITY.ﱠ︀︍︁,
      ﱟ︄︆︄: "upfiz",
      name: "Skull Mask"
    }, {
      id: 9,
      ﱡ︃︆︄: IMAGES.ﱞ︍︋︂,
      ﱣ︃︆︄: IMAGES.ﱠ︍︋︂,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Fancy Glasses"
    }, {
      id: 25,
      ﱡ︃︆︄: IMAGES.ﱞ︊︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︊︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Medecin Mask"
    }, {
      id: 14,
      ﱡ︃︆︄: IMAGES.ﱞ︁︍︂,
      ﱣ︃︆︄: IMAGES.ﱠ︁︍︂,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mr. Mayor"
    }, {
      id: 19,
      ﱡ︃︆︄: IMAGES.ﱞ︈︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︈︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Sunglasses 2"
    }, {
      id: 28,
      ﱡ︃︆︄: IMAGES.ﱞ︋︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︋︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "pizza wa",
      name: "Starfish"
    }, {
      id: 37,
      ﱡ︃︆︄: IMAGES.ﱞ︎︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︎︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Berry"
    }, {
      id: 39,
      ﱡ︃︆︄: IMAGES.ﱣ︎︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︎︍︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Flake"
    }, {
      id: 43,
      ﱡ︃︆︄: IMAGES.ﱞ︀︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︀︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Leaf "
    }, {
      id: 61,
      ﱡ︃︆︄: IMAGES.ﱞ︂︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︂︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "A sword in your head"
    }, {
      id: 62,
      ﱡ︃︆︄: IMAGES.ﱣ︂︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︂︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Winter Scarf"
    }, {
      id: 64,
      ﱡ︃︆︄: IMAGES.ﱟ︃︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︃︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Winter Scarf 2"
    }, {
      id: 66,
      ﱡ︃︆︄: IMAGES.ﱣ︃︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︃︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Winter Scarf 3"
    }, {
      id: 70,
      ﱡ︃︆︄: IMAGES.ﱞ︅︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︅︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mask with animal tracks"
    }, {
      id: 71,
      ﱡ︃︆︄: IMAGES.ﱟ︅︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︅︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Spring Mask"
    }, {
      id: 72,
      ﱡ︃︆︄: IMAGES.ﱣ︅︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︅︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Pink Mask"
    }, {
      id: 73,
      ﱡ︃︆︄: IMAGES.ﱞ︆︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︆︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Blue Mask"
    }, {
      id: 76,
      ﱡ︃︆︄: IMAGES.ﱞ︇︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︇︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Military Mask"
    }, {
      id: 77,
      ﱡ︃︆︄: IMAGES.ﱟ︇︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︇︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Orange Mask"
    }, {
      id: 78,
      ﱡ︃︆︄: IMAGES.ﱣ︇︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︇︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "White and Red Points Mask"
    }, {
      id: 80,
      ﱡ︃︆︄: IMAGES.ﱟ︈︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︈︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Stick out your tongue Mask"
    }, {
      id: 81,
      ﱡ︃︆︄: IMAGES.ﱣ︈︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︈︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Two Teeth Mask"
    }, {
      id: 82,
      ﱡ︃︆︄: IMAGES.ﱞ︉︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︉︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Make-up Mask"
    }, {
      id: 83,
      ﱡ︃︆︄: IMAGES.ﱟ︉︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︉︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Sad Mask"
    }, {
      id: 84,
      ﱡ︃︆︄: IMAGES.ﱣ︉︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︉︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Happy Mask"
    }, {
      id: 90,
      ﱡ︃︆︄: IMAGES.ﱞ︌︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︌︎︃,
      ﱠ︄︆︄: RARITY.ﱟ︀︍︁,
      ﱟ︄︆︄: "aloner",
      name: "Blood"
    }, {
      id: 27,
      ﱡ︃︆︄: IMAGES.ﱣ︊︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︊︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Clown Face"
    }, {
      id: 20,
      ﱡ︃︆︄: IMAGES.ﱟ︈︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︈︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Sunglasses 3"
    }, {
      id: 32,
      ﱡ︃︆︄: IMAGES.ﱟ︌︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︌︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Engineer's Glasses"
    }, {
      id: 33,
      ﱡ︃︆︄: IMAGES.ﱣ︌︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︌︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Engineer's Monocle"
    }, {
      id: 34,
      ﱡ︃︆︄: IMAGES.ﱞ︍︍︃,
      ﱣ︃︆︄: IMAGES.ﱠ︍︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mauve's butt"
    }, {
      id: 41,
      ﱡ︃︆︄: IMAGES.ﱟ️︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ️︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Lapa Head"
    }, {
      id: 42,
      ﱡ︃︆︄: IMAGES.ﱣ️︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ️︍︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Lapa Head "
    }, {
      id: 85,
      ﱡ︃︆︄: IMAGES.ﱞ︊︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︊︎︃,
      ﱠ︄︆︄: RARITY.ﱢ︁︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Mask and Glasses"
    }, {
      id: 60,
      ﱡ︃︆︄: IMAGES.ﱣ︁︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︁︎︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Jason"
    }, {
      id: 26,
      ﱡ︃︆︄: IMAGES.ﱟ︊︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︊︍︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Devil Horns"
    }, {
      id: 18,
      ﱡ︃︆︄: IMAGES.ﱣ︇︍︃,
      ﱣ︃︆︄: IMAGES.ﱢ︇︍︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Big Boss"
    }, {
      id: 35,
      ﱡ︃︆︄: IMAGES.ﱟ︍︍︃,
      ﱣ︃︆︄: IMAGES.ﱡ︍︍︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Baby Kraken"
    }, {
      id: 63,
      ﱡ︃︆︄: IMAGES.ﱞ︃︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︃︎︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Deer Antlers"
    }, {
      id: 65,
      ﱡ︃︆︄: IMAGES.ﱣ︀︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︀︎︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Baby Dragon on your head"
    }, {
      id: 86,
      ﱡ︃︆︄: IMAGES.ﱟ︊︎︃,
      ﱣ︃︆︄: IMAGES.ﱡ︊︎︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Gaz Mask and Glasses"
    }, {
      id: 87,
      ﱡ︃︆︄: IMAGES.ﱣ︊︎︃,
      ﱣ︃︆︄: IMAGES.ﱢ︊︎︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "Starve.io",
      name: "Pink Gaz Mask and Glasses"
    }, {
      id: 88,
      ﱡ︃︆︄: IMAGES.ﱞ︋︎︃,
      ﱣ︃︆︄: IMAGES.ﱠ︋︎︃,
      ﱠ︄︆︄: RARITY.ﱟ️︍︁,
      ﱟ︄︆︄: "eogito",
      name: "Engineer Glasses"
    }, {
      id: 45,
      ﱡ︃︆︄: IMAGES.ﱠ︃︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︃︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 5",
      level: 5
    }, {
      id: 46,
      ﱡ︃︆︄: IMAGES.ﱡ︃︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︃︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 10",
      level: 10
    }, {
      id: 47,
      ﱡ︃︆︄: IMAGES.ﱢ︃︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︄︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 15",
      level: 15
    }, {
      id: 48,
      ﱡ︃︆︄: IMAGES.ﱠ︄︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︄︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 20",
      level: 20
    }, {
      id: 49,
      ﱡ︃︆︄: IMAGES.ﱡ︄︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︄︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 25",
      level: 25
    }, {
      id: 50,
      ﱡ︃︆︄: IMAGES.ﱢ︄︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︅︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 30",
      level: 30
    }, {
      id: 51,
      ﱡ︃︆︄: IMAGES.ﱠ︅︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︅︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 35",
      level: 35
    }, {
      id: 52,
      ﱡ︃︆︄: IMAGES.ﱡ︅︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︅︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 40",
      level: 40
    }, {
      id: 53,
      ﱡ︃︆︄: IMAGES.ﱢ︅︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︆︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 45",
      level: 45
    }, {
      id: 54,
      ﱡ︃︆︄: IMAGES.ﱠ︆︅︃,
      ﱣ︃︆︄: IMAGES.ﱟ︆︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 50",
      level: 50
    }, {
      id: 55,
      ﱡ︃︆︄: IMAGES.ﱡ︆︅︃,
      ﱣ︃︆︄: IMAGES.ﱣ︆︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 55",
      level: 55
    }, {
      id: 56,
      ﱡ︃︆︄: IMAGES.ﱢ︆︅︃,
      ﱣ︃︆︄: IMAGES.ﱞ︇︅︃,
      ﱠ︄︆︄: RARITY.LEVEL,
      ﱟ︄︆︄: "Starve.io",
      name: "More than Level 60",
      level: 60
    }]
  };
  Ki.ﱡ︄︆︄ = find_cosmetics_per_id(COSMETICS.ﱟ︃︆︄, 21);
  Ki.ﱣ︄︆︄ = find_cosmetics_per_id(COSMETICS.ﱟ︃︆︄, 20);
  sprite[249] = [];
  sprite[7] = [];
  sprite[244] = [];
  sprite[28] = [];
  sprite[29] = [];
  sprite[790] = [];
  for (var c = 0; c < COSMETICS.ﱟ︃︆︄[Oa]; c++) {
    sprite[249][c] = [COSMETICS.ﱟ︃︆︄[c].ﱡ︃︆︄, COSMETICS.ﱟ︃︆︄[c].ﱣ︃︆︄];
    sprite[7][c] = [COSMETICS.ﱟ︃︆︄[c].ﱢ︃︆︄, COSMETICS.ﱟ︃︆︄[c].ﱞ︄︆︄];
  }
  for (c = 0; c < COSMETICS.ﱟ︃︌︁[Oa]; c++) {
    sprite[28][c] = [COSMETICS.ﱟ︃︌︁[c].ﱡ︃︆︄, COSMETICS.ﱟ︃︌︁[c].ﱣ︃︆︄];
  }
  for (c = 0; c < COSMETICS.ﱟ︇︎︁[Oa]; c++) {
    sprite[244][c] = [COSMETICS.ﱟ︇︎︁[c].ﱡ︃︆︄, COSMETICS.ﱟ︇︎︁[c].ﱣ︃︆︄];
  }
  for (c = 0; c < COSMETICS.ﱡ︃︌︁[Oa]; c++) {
    sprite[29][c] = [COSMETICS.ﱡ︃︌︁[c].ﱡ︃︆︄, COSMETICS.ﱡ︃︌︁[c].ﱣ︃︆︄];
  }
  for (c = 0; c < COSMETICS.ﱣ︁︄︂[Oa]; c++) {
    sprite[790][c] = [COSMETICS.ﱣ︁︄︂[c].ﱡ︃︆︄, COSMETICS.ﱣ︁︄︂[c].ﱣ︃︆︄];
  }
};
INFO_BOX = [];
PLAYER_LEVEL = [];
var lg = [];
function mg() {
  var c = -8;
  if (hj.ﱢ︄︆︄.enabled) {
    var d = sprite[540];
    Yf(gb, d, hj.ﱢ︄︆︄.translate.x, hj.ﱢ︄︆︄.translate.y + c);
    c += 70;
  }
  if (hj.ﱞ︅︆︄ === 1) {
    d = sprite[543];
    Yf(gb, d, hj.ﱢ︄︆︄.translate.x, hj.ﱢ︄︆︄.translate.y + c);
    c += 70;
  } else if (hj.ﱟ︅︆︄.ﱠ︅︆︄.x < 0.25 || hj.ﱟ︅︆︄.ﱡ︅︆︄.x < 0.25 || hj.ﱟ︅︆︄.ﱣ︅︆︄.x < 0.25 || hj.ﱟ︅︆︄.ﱢ︅︆︄.x < 0.25 || hj.ﱟ︅︆︄.ﱞ︆︆︄.x < 0.25) {
    d = sprite[542];
    Yf(gb, d, hj.ﱢ︄︆︄.translate.x, hj.ﱢ︄︆︄.translate.y + c);
    c += 70;
  }
  if (hj.ﱠ︆︆︄ > 0) {
    d = sprite[541];
    Yf(gb, d, hj.ﱢ︄︆︄.translate.x, hj.ﱢ︄︆︄.translate.y + c);
    var e = lg[hj.ﱠ︆︆︄];
    if (e === undefined) {
      e = zd(mb, hj.ﱠ︆︆︄ + "", 30, "#FDFDFD", null, null, null, null, null, "#C8BBBF", 6);
      lg[hj.ﱠ︆︆︄] = e;
    }
    if (hj.ﱠ︆︆︄ < 9) {
      Yf(gb, e, hj.ﱢ︄︆︄.translate.x - 39, hj.ﱢ︄︆︄.translate.y + c + 20);
    } else {
      Yf(gb, e, hj.ﱢ︄︆︄.translate.x - 46, hj.ﱢ︄︆︄.translate.y + c + 20);
    }
  }
}
function ng() {
  var c = hj.ﱟ︆︆︄;
  var d = jj.ﱡ︆︆︄;
  if (c.update) {
    c.update = false;
    var e = c.ﱣ︆︆︄;
    var f = d.ﱢ︆︆︄.width;
    var g = d.ﱢ︆︆︄.height;
    var i = d.ﱞ︇︆︄;
    var k = gj.players;
    var m = false;
    i[Ea](0, 0, f, g);
    i[r](d.ﱡ︃︉︂, 0, 0);
    for (var n = 0; n < e[Oa]; n++) {
      var o = k[e[n]];
      if (!(gj.mode === Ki.ﱠ︇︆︄ && o.nickname === "spectator")) {
        if (!(gj.mode === Ki.ﱟ︇︆︄ && o.ﱡ︇︆︄ === Ki.ﱡ︄︆︄)) {
          if (e[n] == hj.id) {
            m = true;
            if (gj.mode === Ki.ﱣ︇︆︄ && o.ﱡ︇︆︄ === Ki.ﱣ︄︆︄) {
              color = "#FF0000";
            } else {
              color = "#FFF";
            }
          } else if (gj.mode === Ki.ﱣ︇︆︄ && o.ﱡ︇︆︄ === Ki.ﱣ︄︆︄) {
            color = "#990000";
          } else {
            color = "#A1BDCD";
          }
          i[r](zd(mb, "" + (n + 1), mb * 15, color), mb * 20, (40 + n * 22) * mb);
          if (!o.ﱢ︇︆︄) {
            o.ﱢ︇︆︄ = zd(mb, o.nickname, mb * 15, color, undefined, undefined, undefined, undefined, mb * 110);
          }
          i[r](o.ﱢ︇︆︄, mb * 39, (40 + n * 22) * mb);
          i[r](zd(mb, Utils.ﱢ︁︋︁(o.ﱞ︈︆︄), mb * 15, color), mb * 156, (40 + n * 22) * mb);
        }
      }
    }
    if (!m) {
      if (gj.mode === Ki.ﱠ︈︆︄ || gj.mode === Ki.ﱣ︇︆︄ || gj.mode === Ki.ﱟ︈︆︄ || gj.mode === Ki.ﱡ︈︆︄ || gj.mode === Ki.ﱣ︈︆︄ || gj.mode === Ki.ﱢ︈︆︄ || gj.mode === Ki.ﱠ︇︆︄ && !hj.ﱠ️︅︄ || gj.mode === Ki.ﱟ︇︆︄ && !hj.ﱟ️︅︄) {
        i[r](sprite[300], mb * 15, (46 + n * 22) * mb);
        i[r](zd(mb, Utils.ﱢ︁︋︁(gj.players[hj.id].ﱞ︈︆︄), mb * 15, "#FFF"), mb * 100, (46 + n * 22) * mb);
      }
    }
  }
  Yf(gb, d.ﱢ︆︆︄, d.translate.x, d.translate.y);
}
function og() {
  var c = hj.ﱞ️︅︄;
  if (c.ﱠ︌︎︄) {
    var d = c.ﱣ︋︎︄.update();
    gb[g]();
    var e = sprite[556];
    var f = sprite[531].height + mb * 25;
    gb[Ia](e.width, jj.ﱟ︅︆︄.translate.y - mb * 188 - f);
    var i = -e.width / 2 - 2;
    var k = -e.height / 2 - 4;
    Yf(gb, e, i + 2, k);
    gb[Y]();
    gb[m] = mb * 5;
    gb[S] = ["#FFF", "#FFF"][gj.time];
    gb[Ga] = "round";
    gb[J](0, k + e.height / 2, mb * 25, 0, Math[D] * 2 * c.ﱣ︋︎︄.ﱡ︃︋︁);
    gb[M]();
    gb[Qa]();
    if (d) {
      c.ﱠ︌︎︄ = false;
      c.ﱣ︋︎︄.ﱡ︃︋︁ = 0;
      c.ﱣ︋︎︄.ﱟ︃︋︁ = false;
    }
  }
}
function pg() {
  var c = gj.ﱞ︉︆︄;
  var d = sprite[719][gj.time];
  Yf(gb, d, c.translate.x, c.translate.y);
  gb[g]();
  gb[Ia](c.translate.x + d.width / 2, c.translate.y + d.height / 2);
  gj.ﱞ︉︆︄.now = (new Date().getTime() - c.init + c.ﱠ︉︆︄) % Ki.ﱢ︋︋︁;
  var e = Math[D] * 2 * gj.ﱞ︉︆︄.now / Ki.ﱢ︋︋︁ - Math[D] / 2;
  gb[ra](e);
  Yf(gb, sprite[720], -d.width / 2, -d.height / 2);
  gb[Qa]();
}
function qg() {
  var c = hj.ﱟ︉︆︄;
  if (c.ﱠ︌︎︄) {
    var d = c.ﱣ︋︎︄.update();
    gb[g]();
    var e = sprite[788];
    gb[Ia](e.width - mb * 12, jj.ﱟ︅︆︄.translate.y - mb * 190);
    var f = -e.width / 2 + 9;
    var i = -e.height / 2 - 4;
    Yf(gb, e, f, i);
    gb[Y]();
    gb[m] = mb * 5;
    gb[S] = ["#FFF", "#FFF"][gj.time];
    gb[Ga] = "round";
    gb[J](9, i + e.height / 2, mb * 25, 0, Math[D] * 2 * c.ﱣ︋︎︄.ﱡ︃︋︁);
    gb[M]();
    gb[Qa]();
    if (d) {
      c.ﱠ︌︎︄ = false;
      c.ﱣ︋︎︄.ﱡ︃︋︁ = 0;
      c.ﱣ︋︎︄.ﱟ︃︋︁ = false;
    }
  }
}
function rg() {
  var c = hj.ﱡ︉︆︄;
  if (c.ﱠ︌︎︄) {
    var d = c.ﱣ︋︎︄.update();
    gb[g]();
    var e = sprite[786];
    gb[Ia](e.width - mb * 2, jj.ﱟ︅︆︄.translate.y - mb * 125);
    var f = -e.width / 2 + 10;
    var i = -e.height / 2 - 4;
    Yf(gb, e, f, i);
    gb[Y]();
    gb[m] = mb * 5;
    gb[S] = ["#FFF", "#FFF"][gj.time];
    gb[Ga] = "round";
    gb[J](9, i + e.height / 2, mb * 25, 0, Math[D] * 2 * c.ﱣ︋︎︄.ﱡ︃︋︁);
    gb[M]();
    gb[Qa]();
    if (d) {
      c.ﱠ︌︎︄ = false;
      c.ﱣ︋︎︄.ﱡ︃︋︁ = 0;
      c.ﱣ︋︎︄.ﱟ︃︋︁ = false;
    }
  }
}
function sg() {
  var c = hj.ﱣ︉︆︄;
  if (c.ﱠ︌︎︄) {
    var d = c.ﱣ︋︎︄.update();
    gb[g]();
    var e = sprite[531];
    gb[Ia](e.width - mb * 2, jj.ﱟ︅︆︄.translate.y - mb * 60);
    var f = -e.width / 2 - 2;
    var i = -e.height / 2 - 4;
    Yf(gb, e, f, i);
    gb[Y]();
    gb[m] = mb * 5;
    gb[S] = ["#FFF", "#FFF"][gj.time];
    gb[Ga] = "round";
    gb[J](0, i + e.height / 2, mb * 25, 0, Math[D] * 2 * c.ﱣ︋︎︄.ﱡ︃︋︁);
    gb[M]();
    gb[Qa]();
    if (d) {
      c.ﱠ︌︎︄ = false;
      c.ﱣ︋︎︄.ﱡ︃︋︁ = 0;
      c.ﱣ︋︎︄.ﱟ︃︋︁ = false;
    }
  }
}
function tg() {
  var c = hj.ﱟ︌︉︂;
  if (c.ﱢ︉︆︄) {
    var d = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + d.x, hj.ﱡ︈︋︁.y + d.y);
    var e = sprite[318];
    var f = -e.width / 2;
    var i = -e.height / 2 - mb * 125;
    Yf(gb, e, f, i);
    gb[Y]();
    gb[m] = mb * 5;
    gb[S] = ["#4EB687", "#187484"][gj.time];
    gb[Ga] = "round";
    gb[J](0, i + e.height / 2, mb * 25, 0, Math[D] * 2 * c.ﱣ︋︎︄.ﱡ︃︋︁);
    gb[M]();
    gb[Qa]();
  }
}
function ug() {
  var c = hj.ﱟ︌︉︂;
  if (!c.ﱢ︉︆︄ && c.ﱞ︊︆︄ > 0) {
    var f = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    if (!f) {
      return;
    }
    gb[g]();
    if (Ub[c.ﱞ︊︆︄].grid === 0 && c.mode === 0) {
      gb[Ia](hj.ﱡ︈︋︁.x + f.x, hj.ﱡ︈︋︁.y + f.y);
      gb[ra](f.angle);
      gb[Ia](120, 0);
    } else {
      var i = Math[A](f.x + Math[za](f.angle) * 120);
      var k = Math[A](f.y + Math[e](f.angle) * 120);
      i = hj.ﱡ︈︋︁.x + (i - i % 100 + 50);
      k = hj.ﱡ︈︋︁.y + (k - k % 100 + 50);
      gb[Ia](i, k);
    }
    var m = sprite[c.ﱞ︊︆︄][gj.time];
    gb[ua] = 0.5;
    Yf(gb, m, -m.width / 2, -m.height / 2);
    gb[ua] = 1;
    gb[Qa]();
    if (Ub[c.ﱞ︊︆︄].grid === 0) {
      if (!c.ﱟ︌︎︄[c.mode]) {
        if (c.mode === 0) {
          c.ﱟ︌︎︄[0] = zd(mb, cc[336], 20, "#e2c340");
        } else {
          c.ﱟ︌︎︄[1] = zd(mb, cc[337], 20, "#e2c340");
        }
      }
      m = c.ﱟ︌︎︄[c.mode];
      Yf(gb, m, jb + -m.width / 2, jj.ﱟ︅︆︄.y - 26);
    }
  }
  if (c.ﱢ︉︆︄) {
    for (var n = c.ﱣ︋︎︄.update(), o = 0; o < c.ﱠ︊︆︄[Oa]; o++) {
      var p = c.ﱠ︊︆︄[o];
      if (c.id == p.id) {
        var q = mb * 42;
        var r = mb * 17;
        kc(gb, p.info.translate.x, p.info.translate.y + q * (1 - c.ﱣ︋︎︄.ﱡ︃︋︁), p.info.width, q * c.ﱣ︋︎︄.ﱡ︃︋︁ + r, mb * 10);
        gb[d] = "#55B973";
        gb[xa]();
        gb[ua] = 0.8;
        p.draw(gb);
      } else {
        gb[ua] = 0.5;
        p.draw(gb);
      }
      gb[ua] = 1;
    }
    if (n) {
      c.ﱢ︉︆︄ = false;
      c.ﱣ︋︎︄.ﱡ︃︋︁ = 0;
      c.ﱣ︋︎︄.ﱟ︃︋︁ = false;
    }
    return true;
  }
  for (o = 0; o < c.ﱠ︊︆︄[Oa]; o++) {
    c.ﱠ︊︆︄[o].draw(gb);
  }
  return false;
}
function vg() {
  for (var c = hj.ﱞ︁︆︄, d = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄], e = 0; e < c.ﱠ︂︆︄[Oa]; e++) {
    var f = c.ﱠ︂︆︄[e];
    var g = false;
    if ((d = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄]) && (d.ﱢ️︎︄ == f.id || d.ﱟ︊︆︄ == f.id && d.ﱟ︊︆︄ > 0)) {
      g = true;
      Yf(gb, f.info.ﱡ︃︉︂[2], f.info.translate.x, f.info.translate.y, f.info.width, f.info.height);
    } else {
      f.draw(gb);
    }
    var i = hj.ﱞ︁︆︄.n[f.id];
    if (i > 1) {
      _f(i, f);
    }
    if (i > 0) {
      $f(e, f, g);
    }
    var k = hj.ﱠ︉︅︄;
    if (!(!k.open || !(k.id < 0 || k.id == f.id) || k.ﱢ︎︎︄ && k.ﱡ︊︅︄ != hj.id)) {
      jj.ﱡ︊︆︄[f.id].draw(gb);
    }
    if (hj.ﱟ︉︅︄.open && f.id == 103) {
      jj.ﱡ︊︆︄[f.id].draw(gb);
    }
    if (hj.ﱟ︋︎︄.open && f.id == 174) {
      jj.ﱡ︊︆︄[f.id].draw(gb);
    }
    if (hj.ﱡ︉︅︄.open && f.id == 128) {
      jj.ﱡ︊︆︄[f.id].draw(gb);
    }
    if (hj.ﱢ︉︅︄.open && f.id == 103) {
      jj.ﱡ︊︆︄[f.id].draw(gb);
    }
    if (!(!hj.ﱣ︉︅︄.open || f.id != 103 && f.id != 125)) {
      jj.ﱡ︊︆︄[f.id].draw(gb);
    }
  }
  if (f && e < c[ba]) {
    var m = sprite[328][2];
    x = f.info.translate.x;
    y = f.info.translate.y;
    j = 1;
    for (; e < c[ba]; e++, j++) {
      Yf(gb, m, x + j * (m.width + 5), y);
    }
  }
}
function wg() {
  gb[g]();
  var c = mb;
  if (hj.ﱟ︅︆︄.ﱣ︊︆︄.x < 0.25) {
    gb[ua] = hj.ﱟ︅︆︄.ﱢ︊︆︄.ﱡ︃︋︁;
  }
  var e = hj.ﱞ︁︆︄.ﱠ︂︆︄[Oa] > 0 ? -70 : 0;
  if (hj.ﱠ︉︅︄.open || hj.ﱟ︉︅︄.open && hj.ﱞ︁︆︄.ﱢ︀︆︄(103) != -1 || hj.ﱡ︉︅︄.open && hj.ﱞ︁︆︄.ﱢ︀︆︄(128) != -1 || hj.ﱢ︉︅︄.open && hj.ﱞ︁︆︄.ﱢ︀︆︄(103) != -1 || hj.ﱟ︋︎︄.open && hj.ﱞ︁︆︄.ﱢ︀︆︄(174) != -1 || hj.ﱣ︉︅︄.open && (hj.ﱞ︁︆︄.ﱢ︀︆︄(103) != -1 || hj.ﱞ︁︆︄.ﱢ︀︆︄(125) != -1)) {
    e -= mb * 50;
  }
  gb[Ia]((hb - mb * 950) / 2, e);
  gb[d] = "#69A148";
  gb[pa](this.translate.x + mb * 37, this.translate.y + mb * 17, hj.ﱟ︅︆︄.ﱣ︊︆︄.x * 178 * mb, mb * 18);
  gb[ua] = 1;
  if (hj.ﱟ︅︆︄.ﱡ︅︆︄.x < 0.35) {
    gb[d] = "#8F050A";
    gb[ua] = hj.ﱟ︅︆︄.ﱞ︋︆︄.ﱡ︃︋︁;
    gb[pa](this.translate.x + mb * 277, this.translate.y + mb * 17, mb * 178, mb * 18);
    gb[ua] = 1;
  }
  gb[d] = "#AF352A";
  gb[pa](this.translate.x + mb * 277, this.translate.y + mb * 17, hj.ﱟ︅︆︄.ﱡ︅︆︄.x * 178 * mb, mb * 18);
  if (hj.ﱟ︅︆︄.ﱠ︅︆︄.x < 0.35) {
    gb[d] = "#366B91";
    gb[ua] = hj.ﱟ︅︆︄.ﱠ︋︆︄.ﱡ︃︋︁;
    gb[pa](this.translate.x + mb * 517, this.translate.y + mb * 17, mb * 178, mb * 18);
    gb[ua] = 1;
  }
  gb[d] = "#669BB1";
  gb[pa](this.translate.x + mb * 517, this.translate.y + mb * 17, hj.ﱟ︅︆︄.ﱠ︅︆︄.x * 178 * mb, mb * 18);
  if (hj.ﱟ︅︆︄.ﱠ︅︆︄.x > 0.99) {
    if (hj.ﱟ︅︆︄.ﱞ︆︆︄.x < 0.35) {
      gb[d] = "#6C4036";
      gb[ua] = hj.ﱟ︅︆︄.ﱟ︋︆︄.ﱡ︃︋︁;
      gb[pa](this.translate.x + mb * 517, this.translate.y + mb * 17, mb * 178, mb * 18);
      gb[ua] = 1;
    }
    gb[d] = "#9C4036";
    gb[pa](this.translate.x + mb * 517, this.translate.y + mb * 17, (1 - hj.ﱟ︅︆︄.ﱞ︆︆︄.x) * 178 * mb, mb * 18);
  }
  if (hj.ﱟ︅︆︄.ﱣ︅︆︄.x < 0.35) {
    gb[d] = "#001A57";
    gb[ua] = hj.ﱟ︅︆︄.ﱡ︋︆︄.ﱡ︃︋︁;
    gb[pa](this.translate.x + mb * 757, this.translate.y + mb * 17, mb * 178, mb * 18);
    gb[ua] = 1;
  }
  gb[d] = "#074A87";
  gb[pa](this.translate.x + mb * 757, this.translate.y + mb * 17, hj.ﱟ︅︆︄.ﱣ︅︆︄.x * 178 * mb, mb * 18);
  mb = c;
  Yf(gb, this.ﱡ︃︉︂, this.translate.x, this.translate.y);
  this.y = this.translate.y + e;
  gb[Qa]();
  if (hj.ﱟ︅︆︄.ﱢ︅︆︄.x < 0.99) {
    var f = Math[A](jb - sprite[602].width / 2);
    e += this.translate.y - sprite[602].height - mb * 5;
    gb[d] = "#BBE8EF";
    gb[pa](f + 5, e + mb * 5, mb * 588 * hj.ﱟ︅︆︄.ﱢ︅︆︄.x, mb * 10);
    if (hj.ﱟ︅︆︄.ﱢ︅︆︄.x < 0.35) {
      gb[d] = "#9BA8AF";
      gb[ua] = hj.ﱟ︅︆︄.ﱣ︋︆︄.ﱡ︃︋︁;
      gb[pa](f + 5, e + 5, mb * 588, mb * 10);
      gb[ua] = 1;
    }
    Yf(gb, sprite[602], f, e);
    this.y = e;
  }
}
function xg(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var d = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var f = Math[za](this.ﱢ︋︆︄.angle - this.angle) * d;
    var i = Math[e](this.ﱢ︋︆︄.angle - this.angle) * d;
  } else {
    f = 0;
    i = 0;
  }
  var k = sprite[c][gj.time];
  w = -k.width;                 
  h = -k.height;
  var fsdjf = -k.width;   
  var erutu = -k.height;
  Yf(gb, k, -w / 2 + f, -h / 2 + i, w, h);
  gb[Qa]();
}
function yg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  img = sprite[161][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2 + d, -h / 2 + f, w, h);
  if (this.ﱢ︎︎︄) {
    img = sprite[142][gj.time];
    w = -img.width;
    h = -img.height;
    Yf(gb, img, -w / 2 + d - mb * 1, -h / 2 + f, w, h);
  }
  gb[Qa]();
}
function zg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  img = sprite[842][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Ag() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  img = sprite[831][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}

function Bg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  img = sprite[805][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Cg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  img = sprite[233][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Dg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  img = sprite[315][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Eg(c) {
  if (!((c = c / 100) > 0.8)) {
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gb[ra](this.angle);
    if (this.ﱢ︋︆︄.update) {
      if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
        this.ﱢ︋︆︄.update = false;
      }
      var d = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
      var f = Math[za](this.ﱢ︋︆︄.angle - this.angle) * d;
      var i = Math[e](this.ﱢ︋︆︄.angle - this.angle) * d;
    } else {
      f = 0;
      i = 0;
    }
    gb[ua] = 0.5;
    mc(gb, f, i, mb * 18, c);
    jc(gb, null, "#000000", mb * 18);
    gb[ua] = 1;
    mc(gb, f, i, mb * 18, c);
    jc(gb, null, ["#664516", "#13474C"][gj.time], mb * 6);
    gb[Qa]();
  }
}
function Fg(c) {
  if (!((c = c / 100) > 0.95)) {
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gb[ra](this.angle);
    if (this.ﱢ︋︆︄.update) {
      if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
        this.ﱢ︋︆︄.update = false;
      }
      var d = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
      var f = Math[za](this.ﱢ︋︆︄.angle - this.angle) * d;
      var i = Math[e](this.ﱢ︋︆︄.angle - this.angle) * d;
    } else {
      f = 0;
      i = 0;
    }
    gb[ua] = 0.5;
    mc(gb, f, i, mb * 28, c);
    jc(gb, null, "#000000", mb * 18);
    gb[ua] = 1;
    mc(gb, f, i, mb * 28, c);
    jc(gb, null, ["#4EB687", "#187484"][gj.time], mb * 6);
    gb[Qa]();
  }
}
function Gg(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if(Settings.roofWH.enable) {
    gb[ua] = Settings.roofWH.opacity;
  } else {
    gb[ua] = 1;
  }
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var d = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var f = Math[za](this.ﱢ︋︆︄.angle - this.angle) * d;
    var i = Math[e](this.ﱢ︋︆︄.angle - this.angle) * d;
  } else {
    f = 0;
    i = 0;
  }
  var k = sprite[847][Oa];
  img = sprite[847][(this.ﱠ︌︆︄ + this.i % 2) % k][gj.time];
  w = -img.width;
  h = -img.height;
  var m = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
  if (m && (hj.id === this.ﱡ︊︅︄ || hj.ﱣ︀︆︄(this.ﱡ︊︅︄))) {
    if (Utils.ﱡ️︊︁(this, m) < 550) {
      this.opacity = Math[ba](this.opacity - nj, 0.3);
    } else {
      this.opacity = Math[ta](this.opacity + nj, 1);
    }
  } else if (m && Utils.ﱡ️︊︁(this, gj.ﱞ︊︅︄[hj.ﱠ︊︅︄]) < 150) {
    this.opacity = Math[ba](this.opacity - nj, 0.3);
  } else {
    this.opacity = Math[ta](this.opacity + nj, 1);
  }
  var n = gb[ua];
  gb[ua] *= this.opacity;
  Yf(gb, img, -w / 2 + f, -h / 2 + i, w, h);
  gb[ua] = n;
  gb[Qa]();
}
function Hg(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var d = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var f = Math[za](this.ﱢ︋︆︄.angle - this.angle) * d;
    var i = Math[e](this.ﱢ︋︆︄.angle - this.angle) * d;
  } else {
    f = 0;
    i = 0;
  }
  if (this.ﱟ︌︆︄.update()) {
    this.color += 0.2 + Math[o]() * 0.3;
  }
  img = sprite[866][Math[A](this.id + this.color) % 5][gj.time];
  w = -img.width * this.ﱟ︌︆︄.ﱡ︃︋︁;
  h = -img.height * this.ﱟ︌︆︄.ﱡ︃︋︁;
  Yf(gb, img, -w / 2 + f, -h / 2 + i, w, h);
  gb[Qa]();
}
function Ig(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var d = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var f = Math[za](this.ﱢ︋︆︄.angle - this.angle) * d;
    var i = Math[e](this.ﱢ︋︆︄.angle - this.angle) * d;
  } else {
    f = 0;
    i = 0;
  }
  if (c === 907 && !gj.transition) {
    for (var k = 0, m = gj.ﱠ︀️︄[0], n = 0; n < m[Oa]; n++) {
      var o = Utils.ﱡ️︊︁(m[n], this);
      if (o < 140 && o > 35) {
        k = 0;
        break;
      }
      if (o <= 35) {
        k = 1;
      }
    }
    this.opacity = k === 0 ? Math[ba](0.5, this.opacity - nj / 1.5) : Math[ta](1, this.opacity + nj / 1.5);
    gb[ua] = this.opacity;
  }
  img = sprite[c][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2 + f, -h / 2 + i, w, h);
  gb[ua] = 1;
  gb[Qa]();
}
function Jg(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var d = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var f = Math[za](this.ﱢ︋︆︄.angle - this.angle) * d;
    var i = Math[e](this.ﱢ︋︆︄.angle - this.angle) * d;
  } else {
    f = 0;
    i = 0;
  }
  img = sprite[c][gj.time];
  w = -img.width;
  h = -img.height;
  Yf(gb, img, -w / 2 + f, -h / 2 + i, w, h);
  gb[Qa]();
}
var Kg = 0;
function Lg(c, d, e, f, g, i, k, m, n) {
  if (m === undefined) {
    m = 0;
  }
  for (var o = c; o <= d; o++) {
    for (var p = e; p <= f; p++) {
      var q = ej.ﱡ︌︆︄[o][p];
      if (q !== undefined && q[i] !== undefined) {
        var r = q[i];
        var s = sprite[g][gj.time][r.ﱣ︌︆︄];
        Yf(gb, s, hj.ﱡ︈︋︁.x + r.x - s.width / (_scale_object * 4), hj.ﱡ︈︋︁.y + r.y - s.height / (_scale_object * 4), s.width / (_scale_object * 2), s.height / (_scale_object * 2));
        if (dj.ﱢ︌︆︄) {
          var t = 2147483648;
          var u = ((o * 1000 + p) * 1103515245 + 12345) % t / t;
          if (u < 0.2) {
            u = Math[A](sprite[1019][gj.time][r.ﱣ︌︆︄][Oa] * (u * 5));
            s = sprite[1019][gj.time][r.ﱣ︌︆︄][u];
            Yf(gb, s, hj.ﱡ︈︋︁.x + r.x - s.width / (_scale_object * 4), hj.ﱡ︈︋︁.y + r.y - s.height / (_scale_object * 4), s.width / (_scale_object * 2), s.height / (_scale_object * 2));
          } else if (r.ﱞ︍︆︄ !== 0) {
            s = sprite[1020][gj.time];
            var v = (Kg + o % 2 * 30) % 60;
            gb[ua] = v < 30 ? v / 30 : 1 - (v - 30) / 30;
            Yf(gb, s, hj.ﱡ︈︋︁.x + r.x - s.width / (_scale_object * 4), hj.ﱡ︈︋︁.y + r.y - s.height / (_scale_object * 4) - 30 + v, s.width / (_scale_object * 2), s.height / (_scale_object * 2));
            gb[ua] = 1;
          }
        }
      }
    }
  }
}
function Mg() {
  if ((this.info & 1) == 1) {
    this.ﱠ︍︆︄ = Math[ta](this.ﱠ︍︆︄ + nj, 2.2);
  } else {
    this.ﱠ︍︆︄ = Math[ba](this.ﱠ︍︆︄ - nj, 0);
    this.ﱟ︍︆︄ += nj;
    if (this.ﱟ︍︆︄ > 0.1) {
      this.ﱟ︍︆︄ = 0;
      var c = {
        x: this.x + Math[o]() * 60 - 30,
        y: this.y + Math[o]() * 60 - 30,
        a: 0,
        r: Math[o]() * 30 + 30
      };
      this.ﱡ︍︆︄[Na](c);
    }
  }
  for (var d = 0; d < this.ﱡ︍︆︄[Oa]; d++) {
    c = this.ﱡ︍︆︄[d];
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + c.x, hj.ﱡ︈︋︁.y + c.y);
    c.a = Math[ta](1, c.a + nj / 2);
    var e = c.a;
    if (e < 0.2) {
      e *= 5;
    } else {
      e = e > 0.8 ? (1 - e) * 5 : 1;
    }
    gb[ua] = e * 0.8;
    lc(gb, 0, 0, c.r);
    jc(gb, ["#E9CF96", "#144940"][gj.time]);
    gb[Qa]();
    if (c.a === 1) {
      this.ﱡ︍︆︄[u](d, 1);
      d--;
    }
  }
}
function Ng() {
  var c = undefined;
  var d = undefined;
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱣ︍︆︄.update();
  this.rotate.update();
  if (this.ﱠ︍︆︄ >= 0.1 && this.ﱠ︍︆︄ <= 1.1) {
    if ((e = Math[ba](0, Math[ta](1, this.ﱠ︍︆︄ - 0.1))) < 0.2) {
      e *= 5;
    } else {
      e = e > 0.8 ? (1 - e) * 5 : 1;
    }
    c = sprite[1144][gj.time];
    w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
    h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
    gb[ua] = e;
    Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
    d = sprite[1145];
  }
  if (this.ﱠ︍︆︄ >= 0.9) {
    var e;
    if ((e = Math[ba](0, Math[ta](1, this.ﱠ︍︆︄ - 0.9))) < 0.2) {
      e *= 5;
    } else {
      e = 1;
    }
    c = sprite[1146][gj.time];
    w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
    h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
    gb[ua] = e;
    Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
    d = sprite[1147];
  }
  if (this.action & 2 && d !== undefined) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * e;
    w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
    h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
    Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
  }
  gb[ua] = 1;
  gb[Qa]();
}
function Og() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  var c = Utils.ﱡ️︊︁(this, this.r);
  this.scale = c > 350 ? Math[ta](this.scale + nj / 2, 1.8) : Math[ba](this.scale - nj, 1);
  this.ﱣ︍︆︄.update();
  this.rotate.update();
  this.ﱢ︍︆︄ = c < 350 ? Math[ba](0, this.ﱢ︍︆︄ - nj * 2.2) : Math[ta](1, this.ﱢ︍︆︄ + nj * 2.2);
  d = sprite[1129][gj.time];
  w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[ua] = 1 - this.ﱢ︍︆︄;
  Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
  d = sprite[1113][gj.time];
  w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[ua] = this.ﱢ︍︆︄;
  Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * (1 - this.ﱢ︍︆︄);
    var d = sprite[1130];
    w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * this.ﱢ︍︆︄;
    d = sprite[1122];
    w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  d = sprite[1116][gj.time];
  w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[g]();
  gb[Ia](mb * -40, mb * 80);
  gb[ra](this.rotate.ﱡ︃︋︁);
  gb[ua] = this.ﱢ︍︆︄;
  Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * this.ﱢ︍︆︄;
    d = sprite[1123];
    Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  d = sprite[1119][gj.time];
  gb[g]();
  gb[Ia](mb * 40, mb * 80);
  gb[ra](-this.rotate.ﱡ︃︋︁);
  gb[ua] = this.ﱢ︍︆︄;
  Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * this.ﱢ︍︆︄;
    d = sprite[1124];
    Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[ua] = 1;
  gb[Qa]();
  gb[Qa]();
}
function Pg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  var c = Utils.ﱡ️︊︁(this, this.r);
  this.scale = c > 350 ? Math[ta](this.scale + nj / 2, 1.8) : Math[ba](this.scale - nj, 1);
  this.ﱣ︍︆︄.update();
  this.rotate.update();
  this.ﱢ︍︆︄ = c < 350 ? Math[ba](0, this.ﱢ︍︆︄ - nj * 2.2) : Math[ta](1, this.ﱢ︍︆︄ + nj * 2.2);
  d = (this.info & 1) == 0 ? sprite[1107][gj.time] : sprite[1108][gj.time];
  w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[ua] = 1 - this.ﱢ︍︆︄;
  Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
  d = (this.info & 1) == 0 ? sprite[1093][gj.time] : sprite[1092][gj.time];
  w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[ua] = this.ﱢ︍︆︄;
  Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * (1 - this.ﱢ︍︆︄);
    var d = sprite[1109];
    w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * this.ﱢ︍︆︄;
    d = sprite[1101];
    w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
    Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  d = (this.info & 1) == 0 ? sprite[1096][gj.time] : sprite[1095][gj.time];
  w = -d.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -d.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[g]();
  gb[Ia](mb * -20, mb * 0);
  gb[ra](this.rotate.ﱡ︃︋︁);
  gb[ua] = this.ﱢ︍︆︄;
  Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * this.ﱢ︍︆︄;
    d = sprite[1102];
    Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  d = (this.info & 1) == 0 ? sprite[1099][gj.time] : sprite[1098][gj.time];
  gb[g]();
  gb[Ia](mb * 20, mb * 0);
  gb[ra](-this.rotate.ﱡ︃︋︁);
  gb[ua] = this.ﱢ︍︆︄;
  Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = (0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁) * this.ﱢ︍︆︄;
    d = sprite[1103];
    Yf(gb, d, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[ua] = 1;
  gb[Qa]();
  gb[Qa]();
}
function Qg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (Utils.ﱡ️︊︁(this, this.r) > 300) {
    this.scale = Math[ta](this.scale + nj / 2, 1.8);
  } else {
    this.scale = Math[ba](this.scale - nj, 1);
  }
  this.ﱣ︍︆︄.update();
  this.rotate.update();
  c = this.info === 0 ? sprite[1078][gj.time] : sprite[1077][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var c = sprite[1086];
    Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  c = this.info === 0 ? sprite[1081][gj.time] : sprite[1080][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[g]();
  gb[Ia](mb * -40, mb * 10);
  gb[ra](this.rotate.ﱡ︃︋︁);
  Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[1087];
    Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  c = this.info === 0 ? sprite[1084][gj.time] : sprite[1083][gj.time];
  gb[g]();
  gb[Ia](mb * 40, mb * 10);
  gb[ra](-this.rotate.ﱡ︃︋︁);
  Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[1088];
    Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[Qa]();
}
function Rg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (Utils.ﱡ️︊︁(this, this.r) > 300) {
    this.scale = Math[ta](this.scale + nj / 2, 1.8);
  } else {
    this.scale = Math[ba](this.scale - nj, 1);
  }
  this.ﱣ︍︆︄.update();
  this.rotate.update();
  c = this.info === 0 ? sprite[1063][gj.time] : sprite[1062][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var c = sprite[1071];
    Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  c = this.info === 0 ? sprite[1066][gj.time] : sprite[1065][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[g]();
  gb[Ia](mb * -40, mb * 10);
  gb[ra](this.rotate.ﱡ︃︋︁);
  Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[1072];
    Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  c = this.info === 0 ? sprite[1069][gj.time] : sprite[1068][gj.time];
  gb[g]();
  gb[Ia](mb * 40, mb * 10);
  gb[ra](-this.rotate.ﱡ︃︋︁);
  Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[1073];
    Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[Qa]();
}
function Sg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (Utils.ﱡ️︊︁(this, this.r) > 300) {
    this.scale = Math[ta](this.scale + nj / 2, 1.8);
  } else {
    this.scale = Math[ba](this.scale - nj, 1);
  }
  this.ﱣ︍︆︄.update();
  this.rotate.update();
  c = sprite[444][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var c = sprite[458];
    Yf(gb, c, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  c = sprite[447][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[g]();
  gb[Ia](mb * -60, mb * 20);
  gb[ra](this.rotate.ﱡ︃︋︁);
  Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[462];
    Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  c = sprite[448][gj.time];
  gb[g]();
  gb[Ia](mb * 60, mb * 20);
  gb[ra](-this.rotate.ﱡ︃︋︁);
  Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[463];
    Yf(gb, c, -w * mb / 4, -h * mb / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[Qa]();
}
function Tg() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (Utils.ﱡ️︊︁(this, this.r) > 300) {
    this.scale = Math[ta](this.scale + nj / 2, 1.8);
  } else {
    this.scale = Math[ba](this.scale - nj, 1);
  }
  this.ﱣ︍︆︄.update();
  this.rotate.update();
  c = sprite[443][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  Yf(gb, c, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var c = sprite[457];
    Yf(gb, c, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  c = sprite[445][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁ * this.scale;
  gb[g]();
  gb[Ia](mb * -30, mb * 70);
  gb[ra](this.rotate.ﱡ︃︋︁);
  Yf(gb, c, mb * -10, mb * -40, w, h);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[460];
    Yf(gb, c, mb * -10, mb * -40, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
  c = sprite[446][gj.time];
  gb[g]();
  gb[Ia](mb * 30, mb * 70);
  gb[ra](-this.rotate.ﱡ︃︋︁);
  Yf(gb, c, mb * 10 - w, mb * -40, w, h);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    c = sprite[461];
    Yf(gb, c, mb * 10 - w, mb * -40, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[Qa]();
}
function Ug(c, d) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (c === 848) {
    c = 244;
    this.info = 36;
  }
  img = sprite[c][this.info][gj.time];
  w = -img.width / 2;
  h = -img.height / 2;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var e = Lh(this.info, img, __EFFECT_BOX__);
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function Vg(c, d) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  e = sprite[c][gj.time];
  w = -e.width;
  h = -e.height;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var e = sprite[d];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function Wg() {
  this.ﱣ︍︆︄.update();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  c = this.info === 0 ? sprite[1214][gj.time] : sprite[1216][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, c, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var c = sprite[1217];
    Yf(gb, c, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function Xg() {
  this.ﱣ︍︆︄.update();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  c = this.info === 0 ? sprite[1036][gj.time] : sprite[1038][gj.time];
  w = -c.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -c.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, c, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var c = sprite[1039];
    Yf(gb, c, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function Yg() {
  var c = Math[D] / 2;
  var d = Math[D] / 4;
  this.ﱣ︍︆︄.update();
  this.ﱞ︎︆︄.update();
  this.ﱠ︎︆︄.update();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  e = this.info === 0 ? sprite[1048][gj.time] : sprite[1047][gj.time];
  w = -e.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var e = sprite[1050];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  if (this.action & 4) {
    if (this.ﱟ︎︆︄.update() && this.ﱟ︎︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 4;
    }
    gb[ua] = 0.6 - this.ﱟ︎︆︄.ﱡ︃︋︁;
    e = sprite[1059];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle + d);
  gb[Ia](100, 0);
  gb[ra](c);
  e = this.info === 0 ? sprite[1054][gj.time] : sprite[1053][gj.time];
  w = -e.width * this.ﱞ︎︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱞ︎︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    e = sprite[1051];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  if (this.action & 4) {
    gb[ua] = 0.6 - this.ﱟ︎︆︄.ﱡ︃︋︁;
    e = sprite[1060];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle + c + d);
  gb[Ia](100, 0);
  gb[ra](c);
  e = this.info === 0 ? sprite[1057][gj.time] : sprite[1056][gj.time];
  w = -e.width * this.ﱠ︎︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱠ︎︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    e = sprite[1052];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  if (this.action & 4) {
    gb[ua] = 0.6 - this.ﱟ︎︆︄.ﱡ︃︋︁;
    e = sprite[1061];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function Zg() {
  var c = Math[D] / 2;
  var d = Math[D] / 4;
  this.ﱣ︍︆︄.update();
  this.ﱞ︎︆︄.update();
  this.ﱠ︎︆︄.update();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  e = this.info === 0 ? sprite[881][gj.time] : sprite[880][gj.time];
  w = -e.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var e = sprite[882];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  if (this.action & 4) {
    if (this.ﱟ︎︆︄.update() && this.ﱟ︎︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 4;
    }
    gb[ua] = 0.6 - this.ﱟ︎︆︄.ﱡ︃︋︁;
    e = sprite[885];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle + d);
  gb[Ia](55, 0);
  gb[ra](c);
  e = this.info === 0 ? sprite[888][gj.time] : sprite[890][gj.time];
  w = -e.width * this.ﱞ︎︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱞ︎︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    e = sprite[883];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  if (this.action & 4) {
    gb[ua] = 0.6 - this.ﱟ︎︆︄.ﱡ︃︋︁;
    e = sprite[886];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle + c + d);
  gb[Ia](55, 0);
  gb[ra](c);
  e = this.info === 0 ? sprite[889][gj.time] : sprite[891][gj.time];
  w = -e.width * this.ﱠ︎︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱠ︎︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    e = sprite[884];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  if (this.action & 4) {
    gb[ua] = 0.6 - this.ﱟ︎︆︄.ﱡ︃︋︁;
    e = sprite[887];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function $g() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle - Math[D] / 2);
  this.ﱡ︎︆︄ = Math[ta](1, this.ﱡ︎︆︄ + nj * 2);
  gb[ua] = Math[ta](1, Math[ba](0, Utils.ﱡ️︊︁(this, this.r) / 80)) * this.ﱡ︎︆︄;
  this.ﱣ︍︆︄.update();
  img = sprite[241][gj.time][this.ﱣ︎︆︄];
  if (this.ﱣ︎︆︄ < 2) {
    w = -img.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
    h = -img.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  } else if (this.ﱢ︎︆︄ === 0) {
    w = -img.width;
    h = -img.height;
  } else {
    w = -img.width * 1.35;
    h = -img.height * 1.35;
  }
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[ua] = 1;
  gb[Qa]();
}
function _g(c, d) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱣ︍︆︄.update();
  e = sprite[c][gj.time];
  w = -e.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 2, -h / 2, w, h);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var e = sprite[d];
    Yf(gb, e, -w / 2, -h / 2, w, h);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function ah(c, d) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱣ︍︆︄.update();
  e = sprite[c][gj.time];
  w = -e.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -e.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, e, -w / 4, -h / 4, w / 2, h / 2);
  if (this.action & 2) {
    if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
      this.action -= 2;
    }
    gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
    var e = sprite[d];
    Yf(gb, e, -w / 4, -h / 4, w / 2, h / 2);
    gb[ua] = 1;
  }
  gb[Qa]();
}
function bh(c, d, e) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + d, hj.ﱡ︈︋︁.y + e);
  gb[ra](this.angle);
  gb[Ia](this.x - d, this.y - e);
  this.ﱣ︍︆︄.update();
  img = sprite[c][gj.time];
  w = -img.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -img.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function ch(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱣ︍︆︄.update();
  img = sprite[c][gj.time];
  w = -img.width * this.ﱣ︍︆︄.ﱡ︃︋︁;
  h = -img.height * this.ﱣ︍︆︄.ﱡ︃︋︁;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function dh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  var i = this.info & 15;
  if (this.info === 10 || i === 0) {
    gb[ra](this.angle);
    this.ﱡ︍︆︄.update();
    if (this.info & 16) {
      var k = sprite[843][gj.time];
    } else {
      k = sprite[187][gj.time];
    }
    var m = -k.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var n = -k.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, k, -m / 2 + d, -n / 2 + f, m, n);
  } else {
    if (this.info & 16) {
      k = sprite[863][gj.time];
    } else {
      k = sprite[188][gj.time];
    }
    gb[Ia](0, k.height / 2);
    Yf(gb, k, d - k.width / 2, -k.height + f);
  }
  gb[Qa]();
}
function eh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  var i = this.info & 15;
  if (this.info === 10 || i === 0) {
    gb[ra](this.angle);
    this.ﱡ︍︆︄.update();
    if (this.info & 16) {
      var k = sprite[832][gj.time];
    } else {
      k = sprite[185][gj.time];
    }
    var m = -k.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var n = -k.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, k, -m / 2 + d, -n / 2 + f, m, n);
  } else {
    if (this.info & 16) {
      k = sprite[833][gj.time];
    } else {
      k = sprite[186][gj.time];
    }
    gb[Ia](0, k.height / 2);
    Yf(gb, k, d - k.width / 2, -k.height + f);
  }
  gb[Qa]();
}
function fh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  var i = this.info & 15;
  if (this.info === 10 || i === 0) {
    gb[ra](this.angle);
    this.ﱡ︍︆︄.update();
    if (this.info & 16) {
      var k = sprite[979][gj.time];
    } else {
      k = sprite[204][gj.time];
    }
    var m = -k.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var n = -k.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, k, -m / 2 + d, -n / 2 + f, m, n);
  } else {
    if (this.info & 16) {
      k = sprite[980][gj.time];
    } else {
      k = sprite[205][gj.time];
    }
    gb[Ia](0, k.height / 2);
    Yf(gb, k, d - k.width / 2, -k.height + f);
  }
  gb[Qa]();
}
function gh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  var i = this.info & 15;
  if (this.info === 10 || i === 0) {
    gb[ra](this.angle);
    this.ﱡ︍︆︄.update();
    if (this.info & 16) {
      var k = sprite[964][gj.time];
    } else {
      k = sprite[202][gj.time];
    }
    var m = -k.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var n = -k.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, k, -m / 2 + d, -n / 2 + f, m, n);
  } else {
    if (this.info & 16) {
      k = sprite[965][gj.time];
    } else {
      k = sprite[203][gj.time];
    }
    gb[Ia](0, k.height / 2);
    Yf(gb, k, d - k.width / 2, -k.height + f);
  }
  gb[Qa]();
}
function hh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  var i = this.info & 15;
  if (this.info === 10 || i === 0) {
    gb[ra](this.angle);
    this.ﱡ︍︆︄.update();
    if (this.info & 16) {
      var k = sprite[947][gj.time];
    } else {
      k = sprite[198][gj.time];
    }
    var m = -k.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var n = -k.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, k, -m / 2 + d, -n / 2 + f, m, n);
  } else {
    if (this.info & 16) {
      k = sprite[948][gj.time];
    } else {
      k = sprite[199][gj.time];
    }
    gb[Ia](0, k.height / 2);
    Yf(gb, k, d - k.width / 2, -k.height + f);
  }
  gb[Qa]();
}
function ih() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  var i = this.info & 15;
  if (this.info === 10 || i === 0) {
    gb[ra](this.angle);
    this.ﱡ︍︆︄.update();
    if (this.info & 16) {
      var k = sprite[806][gj.time];
    } else {
      k = sprite[182][gj.time];
    }
    var m = -k.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var n = -k.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, k, -m / 2 + d, -n / 2 + f, m, n);
  } else {
    if (this.info & 16) {
      k = sprite[807][gj.time];
    } else {
      k = sprite[183][gj.time];
    }
    gb[Ia](0, k.height / 2);
    Yf(gb, k, d - k.width / 2, -k.height + f);
  }
  gb[Qa]();
}
function jh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  var i = this.info & 15;
  if (this.info === 10 || i === 0) {
    gb[ra](this.angle);
    this.ﱡ︍︆︄.update();
    if (this.info & 16) {
      var k = sprite[662][gj.time];
    } else {
      k = sprite[126][gj.time];
    }
    var m = -k.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var n = -k.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, k, -m / 2 + d, -n / 2 + f, m, n);
  } else {
    this.ﱞ️︆︄.update();
    if (this.info & 16) {
      k = sprite[632][gj.time];
    } else {
      k = sprite[128][gj.time];
    }
    gb[Ia](0, k.height / 2);
    gb[ra](this.ﱞ️︆︄.ﱡ︃︋︁);
    Yf(gb, k, d - k.width / 2, -k.height + f);
  }
  gb[Qa]();
}
function kh() {
  if (!(this.info < 10)) {
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gb[ra](this.angle);
    if (this.ﱢ︋︆︄.update) {
      if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
        this.ﱢ︋︆︄.update = false;
      }
      var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
      var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
      var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
    } else {
      d = 0;
      f = 0;
    }
    this.ﱡ︍︆︄.update();
    var i = sprite[109][gj.time];
    var k = -i.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var m = -i.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, i, -k / 2 + d, -m / 2 + f, k, m);
    gb[Qa]();
  }
}
function lh() {
  if (this.info !== 10) {
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gb[ra](this.angle);
    if (this.ﱢ︋︆︄.update) {
      if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
        this.ﱢ︋︆︄.update = false;
      }
      var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
      var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
      var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
    } else {
      d = 0;
      f = 0;
    }
    if (this.info & 16) {
      var i = sprite[617][gj.time];
    } else {
      i = sprite[281][gj.time];
    }
    Yf(gb, i, -i.width / 2 + d, -i.width / 2 + f);
    gb[Qa]();
    for (var k = this.info & 15, m = 0; m < k; m++) {
      this.ﱡ︈︅︄[m].draw(288);
    }
  }
}
function mh() {
  if (!(this.info < 10)) {
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gb[ra](this.angle);
    if (this.ﱢ︋︆︄.update) {
      if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
        this.ﱢ︋︆︄.update = false;
      }
      var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
      var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
      var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
    } else {
      d = 0;
      f = 0;
    }
    this.ﱡ︍︆︄.update();
    var i = sprite[200][gj.time];
    var k = -i.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
    var m = -i.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
    Yf(gb, i, -k / 2 + d, -m / 2 + f, k, m);
    gb[Qa]();
  }
}
function nh() {
  if (this.info !== 10) {
    for (var c = this.info & 15, d = 0; d < c; d++) {
      this.ﱡ︈︅︄[d].draw(201, this.x, this.y);
    }
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gb[ra](this.angle);
    if (this.ﱢ︋︆︄.update) {
      if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
        this.ﱢ︋︆︄.update = false;
      }
      var f = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
      var i = Math[za](this.ﱢ︋︆︄.angle - this.angle) * f;
      var k = Math[e](this.ﱢ︋︆︄.angle - this.angle) * f;
    } else {
      i = 0;
      k = 0;
    }
    if (this.info & 16) {
      var m = sprite[952][gj.time];
    } else {
      m = sprite[951][gj.time];
    }
    Yf(gb, m, -m.width / 2 + i, -m.width / 2 + k);
    gb[Qa]();
  }
}
function oh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  if (this.action == 2) {
    img = sprite[401][gj.time];
  } else {
    img = sprite[113][gj.time];
  }
  Yf(gb, img, -img.width / 2 + d, -img.height / 2 + f);
  gb[Qa]();
}
function ph() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱡ︍︆︄.update();
  gb[ua] = 0.3;
  var c = sprite[276][gj.time];
  var d = -c.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
  var e = -c.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
  Yf(gb, c, -d / 2, -e / 2, d, e);
  gb[ua] = 1;
  gb[Qa]();
}
function qh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.info & 31 && this.info & 992 && (this.info & 31744) != 31744 && (this.ﱠ️︆︄[Oa] == 0 || this.ﱠ️︆︄[this.ﱠ️︆︄[Oa] - 1] <= 0.6)) {
    this.ﱠ️︆︄[Na](1);
  }
  for (var c = 0; c < this.ﱠ️︆︄[Oa]; c++) {
    this.ﱠ️︆︄[c] = Math[ba](0, this.ﱠ️︆︄[c] - nj * 0.25);
    gb[ua] = this.ﱠ️︆︄[c] / 1.3;
    var d = (1 - this.ﱠ️︆︄[c]) * 40;
    var f = (1 - this.ﱠ️︆︄[c]) * 35 + 10;
    lc(gb, mb * -68 + Math[za](-this.angle - Math[D] / 2) * d, mb * -20 + Math[e](-this.angle - Math[D] / 2) * d, f);
    jc(gb, "#333333");
  }
  gb[ua] = 1;
  if (this.ﱠ️︆︄[Oa] > 0 && this.ﱠ️︆︄[0] === 0) {
    this.ﱠ️︆︄[na]();
  }
  gb[Qa]();
}
function rh(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱡ︍︆︄.update();
  gb[ua] = 0.3;
  var d = sprite[276][gj.time];
  var f = -d.width * this.ﱡ︍︆︄.ﱡ︃︋︁;
  var i = -d.height * this.ﱡ︍︆︄.ﱡ︃︋︁;
  Yf(gb, d, -f / 2, -i / 2, f, i);
  gb[ua] = 1;
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var k = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var m = Math[za](this.ﱢ︋︆︄.angle - this.angle) * k;
    var n = Math[e](this.ﱢ︋︆︄.angle - this.angle) * k;
  } else {
    m = 0;
    n = 0;
  }
  d = sprite[c][gj.time];
  Yf(gb, d, -d.width / 2 + m, -d.height / 2 + n);
  gb[Qa]();
}
function sh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  if (this.info === 0) {
    img = sprite[177][gj.time];
  } else {
    img = sprite[796][gj.time][this.info - 1];
  }
  Yf(gb, img, -img.width / 2 + d, -img.height / 2 + f);
  gb[Qa]();
}
function th() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  if (this.info & 31 && this.info & 992 && (this.info & 31744) != 31744) {
    i = sprite[710][gj.time];
    Yf(gb, i, -i.width / 2 + d, -i.height / 2 + f);
    this.ﱟ️︆︄.update();
    var i = sprite[714][gj.time];
    var k = -i.width * this.ﱟ️︆︄.ﱡ︃︋︁;
    var m = -i.height * this.ﱟ️︆︄.ﱡ︃︋︁;
    Yf(gb, i, -k / 2 + mb * 1, -m / 2 + mb * 3, k, m);
  } else {
    i = sprite[138][gj.time];
    Yf(gb, i, -i.width / 2 + d, -i.height / 2 + f);
  }
  gb[Qa]();
}
function uh() {
  if (this.ﱢ︋︆︄.update) {
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  if (this.info & 255 && (this.info & 65280) != 65280) {
    this.rotate = (this.rotate + nj * 0.5) % (Math[D] * 2);
  }
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[g]();
  gb[ra](this.rotate);
  img = sprite[635][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[g]();
  gb[ra](this.ﱡ️︆︄);
  img = sprite[636][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[Qa]();
}
function vh() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  gb[g]();
  if (this.info & 255 && (this.info & 65280) != 65280) {
    d += Math[o]() * 2 - 1;
    f += Math[o]() * 2 - 1;
  }
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[ra](this.angle);
  img = sprite[147][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  if (this.info & 255 && (this.info & 65280) != 65280) {
    this.rotate = (this.rotate + nj * 3) % (Math[D] * 2);
  }
  gb[ra](this.rotate);
  img = sprite[1192][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
}
function wh() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  gb[g]();
  if (this.info & 255 && (this.info & 65280) != 65280) {
    d += Math[o]() * 2 - 1;
    f += Math[o]() * 2 - 1;
  }
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[ra](this.angle);
  img = sprite[148][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  if (this.info & 255 && (this.info & 65280) != 65280) {
    this.rotate = (this.rotate + nj * 3) % (Math[D] * 2);
  }
  gb[ra](this.rotate);
  img = sprite[1196][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
}
function xh() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  gb[g]();
  if (this.info & 255 && (this.info & 65280) != 65280) {
    d += Math[o]() * 2 - 1;
    f += Math[o]() * 2 - 1;
  }
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[ra](this.angle);
  img = sprite[149][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  if (this.info & 255 && (this.info & 65280) != 65280) {
    this.rotate = (this.rotate + nj * 3) % (Math[D] * 2);
  }
  gb[ra](this.rotate);
  img = sprite[1200][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
}
function yh() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  gb[g]();
  if (this.info & 255 && (this.info & 65280) != 65280) {
    d += Math[o]() * 2 - 1;
    f += Math[o]() * 2 - 1;
  }
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[ra](this.angle);
  img = sprite[150][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  if (this.info & 255 && (this.info & 65280) != 65280) {
    this.rotate = (this.rotate + nj * 3) % (Math[D] * 2);
  }
  gb[ra](this.rotate);
  img = sprite[1204][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
}
function zh() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  gb[g]();
  if (this.info & 255 && (this.info & 65280) != 65280) {
    d += Math[o]() * 2 - 1;
    f += Math[o]() * 2 - 1;
  }
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[ra](this.angle);
  img = sprite[151][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  if (this.info & 255 && (this.info & 65280) != 65280) {
    this.rotate = (this.rotate + nj * 3) % (Math[D] * 2);
  }
  gb[ra](this.rotate);
  img = sprite[1208][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
}
function Ah() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[ra](this.angle);
  img = sprite[129][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
}
function Bh() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  this.ﱣ️︆︄ = (this.ﱣ️︆︄ + nj * 3) % (Math[D] * 2);
  this.ﱢ️︆︄ = (this.ﱢ️︆︄ - nj * 3) % (Math[D] * 2);
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[g]();
  gb[ra](this.angle);
  img = sprite[146][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[g]();
  gb[ra](this.ﱣ️︆︄);
  img = sprite[1188][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[g]();
  gb[ra](this.ﱢ️︆︄);
  img = sprite[1187][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[Qa]();
}
function Ch() {
  if (this.ﱢ︋︆︄.update) {
    if (this.ﱢ︋︆︄.ﱞ︌︆︄.update() && this.ﱢ︋︆︄.ﱞ︌︆︄.ﱟ︃︋︁ == 0) {
      this.ﱢ︋︆︄.update = false;
    }
    var c = (1 - this.ﱢ︋︆︄.ﱞ︌︆︄.ﱡ︃︋︁) * nj * 600 * mb;
    var d = Math[za](this.ﱢ︋︆︄.angle - this.angle) * c;
    var f = Math[e](this.ﱢ︋︆︄.angle - this.angle) * c;
  } else {
    d = 0;
    f = 0;
  }
  this.ﱣ️︆︄ = (this.ﱣ️︆︄ + nj * 3) % (Math[D] * 2);
  this.ﱢ️︆︄ = (this.ﱢ️︆︄ - nj * 3) % (Math[D] * 2);
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x + d, hj.ﱡ︈︋︁.y + this.y + f);
  gb[g]();
  gb[ra](this.angle);
  img = sprite[145][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[g]();
  gb[ra](this.ﱣ️︆︄);
  img = sprite[522][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[g]();
  gb[ra](this.ﱢ️︆︄);
  img = sprite[521][gj.time];
  Yf(gb, img, -img.width / 2, -img.height / 2);
  gb[Qa]();
  gb[Qa]();
}
function Dh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱟ︌︆︄.update();
  img = sprite[1186][gj.time];
  w = -img.width * this.ﱟ︌︆︄.ﱡ︃︋︁;
  h = -img.height * this.ﱟ︌︆︄.ﱡ︃︋︁;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Eh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱟ︌︆︄.update();
  img = sprite[520][gj.time];
  w = -img.width * this.ﱟ︌︆︄.ﱡ︃︋︁;
  h = -img.height * this.ﱟ︌︆︄.ﱡ︃︋︁;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Fh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.ﱟ︌︆︄.update();
  img = sprite[283][gj.time];
  w = -img.width * this.ﱟ︌︆︄.ﱡ︃︋︁;
  h = -img.height * this.ﱟ︌︆︄.ﱡ︃︋︁;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Gh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  gb[ra](this.angle);
  this.fire.update();
  img = sprite[282][gj.time];
  w = -img.width * this.fire.ﱡ︃︋︁;
  h = -img.height * this.fire.ﱡ︃︋︁;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  this.ﱟ︌︆︄.update();
  img = sprite[283][gj.time];
  w = -img.width * this.ﱟ︌︆︄.ﱡ︃︋︁;
  h = -img.height * this.ﱟ︌︆︄.ﱡ︃︋︁;
  Yf(gb, img, -w / 2, -h / 2, w, h);
  gb[Qa]();
}
function Hh(c, d, e) {
  if (c >= 0) {
    img = sprite[c][gj.time];
    switch (c) {
      case 71:
      case 72:
      case 73:
        fi(c, img, -img.width / 4 - mb * (0 + d), -img.height / 4 + mb * (e + 35));
        break;
      case 74:
        fi(c, img, -img.width / 4 - mb * (1 + d), -img.height / 4 + mb * (e + 45));
        break;
      case 75:
      case 76:
        fi(c, img, -img.width / 4 - mb * (1 + d), -img.height / 4 + mb * (e + 40));
    }
  }
}
function Ih(c, d, e) {
  if (c >= 0) {
    img = sprite[c][gj.time];
    switch (c) {
      case 1:
      case 3:
      case 4:
      case 8:
      case 31:
      case 32:
        di(c, img, -img.width / 2 - mb * (45 + d), -img.height / 2 + mb * (e + 22));
        break;
      case 57:
      case 0:
      case 5:
      case 6:
        fi(c, img, -img.width / 4 - mb * (47 + d), -img.height / 4 + mb * (e + 45));
        break;
      case 30:
        fi(c, img, -img.width / 4 - mb * (52 + d), -img.height / 4 + mb * (e + 45));
        break;
      case 19:
      case 63:
        fi(c, img, -img.width / 4 - mb * (47 + d), -img.height / 4 + mb * (e + 44));
        break;
      case 9:
        di(c, img, -img.width / 2 - mb * (47 + d), -img.height / 2 + mb * (e + 44));
        break;
      case 62:
        di(c, img, -img.width / 2 - mb * (40 + d), -img.height / 2 + mb * (e + 65));
        break;
      case 12:
      case 34:
      case 17:
        fi(c, img, -img.width / 4 - mb * (37 + d), -img.height / 4 + mb * (e + 85));
        break;
      case 54:
      case 53:
        fi(c, img, -img.width / 4 - mb * (26 + d), -img.height / 4 + mb * (e + 77));
        break;
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
        fi(c, img, -img.width / 4 - mb * (37 + d), -img.height / 4 + mb * (e + 30));
        break;
      case 56:
        fi(c, img, -img.width / 4 - mb * (47 + d), -img.height / 4 + mb * (e + 35));
        break;
      case 92:
      case 93:
        fi(c, img, -img.width / 4 - mb * (47 + d), -img.height / 4 + mb * (e + 40));
        break;
      case 89:
        fi(c, img, -img.width / 4 - mb * (47 + d), -img.height / 4 + mb * (e + 34));
        break;
      case 13:
      case 14:
      case 15:
      case 33:
        fi(c, img, -img.width / 4 - mb * (37 + d), -img.height / 4 + mb * (e + 90));
        break;
      case 18:
        fi(c, img, -img.width / 4 - mb * (40 + d), -img.height / 4 + mb * (e + 85));
        break;
      case 16:
        di(c, img, -img.width / 2 - mb * (39 + d), -img.height / 2 + mb * (e + 90));
        break;
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 45:
      case 46:
      case 50:
      case 51:
      case 52:
        di(c, img, -img.width / 2 - mb * (46 + d), -img.height / 2 + mb * (e + 35));
        break;
      case 49:
        di(c, img, -img.width / 2 - mb * (47 + d), -img.height / 2 + mb * (e + 54));
        break;
      case 55:
        di(c, img, -img.width / 2 - mb * (47 + d), -img.height / 2 + mb * (e + 20));
    }
  }
}
var Jh = function (c) {
  if (c > 0) {
    var d = sprite[c][gj.time];
    switch (c) {
      case 58:
        di(c, d, -d.width / 2 + mb * 2, -d.height / 2 - mb * 5);
        break;
      case 10:
        di(c, d, -d.width / 2, -d.height / 2 - mb * 18);
        break;
      case 11:
        di(c, d, -d.width / 2, -d.height / 2 - mb * 10);
        break;
      case 23:
        di(c, d, -d.width / 2, -d.height / 2 - mb * 19);
        break;
      case 24:
        fi(c, d, -d.width / 4, -d.height / 4 - mb * 20);
        break;
      case 25:
        di(c, d, -d.width / 2 - mb * 1, -d.height / 2 - mb * 23);
        break;
      case 26:
      case 59:
        di(c, d, -d.width / 2, -d.height / 2 - mb * 5);
        break;
      case 27:
      case 40:
      case 85:
      case 48:
        di(c, d, -d.width / 2, -d.height / 2 - mb * 2);
        break;
      case 43:
        di(c, d, -d.width / 2 + mb * 1.5, -d.height / 2 - mb * 1);
        break;
      case 44:
      case 20:
      case 21:
      case 22:
      case 80:
      case 81:
      case 82:
      case 60:
      case 90:
      case 88:
      case 87:
        fi(c, d, -d.width / 4, -d.height / 4 + mb * 2);
        break;
      case 41:
      case 42:
        di(c, d, -d.width / 2 - mb * 5, -d.height / 2 - mb * 2);
        break;
      case 47:
        di(c, d, -d.width / 2 + mb * 2, -d.height / 2);
        break;
      case 77:
      case 78:
      case 79:
        di(c, d, -d.width / 2 - mb * 1, -d.height / 2);
        break;
      case 83:
        di(c, d, -d.width / 2, -d.height / 2 + mb * 2);
        break;
      case 84:
      case 86:
        di(c, d, -d.width / 2, -d.height / 2 + mb * 8);
        break;
      case 61:
        di(c, d, -d.width / 2, -d.height / 2 - mb * 4);
    }
  }
};
function Kh() {
  if (!this.ﱞ︀︇︄ && this.ﱠ︀︇︄ !== 0) {
    if (this.x != this.r.x || this.y != this.r.y) {
      var c = (Utils.ﱣ︎︊︁(this.x, this.y, this.r.x, this.r.y) + Math[D] / 2) % (Math[D] * 2);
      this.ﱟ︀︇︄ = Utils.ﱠ️︊︁(c, this.ﱟ︀︇︄);
      this.ﱟ︀︇︄ = Utils.ﱟ︆︋︁(this.ﱟ︀︇︄, c, 0.018);
    }
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gb[ra](this.ﱟ︀︇︄);
    if (this.ﱠ︀︇︄ === 217) {
      if (this.ﱡ️︎︄ > 50 || this.ﱡ︀︇︄ > 0) {
        if (this.ﱡ️︎︄ > 50) {
          this.ﱡ︀︇︄ = Math[ta](1, this.ﱡ︀︇︄ + nj);
        } else {
          this.ﱡ︀︇︄ = Math[ba](0, this.ﱡ︀︇︄ - nj);
        }
        gb[ua] = this.ﱡ︀︇︄;
        fi(219, d = sprite[219][gj.time], -d.width / 4, -d.height / 4);
        gb[ua] = 1;
      }
      fi(217, d = sprite[217][gj.time], -d.width / 4, -d.height / 4);
    } else if (this.ﱠ︀︇︄ === 223) {
      this.ﱣ︀︇︄ = Utils.ﱟ︆︋︁(this.ﱣ︀︇︄, this.ﱡ️︎︄, 0.018);
      this.ﱢ︀︇︄.update();
      if (this.ﱡ️︎︄ > 85) {
        this.ﱡ︀︇︄ = Math[ta](1, this.ﱡ︀︇︄ + nj / 4);
      } else {
        this.ﱡ︀︇︄ = Math[ba](0.1, this.ﱡ︀︇︄ - nj);
      }
      fi(1094, d = sprite[1094][gj.time], -d.width / 4, -d.height / 4);
      d = sprite[1097][gj.time];
      w = -d.width;
      h = -d.height;
      gb[g]();
      gb[Ia](mb * -20, mb * -20);
      gb[ra](this.ﱢ︀︇︄.ﱡ︃︋︁ * this.ﱡ︀︇︄);
      Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
      gb[Qa]();
      d = sprite[1100][gj.time];
      gb[g]();
      gb[Ia](mb * 20, mb * -20);
      gb[ra](-this.ﱢ︀︇︄.ﱡ︃︋︁ * this.ﱡ︀︇︄);
      Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
      gb[Qa]();
    } else if (this.ﱠ︀︇︄ === 222) {
      this.ﱣ︀︇︄ = Utils.ﱟ︆︋︁(this.ﱣ︀︇︄, this.ﱡ️︎︄, 0.018);
      this.ﱢ︀︇︄.update();
      if (this.ﱡ️︎︄ > 85) {
        this.ﱡ︀︇︄ = Math[ta](1, this.ﱡ︀︇︄ + nj / 4);
      } else {
        this.ﱡ︀︇︄ = Math[ba](0.1, this.ﱡ︀︇︄ - nj);
      }
      fi(1079, d = sprite[1079][gj.time], -d.width / 4, -d.height / 4);
      d = sprite[1082][gj.time];
      w = -d.width;
      h = -d.height;
      gb[g]();
      gb[Ia](mb * -40, mb * -45);
      gb[ra](this.ﱢ︀︇︄.ﱡ︃︋︁ * this.ﱡ︀︇︄);
      Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
      gb[Qa]();
      d = sprite[1085][gj.time];
      gb[g]();
      gb[Ia](mb * 40, mb * -45);
      gb[ra](-this.ﱢ︀︇︄.ﱡ︃︋︁ * this.ﱡ︀︇︄);
      Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
      gb[Qa]();
    } else if (this.ﱠ︀︇︄ === 221) {
      this.ﱣ︀︇︄ = Utils.ﱟ︆︋︁(this.ﱣ︀︇︄, this.ﱡ️︎︄, 0.018);
      this.ﱢ︀︇︄.update();
      if (this.ﱡ️︎︄ > 85) {
        this.ﱡ︀︇︄ = Math[ta](1, this.ﱡ︀︇︄ + nj / 4);
      } else {
        this.ﱡ︀︇︄ = Math[ba](0.1, this.ﱡ︀︇︄ - nj);
      }
      fi(1064, d = sprite[1064][gj.time], -d.width / 4, -d.height / 4);
      d = sprite[1067][gj.time];
      w = -d.width;
      h = -d.height;
      gb[g]();
      gb[Ia](mb * -40, mb * -45);
      gb[ra](this.ﱢ︀︇︄.ﱡ︃︋︁ * this.ﱡ︀︇︄);
      Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
      gb[Qa]();
      d = sprite[1070][gj.time];
      gb[g]();
      gb[Ia](mb * 40, mb * -45);
      gb[ra](-this.ﱢ︀︇︄.ﱡ︃︋︁ * this.ﱡ︀︇︄);
      Yf(gb, d, -w / 4, -h / 4, w / 2, h / 2);
      gb[Qa]();
    } else if (this.ﱠ︀︇︄ === 91) {
      this.ﱣ︀︇︄ = Utils.ﱟ︆︋︁(this.ﱣ︀︇︄, this.ﱡ️︎︄, 0.018);
      fi(91, d = sprite[91][gj.time], -d.width / 4, -d.height / 4);
    } else if (this.ﱠ︀︇︄ === 224) {
      this.ﱣ︀︇︄ = Utils.ﱟ︆︋︁(this.ﱣ︀︇︄, this.ﱡ️︎︄, 0.018);
      fi(230, d = sprite[230][gj.time], -d.width / 4, -d.height / 4);
    } else if (this.ﱠ︀︇︄ === 218) {
      fi(218, d = sprite[218][gj.time], -d.width / 4, -d.height / 4);
    } else if (this.ﱠ︀︇︄ === 233) {
      var d = sprite[1215][gj.time];
      if (this.ﱡ️︎︄ > 85) {
        this.ﱡ︀︇︄ = Math[ta](1, this.ﱡ︀︇︄ + nj / 4);
      } else {
        this.ﱡ︀︇︄ = Math[ba](0, this.ﱡ︀︇︄ - nj);
      }
      this.ﱞ︁︇︄ += nj * 60;
      if (this.ﱞ︁︇︄ > 60) {
        this.ﱞ︁︇︄ -= 60;
      }
      var e = this.ﱡ︀︇︄ * ((this.ﱞ︁︇︄ < 30 ? this.ﱞ︁︇︄ / 30 : 1 - (this.ﱞ︁︇︄ - 30) / 30) * 12 - 6);
      fi(1215, d, -d.width / 4, -d.height / 4 + e);
    } else if (this.ﱠ︀︇︄ === 219) {
      d = sprite[1037][gj.time];
      if (this.ﱡ️︎︄ > 85) {
        this.ﱡ︀︇︄ = Math[ta](1, this.ﱡ︀︇︄ + nj / 4);
      } else {
        this.ﱡ︀︇︄ = Math[ba](0, this.ﱡ︀︇︄ - nj);
      }
      this.ﱞ︁︇︄ += nj * 60;
      if (this.ﱞ︁︇︄ > 60) {
        this.ﱞ︁︇︄ -= 60;
      }
      e = this.ﱡ︀︇︄ * ((this.ﱞ︁︇︄ < 30 ? this.ﱞ︁︇︄ / 30 : 1 - (this.ﱞ︁︇︄ - 30) / 30) * 12 - 6);
      fi(1037, d, -d.width / 4, -d.height / 4 + e);
    } else if (this.ﱠ︀︇︄ === 220) {
      var f = Math[D] / 2;
      var i = Math[D] / 4;
      d = sprite[1049][gj.time];
      if (this.ﱡ️︎︄ > 85) {
        this.ﱡ︀︇︄ = Math[ta](1, this.ﱡ︀︇︄ + nj / 4);
      } else {
        this.ﱡ︀︇︄ = Math[ba](0, this.ﱡ︀︇︄ - nj);
      }
      this.ﱞ︁︇︄ += nj * 60;
      if (this.ﱞ︁︇︄ > 60) {
        this.ﱞ︁︇︄ -= 60;
      }
      e = this.ﱡ︀︇︄ * ((this.ﱞ︁︇︄ < 30 ? this.ﱞ︁︇︄ / 30 : 1 - (this.ﱞ︁︇︄ - 30) / 30) * 12 - 6);
      fi(1049, d, -d.width / 4 + e, -d.height / 4);
      gb[Qa]();
      gb[g]();
      gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
      gb[ra](Math[D] + this.ﱟ︀︇︄ + i);
      gb[Ia](120, e);
      gb[ra](f);
      d = sprite[1054][gj.time];
      w = -d.width;
      h = -d.height;
      Yf(gb, d, -w / 2, -h / 2, w, h);
      gb[Qa]();
      gb[g]();
      gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
      gb[ra](Math[D] + this.ﱟ︀︇︄ + f + i);
      gb[Ia](120, e);
      gb[ra](f);
      d = sprite[1057][gj.time];
      w = -d.width;
      h = -d.height;
      Yf(gb, d, -w / 2, -h / 2, w, h);
    }
    gb[Qa]();
  }
}
function Lh(c, e, f) {
  if (e.ﱞ︇︅︄() !== 1) {
    return e;
  }
  var g = __IMAGE_EFFECT__[f][c];
  if (g === undefined) {
    var i = (g = document[p]("canvas"))[T]("2d");
    var k = e.width;
    var m = e.height;
    g.width = k;
    g.height = m;
    i[r](e, 0, 0);
    i[Sa] = "source-in";
    i[d] = __IMAGE_EFFECT_COLOR__[f];
    i[pa](0, 0, k, m);
    __IMAGE_EFFECT__[f][c] = g;
  }
  return g;
}
function Mh() {
  var c = 0;
  switch (this.ﱢ️︎︄) {
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
      c = 1;
  }
  if (this.ﱞ︀︇︄) {
    for (var d = 0; d < this.bubbles[Oa]; d++) {
      var e = this.bubbles[d];
      if (e.ﱣ︊︆︄ > 0.5) {
        var f = 1 - (e.ﱣ︊︆︄ - 0.5) * 2;
      } else {
        f = e.ﱣ︊︆︄ * 2;
      }
      gb[ua] = f;
      var i = sprite[534][gj.time][e.id];
      Yf(gb, i, hj.ﱡ︈︋︁.x + e.x - i.width / 2, hj.ﱡ︈︋︁.y + e.y - i.height / 2);
      gb[ua] = 1;
    }
  } else {
    gb[g]();
    gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
    gj.ﱠ︁︇︄(this);
    if (this.action & 16) {
      (function (c) {
        if (c.ﱢ️︎︄ >= 0) {
          switch (c.ﱢ️︎︄) {
            case 49:
              gb[g]();
              var d = c.attack.ﱡ︃︋︁ * -3 / Math[D];
              if (c.attack.ﱟ︃︋︁) {
                var e = -Math[D] / 3 - (Math[D] / 3 + c.attack.ﱡ︃︋︁) / 3;
              } else {
                e = c.attack.ﱡ︃︋︁;
              }
              gb[ra](c.angle - Math[D] / 2 + e);
              gb[ua] = d / 1.2;
              lc(gb, mb * -40, mb * 90, mb * 5);
              jc(gb, "#0B6A84");
              gb[ua] = d / 1.2;
              lc(gb, mb * -52, mb * 100, mb * 8);
              jc(gb, "#0B6A84");
              gb[ua] = d / 1.2;
              lc(gb, mb * -30, mb * 95, mb * 4);
              jc(gb, "#0B6A84");
              gb[ua] = 1;
              gb[Qa]();
              break;
            case 46:
            case 50:
            case 51:
            case 52:
              if (c.ﱢ︎︆︄ === 1) {
                break;
              }
              if (c.ﱟ︁︇︄ > 0) {
                var f = ["#A5D6D6", "#539CA0"][gj.time];
              } else {
                f = c.ﱡ︁︇︄ > 0 || c.ﱣ︁︇︄ > 0 ? ["#C1AA7E", "#0F423D"][gj.time] : ["#594837", "#163A3A"][gj.time];
              }
              d = c.attack.ﱡ︃︋︁ * -3 / Math[D];
              if ((e = c.attack.ﱟ︃︋︁ ? Math[ba](0.5 - d / 2 + 0.5, 0) : Math[ba](d / 2, 0)) === 0) {
                c.ﱢ︁︇︄ = c.angle;
              }
              gb[g]();
              gb[ra](c.ﱢ︁︇︄ - Math[D] / 2);
              gb[ua] = d;
              var i = mb * 25 + e * 25;
              lc(gb, i, mb * 80, mb * 15);
              jc(gb, f);
              lc(gb, -i, mb * 80, mb * 15);
              jc(gb, f);
              gb[ua] = 1;
              gb[Qa]();
          }
        }
      })(this);
    }
    gb[g]();
    gb[ra](this.angle - Math[D] / 2);
    if (!(this.action & 16)) {
      if (this.action & 64 || this.ﱠ︀︇︄ !== 0) {
        this.ﱞ︂︇︄.update();
      } else if (this.action & 32) {
        this.ﱠ︂︇︄.update();
      }
    }
    var k;
    var m = this.ﱞ︂︇︄.ﱡ︃︋︁;
    var n = this.ﱠ︂︇︄.ﱡ︃︋︁;
    if (this.ﱟ︊︆︄ === 85) {
      i = sprite[787][gj.time];
      k = 787;
    } else if (this.ﱟ︊︆︄ === 20) {
      i = sprite[914][gj.time];
      k = 914;
    } else if (this.ﱟ︊︆︄ === 21) {
      i = sprite[918][gj.time];
      k = 918;
    } else if (this.ﱟ︊︆︄ === 22) {
      i = sprite[922][gj.time];
      k = 922;
    } else if (this.ﱟ︂︇︄) {
      i = sprite[816][gj.time];
      k = 816;
    } else {
      i = sprite[7][this.ﱡ︇︆︄][gj.time];
      k = 7;
    }
    shadow = sprite[280][gj.time];
    var o = i;
    var p = k;
    if (this.action & 16) {
      if (this.attack.update() && this.attack.ﱟ︃︋︁ == 0) {
        this.hand = !this.hand;
        this.action -= 16;
        if (this.ﱠ︊︅︄ == hj.ﱠ︊︅︄) {
          hj.control.ﱡ︂︇︄ = 0;
        }
      }
      if (this.ﱢ️︎︄ >= 0) {
        this.hand = true;
      }
      var q = this.hand ? this.attack.ﱡ︃︋︁ : -this.attack.ﱡ︃︋︁ / 3;
      var r = this.hand ? this.attack.ﱡ︃︋︁ / 3 : -this.attack.ﱡ︃︋︁;
      if (this.ﱟ︂︇︄) {
        gb[g]();
        gb[ra](q);
        di(k, i, -i.width / 2 - mb * (66 + m), -i.height / 2 + (5 + n) * mb);
        gb[Qa]();
        gb[g]();
        gb[ra](r);
        di(k, i, -i.width / 2 + mb * (66 + m), -i.height / 2 + (5 + n) * mb);
        gb[Qa]();
      } else if (c === 0) {
        if (this.ﱢ️︎︄ === 64) {
          q = -Utils.ﱞ︂︋︁(-q);
        }
        gb[g]();
        gb[ra](q);
        di(280, shadow, -shadow.width / 2 - mb * (49 + m), -shadow.height / 2 + (15 + n) * mb);
        if (this.ﱢ️︎︄ === 28) {
          var s = sprite[this.ﱢ️︎︄][this.ﱣ︂︇︄][gj.time];
          ei(this.ﱢ️︎︄, this.ﱣ︂︇︄, s, -s.width / 4 - mb * (62 + m), -s.height / 4 + mb * (n + 18));
        } else {
          Ih(this.ﱢ️︎︄, m, n);
        }
        if (k >= 914) {
          fi(k, i, -i.width / 4 - mb * (49 + m), -i.height / 4 + (11 + n) * mb);
        } else if (k !== 787) {
          ei(k, this.ﱡ︇︆︄, i, -i.width / 4 - mb * (49 + m), -i.height / 4 + (11 + n) * mb);
        } else {
          di(k, i, -i.width / 2 - mb * (49 + m), -i.height / 2 + (11 + n) * mb);
        }
        gb[Qa]();
        gb[g]();
        gb[ra](r);
        di(280, shadow, -shadow.width / 2 + mb * (49 + m), -shadow.height / 2 + (15 + n) * mb);
        if (k >= 914) {
          fi(k, i, -i.width / 4 + mb * (49 + m), -i.height / 4 + (11 + n) * mb);
        } else if (k !== 787) {
          ei(k, this.ﱡ︇︆︄, i, -i.width / 4 + mb * (49 + m), -i.height / 4 + (11 + n) * mb);
        } else {
          di(k, i, -i.width / 2 + mb * (49 + m), -i.height / 2 + (11 + n) * mb);
        }
        gb[Qa]();
      }
    } else if (this.ﱟ︂︇︄) {
      di(k, i, -i.width / 2 - mb * (66 + m), -i.height / 2 + (5 + n) * mb);
      di(k, i, -i.width / 2 + mb * (66 + m), -i.height / 2 + (5 + n) * mb);
    } else if (c === 0) {
      di(280, shadow, -shadow.width / 2 - mb * (49 + m), -shadow.height / 2 + (15 + n) * mb);
      if (this.ﱢ️︎︄ === 28) {
        s = sprite[this.ﱢ️︎︄][this.ﱣ︂︇︄][gj.time];
        ei(this.ﱢ️︎︄, this.ﱣ︂︇︄, s, -s.width / 4 - mb * (62 + m), -s.height / 4 + mb * (n + 18));
      } else {
        Ih(this.ﱢ️︎︄, m, n);
      }
      if (k >= 914) {
        fi(k, i, -i.width / 4 - mb * (49 + m), -i.height / 4 + (11 + n) * mb);
      } else if (k !== 787) {
        ei(k, this.ﱡ︇︆︄, i, -i.width / 4 - mb * (49 + m), -i.height / 4 + (11 + n) * mb);
      } else {
        di(k, i, -i.width / 2 - mb * (49 + m), -i.height / 2 + (11 + n) * mb);
      }
      di(280, shadow, -shadow.width / 2 + mb * (49 + m), -shadow.height / 2 + (15 + n) * mb);
      if (k >= 914) {
        fi(k, i, -i.width / 4 + mb * (49 + m), -i.height / 4 + (11 + n) * mb);
      } else if (k !== 787) {
        ei(k, this.ﱡ︇︆︄, i, -i.width / 4 + mb * (49 + m), -i.height / 4 + (11 + n) * mb);
      } else {
        di(k, i, -i.width / 2 + mb * (49 + m), -i.height / 2 + (11 + n) * mb);
      }
    }
    if (this.ﱢ︂︇︄ && this.ﱟ︊︆︄ < 1) {
      i = sprite[29][this.ﱞ︃︇︄][gj.time];
      ei(29, this.ﱞ︃︇︄, i, -i.width / 4, -i.height / 4 - mb * 39);
    }
    if (this.ﱟ︂︇︄) {
      di(814, i = sprite[814][gj.time], -i.width / 2, -i.height / 2);
      this.ﱠ︃︇︄.update();
      di(815, i = sprite[815][gj.time], -i.width / 2, -i.height / 2 + this.ﱠ︃︇︄.ﱡ︃︋︁);
    } else {
      i = sprite[249][this.ﱡ︇︆︄][gj.time];
      if (this.ﱟ︊︆︄ !== 85 && (ei(249, this.ﱡ︇︆︄, i, -i.width / 4, -i.height / 4), this.ﱟ︃︇︄ > 0)) {
        i = sprite[790][this.ﱟ︃︇︄][gj.time];
        ei(790, this.ﱟ︃︇︄, i, -i.width / 4, -i.height / 4);
      }
    }
    if (this.action & 128) {
      if (this.ﱟ︎︆︄.update() && this.ﱟ︎︆︄.ﱟ︃︋︁ == 0) {
        this.action -= 128;
      }
      gb[ua] = 0.6 - this.ﱟ︎︆︄.ﱡ︃︋︁;
      if (this.ﱟ︂︇︄) {
        i = sprite[819];
        Yf(gb, i, -i.width / 2, -i.height / 2);
      } else {
        i = Lh(this.ﱡ︇︆︄, sprite[249][this.ﱡ︇︆︄][0], __EFFECT_HEAL__);
        Yf(gb, i, i.width / 4, i.height / 4, -i.width / 2, -i.height / 2);
      }
      gb[ua] = 1;
    }
    if (this.action & 256) {
      if (this.ﱡ︃︇︄.update() && this.ﱡ︃︇︄.ﱟ︃︋︁ == 0) {
        this.action -= 256;
      }
      gb[ua] = 0.6 - this.ﱡ︃︇︄.ﱡ︃︋︁;
      i = sprite[260];
      Yf(gb, i, -i.width / 2, -i.height / 2);
      gb[ua] = 1;
    }
    if (this.action & 2) {
      if (this.ﱢ︋︆︄.update() && this.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
        this.action -= 2;
      }
      gb[ua] = 0.6 - this.ﱢ︋︆︄.ﱡ︃︋︁;
      if (this.ﱟ︂︇︄) {
        i = sprite[817];
        Yf(gb, i, -i.width / 2, -i.height / 2);
      } else {
        i = Lh(this.ﱡ︇︆︄, sprite[249][this.ﱡ︇︆︄][0], __EFFECT_HURT__);
        Yf(gb, i, i.width / 4, i.height / 4, -i.width / 2, -i.height / 2);
      }
      gb[ua] = 1;
    }
    if (this.action & 4) {
      if (this.ﱟ️︎︄.update() && this.ﱟ️︎︄.ﱟ︃︋︁ == 0) {
        this.action -= 4;
      }
      gb[ua] = 0.6 - this.ﱟ️︎︄.ﱡ︃︋︁;
      i = Lh(this.ﱡ︇︆︄, sprite[249][this.ﱡ︇︆︄][0], __EFFECT_COLD__);
      Yf(gb, i, i.width / 4, i.height / 4, -i.width / 2, -i.height / 2);
      gb[ua] = 1;
    }
    if (this.action & 8) {
      if (this.ﱣ︃︇︄.update() && this.ﱣ︃︇︄.ﱟ︃︋︁ == 0) {
        this.action -= 8;
      }
      gb[ua] = 0.6 - this.ﱣ︃︇︄.ﱡ︃︋︁;
      if (this.ﱟ︂︇︄) {
        i = sprite[818];
        Yf(gb, i, -i.width / 2, -i.height / 2);
      } else {
        i = Lh(this.ﱡ︇︆︄, sprite[249][this.ﱡ︇︆︄][0], __EFFECT_HUNGER__);
        Yf(gb, i, i.width / 4, i.height / 4, -i.width / 2, -i.height / 2);
      }
      gb[ua] = 1;
    }
    Jh(this.ﱟ︊︆︄);
    if (c === 1) {
      if (this.action & 16) {
        m += this.attack.ﱡ︃︋︁ * 15;
      }
      di(280, shadow, -shadow.width / 2 - mb * 26, -shadow.height / 2 + (31 + n + m) * mb);
      if (p >= 914) {
        fi(p, o, -o.width / 4 - mb * 26, -o.height / 4 + (27 + n + m) * mb);
      } else if (p !== 787) {
        ei(p, this.ﱡ︇︆︄, o, -o.width / 4 - mb * 26, -o.height / 4 + (27 + n + m) * mb);
      } else {
        di(p, o, -o.width / 2 - mb * 26, -o.height / 2 + (27 + n + m) * mb);
      }
      di(280, shadow, -shadow.width / 2 + mb * 26, -shadow.height / 2 + (31 + n + m) * mb);
      if (p >= 914) {
        fi(p, o, -o.width / 4 + mb * 26, -o.height / 4 + (27 + n + m) * mb);
      } else if (p !== 787) {
        ei(p, this.ﱡ︇︆︄, o, -o.width / 4 + mb * 26, -o.height / 4 + (27 + n + m) * mb);
      } else {
        di(p, o, -o.width / 2 + mb * 26, -o.height / 2 + (27 + n + m) * mb);
      }
      Hh(this.ﱢ️︎︄, 0, n + m);
    }
    gb[Qa]();
    if (this.ﱟ︊︆︄ !== 83 && this.ﱟ︊︆︄ !== 85) {
      if (this.ﱟ︁︇︄ > 0) {
        if (!this.ﱞ︄︇︄.ﱢ︃︇︄) {
          this.ﱞ︄︇︄.ﱢ︃︇︄ = zd(mb, this.ﱞ︄︇︄.nickname, 20, "#187484", "#000", 2, null, null, mb * 300);
        }
        i = this.ﱞ︄︇︄.ﱢ︃︇︄;
      } else {
        if (!this.ﱞ︄︇︄.ﱟ︌︎︄) {
          this.ﱞ︄︇︄.ﱟ︌︎︄ = zd(mb, this.ﱞ︄︇︄.nickname, 20, "#FFF", "#000", 2, null, null, mb * 300);
        }
        i = this.ﱞ︄︇︄.ﱟ︌︎︄;
      }
      if (gj.ﱡ︃︆︄ == 1) {
        gb[ua] = 0.5;
      }
      m = Math[A](-i.width / 2);
      n = Math[A](-i.height / 2 - mb * 70);
      Yf(gb, i, m, n);
      if (this.ﱞ︄︇︄.level > 0) {
        var t = m + i.width + 5;
        i = sprite[879];
        if (PLAYER_LEVEL[this.ﱞ︄︇︄.level] === undefined) {
          PLAYER_LEVEL[this.ﱞ︄︇︄.level] = zd(mb, "[" + this.ﱞ︄︇︄.level + "]", 20, "#F9E8A2", "#000", 2, null, null, mb * 50);
        }
        Yf(gb, PLAYER_LEVEL[this.ﱞ︄︇︄.level], t, n);
      }
      gb[ua] = 1;
    } else {
      n = Math[A](mb * -70);
      m = Math[A](sprite[552].width / 1.5);
    }
    if (hj.ﱢ️︅︄[Oa] && hj.ﱣ︀︆︄(this.ﱡ︊︅︄)) {
      if (this.ﱡ︊︅︄ == hj.ﱢ️︅︄[0]) {
        i = sprite[553];
      } else {
        i = sprite[552];
      }
      Yf(gb, i, m - i.width - 5, n - 6);
    }
    gb[Qa]();
  }
}
function Nh() {
  if (this.enabled && this.delay >= 0) {
    var c = new Date().getTime() - this.delay;
    var d = c % 1000 / 1000;
    if (d > 0.5) {
      d = 1 - (d - 0.5) * 2;
    } else {
      d *= 2;
    }
    if ((c = Math[A](c / 1000)) < Ki.ﱠ︄︇︄) {
      c = Ki.ﱠ︄︇︄ - c;
      if (!this.ﱟ︌︎︄) {
        this.ﱟ︌︎︄ = zd(mb, " seconds before you die", 40, "#660000", null, null, null, null, null, "#000", 10);
      }
      if (!(this.now == c && this.ﱟ︄︇︄)) {
        this.now = c;
        this.ﱟ︄︇︄ = zd(mb, "" + c, 40, "#660000", null, null, null, null, null, "#000", 10);
      }
      Yf(gb, this.ﱟ︌︎︄, (hb - this.ﱟ︌︎︄.width) / 2, mb * 100);
      gb[ua] = d;
      Yf(gb, this.ﱟ︄︇︄, (hb - this.ﱟ︌︎︄.width) / 2 - this.ﱟ︄︇︄.width + mb * 15, mb * 100);
      gb[ua] = 1;
    }
  }
}
function Oh() {
  if (this.message !== undefined) {
    var c = hj.ﱞ︁︆︄.ﱠ︂︆︄[Oa] > 0 ? -95 : 0;
    Yf(gb, this.message, 0, ib - this.message.height + c);
  }
}
function Ph(c, d) {
  if (this.text) {
    if (this.ﱣ︋︎︄.ﱟ︃︋︁) {
      gb[ua] = 1 - this.ﱣ︋︎︄.ﱡ︃︋︁;
    } else {
      gb[ua] = 1;
    }
    if (!this.ﱟ︌︎︄) {
      this.ﱟ︌︎︄ = zd(mb, this.text, 40, c, null, null, null, null, null, d, 10);
    }
    Yf(gb, this.ﱟ︌︎︄, (hb - this.ﱟ︌︎︄.width) / 2, mb * 50);
    gb[ua] = 1;
    if (this.ﱣ︋︎︄.update() && this.ﱣ︋︎︄.ﱟ︃︋︁ == 0) {
      this.text = this.list[na]();
      this.ﱟ︌︎︄ = null;
    }
  }
}
function Qh() {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + this.x, hj.ﱡ︈︋︁.y + this.y);
  if (this.text[Oa] > 0) {
    for (var c = 0; c < this.text[Oa] && c < 2; c++) {
      if (!this.ﱟ︌︎︄[c]) {
        this.ﱟ︌︎︄[c] = pc(mb, this.text[c]);
        this.ﱡ︄︇︄[c] = 0;
        this.ﱣ︄︇︄[c] = 0;
      }
      if (c === 1) {
        this.ﱣ︄︇︄[0] = Utils.ﱟ︂︋︁(this.ﱢ︄︇︄) * 30;
      }
    }
    this.ﱡ︄︇︄[0] += nj;
    if (this.text[Oa] > 1) {
      this.ﱢ︄︇︄ = Math[ta](this.ﱢ︄︇︄ + nj, 1);
      if (this.ﱡ︄︇︄[0] > 1 && this.ﱢ︄︇︄ > 0.5) {
        this.ﱡ︄︇︄[1] += nj;
      }
    }
    for (c = 0; c < this.text[Oa] && c < 2; c++) {
      var d = this.ﱡ︄︇︄[c];
      if (d > 0) {
        gb[ua] = d < 0.25 ? d * 4 : d > 3.75 ? Math[ba]((4 - d) * 4, 0) : 1;
        Yf(gb, this.ﱟ︌︎︄[c], -this.ﱟ︌︎︄[c].width / 2, -this.ﱣ︄︇︄[c] + -this.ﱟ︌︎︄[c].height / 2 - mb * 110);
      }
    }
    if (this.ﱡ︄︇︄[0] > 4) {
      this.ﱡ︄︇︄[na]();
      this.text[na]();
      this.ﱣ︄︇︄[na]();
      this.ﱟ︌︎︄[na]();
      this.ﱢ︄︇︄ = 0;
    }
  }
  gb[Qa]();
}
__EFFECT_HURT__ = 0;
__EFFECT_HEAL__ = 1;
__EFFECT_COLD__ = 2;
__EFFECT_HUNGER__ = 3;
__EFFECT_BOX__ = 4;
__IMAGE_EFFECT__ = [[], [], [], [], []];
__IMAGE_EFFECT_COLOR__ = ["#BB0000", "#00BB00", "#1CE7E0", "#DBE71C", "#BB0000"];
var Rh = 0;
function Sh(c, d, e, f, g, i, k, m) {
  if (m === undefined) {
    m = 0;
  }
  for (var n = k; n >= m; n--) {
    for (var o = c; o <= d; o++) {
      for (var p = e; p <= f; p++) {
        var q = ej.ﱡ︌︆︄[o][p];
        if (q && q[i]) {
          var r = q[i][n];
          if (r !== undefined) {
            for (var s = 0; s < r[Oa]; s++) {
              var t = r[s];
              var u = sprite[g][gj.time][n];
              var v = (Rh + (o + p) * 3) % 60;
              var z = v < 30 ? v / 30 : 1 - (v - 30) / 30;
              var A = -u.width * (1 + z * 0.9 / 30);
              var B = -u.height * (1 + z * 0.9 / 30);
              z = (v = (Rh + (o + p) * 7) % 60) < 30 ? v / 30 : 1 - (v - 30) / 30;
              var C = gb[ua];
              gb[ua] = (0.9 + z * 0.1) * C;
              Yf(gb, u, hj.ﱡ︈︋︁.x + t.x - A / 2, hj.ﱡ︈︋︁.y + t.y - B / 2, A, B);
              gb[ua] = C;
            }
          }
        }
      }
    }
  }
}
function Th(c, d, f, g, i, k, m, n) {
  if (n === undefined) {
    n = 0;
  }
  gj.ﱣ︍︆︄[i].update();
  for (var o = m; o >= n; o--) {
    for (var p = c; p <= d; p++) {
      for (var q = f; q <= g; q++) {
        var r = ej.ﱡ︌︆︄[p][q];
        if (r && r[k]) {
          var s = r[k][o];
          if (s !== undefined) {
            for (var t = 0; t < s[Oa]; t++) {
              var u = s[t];
              if (u.update) {
                if (u.ﱢ︋︆︄.update() && u.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
                  u.update = false;
                }
                var v = (1 - u.ﱢ︋︆︄.ﱡ︃︋︁) * nj * 600 * mb;
                var z = Math[za](u.angle) * v;
                var A = Math[e](u.angle) * v;
              } else {
                z = 0;
                A = 0;
              }
              var B = sprite[i][gj.time][o];
              var C = -B.width * gj.ﱣ︍︆︄[i].ﱡ︃︋︁;
              var D = -B.height * gj.ﱣ︍︆︄[i].ﱡ︃︋︁;
              Yf(gb, B, hj.ﱡ︈︋︁.x + u.x - C / 2 + z, hj.ﱡ︈︋︁.y + u.y - D / 2 + A, C, D);
            }
          }
        }
      }
    }
  }
}
var Uh = [];
for (dc = 0; dc < 100; dc++) {
  var Vh = 1;
  if (Math[o]() < 0.25) {
    Vh = 0;
  }
  Uh[Na](Vh);
}
function Wh(c, d, f, g, i, k, m, n, o) {
  if (n === undefined) {
    n = 0;
  }
  for (var p = m; p >= n; p--) {
    for (var q = c; q <= d; q++) {
      for (var r = f; r <= g; r++) {
        if (!(o > 0 && Uh[(q + r * o) % Uh[Oa]] === 1)) {
          var s = ej.ﱡ︌︆︄[q][r];
          if (s !== undefined && s[k] !== undefined) {
            var t = s[k][p];
            if (t !== undefined) {
              for (var u = 0; u < t[Oa]; u++) {
                var v = t[u];
                if (v.update) {
                  if (v.ﱢ︋︆︄.update() && v.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
                    v.update = false;
                  }
                  var z = (1 - v.ﱢ︋︆︄.ﱡ︃︋︁) * nj * 600 * mb;
                  var A = Math[za](v.angle) * z;
                  var B = Math[e](v.angle) * z;
                } else {
                  A = 0;
                  B = 0;
                }
                var C = sprite[i][gj.time][p];
                Yf(gb, C, hj.ﱡ︈︋︁.x + v.x - C.width / (_scale_object * 2) + A, hj.ﱡ︈︋︁.y + v.y - C.height / (_scale_object * 2) + B, C.width / _scale_object, C.height / _scale_object);
              }
            }
          }
        }
      }
    }
  }
}
function Xh(c, d, e, f, i, k, m, n, o) {
  if (n === undefined) {
    n = 0;
  }
  for (var p = c; p <= d; p++) {
    for (var q = e; q <= f; q++) {
      var r = ej.ﱡ︌︆︄[p][q];
      if (r !== undefined && r[k] !== undefined) {
        var s = r[k];
        if (s !== undefined) {
          if (s.scale === 1) {
            var t = sprite[i][gj.time][s.ﱞ︅︇︄];
            gb[g]();
            gb[Ia](hj.ﱡ︈︋︁.x + s.x, hj.ﱡ︈︋︁.y + s.y);
            gb[ra](s.angle);
            Yf(gb, t, -t.width / 4, -t.height / 4, t.width / 2, t.height / 2);
            gb[Qa]();
          } else if (s.scale === 3) {
            for (var u = 0; u < s.p[Oa]; u++) {
              gb[g]();
              gb[Ia](hj.ﱡ︈︋︁.x + s.x, hj.ﱡ︈︋︁.y + s.y);
              gb[ra](s.p[u].angle);
              t = sprite[i][gj.time][s.p[u].ﱞ︅︇︄];
              Yf(gb, t, -t.width / 3 + s.p[u].x, -t.height / 3 + s.p[u].y, t.width / 1.5, t.height / 1.5);
              gb[Qa]();
            }
          } else {
            t = sprite[i][gj.time][s.ﱞ︅︇︄];
            gb[g]();
            gb[Ia](hj.ﱡ︈︋︁.x + s.x, hj.ﱡ︈︋︁.y + s.y);
            gb[ra](s.angle);
            Yf(gb, t, -t.width / 2, -t.height / 2, t.width, t.height);
            gb[Qa]();
          }
        }
      }
    }
  }
}
function Yh(c, d, f, g, i, k, m, n, o) {
  if (n === undefined) {
    n = 0;
  }
  for (var p = m; p >= n; p--) {
    for (var q = c; q <= d; q++) {
      for (var r = f; r <= g; r++) {
        var s = ej.ﱡ︌︆︄[q][r];
        if (s !== undefined && s[k] !== undefined) {
          var t = s[k][p];
          if (t !== undefined) {
            for (var u = 0; u < t[Oa]; u++) {
              var v = t[u];
              if (v.update) {
                if (v.ﱢ︋︆︄.update() && v.ﱢ︋︆︄.ﱟ︃︋︁ == 0) {
                  v.update = false;
                }
                var z = (1 - v.ﱢ︋︆︄.ﱡ︃︋︁) * nj * 600 * mb;
                var A = Math[za](v.angle) * z;
                var B = Math[e](v.angle) * z;
              } else {
                A = 0;
                B = 0;
              }
              for (var C = 0; C < _bubble[p].ﱠ︎︅︄; C++) {
                if (gj.ﱠ︅︇︄[C].ﱞ︄︋︁ !== oj) {
                  gj.ﱠ︅︇︄[C].update();
                  gj.ﱠ︅︇︄[C].ﱞ︄︋︁ = oj;
                }
                var D = sprite[935][gj.time][_bubble[p].ﱟ︅︇︄[C].t];
                var E = -D.width * gj.ﱠ︅︇︄[C].ﱡ︃︋︁;
                var F = -D.height * gj.ﱠ︅︇︄[C].ﱡ︃︋︁;
                Yf(gb, D, hj.ﱡ︈︋︁.x + v.x - E / 4 + A + _bubble[p].ﱟ︅︇︄[C].x, hj.ﱡ︈︋︁.y + v.y - F / 4 + B + _bubble[p].ﱟ︅︇︄[C].y, E / 2, F / 2);
              }
            }
          }
        }
      }
    }
  }
}
_scale_object = 1;
_bubble = [{
  ﱠ︎︅︄: 10,
  ﱟ︅︇︄: [{
    x: -128,
    y: -20,
    t: 0
  }, {
    x: -86,
    y: -4,
    t: 1
  }, {
    x: -60,
    y: -74,
    t: 2
  }, {
    x: -22,
    y: -144,
    t: 0
  }, {
    x: -58,
    y: 86,
    t: 0
  }, {
    x: 3,
    y: -30,
    t: 0
  }, {
    x: 65,
    y: -115,
    t: 1
  }, {
    x: 118,
    y: -50,
    t: 0
  }, {
    x: 73,
    y: 15,
    t: 1
  }, {
    x: 67,
    y: 79,
    t: 0
  }]
}, {
  ﱠ︎︅︄: 5,
  ﱟ︅︇︄: [{
    x: -45,
    y: -26,
    t: 0
  }, {
    x: -45,
    y: 20,
    t: 2
  }, {
    x: 10,
    y: -60,
    t: 1
  }, {
    x: 52,
    y: -17,
    t: 1
  }, {
    x: 14,
    y: 45,
    t: 0
  }]
}, {
  ﱠ︎︅︄: 3,
  ﱟ︅︇︄: [{
    x: -30,
    y: 3,
    t: 2
  }, {
    x: 7,
    y: -38,
    t: 2
  }, {
    x: 37,
    y: 5,
    t: 2
  }]
}, {
  ﱠ︎︅︄: 11,
  ﱟ︅︇︄: [{
    x: -74,
    y: -87,
    t: 2
  }, {
    x: -11,
    y: -10,
    t: 1
  }, {
    x: -99,
    y: 17,
    t: 1
  }, {
    x: -66,
    y: 84,
    t: 0
  }, {
    x: -55,
    y: 123,
    t: 1
  }, {
    x: 10,
    y: 81,
    t: 2
  }, {
    x: 52,
    y: 50,
    t: 0
  }, {
    x: 138,
    y: 9,
    t: 1
  }, {
    x: 104,
    y: -28,
    t: 0
  }, {
    x: 67,
    y: -56,
    t: 2
  }, {
    x: 5,
    y: -112,
    t: 0
  }]
}, {
  ﱠ︎︅︄: 6,
  ﱟ︅︇︄: [{
    x: -33,
    y: -66,
    t: 2
  }, {
    x: -58,
    y: 10,
    t: 0
  }, {
    x: -19,
    y: 44,
    t: 1
  }, {
    x: 44,
    y: 20,
    t: 0
  }, {
    x: 53,
    y: -36,
    t: 2
  }, {
    x: 7,
    y: -62,
    t: 0
  }]
}, {
  ﱠ︎︅︄: 3,
  ﱟ︅︇︄: [{
    x: -19,
    y: -25,
    t: 1
  }, {
    x: -29,
    y: 13,
    t: 2
  }, {
    x: 12,
    y: 12,
    t: 0
  }]
}];
var Zh = 0;
var $h = 0;
var _h = 0;
var ai = 0;
function bi(c, d) {
  if (gj.transition) {
    gb[ua] = 1;
    c.ﱣ︈︅︄(d);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    c.ﱣ︈︅︄(d);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    c.ﱣ︈︅︄(d);
  }
}
function ci(c, d) {
  if (gj.transition) {
    gb[ua] = 1;
    c.ﱢ︈︅︄(d);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    c.ﱢ︈︅︄(d);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    c.ﱢ︈︅︄(d);
  }
}
function di(c, d, e, f) {
  if (gj.transition) {
    gb[ua] = 1;
    Yf(gb, sprite[c][gj.time], e, f);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    Yf(gb, sprite[c][gj.time], e, f);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    Yf(gb, d, e, f);
  }
}
function ei(c, d, e, f, g) {
  var i = e.width;
  var k = e.height;
  var m = Math[A](i / 2);
  var n = Math[A](k / 2);
  if (gj.transition) {
    gb[ua] = 1;
    Yf(gb, sprite[c][d][gj.time], 0, 0, i, k, f, g, m, n);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    Yf(gb, sprite[c][d][gj.time], 0, 0, i, k, f, g, m, n);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    Yf(gb, sprite[c][d][gj.time], 0, 0, i, k, f, g, m, n);
  }
}
function fi(c, d, e, f) {
  var g = d.width;
  var i = d.height;
  var k = Math[A](g / 2);
  var m = Math[A](i / 2);
  if (gj.transition) {
    gb[ua] = 1;
    Yf(gb, sprite[c][gj.time], 0, 0, g, i, e, f, k, m);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    Yf(gb, sprite[c][gj.time], 0, 0, g, i, e, f, k, m);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    Yf(gb, d, 0, 0, g, i, e, f, k, m);
  }
}
function gi(c) {
  gb[ua] = c.alpha;
  lc(gb, c.x + hj.ﱡ︈︋︁.x, c.y + hj.ﱡ︈︋︁.y, c.r);
  jc(gb, ["#1C9BA4", "#00272F"][gj.time]);
  gb[ua] = 1;
}
function hi(c) {
  gb[g]();
  gb[Ia](hj.ﱡ︈︋︁.x + c.x, hj.ﱡ︈︋︁.y + c.y);
  gb[ra](c.angle);
  gb[ua] = c.alpha;
  var d = sprite[c.id][gj.time];
  Yf(gb, d, -d.width / 2, -d.height / 2);
  gb[ua] = 1;
  gb[Qa]();
}
function ii(c, d, e, f, g) {
  if (gj.transition && g == 1) {
    gb[ua] = 1;
    Yf(gb, sprite[c][gj.time][d], e, f);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    Yf(gb, sprite[c][gj.time][d], e, f);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    gb[ua] = g;
    Yf(gb, sprite[c][gj.time][d], e, f);
    gb[ua] = 1;
  }
}
function ji(c, d, e) {
  if (gj.transition) {
    gb[ua] = 1;
    c.draw(d, e);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    c.draw(d, e);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    c.draw(d, e);
  }
}
function ki(c, d, e, f, g, i, k, m, n, o) {
  if (gj.transition) {
    gb[ua] = 1;
    c(d, e, f, g, i, k, m, n, o);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁;
    c(d, e, f, g, i, k, m, n, o);
    gj.time = gj.time ? 0 : 1;
    gb[ua] = 1;
  } else {
    c(d, e, f, g, i, k, m, n, o);
  }
}
function li(c, d, e, f, g, i, k) {
  var m;
  var n = "#";
  n += (m = Math[A](f * k + (1 - k) * c)) < 16 ? "0" + m[Q](16) : m[Q](16);
  n += (m = Math[A](g * k + (1 - k) * d)) < 16 ? "0" + m[Q](16) : m[Q](16);
  return n += (m = Math[A](i * k + (1 - k) * e)) < 16 ? "0" + m[Q](16) : m[Q](16);
}
function mi(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.x + c - 700;
  var q = Math[ba](hj.ﱡ︈︋︁.y + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.y + ib - f - 100, 0);
  var s = q;
  var t = ib - q - r;
  if (k) {
    var u = g.t(m).x;
  } else {
    u = m.r.x;
  }
  var v = p + Ki.ﱠ︆︇︄;
  Ki.ﱟ︆︇︄;
  v += u + Ki.ﱟ︆︇︄ - 2;
  if (k) {
    u = g.t(n).x;
  } else {
    u = n.r.x;
  }
  var z = p + Ki.ﱡ︆︇︄ - v + u;
  var A = (v += z - 2) - 2;
  if (k) {
    u = g.t(o).x;
  } else {
    u = o.r.x;
  }
  if (A < v + (z = p + Ki.ﱣ︆︇︄ - v + u) - 3) {
    v += z - 2;
  } else {
    v = A;
  }
  z = p + Ki.ﱢ︆︇︄ - v;
  if (k > 0 && i.ﱞ︇︇︄ === 1) {
    if (gj.transition) {
      var B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 77, 72, 252, 239, 187, B);
    } else {
      gb[d] = ["#FCEFBB", "#0F4D48"][gj.time];
    }
    gb[pa](v, s, z, t);
  } else {
    if (gj.transition) {
      B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(i.ﱣ︃︆︄[0], i.ﱣ︃︆︄[1], i.ﱣ︃︆︄[2], i.ﱡ︃︆︄[0], i.ﱡ︃︆︄[1], i.ﱡ︃︆︄[2], B);
    } else {
      gb[d] = i.ﱠ︇︇︄[gj.time];
    }
    gb[pa](v, s, z, t);
  }
}
function ni(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.x + c - 700;
  var q = Math[ba](hj.ﱡ︈︋︁.y + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.y + ib - f - 100, 0);
  var s = q;
  var t = ib - q - r;
  if (k) {
    var u = g.t(m);
  } else {
    u = m.r;
  }
  var v = p + Ki.ﱠ︆︇︄;
  var z = v;
  var A = s;
  var B = u.x + Ki.ﱟ︆︇︄;
  var C = t;
  var D = v += u.x + Ki.ﱟ︆︇︄ - 2;
  if (k) {
    u = g.t(n);
  } else {
    u = n.r;
  }
  var E = p + Ki.ﱡ︆︇︄ - v + u.x;
  var F = v;
  var G = s;
  var H = E;
  var I = t;
  var J = (v += E - 2) - 2;
  if (k) {
    u = g.t(o);
  } else {
    u = o.r;
  }
  if (J < v + (E = p + Ki.ﱣ︆︇︄ - v + u.x) - 3) {
    var K = true;
    var L = v;
    var M = s;
    var N = E;
    var O = t;
    var P = v += E - 2;
  } else {
    K = false;
    v = J;
    P = -1;
  }
  E = p + Ki.ﱢ︆︇︄ - v;
  if (gj.transition) {
    var Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](z, A, B, C);
  if (k) {
    if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 70, 76, 42, 139, 155, Q);
    } else {
      gb[d] = ["#2A8B9B", "#0F464C"][gj.time];
    }
  } else if (gj.transition) {
    Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](F, G, H, I);
  if (K) {
    if (k) {
      if (gj.transition) {
        Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
        gb[d] = li(17, 94, 96, 169, 214, 211, Q);
      } else {
        gb[d] = ["#A9D6D3", "#115E60"][gj.time];
      }
    } else if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(9, 55, 63, 11, 106, 132, Q);
    } else {
      gb[d] = ["#0B6A84", "#09373F"][gj.time];
    }
    gb[pa](L, M, N, O);
  }
  if (dj.ﱢ︌︆︄ && k) {
    g.ﱟ︇︇︄(J, P, D, p, -hj.ﱡ︈︋︁.y + A, -hj.ﱡ︈︋︁.y + A + C);
  }
}
function oi(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.y + c - 700;
  var q = Math[ba](hj.ﱡ︈︋︁.x + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.x + hb - f - 100, 0);
  var s = q;
  var t = hb - q - r;
  if (k) {
    var u = g.t(m).x;
  } else {
    u = m.r.x;
  }
  var v = p + Ki.ﱠ︆︇︄;
  Ki.ﱟ︆︇︄;
  v += u + Ki.ﱟ︆︇︄ - 2;
  if (k) {
    u = g.t(n).x;
  } else {
    u = n.r.x;
  }
  var z = p + Ki.ﱡ︆︇︄ - v + u;
  var A = (v += z - 2) - 2;
  if (k) {
    u = g.t(o).x;
  } else {
    u = o.r.x;
  }
  if (A < v + (z = p + Ki.ﱣ︆︇︄ - v + u) - 3) {
    v += z - 2;
  } else {
    v = A;
  }
  z = p + Ki.ﱢ︆︇︄ - v;
  if (k > 0 && i.ﱞ︇︇︄ === 1) {
    if (gj.transition) {
      var B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 77, 72, 252, 239, 187, B);
    } else {
      gb[d] = ["#FCEFBB", "#0F4D48"][gj.time];
    }
    gb[pa](s, v, t, z);
  } else {
    if (gj.transition) {
      B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(i.ﱣ︃︆︄[0], i.ﱣ︃︆︄[1], i.ﱣ︃︆︄[2], i.ﱡ︃︆︄[0], i.ﱡ︃︆︄[1], i.ﱡ︃︆︄[2], B);
    } else {
      gb[d] = i.ﱠ︇︇︄[gj.time];
    }
    gb[pa](s, v, t, z);
  }
}
function pi(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.y + c - 700;
  var q = Math[ba](hj.ﱡ︈︋︁.x + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.x + hb - f - 100, 0);
  var s = q;
  var t = hb - q - r;
  if (k) {
    var u = g.t(m);
  } else {
    u = m.r;
  }
  var v = p + Ki.ﱠ︆︇︄;
  var z = s;
  var A = v;
  var B = u.x + Ki.ﱟ︆︇︄;
  var C = t;
  var D = v += u.x + Ki.ﱟ︆︇︄ - 2;
  if (k) {
    u = g.t(n);
  } else {
    u = n.r;
  }
  var E = p + Ki.ﱡ︆︇︄ - v + u.x;
  var F = v;
  var G = s;
  var H = E;
  var I = t;
  var J = (v += E - 2) - 2;
  if (k) {
    u = g.t(o);
  } else {
    u = o.r;
  }
  if (J < v + (E = p + Ki.ﱣ︆︇︄ - v + u.x) - 3) {
    var K = true;
    var L = v;
    var M = s;
    var N = E;
    var O = t;
    var P = v += E - 2;
  } else {
    K = false;
    v = J;
    P = -1;
  }
  E = p + Ki.ﱢ︆︇︄ - v;
  if (gj.transition) {
    var Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](z, A, C, B);
  if (k) {
    if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 70, 76, 42, 139, 155, Q);
    } else {
      gb[d] = ["#2A8B9B", "#0F464C"][gj.time];
    }
  } else if (gj.transition) {
    Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](G, F, I, H);
  if (K) {
    if (k) {
      if (gj.transition) {
        Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
        gb[d] = li(17, 94, 96, 169, 214, 211, Q);
      } else {
        gb[d] = ["#A9D6D3", "#115E60"][gj.time];
      }
    } else if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(9, 55, 63, 11, 106, 132, Q);
    } else {
      gb[d] = ["#0B6A84", "#09373F"][gj.time];
    }
    gb[pa](M, L, O, N);
  }
  if (dj.ﱢ︌︆︄ && k) {
    g.ﱡ︇︇︄(J, P, D, p, -hj.ﱡ︈︋︁.x + z, -hj.ﱡ︈︋︁.x + z + C);
  }
}
function qi(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.x + c + 820;
  var q = Math[ba](hj.ﱡ︈︋︁.y + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.y + ib - f - 100, 0);
  var s = q;
  var t = ib - q - r;
  if (k) {
    var u = g.t(m).x;
  } else {
    u = m.r.x;
  }
  var v = p + Ki.ﱠ︆︇︄;
  Ki.ﱟ︆︇︄;
  v += -u + Ki.ﱟ︆︇︄ + 2;
  if (k) {
    u = g.t(n).x;
  } else {
    u = n.r.x;
  }
  var z = p - Ki.ﱡ︆︇︄ - v - u;
  var A = (v += z + 2) - 2;
  if (k) {
    u = g.t(o).x;
  } else {
    u = o.r.x;
  }
  if (A > v + (z = p - Ki.ﱣ︆︇︄ - v - u)) {
    v += z + 2;
  } else {
    v = A;
  }
  z = p - Ki.ﱢ︆︇︄ - v;
  if (k > 0 && i.ﱞ︇︇︄ === 1) {
    if (gj.transition) {
      var B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 77, 72, 252, 239, 187, B);
    } else {
      gb[d] = ["#FCEFBB", "#0F4D48"][gj.time];
    }
    gb[pa](v, s, z, t);
  } else {
    if (gj.transition) {
      B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(i.ﱣ︃︆︄[0], i.ﱣ︃︆︄[1], i.ﱣ︃︆︄[2], i.ﱡ︃︆︄[0], i.ﱡ︃︆︄[1], i.ﱡ︃︆︄[2], B);
    } else {
      gb[d] = i.ﱠ︇︇︄[gj.time];
    }
    gb[pa](v, s, z, t);
  }
}
function ri(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.x + c + 820;
  var q = Math[ba](hj.ﱡ︈︋︁.y + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.y + ib - f - 100, 0);
  var s = q;
  var t = ib - q - r;
  if (k) {
    var u = g.t(m);
  } else {
    u = m.r;
  }
  var v = p + Ki.ﱠ︆︇︄;
  var z = v;
  var A = s;
  var B = -u.x + Ki.ﱟ︆︇︄;
  var C = t;
  var D = v += -u.x + Ki.ﱟ︆︇︄ + 2;
  if (k) {
    u = g.t(n);
  } else {
    u = n.r;
  }
  var E = p - Ki.ﱡ︆︇︄ - v - u.x;
  var F = v;
  var G = s;
  var H = E;
  var I = t;
  var J = (v += E + 2) - 2;
  if (k) {
    u = g.t(o);
  } else {
    u = o.r;
  }
  if (J > v + (E = p - Ki.ﱣ︆︇︄ - v - u.x)) {
    var K = true;
    var L = v;
    var M = s;
    var N = E;
    var O = t;
    var P = v += E + 2;
  } else {
    K = false;
    v = J;
    P = -1;
  }
  E = p - Ki.ﱢ︆︇︄ - v;
  if (gj.transition) {
    var Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](z, A, B, C);
  if (k) {
    if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 70, 76, 42, 139, 155, Q);
    } else {
      gb[d] = ["#2A8B9B", "#0F464C"][gj.time];
    }
  } else if (gj.transition) {
    Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](F, G, H, I);
  if (K) {
    if (k) {
      if (gj.transition) {
        Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
        gb[d] = li(17, 94, 96, 169, 214, 211, Q);
      } else {
        gb[d] = ["#A9D6D3", "#115E60"][gj.time];
      }
    } else if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(9, 55, 63, 11, 106, 132, Q);
    } else {
      gb[d] = ["#0B6A84", "#09373F"][gj.time];
    }
    gb[pa](L, M, N, O);
  }
  if (dj.ﱢ︌︆︄ && k) {
    g.ﱣ︇︇︄(J, P, D, p, -hj.ﱡ︈︋︁.y + A, -hj.ﱡ︈︋︁.y + A + C);
  }
}
function si(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.y + c + 710;
  var q = Math[ba](hj.ﱡ︈︋︁.x + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.x + hb - f - 100, 0);
  var s = q;
  var t = hb - q - r;
  if (k) {
    var u = g.t(m).x;
  } else {
    u = m.r.x;
  }
  var v = p + Ki.ﱠ︆︇︄;
  Ki.ﱟ︆︇︄;
  v += -u + Ki.ﱟ︆︇︄ + 2;
  if (k) {
    u = g.t(n).x;
  } else {
    u = n.r.x;
  }
  var z = p - Ki.ﱡ︆︇︄ - v - u;
  var A = (v += z + 2) - 2;
  if (k) {
    u = g.t(o).x;
  } else {
    u = o.r.x;
  }
  if (A > v + (z = p - Ki.ﱣ︆︇︄ - v - u)) {
    v += z + 2;
  } else {
    v = A;
  }
  z = p - Ki.ﱢ︆︇︄ - v;
  if (k > 0 && i.ﱞ︇︇︄ === 1) {
    if (gj.transition) {
      var B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 77, 72, 252, 239, 187, B);
    } else {
      gb[d] = ["#FCEFBB", "#0F4D48"][gj.time];
    }
    gb[pa](s, v, t, z);
  } else {
    if (gj.transition) {
      B = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(i.ﱣ︃︆︄[0], i.ﱣ︃︆︄[1], i.ﱣ︃︆︄[2], i.ﱡ︃︆︄[0], i.ﱡ︃︆︄[1], i.ﱡ︃︆︄[2], B);
    } else {
      gb[d] = i.ﱠ︇︇︄[gj.time];
    }
    gb[pa](s, v, t, z);
  }
}
function ti(c, e, f, g, i, k) {
  var m = g.ﱣ︅︇︄;
  var n = g.ﱢ︅︇︄;
  var o = g.ﱞ︆︇︄;
  var p = hj.ﱡ︈︋︁.y + c + 710;
  var q = Math[ba](hj.ﱡ︈︋︁.x + e, 0);
  var r = Math[ba](-hj.ﱡ︈︋︁.x + hb - f - 100, 0);
  var s = q;
  var t = hb - q - r;
  if (k) {
    var u = g.t(m);
  } else {
    u = m.r;
  }
  var v = p + Ki.ﱠ︆︇︄;
  var z = v;
  var A = s;
  var B = -u.x + Ki.ﱟ︆︇︄;
  var C = t;
  var D = v += -u.x + Ki.ﱟ︆︇︄ + 2;
  if (k) {
    u = g.t(n);
  } else {
    u = n.r;
  }
  var E = p - Ki.ﱡ︆︇︄ - v - u.x;
  var F = v;
  var G = s;
  var H = E;
  var I = t;
  var J = (v += E + 2) - 2;
  if (k) {
    u = g.t(o);
  } else {
    u = o.r;
  }
  if (J > v + (E = p - Ki.ﱣ︆︇︄ - v - u.x)) {
    var K = true;
    var L = v;
    var M = s;
    var N = E;
    var O = t;
    var P = v += E + 2;
  } else {
    K = false;
    v = J;
    P = -1;
  }
  E = p - Ki.ﱢ︆︇︄ - v;
  if (gj.transition) {
    var Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](A, z, C, B);
  if (k) {
    if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(15, 70, 76, 42, 139, 155, Q);
    } else {
      gb[d] = ["#2A8B9B", "#0F464C"][gj.time];
    }
  } else if (gj.transition) {
    Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
    gb[d] = li(9, 55, 63, 11, 106, 132, Q);
  } else {
    gb[d] = ["#0B6A84", "#09373F"][gj.time];
  }
  gb[pa](G, F, I, H);
  if (K) {
    if (k) {
      if (gj.transition) {
        Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
        gb[d] = li(17, 94, 96, 169, 214, 211, Q);
      } else {
        gb[d] = ["#A9D6D3", "#115E60"][gj.time];
      }
    } else if (gj.transition) {
      Q = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
      gb[d] = li(9, 55, 63, 11, 106, 132, Q);
    } else {
      gb[d] = ["#0B6A84", "#09373F"][gj.time];
    }
    gb[pa](M, L, O, N);
  }
  if (dj.ﱢ︌︆︄ && k) {
    g.ﱢ︇︇︄(J, P, D, p, -hj.ﱡ︈︋︁.x + A, -hj.ﱡ︈︋︁.x + A + C);
  }
}
function ui() {
  gb[ua] = 1;
  if (gj.transition) {
    var c = gj.ﱡ︅︇︄.update();
  }
  gj.ﱞ︈︇︄(-hj.ﱡ︈︋︁.x, -hj.ﱡ︈︋︁.y);
  Zh = Math[ba](Math[A](-hj.ﱡ︈︋︁.x / gj.ﱠ︈︇︄) - 5, 0);
  $h = Math[ta](Math[A]((-hj.ﱡ︈︋︁.x + hj.ﱡ︈︋︁.w) / gj.ﱠ︈︇︄) + 4, gj.ﱣ︆︅︄ - 1);
  _h = Math[ba](Math[A](-hj.ﱡ︈︋︁.y / gj.ﱟ︈︇︄) - 3, 0);
  ai = Math[ta](Math[A]((-hj.ﱡ︈︋︁.y + hj.ﱡ︈︋︁.ﱟ︁︋︁) / gj.ﱟ︈︇︄) + 3, gj.ﱢ︆︅︄ - 1);
  (function () {
    for (var c = gj.ﱟ︂︆︄[Oa] - 1; c >= 0; c--) {
      if ((u = gj.ﱟ︂︆︄[c]).t === gj.ﱡ︈︇︄) {
        var e = gj.ﱣ︈︇︄[u.t];
        if (-hj.ﱡ︈︋︁.x >= u.x1 - 230 - hb && -hj.ﱡ︈︋︁.x <= u.x2 + 330 && -hj.ﱡ︈︋︁.y >= u.y1 - ib && -hj.ﱡ︈︋︁.y <= u.y2 + 100) {
          var f = u.x2;
          if (u.t !== gj.ﱡ︈︇︄) {
            f -= 610;
          }
          var g = u.x1;
          if (u.t !== gj.ﱡ︈︇︄) {
            g += 610;
          }
          var i = u.y2;
          if (u.t !== gj.ﱡ︈︇︄) {
            i -= 610;
          }
          var k = u.y1;
          if (u.t !== gj.ﱡ︈︇︄) {
            k += 610;
          }
          if (gj.transition) {
            var m = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
            gb[d] = li(e.ﱣ︃︆︄[0], e.ﱣ︃︆︄[1], e.ﱣ︃︆︄[2], e.ﱡ︃︆︄[0], e.ﱡ︃︆︄[1], e.ﱡ︃︆︄[1], m);
          } else {
            gb[d] = e.ﱠ︇︇︄[gj.time];
          }
          var n = Math[ba](hj.ﱡ︈︋︁.x + g - 2 - 230, 0);
          var o = Math[ba](-hj.ﱡ︈︋︁.x + hb - f - 330 - 2, 0);
          var p = Math[ba](hj.ﱡ︈︋︁.y + k - 2, 0);
          var q = Math[ba](-hj.ﱡ︈︋︁.y + ib - i - 100 - 2, 0);
          gb[Y]();
          gb[pa](n, p, hb - o - n, ib - p - q);
        }
      }
    }
    for (c = gj.ﱟ︂︆︄[Oa] - 1; c >= 0; c--) {
      if ((u = gj.ﱟ︂︆︄[c]).t !== gj.ﱡ︈︇︄) {
        f = u.x2;
        if (u.t !== gj.ﱡ︈︇︄) {
          f -= 400;
        }
        g = u.x1;
        if (u.t !== gj.ﱡ︈︇︄) {
          g += 400;
        }
        i = u.y2;
        if (u.t !== gj.ﱡ︈︇︄) {
          i -= 300;
        }
        k = u.y1;
        if (u.t !== gj.ﱡ︈︇︄) {
          k += 300;
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄) == 0 && -hj.ﱡ︈︋︁.x >= f - hb + 120 && -hj.ﱡ︈︋︁.x <= f + 820 && -hj.ﱡ︈︋︁.y >= k + 88 - ib && -hj.ﱡ︈︋︁.y <= i + 50) {
          qi(f, k + 88, i - 88, hj.ﱞ︉︇︄[0], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄);
          ri(f, k + 88, i - 88, hj.ﱞ︉︇︄[0], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄) == 0 && -hj.ﱡ︈︋︁.x >= g - hb - 700 && -hj.ﱡ︈︋︁.x <= g - 20 && -hj.ﱡ︈︋︁.y >= k + 88 - ib && -hj.ﱡ︈︋︁.y <= i + 50) {
          mi(g, k + 88, i - 88, hj.ﱞ︉︇︄[1], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄);
          ni(g, k + 88, i - 88, hj.ﱞ︉︇︄[1], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄) == 0 && -hj.ﱡ︈︋︁.x >= g - 235 - hb && -hj.ﱡ︈︋︁.x <= f + 350 && -hj.ﱡ︈︋︁.y >= i - ib - 275 && -hj.ﱡ︈︋︁.y <= i + 490) {
          si(i - 230, g - 230, f + 230, hj.ﱞ︉︇︄[2], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄);
          ti(i - 230, g - 230, f + 230, hj.ﱞ︉︇︄[2], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄) == 0 && -hj.ﱡ︈︋︁.x >= g - 235 - hb && -hj.ﱡ︈︋︁.x <= f + 350 && -hj.ﱡ︈︋︁.y >= k - ib - 390 && -hj.ﱡ︈︋︁.y <= k + 315) {
          oi(k + 310, g - 230, f + 230, hj.ﱞ︉︇︄[3], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄);
          pi(k + 310, g - 230, f + 230, hj.ﱞ︉︇︄[3], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄);
        }
      }
    }
    for (c = gj.ﱟ︂︆︄[Oa] - 1; c >= 0; c--) {
      if ((u = gj.ﱟ︂︆︄[c]).t !== gj.ﱡ︈︇︄) {
        f = u.x2;
        if (u.t !== gj.ﱡ︈︇︄) {
          f -= 400;
        }
        g = u.x1;
        if (u.t !== gj.ﱡ︈︇︄) {
          g += 400;
        }
        i = u.y2;
        if (u.t !== gj.ﱡ︈︇︄) {
          i -= 300;
        }
        k = u.y1;
        if (u.t !== gj.ﱡ︈︇︄) {
          k += 300;
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄) != 0 && -hj.ﱡ︈︋︁.x >= f - hb + 120 && -hj.ﱡ︈︋︁.x <= f + 820 && -hj.ﱡ︈︋︁.y >= k + 88 - ib && -hj.ﱡ︈︋︁.y <= i + 50) {
          qi(f, k + 88, i - 88, hj.ﱞ︉︇︄[0], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄) != 0 && -hj.ﱡ︈︋︁.x >= g - hb - 700 && -hj.ﱡ︈︋︁.x <= g - 20 && -hj.ﱡ︈︋︁.y >= k + 88 - ib && -hj.ﱡ︈︋︁.y <= i + 50) {
          mi(g, k + 88, i - 88, hj.ﱞ︉︇︄[1], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄) != 0 && -hj.ﱡ︈︋︁.x >= g - 235 - hb && -hj.ﱡ︈︋︁.x <= f + 350 && -hj.ﱡ︈︋︁.y >= i - ib - 275 && -hj.ﱡ︈︋︁.y <= i + 490) {
          si(i - 230, g - 230, f + 230, hj.ﱞ︉︇︄[2], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄) != 0 && -hj.ﱡ︈︋︁.x >= g - 235 - hb && -hj.ﱡ︈︋︁.x <= f + 350 && -hj.ﱡ︈︋︁.y >= k - ib - 390 && -hj.ﱡ︈︋︁.y <= k + 315) {
          oi(k + 310, g - 230, f + 230, hj.ﱞ︉︇︄[3], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄);
        }
      }
    }
    for (c = gj.ﱟ︂︆︄[Oa] - 1; c >= 0; c--) {
      if ((u = gj.ﱟ︂︆︄[c]).t !== gj.ﱡ︈︇︄) {
        e = gj.ﱣ︈︇︄[u.t];
        if (-hj.ﱡ︈︋︁.x >= u.x1 - 230 - hb && -hj.ﱡ︈︋︁.x <= u.x2 + 330 && -hj.ﱡ︈︋︁.y >= u.y1 - ib && -hj.ﱡ︈︋︁.y <= u.y2 + 100) {
          f = u.x2;
          if (u.t !== gj.ﱡ︈︇︄) {
            if ((u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄) == 0) {
              f -= 414;
            } else {
              f -= 610;
            }
          }
          g = u.x1;
          if (u.t !== gj.ﱡ︈︇︄) {
            if ((u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄) == 0) {
              g += 414;
            } else {
              g += 610;
            }
          }
          i = u.y2;
          if (u.t !== gj.ﱡ︈︇︄) {
            if ((u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄) == 0) {
              i -= 414;
            } else {
              i -= 610;
            }
          }
          k = u.y1;
          if (u.t !== gj.ﱡ︈︇︄) {
            if ((u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄) == 0) {
              k += 414;
            } else {
              k += 610;
            }
          }
          if (gj.transition) {
            m = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
            gb[d] = li(e.ﱣ︃︆︄[0], e.ﱣ︃︆︄[1], e.ﱣ︃︆︄[2], e.ﱡ︃︆︄[0], e.ﱡ︃︆︄[1], e.ﱡ︃︆︄[2], m);
          } else {
            gb[d] = e.ﱠ︇︇︄[gj.time];
          }
          n = Math[ba](hj.ﱡ︈︋︁.x + g - 2 - 230, 0);
          o = Math[ba](-hj.ﱡ︈︋︁.x + hb - f - 330 - 2, 0);
          p = Math[ba](hj.ﱡ︈︋︁.y + k - 2, 0);
          q = Math[ba](-hj.ﱡ︈︋︁.y + ib - i - 100 - 2, 0);
          gb[Y]();
          gb[pa](n, p, hb - o - n, ib - p - q);
        }
      }
    }
    if (dj.ﱢ︌︆︄) {
      ki(Th, _h, ai, Zh, $h, 689, "isl", 2);
      ki(Th, _h, ai, Zh, $h, 688, "isl", 2);
    }
    ki(Wh, _h, ai, Zh, $h, 686, "isl", 2);
    if (dj.ﱢ︌︆︄) {
      ki(Xh, _h, ai, Zh, $h, 237, "de");
    }
    var r = gj.ﱠ︀️︄[0];
    for (c = 0; c < r[Oa]; c++) {
      for (var s = r[c], t = 0; t < s.ﱣ︉︇︄[Oa]; t++) {
        hi(s.ﱣ︉︇︄[t]);
      }
    }
    if ((Kg += nj * 40) > 60) {
      Kg -= 60;
    }
    ki(Lg, _h, ai, Zh, $h, 1018, "r", 0);
    c = 0;
    for (; c < gj.ﱟ︂︆︄[Oa]; c++) {
      var u;
      if ((u = gj.ﱟ︂︆︄[c]).t !== gj.ﱡ︈︇︄) {
        f = u.x2;
        if (u.t !== gj.ﱡ︈︇︄) {
          f -= 400;
        }
        g = u.x1;
        if (u.t !== gj.ﱡ︈︇︄) {
          g += 400;
        }
        i = u.y2;
        if (u.t !== gj.ﱡ︈︇︄) {
          i -= 300;
        }
        k = u.y1;
        if (u.t !== gj.ﱡ︈︇︄) {
          k += 300;
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄) > 0 && -hj.ﱡ︈︋︁.x >= f - hb + 120 && -hj.ﱡ︈︋︁.x <= f + 820 && -hj.ﱡ︈︋︁.y >= k + 88 - ib && -hj.ﱡ︈︋︁.y <= i + 50) {
          ri(f, k + 88, i - 88, hj.ﱞ︉︇︄[0], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱢ︈︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄) > 0 && -hj.ﱡ︈︋︁.x >= g - hb - 700 && -hj.ﱡ︈︋︁.x <= g - 20 && -hj.ﱡ︈︋︁.y >= k + 88 - ib && -hj.ﱡ︈︋︁.y <= i + 50) {
          ni(g, k + 88, i - 88, hj.ﱞ︉︇︄[1], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱠ︉︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄) > 0 && -hj.ﱡ︈︋︁.x >= g - 235 - hb && -hj.ﱡ︈︋︁.x <= f + 350 && -hj.ﱡ︈︋︁.y >= i - ib - 275 && -hj.ﱡ︈︋︁.y <= i + 490) {
          ti(i - 230, g - 230, f + 230, hj.ﱞ︉︇︄[2], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱟ︉︇︄);
        }
        if ((u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄) > 0 && -hj.ﱡ︈︋︁.x >= g - 235 - hb && -hj.ﱡ︈︋︁.x <= f + 350 && -hj.ﱡ︈︋︁.y >= k - ib - 390 && -hj.ﱡ︈︋︁.y <= k + 315) {
          pi(k + 310, g - 230, f + 230, hj.ﱞ︉︇︄[3], gj.ﱣ︈︇︄[u.t], u.ﱡ︃︋︁ & Ki.ﱡ︉︇︄);
        }
      }
    }
  })();
  (function () {
    var c = Zh;
    var d = $h;
    var e = _h;
    var f = ai;
    if (dj.ﱢ︌︆︄) {
      ki(Wh, e, f, c, d, 615, "l", 2);
    }
    if (dj.ﱢ︌︆︄) {
      ki(Wh, e, f, c, d, ["#2D2017", "#031C1E"], "la", 5);
    }
    ki(Wh, e, f, c, d, 197, "la", 5);
    ki(Th, e, f, c, d, 614, "l", 2);
    if (dj.ﱢ︌︆︄) {
      ki(Yh, e, f, c, d, 197, "la", 5);
      ki(Th, e, f, c, d, 613, "l", 2);
    }
    ki(Wh, e, f, c, d, 1046, "ma", 3);
    for (var i = gj.ﱠ︀️︄[76], k = 0; k < i[Oa]; k++) {
      i[k].ﱢ︉︇︄();
    }
    var m = gj.ﱠ︀️︄[0];
    for (k = 0; k < m[Oa]; k++) {
      for (var n = m[k], o = 0; o < n.ﱞ︊︇︄[Oa]; o++) {
        gi(n.ﱞ︊︇︄[o]);
      }
    }
    var p = gj.ﱠ︀️︄[30];
    for (k = 0; k < p[Oa]; k++) {
      ji(p[k], 119);
      p[k].ﱠ︊︇︄(p[k].info);
    }
    var q = gj.ﱠ︀️︄[18];
    for (k = 0; k < q[Oa]; k++) {
      if (q[k].info) {
        bi(q[k]);
      }
    }
    var r = gj.ﱠ︀️︄[1];
    for (k = 0; k < r[Oa]; k++) {
      bi(r[k], 107);
    }
    var s = gj.ﱠ︀️︄[22];
    for (k = 0; k < s[Oa]; k++) {
      bi(s[k]);
    }
    var t = gj.ﱠ︀️︄[23];
    for (k = 0; k < t[Oa]; k++) {
      bi(t[k]);
    }
    var u = gj.ﱠ︀️︄[6];
    for (k = 0; k < u[Oa]; k++) {
      bi(u[k], 112);
    }
    var v = gj.ﱠ︀️︄[36];
    for (k = 0; k < v[Oa]; k++) {
      ji(v[k]);
    }
    var z = gj.ﱠ︀️︄[33];
    for (k = 0; k < z[Oa]; k++) {
      ji(z[k], 135);
    }
    var A = gj.ﱠ︀️︄[3];
    for (k = 0; k < A[Oa]; k++) {
      bi(A[k]);
    }
    A = gj.ﱠ︀️︄[43];
    k = 0;
    for (; k < A[Oa]; k++) {
      bi(A[k]);
    }
    A = gj.ﱠ︀️︄[3];
    k = 0;
    for (; k < A[Oa]; k++) {
      ci(A[k]);
    }
    var B = gj.ﱠ︀️︄[44];
    for (k = 0; k < B[Oa]; k++) {
      if (!((B[k].info & 15) != 0 && B[k].info !== 10)) {
        ji(B[k]);
      }
    }
    var C = gj.ﱠ︀️︄[54];
    for (k = 0; k < C[Oa]; k++) {
      if (!((C[k].info & 15) != 0 && C[k].info !== 10)) {
        ji(C[k]);
      }
    }
    var D = gj.ﱠ︀️︄[55];
    for (k = 0; k < D[Oa]; k++) {
      if (!((D[k].info & 15) != 0 && D[k].info !== 10)) {
        ji(D[k]);
      }
    }
    var E = gj.ﱠ︀️︄[79];
    for (k = 0; k < E[Oa]; k++) {
      ji(E[k], 126);
    }
    var F = gj.ﱠ︀️︄[39];
    for (k = 0; k < F[Oa]; k++) {
      if (!((F[k].info & 15) != 0 && F[k].info !== 10)) {
        ji(F[k]);
      }
    }
    var G = gj.ﱠ︀️︄[40];
    for (k = 0; k < G[Oa]; k++) {
      if (!((G[k].info & 15) != 0 && G[k].info !== 10)) {
        ji(G[k]);
      }
    }
    var H = gj.ﱠ︀️︄[37];
    for (k = 0; k < H[Oa]; k++) {
      if (!((H[k].info & 15) != 0 && H[k].info !== 10)) {
        ji(H[k]);
      }
    }
    E = gj.ﱠ︀️︄[31];
    k = 0;
    for (; k < E[Oa]; k++) {
      ji(E[k]);
    }
    if(!Settings.boxonTOP.enable) {
      var J = gj.ﱠ︀️︄[86];
      for (k = 0; k < J[Oa]; k++) {
        ji(J[k], 244, 723);
      }
      var K = gj.ﱠ︀️︄[82];
      for (k = 0; k < K[Oa]; k++) {
        ji(K[k], 244, 723);
      }
    }
   
    var L = gj.ﱠ︀️︄[87];
    for (k = 0; k < L[Oa]; k++) {
      ji(L[k], 848, 853);
    }
    var M = gj.ﱠ︀️︄[45];
    for (k = 0; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 330);
      }
    }
    M = gj.ﱠ︀️︄[46];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 367);
      }
    }
    M = gj.ﱠ︀️︄[47];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 370);
      }
    }
    M = gj.ﱠ︀️︄[48];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 373);
      }
    }
    M = gj.ﱠ︀️︄[49];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 494);
      }
    }
    M = gj.ﱠ︀️︄[53];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 370);
      }
    }
    M = gj.ﱠ︀️︄[10];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 330);
      }
    }
    M = gj.ﱠ︀️︄[15];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 367);
      }
    }
    M = gj.ﱠ︀️︄[16];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 370);
      }
    }
    M = gj.ﱠ︀️︄[17];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 373);
      }
    }
    M = gj.ﱠ︀️︄[21];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 494);
      }
    }
    M = gj.ﱠ︀️︄[51];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 1) {
        ji(M[k], 370);
      }
    }
    var N = gj.ﱠ︀️︄[80];
    for (k = 0; k < N[Oa]; k++) {
      ji(N[k], 258, 316);
    }
    var O = gj.ﱠ︀️︄[41];
    for (k = 0; k < O[Oa]; k++) {
      ji(O[k], 192);
    }
    i = gj.ﱠ︀️︄[76];
    k = 0;
    for (; k < i[Oa]; k++) {
      ji(i[k], Rb.ﱡ︊︇︄, Rb.ﱣ︊︇︄);
    }
    var P = gj.ﱠ︀️︄[91];
    for (k = 0; k < P[Oa]; k++) {
      if (P[k].ﱢ︎︆︄ === 0) {
        ji(P[k]);
      }
    }
    if(!Settings.playeronTOP.enable) {
    m = gj.ﱠ︀️︄[0];
    k = 0;
    for (; k < m[Oa]; k++) {
      n = m[k];
      if (m[k].ﱠ︀︇︄ !== 221 && m[k].ﱠ︀︇︄ !== 222 && m[k].ﱠ︀︇︄ !== 223 && m[k].ﱠ︀︇︄ !== 224 && m[k].ﱠ︀︇︄ !== 91) {
        if (n.ﱢ︊︇︄ === 0) {
          if (n.ﱞ︋︇︄ > 0.001) {
            n.ﱞ︋︇︄ = Utils.ﱟ︆︋︁(n.ﱞ︋︇︄, 0, 0.018);
            var Q = 1 + Math[ta](1, Math[ba](n.ﱞ︋︇︄, 0) / 100) * 0.18;
            gb[g]();
            gb[I](Q, Q);
            hj.ﱡ︈︋︁.x /= Q;
            hj.ﱡ︈︋︁.y /= Q;
            n.x /= Q;
            n.y /= Q;
            n.r.x /= Q;
            n.r.y /= Q;
            n.ﱠ︋︇︄();
            n.draw();
            hj.ﱡ︈︋︁.x *= Q;
            hj.ﱡ︈︋︁.y *= Q;
            n.x *= Q;
            n.y *= Q;
            n.r.x *= Q;
            n.r.y *= Q;
            gb[Qa]();
          } else {
            n.ﱢ︎︆︄ = 0;
            n.ﱠ︋︇︄();
            n.draw();
          }
        }
      } else if (n.ﱡ️︎︄ <= 180) {
        gb[g]();
        Q = 1 + Math[ta](1, Math[ba](n.ﱣ︀︇︄ - 30, 0) / 180) * 0.35;
        gb[I](Q, Q);
        hj.ﱡ︈︋︁.x /= Q;
        hj.ﱡ︈︋︁.y /= Q;
        n.x /= Q;
        n.y /= Q;
        n.r.x /= Q;
        n.r.y /= Q;
        n.ﱢ︎︆︄ = 0;
        n.ﱠ︋︇︄();
        n.draw();
        hj.ﱡ︈︋︁.x *= Q;
        hj.ﱡ︈︋︁.y *= Q;
        n.x *= Q;
        n.y *= Q;
        n.r.x *= Q;
        n.r.y *= Q;
        gb[Qa]();
      }
    }
  }
    O = gj.ﱠ︀️︄[41];
    k = 0;
    for (; k < O[Oa]; k++) {
      ji(O[k], 907);
    }
    var R = gj.ﱠ︀️︄[67];
    for (k = 0; k < R[Oa]; k++) {
      ji(R[k]);
    }
    var S = gj.ﱠ︀️︄[62];
    for (k = 0; k < S[Oa]; k++) {
      ji(S[k], 413, 455);
    }
    var T = gj.ﱠ︀️︄[70];
    for (k = 0; k < T[Oa]; k++) {
      ji(T[k]);
    }
    var U = gj.ﱠ︀️︄[60];
    for (k = 0; k < U[Oa]; k++) {
      ji(U[k], 293, 320);
    }
    var V = gj.ﱠ︀️︄[72];
    for (k = 0; k < V[Oa]; k++) {
      ji(V[k], 1063, 1071);
    }
    var W = gj.ﱠ︀️︄[73];
    for (k = 0; k < W[Oa]; k++) {
      ji(W[k], 1078, 1086);
    }
    B = gj.ﱠ︀️︄[44];
    k = 0;
    for (; k < B[Oa]; k++) {
      if ((B[k].info & 15) != 0 && B[k].info !== 10) {
        ji(B[k]);
      }
    }
    C = gj.ﱠ︀️︄[54];
    k = 0;
    for (; k < C[Oa]; k++) {
      if ((C[k].info & 15) != 0 && C[k].info !== 10) {
        ji(C[k]);
      }
    }
    D = gj.ﱠ︀️︄[89];
    k = 0;
    for (; k < D[Oa]; k++) {
      ji(D[k], 233);
    }
    D = gj.ﱠ︀️︄[55];
    k = 0;
    for (; k < D[Oa]; k++) {
      if ((D[k].info & 15) != 0 && D[k].info !== 10) {
        ji(D[k]);
      }
    }
    A = gj.ﱠ︀️︄[43];
    k = 0;
    for (; k < A[Oa]; k++) {
      ci(A[k]);
    }
    F = gj.ﱠ︀️︄[39];
    k = 0;
    for (; k < F[Oa]; k++) {
      if ((F[k].info & 15) != 0 && F[k].info !== 10) {
        ji(F[k]);
      }
    }
    G = gj.ﱠ︀️︄[40];
    k = 0;
    for (; k < G[Oa]; k++) {
      if ((G[k].info & 15) != 0 && G[k].info !== 10) {
        ji(G[k]);
      }
    }
    H = gj.ﱠ︀️︄[37];
    k = 0;
    for (; k < H[Oa]; k++) {
      if ((H[k].info & 15) != 0 && H[k].info !== 10) {
        ji(H[k]);
      }
    }
    var X = gj.ﱠ︀️︄[81];
    for (k = 0; k < X[Oa]; k++) {
      ji(X[k], 685, 691);
    }
    var Y = gj.ﱠ︀️︄[66];
    for (k = 0; k < Y[Oa]; k++) {
      ji(Y[k], 631, 681);
    }
    var Z = gj.ﱠ︀️︄[65];
    for (k = 0; k < Z[Oa]; k++) {
      ji(Z[k], 667, 682);
    }
    var _ = gj.ﱠ︀️︄[61];
    for (k = 0; k < _[Oa]; k++) {
      ji(_[k], 254, 327);
    }
    var aa = gj.ﱠ︀️︄[88];
    for (k = 0; k < aa[Oa]; k++) {
      ji(aa[k], 1027, 1028);
    }
    var ca = gj.ﱠ︀️︄[63];
    for (k = 0; k < ca[Oa]; k++) {
      ji(ca[k], 439, 456);
    }
    var da = gj.ﱠ︀️︄[77];
    for (k = 0; k < da[Oa]; k++) {
      ji(da[k]);
    }
    var ea = gj.ﱠ︀️︄[68];
    for (k = 0; k < ea[Oa]; k++) {
      ji(ea[k], 912, 913);
    }
    var fa = gj.ﱠ︀️︄[71];
    for (k = 0; k < fa[Oa]; k++) {
      ji(fa[k]);
    }
    var ha = gj.ﱠ︀️︄[78];
    for (k = 0; k < ha[Oa]; k++) {
      ji(ha[k], 1212, 1213);
    }
    var ia = gj.ﱠ︀️︄[64];
    for (k = 0; k < ia[Oa]; k++) {
      if (ia[k].scale === 1) {
        ji(ia[k], 443, 457);
      }
    }
    ia = gj.ﱠ︀️︄[69];
    k = 0;
    for (; k < ia[Oa]; k++) {
      if (ia[k].scale === 1) {
        ji(ia[k], 444, 458);
      }
    }
    var ja = gj.ﱠ︀️︄[11];
    for (k = 0; k < ja[Oa]; k++) {
      ji(ja[k]);
    }
    var ka = gj.ﱠ︀️︄[2];
    for (k = 0; k < ka[Oa]; k++) {
      ji(ka[k], 108);
    }
    q = gj.ﱠ︀️︄[18];
    k = 0;
    for (; k < q[Oa]; k++) {
      ji(q[k]);
    }
    var la = gj.ﱠ︀️︄[34];
    for (k = 0; k < la[Oa]; k++) {
      ji(la[k]);
    }
    M = gj.ﱠ︀️︄[10];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], 160);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    M = gj.ﱠ︀️︄[15];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], 165);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    M = gj.ﱠ︀️︄[16];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], 166);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    M = gj.ﱠ︀️︄[17];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], 167);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    M = gj.ﱠ︀️︄[21];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], 118);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    M = gj.ﱠ︀️︄[51];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], 212);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }

    // WOOD_DOOR_SPIKE
    M = gj.ﱠ︀️︄[45];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], Settings.ColoredSpikes.enable ? isAlly(M[k].ﱡ︊︅︄) ? 10012 : 10013 : 206);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    // STONE_DOOR_SPIKE
    M = gj.ﱠ︀️︄[46];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], Settings.ColoredSpikes.enable ? isAlly(M[k].ﱡ︊︅︄) ? 10014 : 10015 : 207);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    // GOLD_DOOR_SPIKE
    M = gj.ﱠ︀️︄[47];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], Settings.ColoredSpikes.enable ? isAlly(M[k].ﱡ︊︅︄) ? 10016 : 10017 : 208);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    // DIAMOND_DOOR_SPIKE
    M = gj.ﱠ︀️︄[48];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], Settings.ColoredSpikes.enable ? isAlly(M[k].ﱡ︊︅︄) ? 10018 : 10019 : 209);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    // AMETHYST_DOOR_SPIKE
    M = gj.ﱠ︀️︄[49];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], Settings.ColoredSpikes.enable ? isAlly(M[k].ﱡ︊︅︄) ? 10020 : 10021 : 210);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    // REIDITE_DOOR_SPIKE
    M = gj.ﱠ︀️︄[53];
    k = 0;
    for (; k < M[Oa]; k++) {
      if (M[k].ﱟ︊︇︄ == 0) {
        ji(M[k], Settings.ColoredSpikes.enable ? isAlly(M[k].ﱡ︊︅︄) ? 10022 : 10023 : 214);
      }
      M[k].ﱠ︊︇︄(M[k].info);
    }
    var ma = gj.ﱠ︀️︄[4];
    for (k = 0; k < ma[Oa]; k++) {
      ji(ma[k], 156);
      ma[k].ﱠ︊︇︄(ma[k].info);
    }
    ma = gj.ﱠ︀️︄[7];
    k = 0;
    for (; k < ma[Oa]; k++) {
      ji(ma[k], 157);
      ma[k].ﱠ︊︇︄(ma[k].info);
    }
    ma = gj.ﱠ︀️︄[8];
    k = 0;
    for (; k < ma[Oa]; k++) {
      ji(ma[k], 158);
      ma[k].ﱠ︊︇︄(ma[k].info);
    }
    ma = gj.ﱠ︀️︄[9];
    k = 0;
    for (; k < ma[Oa]; k++) {
      ji(ma[k], 159);
      ma[k].ﱠ︊︇︄(ma[k].info);
    }
    ma = gj.ﱠ︀️︄[19];
    k = 0;
    for (; k < ma[Oa]; k++) {
      ji(ma[k], 116);
      ma[k].ﱠ︊︇︄(ma[k].info);
    }
    ma = gj.ﱠ︀️︄[50];
    k = 0;
    for (; k < ma[Oa]; k++) {
      ji(ma[k], 211);
      ma[k].ﱠ︊︇︄(ma[k].info);
    }
    // Wood Spike
    var na = gj.ﱠ︀️︄[5];
    for (k = 0; k < na[Oa]; k++) {
      ji(na[k], Settings.ColoredSpikes.enable ? isAlly(na[k].ﱡ︊︅︄) ? 10000 : 10001 : 154);
      na[k].ﱠ︊︇︄(na[k].info);
    }
    // Stone Spike
    na = gj.ﱠ︀️︄[12];
    k = 0;
    for (; k < na[Oa]; k++) {
      ji(na[k], Settings.ColoredSpikes.enable ? isAlly(na[k].ﱡ︊︅︄) ? 10002 : 10003 : 162);
      na[k].ﱠ︊︇︄(na[k].info);
    }
    // Gold Spike
    na = gj.ﱠ︀️︄[13];
    k = 0;
    for (; k < na[Oa]; k++) {
      ji(na[k], Settings.ColoredSpikes.enable ? isAlly(na[k].ﱡ︊︅︄) ? 10004 : 10005 : 163);
      na[k].ﱠ︊︇︄(na[k].info);
    }
    // Diamond Spike
    na = gj.ﱠ︀️︄[14];
    k = 0;
    for (; k < na[Oa]; k++) {
      ji(na[k], Settings.ColoredSpikes.enable ? isAlly(na[k].ﱡ︊︅︄) ? 10006 : 10007 : 164);
      na[k].ﱠ︊︇︄(na[k].info);
    }
    // Amethyst Spike
    na = gj.ﱠ︀️︄[20];
    k = 0;
    for (; k < na[Oa]; k++) {
      ji(na[k], Settings.ColoredSpikes.enable ? isAlly(na[k].ﱡ︊︅︄) ? 10008 : 10009 : 117);
      na[k].ﱠ︊︇︄(na[k].info);
    }
    // Reidite Spike
    na = gj.ﱠ︀️︄[52];
    k = 0;
    for (; k < na[Oa]; k++) {
      ji(na[k], Settings.ColoredSpikes.enable ? isAlly(na[k].ﱡ︊︅︄) ? 10010 : 10011 : 213);
      na[k].ﱠ︊︇︄(na[k].info);
    }
    var oa = gj.ﱠ︀️︄[35];
    for (k = 0; k < oa[Oa]; k++) {
      var pa = oa[k];
      if (pa.info > 0) {
        ji(pa, 782);
      } else {
        ji(pa, 176);
      }
    }
   if(!Settings.boxonTOP) {
    var qa = gj.ﱠ︀️︄[29];
    for (k = 0; k < qa[Oa]; k++) {
      ji(qa[k], 153);
    }
   }
    ki(Wh, e, f, c, d, 105, "g", 2);
    ki(Wh, e, f, c, d, 409, "gw", 2);
    ki(Wh, e, f, c, d, 106, "d", 2);
    ki(Wh, e, f, c, d, 410, "dw", 2);
    ki(Wh, e, f, c, d, 104, "p", 0);
    ki(Wh, e, f, c, d, 235, "m", 2);
    ki(Wh, e, f, c, d, 115, "a", 2);
    ki(Wh, e, f, c, d, 196, "re", 2);
    ki(Wh, e, f, c, d, 673, "cs", 3, 3);
    ki(Wh, e, f, c, d, 673, "cs", 2, 2);
    ki(Wh, e, f, c, d, 673, "cs", 1, 1);
    ki(Wh, e, f, c, d, 673, "cs", 0, 0);
    ki(Wh, e, f, c, d, 670, "cs", 3, 3);
    ki(Wh, e, f, c, d, 670, "cs", 2, 2);
    ki(Wh, e, f, c, d, 670, "cs", 1, 1);
    ki(Wh, e, f, c, d, 670, "cs", 0, 0);
    var ra = gj.ﱠ︀️︄[100];
    for (k = 0; k < ra[Oa]; k++) {
      for (o = 0; o < ra[k].info; o++) {
        ji(ra[k].ﱡ︈︅︄[o], 288);
      }
    }
    ki(Wh, e, f, c, d, 102, "s", 2);
    var sa = gj.ﱠ︀️︄[24];
    for (k = 0; k < sa[Oa]; k++) {
      ji(sa[k]);
    }
    sa = gj.ﱠ︀️︄[25];
    k = 0;
    for (; k < sa[Oa]; k++) {
      ji(sa[k]);
    }
    sa = gj.ﱠ︀️︄[26];
    k = 0;
    for (; k < sa[Oa]; k++) {
      ji(sa[k]);
    }
    sa = gj.ﱠ︀️︄[27];
    k = 0;
    for (; k < sa[Oa]; k++) {
      ji(sa[k]);
    }
    sa = gj.ﱠ︀️︄[28];
    k = 0;
    for (; k < sa[Oa]; k++) {
      ji(sa[k]);
    }
    var ua = gj.ﱠ︀️︄[32];
    for (k = 0; k < ua[Oa]; k++) {
      bi(ua[k]);
    }
    r = gj.ﱠ︀️︄[1];
    k = 0;
    for (; k < r[Oa]; k++) {
      ci(r[k]);
    }
    r = gj.ﱠ︀️︄[6];
    k = 0;
    for (; k < r[Oa]; k++) {
      ci(r[k]);
    }
    q = gj.ﱠ︀️︄[18];
    k = 0;
    for (; k < q[Oa]; k++) {
      if (q[k].info) {
        ci(q[k]);
      }
    }
    la = gj.ﱠ︀️︄[34];
    k = 0;
    for (; k < la[Oa]; k++) {
      ci(la[k]);
    }
    s = gj.ﱠ︀️︄[22];
    k = 0;
    for (; k < s[Oa]; k++) {
      ci(s[k]);
    }
    t = gj.ﱠ︀️︄[23];
    k = 0;
    for (; k < t[Oa]; k++) {
      ci(t[k]);
      t[k].ﱠ︊︇︄(t[k].info);
    }
    ki(Wh, e, f, c, d, 983, "c", 0);
    ki(Wh, e, f, c, d, 103, "t", 5, 4);
    ki(Wh, e, f, c, d, 407, "f", 2, 2);
    ki(Wh, e, f, c, d, 687, "plm", 0, 0);
    ki(Wh, e, f, c, d, 301, "b", 3, 2);
    ki(Wh, e, f, c, d, 103, "t", 3, 2);
    ki(Wh, e, f, c, d, 301, "b", 1, 0);
    ki(Wh, e, f, c, d, 407, "f", 1, 1);
    ki(Wh, e, f, c, d, 687, "plm", 1, 1);
    ki(Wh, e, f, c, d, 103, "t", 1, 0);
    ki(Wh, e, f, c, d, 407, "f", 0, 0);
    ki(Wh, e, f, c, d, 687, "plm", 2, 2);
    ua = gj.ﱠ︀️︄[32];
    k = 0;
    for (; k < ua[Oa]; k++) {
      ci(ua[k]);
    }
    var va = gj.ﱠ︀️︄[56];
    for (k = 0; k < va[Oa]; k++) {
      ji(va[k], 215);
    }
    m = gj.ﱠ︀️︄[0];
    k = 0;
    for (; k < m[Oa]; k++) {
      if ((n = m[k]).ﱢ︊︇︄ === 1 && (n.ﱡ️︎︄ < 180 || n.ﱠ︀︇︄ !== 221 && n.ﱠ︀︇︄ !== 222 && n.ﱠ︀︇︄ !== 91 && n.ﱠ︀︇︄ !== 223 && n.ﱠ︀︇︄ !== 224)) {
        n.ﱞ︋︇︄ = Utils.ﱟ︆︋︁(n.ﱞ︋︇︄, 100, 0.018);
        Q = 1 + Math[ta](1, Math[ba](n.ﱞ︋︇︄, 0) / 100) * 0.18;
        gb[g]();
        gb[I](Q, Q);
        hj.ﱡ︈︋︁.x /= Q;
        hj.ﱡ︈︋︁.y /= Q;
        n.x /= Q;
        n.y /= Q;
        n.r.x /= Q;
        n.r.y /= Q;
        n.ﱠ︋︇︄();
        n.draw();
        hj.ﱡ︈︋︁.x *= Q;
        hj.ﱡ︈︋︁.y *= Q;
        n.x *= Q;
        n.y *= Q;
        n.r.x *= Q;
        n.r.y *= Q;
        gb[Qa]();
      }
    }
    var wa = gj.ﱠ︀️︄[38];
    for (k = 0; k < wa[Oa]; k++) {
      ji(wa[k], 184);
      wa[k].ﱠ︊︇︄(wa[k].info);
    }
    var xa = gj.ﱠ︀️︄[90];
    for (k = 0; k < xa[Oa]; k++) {
      ji(xa[k], 239, 240);
    }
    var ya = gj.ﱠ︀️︄[42];
    for (k = 0; k < ya[Oa]; k++) {
      ji(ya[k], 195);
    }
    m = gj.ﱠ︀️︄[0];
    k = 0;
    for (; k < m[Oa]; k++) {
      if (((n = m[k]).ﱠ︀︇︄ === 221 || n.ﱠ︀︇︄ === 222 || n.ﱠ︀︇︄ === 91 || n.ﱠ︀︇︄ === 223 || n.ﱠ︀︇︄ === 224) && n.ﱡ️︎︄ > 180) {
        n.ﱢ︎︆︄ = 1;
        gb[g]();
        Q = 1 + Math[ta](1, Math[ba](n.ﱣ︀︇︄ - 30, 0) / 180) * 0.35;
        gb[I](Q, Q);
        hj.ﱡ︈︋︁.x /= Q;
        hj.ﱡ︈︋︁.y /= Q;
        n.x /= Q;
        n.y /= Q;
        n.r.x /= Q;
        n.r.y /= Q;
        n.ﱠ︋︇︄();
        n.draw();
        hj.ﱡ︈︋︁.x *= Q;
        hj.ﱡ︈︋︁.y *= Q;
        n.x *= Q;
        n.y *= Q;
        n.r.x *= Q;
        n.r.y *= Q;
        gb[Qa]();
      }
    }
    P = gj.ﱠ︀️︄[91];
    k = 0;
    for (; k < P[Oa]; k++) {
      if (P[k].ﱢ︎︆︄ === 1) {
        ji(P[k]);
      }
    }
    ia = gj.ﱠ︀️︄[64];
    k = 0;
    for (; k < ia[Oa]; k++) {
      if (ia[k].scale > 1) {
        ji(ia[k], 443, 457);
      }
    }
    ia = gj.ﱠ︀️︄[69];
    k = 0;
    for (; k < ia[Oa]; k++) {
      if (ia[k].scale > 1) {
        ji(ia[k], 444, 458);
      }
    }
    var za = gj.ﱠ︀️︄[74];
    for (k = 0; k < za[Oa]; k++) {
      ji(za[k], 1093, 1101);
    }
    var Aa = gj.ﱠ︀️︄[75];
    for (k = 0; k < Aa[Oa]; k++) {
      ji(Aa[k], 1114, 1122);
    }
    if ((Rh += nj * 15) > 60) {
      Rh -= 60;
    }
    ki(Sh, e, f, c, d, 1035, "fo", 2);
    ki(Sh, e, f, c, d, 238, "fod", 2);
    //penis
    if(Settings.boxonTOP.enable) {
      var J = gj.ﱠ︀️︄[86];
      for (k = 0; k < J[Oa]; k++) {
        ji(J[k], 244, 723);
      }
      var K = gj.ﱠ︀️︄[82];
      for (k = 0; k < K[Oa]; k++) {
        ji(K[k], 244, 723);
      }
      var qa = gj.ﱠ︀️︄[29];
      for (k = 0; k < qa[Oa]; k++) {
        ji(qa[k], 153);
      }
    } 
    if(Settings.playeronTOP.enable) {
      m = gj.ﱠ︀️︄[0];
      k = 0;
      for (; k < m[Oa]; k++) {
        n = m[k];
        if (m[k].ﱠ︀︇︄ !== 221 && m[k].ﱠ︀︇︄ !== 222 && m[k].ﱠ︀︇︄ !== 223 && m[k].ﱠ︀︇︄ !== 224 && m[k].ﱠ︀︇︄ !== 91) {
          if (n.ﱢ︊︇︄ === 0) {
            if (n.ﱞ︋︇︄ > 0.001) {
              n.ﱞ︋︇︄ = Utils.ﱟ︆︋︁(n.ﱞ︋︇︄, 0, 0.018);
              var Q = 1 + Math[ta](1, Math[ba](n.ﱞ︋︇︄, 0) / 100) * 0.18;
              gb[g]();
              gb[I](Q, Q);
              hj.ﱡ︈︋︁.x /= Q;
              hj.ﱡ︈︋︁.y /= Q;
              n.x /= Q;
              n.y /= Q;
              n.r.x /= Q;
              n.r.y /= Q;
              n.ﱠ︋︇︄();
              n.draw();
              hj.ﱡ︈︋︁.x *= Q;
              hj.ﱡ︈︋︁.y *= Q;
              n.x *= Q;
              n.y *= Q;
              n.r.x *= Q;
              n.r.y *= Q;
              gb[Qa]();
            } else {
              n.ﱢ︎︆︄ = 0;
              n.ﱠ︋︇︄();
              n.draw();
            }
          }
        } else if (n.ﱡ️︎︄ <= 180) {
          gb[g]();
          Q = 1 + Math[ta](1, Math[ba](n.ﱣ︀︇︄ - 30, 0) / 180) * 0.35;
          gb[I](Q, Q);
          hj.ﱡ︈︋︁.x /= Q;
          hj.ﱡ︈︋︁.y /= Q;
          n.x /= Q;
          n.y /= Q;
          n.r.x /= Q;
          n.r.y /= Q;
          n.ﱢ︎︆︄ = 0;
          n.ﱠ︋︇︄();
          n.draw();
          hj.ﱡ︈︋︁.x *= Q;
          hj.ﱡ︈︋︁.y *= Q;
          n.x *= Q;
          n.y *= Q;
          n.r.x *= Q;
          n.r.y *= Q;
          gb[Qa]();
        }
      }
    }
      
         
  })();
  if (dj.ﱢ︌︆︄ && gj.mode !== Ki.ﱟ︇︆︄ && gj.mode !== Ki.ﱟ︈︆︄ && gj.mode !== Ki.ﱡ︈︆︄) {
    (function () {
      var c = hj.ﱟ︋︇︄;
      if (c.ﱡ︋︇︄ === 0) {
        c.ﱣ︋︇︄ = Math[ba](0, c.ﱣ︋︇︄ - nj / 10);
      } else {
        c.ﱣ︋︇︄ = Math[ta](1, c.ﱣ︋︇︄ + nj / 10);
      }
      for (var d = c.ﱢ︋︇︄, e = 0; e < d[Oa]; e++) {
        var f = d[e];
        c.update(f);
        ii(465, f.id, hj.ﱡ︈︋︁.x + f.x, hj.ﱡ︈︋︁.y + f.y, f.alpha);
      }
      for (e = 0; e < d[Oa]; e++) {
        if ((f = d[e]).ﱣ︊︆︄ <= 0 || f.x > -hj.ﱡ︈︋︁.x + hb || f.x < -hj.ﱡ︈︋︁.x - hj.ﱡ︈︋︁.w / 2 || f.y > -hj.ﱡ︈︋︁.y + ib) {
          d[u](e, 1);
        }
      }
      var g = -hj.ﱡ︈︋︁.y;
      if (gj.ﱣ︁︇︄ > -1000) {
        c.add(g);
      }
    })();
    (function () {
      var c = hj.ﱞ︌︇︄;
      if (c.ﱡ︋︇︄ === 0) {
        c.ﱣ︋︇︄ = Math[ba](0, c.ﱣ︋︇︄ - nj / 10);
      } else {
        c.ﱣ︋︇︄ = Math[ta](1, c.ﱣ︋︇︄ + nj / 10);
      }
      for (var d = c.ﱢ︋︇︄, e = 0; e < d[Oa]; e++) {
        var f = d[e];
        c.update(f);
        ii(464, f.id, hj.ﱡ︈︋︁.x + f.x, hj.ﱡ︈︋︁.y + f.y, f.alpha);
      }
      for (e = 0; e < d[Oa]; e++) {
        if ((f = d[e]).ﱣ︊︆︄ <= 0 || f.x > -hj.ﱡ︈︋︁.x + hb || f.x < -hj.ﱡ︈︋︁.x || f.y > -hj.ﱡ︈︋︁.y + ib) {
          d[u](e, 1);
        }
      }
      var g = -hj.ﱡ︈︋︁.y;
      if (gj.ﱟ︁︇︄ > -1000) {
        c.add(g);
      }
    })();
    (function () {
      for (var c = hj.ﱠ︌︇︄, d = c.ﱢ︋︇︄, e = 0; e < d[Oa]; e++) {
        var f = d[e];
        c.update(f);
        ii(936, f.id, hj.ﱡ︈︋︁.x + f.x, hj.ﱡ︈︋︁.y + f.y, f.alpha);
      }
      for (e = 0; e < d[Oa]; e++) {
        if ((f = d[e]).ﱣ︊︆︄ <= 0 || f.x > -hj.ﱡ︈︋︁.x + hb || f.x < -hj.ﱡ︈︋︁.x || f.y > -hj.ﱡ︈︋︁.y + ib) {
          d[u](e, 1);
        }
      }
      var g = -hj.ﱡ︈︋︁.y;
      if (gj.ﱟ︌︇︄ > -1000) {
        c.add(g);
      }
    })();
  }
  if (gj.transition && c) {
    gj.transition = false;
    gj.ﱡ︅︇︄.ﱡ︃︋︁ = 0;
    gj.ﱡ︅︇︄.ﱟ︃︋︁ = false;
  }
}
var vi = 0;
var wi = 1;
var xi = 2;
var yi = 0;
var zi = 1;
var Ai = 2;
function Bi(c, d) {
  var e = c.getBoundingClientRect();
  return {
    x: d.clientX - e.left,
    y: d.clientY - e.top
  };
}
function Ci(c, e, f, g, i, k, n, o, q, r, s, t, u, v, z) {
  if (c[Oa] === 0) {
    c = " ";
  }
  if (n === undefined) {
    n = 0;
  }
  if (o === undefined) {
    o = 0;
  }
  if (q === undefined) {
    q = 0;
  }
  if (v === undefined) {
    v = 0;
  }
  var B = document[p]("canvas");
  var C = B[T]("2d");
  C[oa] = "middle";
  C[U] = (z !== undefined ? z + " " : "") + g + "px " + e;
  i = i !== undefined ? Math[ta](C[ka](c).width, i) : C[ka](c).width;
  B.width = i + n;
  B.height = g + o;
  if (k !== undefined) {
    if (s !== undefined) {
      C[ua] = s;
    }
    C[d] = k;
    if (t !== undefined) {
      roundRect(C, q + 2, q, i + n - q * 2 - 4, g + o - q * 2, t);
      C[xa]();
    } else {
      C[pa](q, q, i + n - q * 2, g + o - q * 2);
    }
    C[ua] = 1;
    if (q !== 0) {
      C[m] = q;
      C[S] = r;
      C[M]();
    }
  }
  C[oa] = "middle";
  C[U] = (z !== undefined ? z + " " : "") + g + "px " + e;
  if (u !== undefined) {
    C[S] = u;
    C[m] = v;
    C[ea] = "miter";
    C[qa] = 2;
    C[la](c, Math[A](n / 2), Math[A](o / 2) + Math[A](g / 2), i);
  }
  C[d] = f;
  C[sa](c, Math[A](n / 2), Math[A](o / 2) + Math[A](g / 2), i);
  B.ﱢ︅︇︄ = B.width / 2;
  B.ﱡ︌︇︄ = B.height / 2;
  return B;
}
function Di(c, d, e, f, g, i, k, m, n, o, p) {
  if (n === undefined) {
    n = 0;
  }
  if (m === undefined) {
    m = 0;
  }
  if (o === undefined) {
    o = 0;
  }
  if (p === undefined) {
    p = 1;
  }
  if (i !== 1) {
    i = 0;
  }
  if (f) {
    var q = f;
  }
  var r;
  var s = {
    width: c,
    height: d,
    ﱡ︃︉︂: q,
    state: yi,
    translate: {
      x: m,
      y: n,
      ﱣ︌︇︄: m,
      ﱢ︌︇︄: n
    },
    ﱞ︍︇︄: i,
    ﱣ︍︆︄: 0,
    ﱠ︍︇︄: k,
    position: o,
    active: p
  };
  var t = function () {
    return s.ﱡ︃︉︂[s.state];
  };
  var u = function (c) {
    var d = s.translate;
    if (!(s.width !== 0 && s.height !== 0)) {
      s.width = s.ﱡ︃︉︂[0].width;
      s.height = s.ﱡ︃︉︂[0].height;
    }
    return c.x > d.x && c.x < d.x + s.width / g && c.y > d.y && c.y < d.y + s.height / g;
  };
  i = function () {
    var c = 0;
    if (s.ﱞ︍︇︄ === 1) {
      if (s.state === zi || s.state === Ai) {
        s.ﱣ︍︆︄ = (s.ﱣ︍︆︄ + nj * 1000) % 1000;
      } else if (s.ﱣ︍︆︄ > 0) {
        s.ﱣ︍︆︄ = s.ﱣ︍︆︄ > 500 ? s.ﱣ︍︆︄ + nj * 1000 : s.ﱣ︍︆︄ - nj * 1000;
        if (s.ﱣ︍︆︄ < 0 || s.ﱣ︍︆︄ > 1000) {
          s.ﱣ︍︆︄ = 0;
        }
      }
      c = Utils.ﱟ︂︋︁(s.ﱣ︍︆︄ > 500 ? (1000 - s.ﱣ︍︆︄) / 500 : s.ﱣ︍︆︄ / 500) * 0.2;
    }
    return c;
  };
  if ((g = g === 3 ? 3 : g === 1 ? 2 : 1) === 2) {
    r = function (c) {
      var d = 1 + i();
      var e = t();
      var f = s.width * d / 2;
      var g = s.height * d / 2;
      var k = (f - s.width / 2) / 2;
      var m = (g - s.height / 2) / 2;
      Yf(c, e, s.translate.x - k, s.translate.y - m, f, g);
    };
  } else if (g === 3) {
    r = function (c) {
      var d = t();
      var e = s.width;
      var f = s.height;
      var g = (e - s.width) / 2;
      var i = (f - s.height) / 2;
      Yf(c, d, s.translate.x - g, s.translate.y - i, e, f);
    };
    g = 1;
  } else {
    r = function (c) {
      Yf(c, t(), s.translate.x, s.translate.y);
    };
  }
  return {
    info: s,
    ﱟ︍︇︄: function (c, d, e) {
      if (u(d)) {
        if (e == wi) {
          s.state = Ai;
        } else if (e == xi || e == vi && s.state != Ai) {
          s.state = zi;
        }
        return true;
      } else {
        s.state = yi;
        return false;
      }
    },
    draw: r,
    ﱡ︍︇︄: u
  };
}
function Ei(c, d, e, f, g) {
  var i = {
    x: e,
    y: f,
    ﱣ︌︇︄: e,
    ﱢ︌︇︄: f
  };
  return {
    translate: i,
    draw: function (d) {
      Yf(d, c, i.x, i.y, c.width / 2, c.height / 2);
    },
    active: d,
    position: g
  };
}
var Fi = "send";
var Gi = Utils.ﱞ️︊︁("id") === "1" ? 1 : 0;
var Hi = Utils.ﱞ️︊︁("password");
var Ii = [{
  ﱣ︍︇︄: 1000,
  items: [[2, 107], [1, 111], [8, 104], [1, 137]]
}, {
  ﱣ︍︇︄: 2000,
  items: [[2, 112], [1, 8], [2, 111], [16, 104], [2, 137]]
}, {
  ﱣ︍︇︄: 4000,
  items: [[3, 112], [1, 1], [4, 111], [20, 104], [4, 137], [1, 108], [80, 102], [140, 103]]
}, {
  ﱣ︍︇︄: 8000,
  items: [[1, 29], [4, 112], [1, 3], [6, 111], [30, 104], [6, 137], [1, 108], [150, 102], [200, 103], [60, 105], [2, 121]]
}, {
  ﱣ︍︇︄: 16000,
  items: [[1, 29], [1, 4], [1, 192], [7, 130], [2, 121], [2, 112], [1, 113], [15, 157], [2, 165], [1, 153], [1, 55], [200, 102], [300, 103]]
}, {
  ﱣ︍︇︄: 16000,
  items: [[1, 29], [1, 11], [1, 50], [1, 3], [10, 130], [4, 121], [6, 112], [3, 189], [1, 28], [200, 102], [300, 103]]
}, {
  ﱣ︍︇︄: 16000,
  items: [[1, 29], [1, 83], [1, 36], [3, 189], [1, 0], [1, 3], [7, 130], [2, 121], [4, 112], [150, 102], [200, 103], [1, 152]]
}, {
  ﱣ︍︇︄: 16000,
  items: [[1, 29], [1, 84], [1, 3], [7, 130], [2, 121], [4, 112], [2, 129], [4, 138], [10, 135], [6, 126], [4, 109], [1, 49], [500, 103]]
}, {
  ﱣ︍︇︄: 16000,
  items: [[1, 29], [1, 3], [16, 132], [1, 121], [6, 112], [3, 189], [1, 48], [1, 0], [16, 119], [150, 102], [200, 103]]
}, {
  ﱣ︍︇︄: 20000,
  items: [[1, 29], [1, 3], [1, 130], [1, 121], [3, 112], [3, 189], [1, 26], [1, 5], [1, 15], [2, 163], [50, 102], [100, 103]]
}];
var Ji = {
  ﱢ︍︇︄: 4,
  ﱞ︎︇︄: 2000,
  ﱠ︎︇︄: 3,
  ﱟ︎︇︄: "[13]",
  ﱡ︎︇︄: 60000,
  ﱣ︎︇︄: 0.2,
  ﱢ︎︇︄: 0.2,
  ﱞ️︇︄: 0.58,
  ﱠ️︇︄: 50,
  ﱟ️︇︄: 125000,
  ﱡ️︇︄: 600000,
  ﱣ️︇︄: 8000,
  ﱢ️︇︄: 5,
  ﱞ︀︈︄: 200,
  ﱠ︀︈︄: 15,
  ﱟ︀︈︄: 14,
  ﱡ︀︈︄: 0,
  ﱣ︀︈︄: 1,
  ﱢ︀︈︄: 2,
  ﱞ︁︈︄: 3,
  ﱠ︁︈︄: 4,
  ﱟ︁︈︄: 20,
  ﱡ︁︈︄: 14,
  ﱣ︁︈︄: 4
};
var Ki = {
  ﱢ︋︋︁: 480000,
  ﱢ︁︈︄: 10,
  ﱟ︈︅︄: 16,
  ﱞ︂︈︄: 6,
  ﱠ︄︇︄: 60,
  ﱡ︉︇︄: 1,
  ﱟ︉︇︄: 2,
  ﱠ︉︇︄: 4,
  ﱢ︈︇︄: 8,
  ﱣ︎︇︄: 10,
  ﱡ︀︆︄: 100,
  ﱟ︎︅︄: 100,
  ﱡ︍︅︄: 100,
  ﱠ︂︈︄: 100,
  ﱢ︊︅︄: 100,
  ﱟ︊︅︄: 100,
  ﱡ️︅︄: 100,
  ﱟ︊︅︄: 100,
  ﱢ︎︅︄: 100,
  ﱞ︌︅︄: 100,
  ﱠ︈︆︄: 0,
  ﱠ︇︆︄: 1,
  ﱟ︇︆︄: 2,
  ﱣ︇︆︄: 3,
  ﱟ︈︆︄: 4,
  ﱡ︈︆︄: 5,
  ﱢ︈︆︄: 6,
  ﱣ︈︆︄: 7,
  ﱡ︄︆︄: 0,
  ﱣ︄︆︄: 0,
  ﱟ︀︅︂: 30,
  ﱟ︂︈︄: 2,
  ﱠ︄︇︄: 60000,
  ﱡ︂︈︄: 0,
  ﱣ︂︈︄: 0,
  ﱢ︂︈︄: 50,
  ﱞ︃︈︄: 0,
  ﱠ︃︈︄: 40,
  ﱟ︃︈︄: 39,
  ﱡ︃︈︄: 830,
  ﱣ︃︈︄: 25,
  ﱢ︃︈︄: 8,
  ﱟ︆︇︄: 0,
  ﱠ︆︇︄: 0,
  ﱞ︄︈︄: 200,
  ﱠ︄︈︄: 0,
  ﱡ︆︇︄: 250,
  ﱟ︄︈︄: 150,
  ﱡ︄︈︄: 0,
  ﱣ︆︇︄: 350,
  ﱣ︄︈︄: 100,
  ﱢ︆︇︄: 700,
  ﱡ︇︎︁: 39879
};
var Li = [];
for (dc = 0; dc < 500; dc++) {
  Li[dc] = 0;
}
Li[47] = 1;
Li[57] = 1;
Li[0] = 1;
Li[5] = 1;
Li[6] = 1;
Li[30] = 1;
Li[19] = 1;
Li[9] = 1;
Li[62] = 1;
Li[63] = 1;
Li[13] = 1;
Li[14] = 1;
Li[15] = 1;
Li[33] = 1;
Li[34] = 1;
Li[16] = 1;
Li[17] = 1;
Li[12] = 1;
Li[18] = 1;
var Mi = [{
  time: 2880000
}, {
  time: 1440000
}, {
  time: 1920000
}, {
  time: 1440000
}, {
  time: 2880000
}, {
  time: 2400000
}, {
  time: 2400000
}, {
  time: 4800000
}, {
  time: 2880000
}, {
  time: 3360000
}, {
  time: 2880000
}, {
  time: 3840000
}, {
  time: 3360000
}];
var Ni = [[24, 102], [25, 105], [26, 106], [27, 115], [28, 196]];
function Oi() {
  this.nickname = "";
  this.ﱡ︇︆︄ = 0;
  this.ﱟ︃︇︄ = 0;
  this.ﱢ︂︇︄ = 0;
  this.ﱞ︃︇︄ = 0;
  this.ﱣ︂︇︄ = 0;
  this.ﱢ︄︈︄ = 0;
  this.ﱞ︅︈︄ = 0;
  this.level = 0;
  this.ﱟ︌︎︄ = null;
  this.ﱢ︃︇︄ = null;
  this.ﱢ︇︆︄ = null;
  this.ﱠ︅︈︄ = false;
  this.ﱞ︈︆︄ = 0;
}
function Pi(c, d, e, f, g, i, k, m, n, p) {
  this.type = c;
  this.ﱡ︊︅︄ = d;
  this.id = e;
  this.x = f;
  this.y = g;
  this.angle = i;
  this.ﱟ︅︈︄ = i;
  this.action = k;
  this.info = m;
  this.ﱟ︊︇︄ = p;
  this.r = {
    x: f,
    y: g
  };
  this.ﱡ️︎︄ = n;
  if (gj) {
    this.ﱠ︊︅︄ = d * gj.ﱡ︅︈︄ + e;
  }
  switch (c) {
    case 0:
      this.ﱞ︄︇︄ = gj.players[this.ﱡ︊︅︄];
      this.ﱡ︇︆︄ = this.ﱞ︄︇︄.ﱡ︇︆︄;
      this.ﱞ︃︇︄ = this.ﱞ︄︇︄.ﱞ︃︇︄;
      this.ﱣ︂︇︄ = this.ﱞ︄︇︄.ﱣ︂︇︄;
      this.ﱟ︃︇︄ = this.ﱞ︄︇︄.ﱟ︃︇︄;
      this.ﱣ︅︈︄ = -1000000;
      this.ﱟ︌︇︄ = -1000000;
      this.ﱟ︁︇︄ = -1000000;
      this.ﱣ︁︇︄ = -1000000;
      this.ﱢ︅︈︄ = -1000000;
      this.ﱡ︁︇︄ = -1000000;
      this.ﱞ︆︈︄ = -1000000;
      this.ﱟ️︅︄ = gj.mode === Ki.ﱟ︇︆︄ && this.ﱡ︇︆︄ === Ki.ﱡ︄︆︄;
      this.ﱠ︆︈︄ = gj.mode === Ki.ﱣ︇︆︄ && this.ﱡ︇︆︄ === Ki.ﱣ︄︆︄;
      this.ﱟ︂︇︄ = !(!this.ﱟ️︅︄ || this.ﱞ︄︇︄.nickname !== "  ");
      this.ﱣ︉︇︄ = [];
      this.ﱢ︊︇︄ = 0;
      this.ﱟ︆︈︄ = true;
      this.ﱡ︆︈︄ = 0;
      this.ﱢ︎︆︄ = 0;
      this.ﱞ︊︇︄ = [];
      this.r = {
        x: f,
        y: g
      };
      this.draw = Mh;
      this.ﱠ︋︇︄ = Kh;
      this.ﱡ︀︇︄ = 0;
      this.ﱟ︀︇︄ = 0;
      this.ﱞ︁︇︄ = 0;
      this.ﱢ︀︇︄ = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱣ︀︇︄ = 0;
      this.ﱞ︋︇︄ = 0;
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      this.ﱟ︎︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      this.ﱟ️︎︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      this.ﱣ︃︇︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      this.ﱞ︂︇︄ = new Utils.ﱠ︃︋︁(true, 0, 2.25, -1.5, 3.75, 7.5);
      this.ﱠ︂︇︄ = new Utils.ﱠ︃︋︁(true, 0, 7.5, -3, 22.5, 33.75);
      this.attack = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 3, 6, 9);
      this.ﱣ︆︈︄ = 0;
      this.ﱡ︃︇︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 1, 3);
      this.ﱠ︃︇︄ = this.ﱟ︂︇︄ ? new Utils.ﱠ︃︋︁(true, 0, 2.25, -1.5, 2.75, 5.5) : 0;
      this.ﱢ︁︇︄ = 0;
      this.ﱢ︄︇︄ = 0;
      this.ﱡ︄︇︄ = [];
      this.ﱣ︄︇︄ = [];
      this.text = [];
      this.ﱟ︌︎︄ = [];
      this.ﱢ︆︈︄ = Qh;
      this.hand = true;
      this.ﱢ️︎︄ = -1;
      this.ﱠ︀︇︄ = -1;
      this.action = 64;
      this.ﱞ︇︈︄ = false;
      this.ﱟ︊︆︄ = 0;
      this.ﱞ︀︇︄ = false;
      this.bubbles = [];
      this.ﱢ︂︇︄ = 0;
      this.ﱠ︇︈︄ = -1;
      this.update = function (c) {
        if (this.info & 32768) {
          this.ﱞ︇︈︄ = true;
          this.info = this.info & -32769;
        } else {
          this.ﱞ︇︈︄ = false;
        }
        if (this.info & 16384) {
          this.info = this.info & -16385;
          this.ﱢ︂︇︄ = 1;
        } else {
          this.ﱢ︂︇︄ = 0;
        }
        this.ﱟ︊︆︄ = Math[A](this.info / 128);
        this.info -= this.ﱟ︊︆︄ * 128;
        if (this.info === 7 || this.ﱟ︂︇︄) {
          this.ﱢ️︎︄ = -1;
        } else {
          this.ﱢ️︎︄ = this.info;
        }
        this.ﱢ︊︇︄ = gj.ﱟ︇︈︄(Math[A](this.r.y / 100), Math[A](this.r.x / 100));
        this.ﱠ︀︇︄ = this.ﱟ︊︇︄ & 255;
        if (this.ﱢ️︎︄ === Ki.ﱟ︂︈︄) {
          this.ﱞ︀︇︄ = true;
        } else {
          this.ﱞ︀︇︄ = false;
        }
        if (Li[this.ﱢ️︎︄]) {
          this.ﱣ︉︆︄ = true;
        } else {
          this.ﱣ︉︆︄ = false;
        }
        if (c & 256) {
          this.ﱡ︃︇︄.ﱟ︃︋︁ = false;
          this.ﱡ︃︇︄.ﱡ︃︋︁ = 0.6;
        } else if (c & 4) {
          this.ﱟ️︎︄.ﱟ︃︋︁ = false;
          this.ﱟ️︎︄.ﱡ︃︋︁ = 0.6;
        } else if (c & 128) {
          this.ﱟ︎︆︄.ﱟ︃︋︁ = false;
          this.ﱟ︎︆︄.ﱡ︃︋︁ = 0.6;
        }
        if (c & 8) {
          this.ﱣ︃︇︄.ﱟ︃︋︁ = false;
          this.ﱣ︃︇︄.ﱡ︃︋︁ = 0.6;
        }
        if (c & 2) {
          this.ﱢ︋︆︄.ﱟ︃︋︁ = false;
          this.ﱢ︋︆︄.ﱡ︃︋︁ = 0.6;
        }
        if (c & 16) {
          this.ﱣ︆︈︄ = 0.58;
          if (kj.ﱡ︇︈︄ && this.ﱠ︇︈︄ !== -1) {
            kj.players[this.ﱠ︇︈︄].ﱣ︇︈︄($i[this.ﱢ️︎︄]);
          }
        }
      };
      this.update();
      break;
    case 23:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱣ︈︅︄ = Dh;
      this.ﱢ︈︅︄ = Bh;
      this.ﱟ︌︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.23, 1.18, 0.01, 0.01);
      this.ﱣ️︆︄ = 0;
      this.ﱢ️︆︄ = 0;
      this.ﱠ︊︇︄ = Fg;
      break;
    case 22:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱣ︈︅︄ = Eh;
      this.ﱢ︈︅︄ = Ch;
      this.ﱟ︌︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.23, 1.18, 0.01, 0.01);
      this.ﱣ️︆︄ = 0;
      this.ﱢ️︆︄ = 0;
      break;
    case 1:
    case 6:
      this.ﱣ︈︅︄ = rh;
      this.ﱢ︈︅︄ = Gh;
      this.fire = new Utils.ﱠ︃︋︁(false, 1, 1.03, 0.98, 0.3, 0.3);
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.23, 1.18, 0.01, 0.01);
      this.ﱟ︌︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.23, 1.18, 0.01, 0.01);
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 43:
      this.ﱣ︈︅︄ = mh;
      this.ﱢ︈︅︄ = nh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱡ︈︅︄ = [];
      for (var q = 0; q < 3; q++) {
        this.ﱡ︈︅︄[Na]({
          draw: bh,
          ﱣ︍︆︄: new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2)
        });
      }
      this.ﱡ︈︅︄[0].x = this.x - 16.5;
      this.ﱡ︈︅︄[0].y = this.y - 15.5;
      this.ﱡ︈︅︄[0].angle = this.angle;
      this.ﱡ︈︅︄[1].x = this.x + 36;
      this.ﱡ︈︅︄[1].y = this.y + 17;
      this.ﱡ︈︅︄[1].angle = this.angle;
      this.ﱡ︈︅︄[2].x = this.x - 18.5;
      this.ﱡ︈︅︄[2].y = this.y + 39;
      this.ﱡ︈︅︄[2].angle = this.angle;
      break;
    case 3:
      this.ﱣ︈︅︄ = kh;
      this.ﱢ︈︅︄ = lh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱡ︈︅︄ = [];
      for (q = 0; q < 3; q++) {
        this.ﱡ︈︅︄[Na]({
          draw: ch,
          ﱣ︍︆︄: new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2)
        });
      }
      this.ﱡ︈︅︄[0].x = this.x - 16.5;
      this.ﱡ︈︅︄[0].y = this.y - 15.5;
      this.ﱡ︈︅︄[1].x = this.x - 5.5;
      this.ﱡ︈︅︄[1].y = this.y + 7.5;
      this.ﱡ︈︅︄[2].x = this.x + 18;
      this.ﱡ︈︅︄[2].y = this.y - 5;
      break;
    case 77:
      this.draw = Wg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 70:
      this.draw = Xg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 71:
      this.draw = Yg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱞ︎︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱠ︎︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      this.ﱟ︎︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 67:
      this.draw = Zg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱞ︎︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱠ︎︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      this.ﱟ︎︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 68:
      this.draw = ah;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 90:
      this.draw = _g;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.5, 0.5);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 91:
      this.ﱣ︎︆︄ = this.info & 15;
      this.ﱢ︎︆︄ = this.ﱟ︊︇︄ & 1;
      this.ﱡ︎︆︄ = 0;
      this.x = this.info;
      this.y = this.ﱟ︊︇︄;
      this.draw = $g;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.6, 0.6);
      break;
    case 80:
    case 60:
    case 61:
    case 62:
    case 63:
    case 78:
    case 65:
    case 66:
    case 88:
      this.draw = _g;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 36:
      this.draw = sh;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 34:
      this.ﱢ︈︅︄ = qh;
      this.draw = th;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱟ️︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.03, 0.98, 0.1, 0.1);
      this.ﱠ️︆︄ = [];
      break;
    case 87:
      this.angle = Math[o]() * Math[D] / 2;
    case 86:
    case 82:
      this.draw = Ug;
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 81:
      this.draw = Vg;
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 69:
      this.scale = 1;
      this.draw = Sg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.rotate = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 76:
      this.ﱠ︍︆︄ = 0;
      this.ﱡ︍︆︄ = [];
      this.ﱟ︍︆︄ = 0;
      this.ﱢ︉︇︄ = Mg;
      this.draw = Ng;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.rotate = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 75:
      this.x = this.info;
      this.y = this.ﱟ︊︇︄;
      this.scale = 1;
      this.ﱢ︍︆︄ = 0;
      this.draw = Og;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.rotate = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 74:
      this.x = this.info;
      this.y = this.ﱟ︊︇︄;
      this.scale = 1;
      this.ﱢ︍︆︄ = 0;
      this.draw = Pg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.rotate = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 73:
      this.scale = 1;
      this.draw = Qg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.rotate = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 72:
      this.scale = 1;
      this.draw = Rg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.rotate = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 64:
      this.scale = 1;
      this.draw = Tg;
      this.ﱣ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2);
      this.rotate = new Utils.ﱠ︃︋︁(false, 0, 0, -Math[D] / 6, 0.5, 1);
      this.ﱢ︋︆︄ = new Utils.ﱠ︃︋︁(false, 0.6, 0.6, 0, 5, 3);
      break;
    case 100:
      this.ﱡ︈︅︄ = [];
      for (q = 0; q < 5; q++) {
        this.ﱡ︈︅︄[Na]({
          draw: ch,
          ﱣ︍︆︄: new Utils.ﱠ︃︋︁(false, 0.9 + Math[o]() * 0.15, 1.05, 0.9, 0.2, 0.2)
        });
      }
      switch (this.id % 3) {
        case 0:
          this.ﱡ︈︅︄[0].x = this.x - 20.5;
          this.ﱡ︈︅︄[0].y = this.y - 22.5;
          this.ﱡ︈︅︄[1].x = this.x - 35.5;
          this.ﱡ︈︅︄[1].y = this.y + 7.5;
          this.ﱡ︈︅︄[2].x = this.x + 7.5;
          this.ﱡ︈︅︄[2].y = this.y - 30;
          this.ﱡ︈︅︄[3].x = this.x + 22.5;
          this.ﱡ︈︅︄[3].y = this.y;
          this.ﱡ︈︅︄[4].x = this.x - 7.5;
          this.ﱡ︈︅︄[4].y = this.y + 14.5;
          break;
        case 1:
          this.ﱡ︈︅︄[0].x = this.x - 30.5;
          this.ﱡ︈︅︄[0].y = this.y - 22.5;
          this.ﱡ︈︅︄[1].x = this.x - 15.5;
          this.ﱡ︈︅︄[1].y = this.y + 7.5;
          this.ﱡ︈︅︄[2].x = this.x + 15.5;
          this.ﱡ︈︅︄[2].y = this.y - 30;
          this.ﱡ︈︅︄[3].x = this.x + 12.5;
          this.ﱡ︈︅︄[3].y = this.y + 5;
          this.ﱡ︈︅︄[4].x = this.x - 40.5;
          this.ﱡ︈︅︄[4].y = this.y + 14.5;
          break;
        case 2:
          this.ﱡ︈︅︄[0].x = this.x - 20.5;
          this.ﱡ︈︅︄[0].y = this.y - 20.5;
          this.ﱡ︈︅︄[1].x = this.x - 35.5;
          this.ﱡ︈︅︄[1].y = this.y + 15.5;
          this.ﱡ︈︅︄[2].x = this.x + 7.5;
          this.ﱡ︈︅︄[2].y = this.y - 17;
          this.ﱡ︈︅︄[3].x = this.x + 22.5;
          this.ﱡ︈︅︄[3].y = this.y + 5;
          this.ﱡ︈︅︄[4].x = this.x - 7.5;
          this.ﱡ︈︅︄[4].y = this.y + 1.5;
      }
      break;
    case 31:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.draw = jh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      this.ﱞ️︆︄ = new Utils.ﱠ︃︋︁(false, 0, Math[D] / 30, -Math[D] / 30, 0.06, 0.06);
      break;
    case 40:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.draw = dh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      break;
    case 39:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.draw = eh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      break;
    case 44:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.draw = hh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      break;
    case 55:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.draw = fh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      break;
    case 54:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.draw = gh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      break;
    case 37:
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.draw = ih;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 0.9, 1.05, 0.9, 0.2, 0.2);
      break;
    case 24:
      this.draw = vh;
      this.rotate = 0;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 25:
      this.draw = wh;
      this.rotate = 0;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 26:
      this.draw = xh;
      this.rotate = 0;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 27:
      this.draw = yh;
      this.rotate = 0;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 28:
      this.draw = zh;
      this.rotate = 0;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 32:
      this.ﱣ︈︅︄ = Ah;
      this.ﱢ︈︅︄ = uh;
      this.rotate = 0;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 38:
      this.draw = Gg;
      this.ﱠ︌︆︄ = Math[A](this.x / 100);
      this.i = Math[A](this.y / 100);
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.opacity = 1;
      this.ﱠ︊︇︄ = Eg;
      break;
    case 42:
      this.draw = Hg;
      this.ﱟ︌︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.15, 1, 0.3, 0.3);
      this.color = 0;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 33:
    case 2:
    case 56:
    case 35:
    case 29:
      this.draw = Jg;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      break;
    case 30:
      this.draw = Jg;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱠ︊︇︄ = Eg;
      break;
    case 4:
    case 7:
    case 8:
    case 9:
    case 19:
    case 50:
    case 5:
    case 12:
    case 13:
    case 14:
    case 20:
    case 52:
      this.draw = Jg;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱠ︊︇︄ = Fg;
      break;
    case 41:
      this.draw = Ig;
      this.opacity = 1;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      var r = this.angle % (Math[D] / 2);
      if (r < Math[D] / 4) {
        this.angle -= r;
      } else {
        this.angle += Math[D] / 2 - r;
      }
      break;
    case 79:
      this.draw = Dg;
      this.angle = Math[o]() * Math[D] * 2;
      break;
    case 89:
      this.draw = Cg;
      this.angle = Math[o]() * Math[D] * 2;
      break;
    case 83:
      this.draw = Bg;
      this.angle = Math[o]() * Math[D] * 2;
      break;
    case 84:
      this.draw = Ag;
      this.angle = Math[o]() * Math[D] * 2;
      break;
    case 85:
      this.draw = zg;
      this.angle = Math[o]() * Math[D] * 2;
      break;
    case 11:
      this.update = function (c) {
        this.ﱢ︎︎︄ = this.info & 8192 ? 1 : 0;
        this.info = this.info & 8191;
        this.action = c;
      };
      this.draw = yg;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱢ︎︎︄ = 0;
      this.update(this.action);
      break;
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 53:
    case 10:
    case 15:
    case 16:
    case 17:
    case 21:
    case 51:
      this.draw = xg;
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.ﱠ︊︇︄ = Fg;
      break;
    case 18:
      this.ﱣ︈︅︄ = ph;
      this.draw = oh;
      this.ﱢ︈︅︄ = Fh;
      this.ﱡ︍︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.23, 1.18, 0.02, 0.02);
      this.ﱟ︌︆︄ = new Utils.ﱠ︃︋︁(false, 1, 1.23, 1.18, 0.04, 0.04);
      this.ﱢ︋︆︄ = {
        ﱞ︌︆︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10),
        update: false,
        angle: 0
      };
      this.update = function (c) {
        this.action = c;
      };
  }
}
function Qi(c) {
  function d(c, d, e, f, g) {
    for (var i = d + Math[A](gj.ﱢ︇︈︄.get() * f), k = e + Math[A](gj.ﱢ︇︈︄.get() * f), m = 10 + Math[A](gj.ﱢ︇︈︄.get() * (gj.ﱣ︆︅︄ - i - 20)), n = 10 + Math[A](gj.ﱢ︇︈︄.get() * (gj.ﱢ︆︅︄ - k - 20)), o = m + i, p = n + k, q = 0; q < gj.ﱟ︂︆︄[Oa]; q++) {
      var r = gj.ﱟ︂︆︄[q];
      if (Utils.ﱠ︆︋︁(m, o, n, p, r.x1 / 100 - g, r.x2 / 100 + g, r.y1 / 100 - g, r.y2 / 100 + g) === 1) {
        return 0;
      }
    }
    gj.ﱟ︂︆︄[Na](new gj.ﱞ︈︈︄(c, m, n, i, k, 15));
    return 1;
  }
  function f(c, d, e) {
    for (var f = d, g = e; g < gj.ﱢ︆︅︄; g++) {
      for (var i = d; i < gj.ﱣ︆︅︄ && (g === e && (f = Math[ba](i, f)), !(i > f)) && c[g][i] !== 1; i++) {
        c[g][i] = 1;
      }
      if (i < f) {
        break;
      }
    }
    gj.ﱟ︂︆︄[Na](new gj.ﱞ︈︈︄(gj.ﱡ︈︇︄, d, e, f - d + 1, g - e, 15));
  }
  function g(c, e, f, g, i) {
    for (var k = 0; k < i && d(c, e, f, g, 8) !== 1; k++);
    if (k === i) {
      return 0;
    } else {
      return 1;
    }
  }
  function i(c, d, e, f, g, i, k, m) {
    for (var n = Math[A](k / 2), o = Math[ba](1, Math[A](k / 2)), p = Math[A](m / 2), q = Math[ba](1, Math[A](m / 2)), r = 0; r < e; r++) {
      for (var s = c - p; s < c + q; s++) {
        for (var t = d - n; t < d + o; t++) {
          if (F(s, t, "wtb", 0, 1) === 1) {
            i[Na]([s, t, 1]);
          }
        }
      }
      c += f;
      d += g;
    }
  }
  function k(c, d) {
    for (var e = gj.ﱟ︂︆︄[c], f = Math[A](e.y1 / 100), g = Math[A](e.x1 / 100), k = Math[A](e.ﱟ︁︋︁ / 100), m = g + (u = Math[A](e.w / 100)), n = 2, o = k, p = f, q = g + 10 + Math[A]((u - 20) * gj.ﱢ︇︈︄.get()), r = q - 4; r < q + 4; r++) {
      F(f - 1, r, "wtb", 0, 1);
    }
    for (; o > 0;) {
      if (n !== 2) {
        if (o < 10) {
          for (z = 1; o > 0; z++) {
            i(p, q, 1, 1, 0, d, z, 1);
            o -= 1;
            p += 1;
          }
        } else if (n !== 1) {
          n = 1;
          var s = Math[A](1 + gj.ﱢ︇︈︄.get() * 2);
          var t = 1 + Math[A](gj.ﱢ︇︈︄.get() * 4);
          if (q < g + 16) {
            i(p, q, s, 0, 1, d, t, t);
            q += s;
          } else if (q > m - 16) {
            i(p, q, s, 0, -1, d, t, t);
            q -= s;
          } else if (gj.ﱢ︇︈︄.get() > 0.5) {
            i(p, q, s, 0, 1, d, t, t);
            q += s;
          } else {
            i(p, q, s, 0, -1, d, t, t);
            q -= s;
          }
        } else {
          var u;
          var v = Math[ta](o, Math[A](1 + gj.ﱢ︇︈︄.get() * 4));
          i(p, q, v, 1, 0, d, u = 1 + Math[A](gj.ﱢ︇︈︄.get() * 4), u);
          n = 0;
          o -= v;
          p += v;
        }
      } else {
        for (var z = 10; z > 1; z--) {
          i(p, q, 1, 1, 0, d, z, 1);
          o -= 1;
          p += 1;
        }
        n = 0;
      }
    }
    for (r = q - 1; r < q + 2; r++) {
      F(p, r, "wtb", 0, 1);
    }
  }
  function m(c, d) {
    for (var e = 0; e < d[Oa]; e++) {
      E(d[e][0], d[e][1], c, d[e][2]);
    }
  }
  function n(c) {
    for (var d = 0; d < 3; d++) {
      B(c, "s", d, 15);
    }
    for (d = 0; d < 3; d++) {
      B(c, "a", d, 1);
    }
    for (d = 0; d < 3; d++) {
      B(c, "d", d, 1);
    }
    z(c);
  }
  function p(c, d) {
    for (var e = 0; e < 3; e++) {
      B(c, "s", e, Math[A](d * 18));
    }
    for (e = 0; e < 3; e++) {
      B(c, "f", e, Math[A](d * 24));
    }
    for (e = 0; e < 3; e++) {
      B(c, "d", e, Math[ba](1, Math[A](d * 2)), 0.3);
    }
    for (e = 0; e < 3; e++) {
      B(c, "g", e, Math[A](d * 6));
    }
    z(c);
  }
  function q(c, d) {
    for (var e = 0; e < 3; e++) {
      B(c, "s", e, Math[A](d * 12));
    }
    for (e = 0; e < 3; e++) {
      B(c, "m", e, Math[ba](1, Math[A](d * 1)), 0.2);
    }
    B(c, "c", 0, Math[A](d * 36));
    var f = [];
    !function (c, d) {
      for (var e = gj.ﱟ︂︆︄[c], f = Math[A](e.y1 / 100), g = Math[A](e.x1 / 100), i = Math[A](e.ﱟ︁︋︁ / 100), k = Math[A](e.w / 100), m = f + Math[A](i / 2), n = g + Math[A](k / 2), o = 0; o < 3; o++) {
        F(p = Math[A](m - 3 + gj.ﱢ︇︈︄.get() * 6), q = Math[A](n - 3 + gj.ﱢ︇︈︄.get() * 6), "plm", o, 1);
      }
      for (o = 0; o < 80; o++) {
        var p;
        var q;
        if (F(p = Math[A](m - 3 + gj.ﱢ︇︈︄.get() * 6), q = Math[A](n - 3 + gj.ﱢ︇︈︄.get() * 6), "wtb", 0, 1) === 1) {
          d[Na]([p, q, 0]);
        }
      }
    }(c, f);
    m(c, f);
    f = [];
  }
  function r(c, d) {
    !function (c, d) {
      for (var e = gj.ﱟ︂︆︄[d], f = 0, g = 0; f < c && g < 10000; g++) {
        var i = e.y1 + gj.ﱢ︇︈︄.get() * e.ﱟ︁︋︁;
        var k = e.x1 + gj.ﱢ︇︈︄.get() * e.w;
        var m = Math[A](i / 100);
        var n = Math[A](k / 100);
        if (!(gj.ﱠ︈︈︄(d, n * 100 + 50, m * 100 + 50) < 600)) {
          for (var o = 1, p = m - 4; o === 1 && p <= m + 4; p++) {
            for (var q = n - 4; o === 1 && q <= n + 4; q++) {
              if (ej.ﱡ︌︆︄[p][q] !== undefined) {
                o = 0;
              }
            }
          }
          if (o !== 0) {
            F(m, n, "la", f % 6, 0);
            f++;
          }
        }
      }
    }(d * 80, c);
    for (var e = 0; e < 3; e++) {
      B(c, "s", e, Math[A](d * 12));
    }
    for (e = 0; e < 3; e++) {
      B(c, "g", e, Math[A](d * 6));
    }
    for (e = 0; e < 3; e++) {
      B(c, "re", e, Math[ba](1, Math[A](d * 1)), 0.2);
    }
    for (e = 0; e < 3; e++) {
      B(c, "a", e, Math[ba](1, Math[A](d * 2)));
    }
    z(c);
  }
  function s(c, d) {
    for (var e = 0; e < 6; e++) {
      B(c, "t", e, Math[A](d * 80));
    }
    for (e = 0; e < 4; e++) {
      B(c, "b", e, Math[A](d * 80));
    }
    for (e = 0; e < 3; e++) {
      B(c, "s", e, Math[A](d * 50));
    }
    var f = [];
    for (e = 0; e < 6; e++) {
      k(c, f);
    }
    m(c, f);
    f = [];
    B(c, "p", 0, Math[A](d * 28));
    for (e = 0; e < 3; e++) {
      B(c, "g", e, Math[A](d * 7));
    }
    for (e = 0; e < 3; e++) {
      B(c, "d", e, Math[A](d * 2));
    }
    for (e = 0; e < 3; e++) {
      B(c, "a", e, Math[A](d * 1));
    }
    for (e = 0; e < 3; e++) {
      B(c, "m", e, Math[A](d * 1));
    }
    B(c, "a", 0, Math[A](d * 1));
    z(c);
  }
  function v(c, d) {
    for (var e = 0; e < 6; e++) {
      B(c, "t", e, Math[A](d * 20));
    }
    for (e = 0; e < 4; e++) {
      B(c, "b", e, Math[A](d * 20));
    }
    for (e = 0; e < 3; e++) {
      B(c, "s", e, Math[A](d * 20));
    }
    var f = [];
    k(c, f);
    m(c, f);
    f = [];
    B(c, "p", 0, Math[A](d * 24));
    for (e = 0; e < 3; e++) {
      B(c, "g", e, Math[A](d * 5));
    }
    if (gj.mode === Ki.ﱟ︇︆︄) {
      for (e = 0; e < 3; e++) {
        B(c, "d", e, Math[A](d * 3));
      }
      for (e = 0; e < 3; e++) {
        B(c, "a", e, Math[A](d * 2));
      }
    }
    z(c);
  }
  function z(c) {
    var d = gj.ﱟ︂︆︄[c];
    F(-3 + Math[A](d.y2 / 100), -1 + Math[A](d.x2 / 100), "s", 0, 0);
    F(3 + Math[A](d.y1 / 100), -1 + Math[A](d.x2 / 100), "s", 0, 0);
    F(-3 + Math[A](d.y2 / 100), 1 + Math[A](d.x1 / 100), "s", 0, 0);
    F(3 + Math[A](d.y1 / 100), 1 + Math[A](d.x1 / 100), "s", 0, 0);
  }
  function B(c, d, e, f, g) {
    var i = gj.ﱟ︂︆︄[c];
    var k = Math[A](i.x1 / 100);
    var m = Math[A](i.y1 / 100);
    var n = Math[A](i.w / 100);
    var o = Math[A](i.ﱟ︁︋︁ / 100);
    if (g !== undefined) {
      g = 1 - g;
      k += Math[A](n * g / 2);
      m += Math[A](o * g / 2);
      n -= Math[A](n * g);
      o -= Math[A](o * g);
    }
    for (var p = ej.ﱡ︌︆︄, q = 0, r = 0; q < f && !(r > 50000); r++) {
      var s;
      var t = m + Math[A](gj.ﱢ︇︈︄.get() * o);
      var u = k + Math[A](gj.ﱢ︇︈︄.get() * n);
      if (!(gj.ﱠ︈︈︄(c, u * 100 + 50, t * 100 + 50) < 400 || (s = p[t][u + 1]) !== undefined && s[d] !== undefined && s[d][e] !== undefined || (s = p[t][u - 1]) !== undefined && s[d] !== undefined && s[d][e] !== undefined || (s = p[t + 1][u]) !== undefined && s[d] !== undefined && s[d][e] !== undefined || (s = p[t - 1][u]) !== undefined && s[d] !== undefined && s[d][e] !== undefined || (s = p[t + 1][u - 1]) !== undefined && s[d] !== undefined && s[d][e] !== undefined || (s = p[t - 1][u + 1]) !== undefined && s[d] !== undefined && s[d][e] !== undefined || (s = p[t + 1][u + 1]) !== undefined && s[d] !== undefined && s[d][e] !== undefined || (s = p[t - 1][u - 1]) !== undefined && s[d] !== undefined && s[d][e] !== undefined)) {
        if (p[t][u] === undefined) {
          F(t, u, d, e, 1);
          q++;
        }
      }
    }
  }
  function C(c, d) {
    return c >= 0 && d >= 0 && c < gj.ﱢ︆︅︄ && d < gj.ﱣ︆︅︄;
  }
  function E(c, d, e, f) {
    if (C(c, d) && (tiles = ej.ﱡ︌︆︄, tiles[c][d] === undefined && (tiles[c][d] = {}), tiles[c][d].r === undefined)) {
      var g = 0;
      if (C(c - 1, d) && tiles[c - 1][d] !== undefined && tiles[c - 1][d].wtb !== undefined) {
        g += 2;
      }
      if (C(c, d - 1) && tiles[c][d - 1] !== undefined && tiles[c][d - 1].wtb !== undefined) {
        g += 8;
      }
      if (C(c, d + 1) && tiles[c][d + 1] !== undefined && tiles[c][d + 1].wtb !== undefined) {
        g += 16;
      }
      if (C(c + 1, d) && tiles[c + 1][d] !== undefined && tiles[c + 1][d].wtb !== undefined) {
        g += 64;
      }
      if (C(c - 1, d - 1) && (g & 10) == 10 && tiles[c - 1][d - 1] !== undefined && tiles[c - 1][d - 1].wtb !== undefined) {
        g += 1;
      }
      if (C(c - 1, d + 1) && (g & 18) == 18 && tiles[c - 1][d + 1] !== undefined && tiles[c - 1][d + 1].wtb !== undefined) {
        g += 4;
      }
      if (C(c + 1, d - 1) && (g & 72) == 72 && tiles[c + 1][d - 1] !== undefined && tiles[c + 1][d - 1].wtb !== undefined) {
        g += 32;
      }
      if (C(c + 1, d + 1) && (g & 80) == 80 && tiles[c + 1][d + 1] !== undefined && tiles[c + 1][d + 1].wtb !== undefined) {
        g += 128;
      }
      tiles[c][d].r = {};
      tiles[c][d].r.ﱣ︌︆︄ = g;
      tiles[c][d].r.ﱞ︍︆︄ = f;
      tiles[c][d].r.ﱡ️︊︁ = gj.ﱠ︈︈︄(e, d * 100 + 50, c * 100 + 50) - 400;
      tiles[c][d].r.x = d * 100 + 50;
      tiles[c][d].r.y = c * 100 + 50;
    }
  }
  function F(c, d, e, f, g) {
    if (!(c < 0 || d < 0 || c >= gj.ﱢ︆︅︄ || d >= gj.ﱣ︆︅︄)) {
      tiles = ej.ﱡ︌︆︄;
      if (tiles[c][d] === undefined) {
        tiles[c][d] = {};
      }
      if (tiles[c][d][e] !== undefined) {
        return 0;
      } else {
        tiles[c][d][e] = [];
        tiles[c][d][e][f] = [{
          x: d * 100 + 50,
          y: c * 100 + 50
        }];
        if (g === 1) {
          (function (c, d, e, f) {
            gc[Na]([c, d, e, f]);
          })(e, f, c, d);
        }
        return 1;
      }
    }
  }
  function G(c, d, e) {
    if (c[d]) {
      for (Va = 0; Va < c[d][Oa]; Va++) {
        if (c[d][Va]) {
          for (l = 0; l < c[d][Va][Oa]; l++) {
            c[d][Va][l].ﱢ︋︆︄ = e;
            c[d][Va][l].update = false;
            c[d][Va][l].time = 0;
            c[d][Va][l].angle = 0;
          }
        }
      }
    }
  }
  this.mode = Ki.ﱠ︈︆︄;
  this.ﱡ︅︈︄ = c;
  this.ﱟ︈︈︄ = 0;
  this.ﱡ︈︈︄ = 6;
  this.players = [];
  this.ﱠ︀️︄ = [];
  this.ﱠ︀️︄[0] = [];
  this.ﱠ︀️︄[100] = [];
  this.ﱠ︀️︄[80] = [];
  this.ﱠ︀️︄[60] = [];
  this.ﱠ︀️︄[67] = [];
  this.ﱠ︀️︄[70] = [];
  this.ﱠ︀️︄[77] = [];
  this.ﱠ︀️︄[71] = [];
  this.ﱠ︀️︄[72] = [];
  this.ﱠ︀️︄[73] = [];
  this.ﱠ︀️︄[74] = [];
  this.ﱠ︀️︄[65] = [];
  this.ﱠ︀️︄[66] = [];
  this.ﱠ︀️︄[62] = [];
  this.ﱠ︀️︄[88] = [];
  this.ﱠ︀️︄[91] = [];
  this.ﱠ︀️︄[90] = [];
  this.ﱠ︀️︄[63] = [];
  this.ﱠ︀️︄[78] = [];
  this.ﱠ︀️︄[64] = [];
  this.ﱠ︀️︄[69] = [];
  this.ﱠ︀️︄[68] = [];
  this.ﱠ︀️︄[79] = [];
  this.ﱠ︀️︄[89] = [];
  this.ﱠ︀️︄[83] = [];
  this.ﱠ︀️︄[84] = [];
  this.ﱠ︀️︄[85] = [];
  this.ﱠ︀️︄[81] = [];
  this.ﱠ︀️︄[82] = [];
  this.ﱠ︀️︄[86] = [];
  this.ﱠ︀️︄[34] = [];
  this.ﱠ︀️︄[36] = [];
  this.ﱠ︀️︄[61] = [];
  this.ﱠ︀️︄[2] = [];
  this.ﱠ︀️︄[1] = [];
  this.ﱠ︀️︄[6] = [];
  this.ﱠ︀️︄[3] = [];
  this.ﱠ︀️︄[5] = [];
  this.ﱠ︀️︄[12] = [];
  this.ﱠ︀️︄[13] = [];
  this.ﱠ︀️︄[14] = [];
  this.ﱠ︀️︄[20] = [];
  this.ﱠ︀️︄[52] = [];
  this.ﱠ︀️︄[4] = [];
  this.ﱠ︀️︄[7] = [];
  this.ﱠ︀️︄[8] = [];
  this.ﱠ︀️︄[9] = [];
  this.ﱠ︀️︄[19] = [];
  this.ﱠ︀️︄[50] = [];
  this.ﱠ︀️︄[41] = [];
  this.ﱠ︀️︄[10] = [];
  this.ﱠ︀️︄[15] = [];
  this.ﱠ︀️︄[16] = [];
  this.ﱠ︀️︄[17] = [];
  this.ﱠ︀️︄[21] = [];
  this.ﱠ︀️︄[51] = [];
  this.ﱠ︀️︄[45] = [];
  this.ﱠ︀️︄[46] = [];
  this.ﱠ︀️︄[47] = [];
  this.ﱠ︀️︄[48] = [];
  this.ﱠ︀️︄[49] = [];
  this.ﱠ︀️︄[53] = [];
  this.ﱠ︀️︄[18] = [];
  this.ﱠ︀️︄[29] = [];
  this.ﱠ︀️︄[56] = [];
  this.ﱠ︀️︄[11] = [];
  this.ﱠ︀️︄[22] = [];
  this.ﱠ︀️︄[23] = [];
  this.ﱠ︀️︄[30] = [];
  this.ﱠ︀️︄[38] = [];
  this.ﱠ︀️︄[33] = [];
  this.ﱠ︀️︄[31] = [];
  this.ﱠ︀️︄[55] = [];
  this.ﱠ︀️︄[37] = [];
  this.ﱠ︀️︄[43] = [];
  this.ﱠ︀️︄[44] = [];
  this.ﱠ︀️︄[54] = [];
  this.ﱠ︀️︄[39] = [];
  this.ﱠ︀️︄[40] = [];
  this.ﱠ︀️︄[32] = [];
  this.ﱠ︀️︄[24] = [];
  this.ﱠ︀️︄[25] = [];
  this.ﱠ︀️︄[26] = [];
  this.ﱠ︀️︄[27] = [];
  this.ﱠ︀️︄[28] = [];
  this.ﱠ︀️︄[35] = [];
  this.ﱠ︀️︄[87] = [];
  this.ﱠ︀️︄[42] = [];
  this.ﱞ︊︅︄ = [];
  this.ﱣ︆︅︄ = 260;
  this.ﱢ︆︅︄ = 260;
  this.ﱠ︈︇︄ = 100;
  this.ﱟ︈︇︄ = 100;
  this.w = this.ﱣ︆︅︄ * this.ﱠ︈︇︄;
  this.ﱟ︁︋︁ = this.ﱢ︆︅︄ * this.ﱟ︈︇︄;
  this.ﱢ︇︈︄ = new Ta.ﱞ︉︋︁();
  this.ﱟ︂︆︄ = [];
  this.ﱡ︅︇︄ = new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1, 1);
  this.transition = false;
  this.ﱣ︈︇︄ = [];
  this.ﱡ︂︆︄ = 0;
  this.ﱣ︂︆︄ = 1;
  this.ﱢ︂︆︄ = 2;
  this.ﱞ︃︆︄ = 3;
  this.ﱡ︈︇︄ = 4;
  this.ﱠ︃︆︄ = 10;
  this.ﱣ︈︇︄[this.ﱡ︂︆︄] = {
    ﱞ︇︇︄: 1,
    ﱡ︃︆︄: [19, 58, 43],
    ﱣ︃︆︄: [4, 43, 48],
    ﱠ︇︇︄: ["#133a2b", "#042b30"]
  };
  this.ﱣ︈︇︄[this.ﱡ︈︇︄] = {
    ﱞ︇︇︄: 0,
    ﱡ︃︆︄: [11, 106, 132],
    ﱣ︃︆︄: [9, 55, 63],
    ﱠ︇︇︄: ["#0B6A84", "#09373F"]
  };
  this.ﱣ︈︇︄[this.ﱣ︂︆︄] = {
    ﱞ︇︇︄: 0,
    ﱡ︃︆︄: [235, 242, 240],
    ﱣ︃︆︄: [19, 97, 103],
    ﱠ︇︇︄: ["#EBF2F0", "#136167"]
  };
  this.ﱣ︈︇︄[this.ﱢ︂︆︄] = {
    ﱞ︇︇︄: 0,
    ﱡ︃︆︄: [45, 32, 23],
    ﱣ︃︆︄: [3, 28, 30],
    ﱠ︇︇︄: ["#2D2017", "#031C1E"]
  };
  this.ﱣ︈︇︄[this.ﱞ︃︆︄] = {
    ﱞ︇︇︄: 0,
    ﱡ︃︆︄: [74, 74, 74],
    ﱣ︃︆︄: [24, 61, 60],
    ﱠ︇︇︄: ["#4A4A4A", "#183D3C"]
  };
  this.ﱣ︈︇︄[this.ﱠ︃︆︄] = {
    ﱞ︇︇︄: 0,
    ﱡ︃︆︄: [235, 216, 166],
    ﱣ︃︆︄: [9, 61, 56],
    ﱠ︇︇︄: ["#EBD8A6", "#093D38"]
  };
  this.ﱞ︈︈︄ = function (c, d, e, f, g, i) {
    this.x1 = d * 100;
    this.y1 = e * 100;
    this.w = f * 100;
    this.ﱟ︁︋︁ = g * 100;
    this.x2 = (d + f) * 100;
    this.y2 = (e + g) * 100;
    this.t = c;
    this.ﱡ︃︋︁ = i === undefined ? 15 : i;
  };
  this.ﱣ︈︈︄ = -1000000;
  this.ﱟ︁︇︄ = this.ﱣ︈︈︄;
  this.ﱣ︁︇︄ = this.ﱣ︈︈︄;
  this.ﱟ︌︇︄ = this.ﱣ︈︈︄;
  this.ﱣ︅︈︄ = this.ﱣ︈︈︄;
  this.ﱢ︅︈︄ = this.ﱣ︈︈︄;
  this.ﱞ︆︈︄ = this.ﱣ︈︈︄;
  this.ﱠ︁︇︄ = function (c) {
    var d = c.r.x;
    var e = c.r.y;
    var f = Math[A](e / 100);
    var g = Math[A](d / 100);
    c.ﱟ︁︇︄ = gj.ﱣ︈︈︄;
    c.ﱣ︁︇︄ = gj.ﱣ︈︈︄;
    c.ﱟ︌︇︄ = gj.ﱣ︈︈︄;
    c.ﱣ︅︈︄ = gj.ﱣ︈︈︄;
    c.ﱞ︆︈︄ = gj.ﱣ︈︈︄;
    c.ﱡ︁︇︄ = gj.ﱣ︈︈︄;
    for (var i = 0; gj.ﱟ︂︆︄[i].t !== gj.ﱡ︈︇︄; i++) {
      if (gj.ﱟ︂︆︄[i].t === gj.ﱡ︂︆︄) {
        var k = gj.ﱠ︈︈︄(i, d, e);
        c.ﱣ︅︈︄ = Math[ba](c.ﱣ︅︈︄, k);
        if (k > 0 && gj.ﱢ︈︈︄(i, d, e) === 1) {
          c.ﱡ︁︇︄ = 1;
        }
      } else if (gj.ﱟ︂︆︄[i].t === gj.ﱣ︂︆︄) {
        c.ﱟ︁︇︄ = Math[ba](c.ﱟ︁︇︄, gj.ﱠ︈︈︄(i, d, e));
      } else if (gj.ﱟ︂︆︄[i].t === gj.ﱠ︃︆︄) {
        c.ﱣ︁︇︄ = Math[ba](c.ﱣ︁︇︄, gj.ﱠ︈︈︄(i, d, e));
      } else if (gj.ﱟ︂︆︄[i].t === gj.ﱢ︂︆︄) {
        c.ﱟ︌︇︄ = Math[ba](c.ﱟ︌︇︄, gj.ﱠ︈︈︄(i, d, e));
      } else if (gj.ﱟ︂︆︄[i].t === gj.ﱞ︃︆︄) {
        c.ﱞ︆︈︄ = Math[ba](c.ﱞ︆︈︄, gj.ﱠ︈︈︄(i, d, e));
      }
    }
    if (ej.ﱡ︌︆︄[f][g].iblk) {
      c.ﱡ︁︇︄ = 1;
    }
    if (gj.ﱞ︉︈︄(g, f)) {
      c.ﱢ︅︈︄ = c.ﱣ︈︈︄;
    } else if (ej.ﱡ︌︆︄[f][g].wtb || c.ﱟ︁︇︄ < 0 && c.ﱟ︌︇︄ < 0 && c.ﱣ︅︈︄ < 0 && c.ﱡ︁︇︄ < 0 && c.ﱞ︆︈︄ < 0 && c.ﱣ︁︇︄ < 0) {
      c.ﱢ︅︈︄ = 1;
    } else {
      c.ﱢ︅︈︄ = c.ﱣ︈︈︄;
    }
  };
  this.ﱞ︈︇︄ = function (c, d) {
    gj.ﱟ︁︇︄ = gj.ﱣ︈︈︄;
    gj.ﱣ︁︇︄ = gj.ﱣ︈︈︄;
    gj.ﱟ︌︇︄ = gj.ﱣ︈︈︄;
    gj.ﱞ︆︈︄ = gj.ﱣ︈︈︄;
    gj.ﱣ︅︈︄ = gj.ﱣ︈︈︄;
    for (var e = 0; gj.ﱟ︂︆︄[e].t !== gj.ﱡ︈︇︄; e++) {
      if (gj.ﱟ︂︆︄[e].t === gj.ﱡ︂︆︄) {
        gj.ﱣ︅︈︄ = Math[ba](gj.ﱣ︅︈︄, gj.ﱠ︈︈︄(e, c, d));
      } else if (gj.ﱟ︂︆︄[e].t === gj.ﱣ︂︆︄) {
        gj.ﱟ︁︇︄ = Math[ba](gj.ﱟ︁︇︄, gj.ﱠ︈︈︄(e, c, d));
      } else if (gj.ﱟ︂︆︄[e].t === gj.ﱠ︃︆︄) {
        gj.ﱣ︁︇︄ = Math[ba](gj.ﱣ︁︇︄, gj.ﱠ︈︈︄(e, c, d));
      } else if (gj.ﱟ︂︆︄[e].t === gj.ﱢ︂︆︄) {
        gj.ﱟ︌︇︄ = Math[ba](gj.ﱟ︌︇︄, gj.ﱠ︈︈︄(e, c, d));
      } else if (gj.ﱟ︂︆︄[e].t === gj.ﱞ︃︆︄) {
        gj.ﱞ︆︈︄ = Math[ba](gj.ﱞ︆︈︄, gj.ﱠ︈︈︄(e, c, d));
      }
    }
    if (gj.ﱟ︁︇︄ < 0 && gj.ﱞ︆︈︄ < 0 && gj.ﱣ︅︈︄ < 0 && gj.ﱞ︆︈︄ < 0 && gj.ﱣ︁︇︄ < 0) {
      gj.ﱢ︅︈︄ = 1;
    } else {
      gj.ﱢ︅︈︄ = gj.ﱣ︈︈︄;
    }
  };
  this.ﱢ︈︈︄ = function (c, d, e) {
    var f = gj.ﱟ︂︆︄[c];
    var g = 0;
    x1 = f.x1 + 30 + ((f.ﱡ︃︋︁ & Ki.ﱠ︉︇︄) == 0 ? 150 : 0);
    var i = d - x1;
    if ((f.ﱡ︃︋︁ & Ki.ﱠ︉︇︄) > 0 && i > 0 && i < 320) {
      g = 1;
    }
    y1 = f.y1 + 250 + ((f.ﱡ︃︋︁ & Ki.ﱡ︉︇︄) == 0 ? 150 : 0);
    i = e - y1;
    if ((f.ﱡ︃︋︁ & Ki.ﱡ︉︇︄) > 0 && i > 0 && i < 320) {
      g = 1;
    }
    x2 = f.x2 + 80 + ((f.ﱡ︃︋︁ & Ki.ﱢ︈︇︄) == 0 ? -200 : 0);
    i = x2 - d;
    if ((f.ﱡ︃︋︁ & Ki.ﱢ︈︇︄) > 0 && i > 0 && i < 320) {
      g = 1;
    }
    y2 = f.y2 - 200 + ((f.ﱡ︃︋︁ & Ki.ﱟ︉︇︄) == 0 ? -200 : 0);
    i = y2 - e;
    if ((f.ﱡ︃︋︁ & Ki.ﱟ︉︇︄) > 0 && i > 0 && i < 320) {
      g = 1;
    }
    if (d >= x1 && d <= x2 && e >= y1 && e <= y2) {
      return g;
    } else {
      return 0;
    }
  };
  this.ﱠ︈︈︄ = function (c, d, e) {
    var f = gj.ﱟ︂︆︄[c];
    x1 = f.x1 + 30;
    y1 = f.y1 + 250;
    x2 = f.x2 + 80;
    y2 = f.y2 - 200;
    if (d >= x1 && d <= x2 && e >= y1 && e <= y2) {
      return Math[ta](d - x1, x2 - d, e - y1, y2 - e);
    }
    var g = -1000000;
    if (d - x1 < 0) {
      g = Math[ba](g, d - x1);
    } else if (x2 - d < 0) {
      g = Math[ba](g, x2 - d);
    }
    distY = -1000000;
    if (e < y1 || e > y2) {
      if (e - y1 < 0) {
        distY = Math[ba](distY, e - y1);
      } else {
        distY = Math[ba](distY, y2 - e);
      }
      g = g !== -1000000 && distY !== -1000000 ? Math[ta](g, distY) : distY;
    }
    return g;
  };
  this.ﱠ︉︈︄ = function (c, d, e) {
    var f = e;
    var g = d;
    F(f, g, "isl", c, 1);
    for (var i = 0; i < 4; i++) {
      for (var k = 0; k < 3; k++) {
        F(f - k, g - i, "iblk", 0);
        F(f + k, g - i, "iblk", 0);
        F(f + k, g + i, "iblk", 0);
        F(f - k, g + i, "iblk", 0);
      }
    }
    if (c === 0) {
      for (i = 0; i < 2; i++) {
        F(f - i, g - 4, "iblk", 0);
        F(f + i, g - 4, "iblk", 0);
        F(f - i, g + 4, "iblk", 0);
        F(f + i, g + 4, "iblk", 0);
      }
      for (i = 0; i < 3; i++) {
        F(f - 3, g + i, "iblk", 0);
        F(f + 3, g + i, "iblk", 0);
        F(f - 3, g - i, "iblk", 0);
        F(f + 3, g - i, "iblk", 0);
      }
      F(f - 2, g - 4, "iblk", 0);
      F(f - 3, g - 3, "iblk", 0);
      F(f + 2, g + 4, "iblk", 0);
      F(f + 3, g + 3, "iblk", 0);
    } else if (c === 1) {
      for (i = 0; i < 3; i++) {
        F(f - i, g - 4, "iblk", 0);
        F(f + i, g - 4, "iblk", 0);
        F(f - i, g + 4, "iblk", 0);
        F(f + i, g + 4, "iblk", 0);
      }
      for (i = 0; i < 4; i++) {
        F(f - 3, g + i, "iblk", 0);
        F(f + 3, g + i, "iblk", 0);
        F(f - 3, g - i, "iblk", 0);
        F(f + 3, g - i, "iblk", 0);
      }
    } else if (c === 2) {
      for (i = 0; i < 2; i++) {
        F(f - i, g - 4, "iblk", 0);
        F(f + i, g - 4, "iblk", 0);
        F(f - i, g + 4, "iblk", 0);
        F(f + i, g + 4, "iblk", 0);
      }
      for (i = 0; i < 3; i++) {
        F(f - 3, g + i, "iblk", 0);
        F(f + 3, g + i, "iblk", 0);
        F(f - 3, g - i, "iblk", 0);
        F(f + 3, g - i, "iblk", 0);
      }
    }
  };
  this.ﱟ︉︈︄ = function (c) {
    for (var d = 0; d < gj.ﱟ︂︆︄[Oa] && c > 0; d++) {
      var e = gj.ﱟ︂︆︄[d];
      if (e.t === gj.ﱡ︈︇︄ && e.w > 1800 && e.ﱟ︁︋︁ > 1000) {
        var f = Math[A]((e.x1 + e.w / 2) / 100);
        var g = Math[A]((e.y1 + e.ﱟ︁︋︁ / 2) / 100);
        gj.ﱠ︉︈︄(c % 3, f, g);
        for (var i = 0; i < 3; i++) {
          var k = g - 2 + Math[A](gj.ﱢ︇︈︄.get() * 4);
          var m = f - 3 + Math[A](gj.ﱢ︇︈︄.get() * 6);
          if (ej.ﱡ︌︆︄[k][m].s === undefined) {
            F(k, m, "plm", i);
          }
          k = g - 2 + Math[A](gj.ﱢ︇︈︄.get() * 4);
          m = f - 3 + Math[A](gj.ﱢ︇︈︄.get() * 6);
          if (ej.ﱡ︌︆︄[k][m].plm === undefined) {
            F(k, m, "s", i);
          }
        }
        k = g - 2 + Math[A](gj.ﱢ︇︈︄.get() * 4);
        m = f - 3 + Math[A](gj.ﱢ︇︈︄.get() * 6);
        if (ej.ﱡ︌︆︄[k][m].plm === undefined && ej.ﱡ︌︆︄[k][m].s === undefined) {
          F(k, m, "p", 0, 1);
        }
        c--;
      }
    }
  };
  this.ﱡ︉︈︄ = function (c) {
    gj.ﱢ︇︈︄.init(c);
    for (var d = 0;;) {
      if (++d > 10000) {
        return;
      }
      gj.ﱟ︂︆︄ = [];
      if (!(gj.ﱟ︈︈︄ !== 0 || gj.mode !== Ki.ﱣ︇︆︄ && gj.mode !== Ki.ﱣ︈︆︄ && gj.mode !== Ki.ﱠ︈︆︄)) {
        gj.ﱟ︈︈︄ = Pb;
      }
      if (gj.mode === Ki.ﱟ︇︆︄) {
        gj.ﱟ︂︆︄[Na](new gj.ﱞ︈︈︄(gj.ﱡ︂︆︄, 2, 2, 80, 80, 15));
      } else if (gj.mode === Ki.ﱟ︈︆︄) {
        gj.ﱟ︂︆︄[Na](new gj.ﱞ︈︈︄(gj.ﱡ︂︆︄, 2, 2, 150, 150, 15));
      } else if (gj.ﱟ︈︈︄ !== 0 && gj.ﱟ︈︈︄[Oa] > 0 && gj.ﱟ︈︈︄[0][Oa] > 3) {
        for (var e = 0; e < gj.ﱟ︈︈︄[Oa]; e++) {
          if ((E = gj.ﱟ︈︈︄[e])[0] !== 0) {
            break;
          }
          var i = Ki.ﱡ︂︆︄;
          switch (E[1]) {
            case "FOREST":
              i = gj.ﱡ︂︆︄;
              break;
            case "WINTER":
              i = gj.ﱣ︂︆︄;
              break;
            case "DESERT":
              i = gj.ﱠ︃︆︄;
              break;
            case "LAVA":
              i = gj.ﱢ︂︆︄;
              break;
            case "DRAGON":
              i = gj.ﱞ︃︆︄;
          }
          gj.ﱟ︂︆︄[Na](new gj.ﱞ︈︈︄(i, E[2], E[3], E[4], E[5], E[6], E[7]));
        }
      } else if (gj.ﱟ︈︈︄ !== 0) {
        for (e = 0; e < gj.ﱟ︈︈︄[Oa]; e++) {
          var k = gj.ﱟ︈︈︄[e];
          i = Ki.ﱡ︂︆︄;
          switch (k[0]) {
            case "FOREST":
              i = gj.ﱡ︂︆︄;
              break;
            case "WINTER":
              i = gj.ﱣ︂︆︄;
              break;
            case "DESERT":
              i = gj.ﱠ︃︆︄;
              break;
            case "LAVA":
              i = gj.ﱢ︂︆︄;
              break;
            case "DRAGON":
              i = gj.ﱞ︃︆︄;
          }
          if (g(i, k[1], k[2], 0, (e + 1) * 10) === 0) {
            break;
          }
        }
        if (e !== gj.ﱟ︈︈︄[Oa]) {
          continue;
        }
      }
      break;
    }
    render_minimap();
    for (var o = [], t = 0; t < gj.ﱢ︆︅︄; t++) {
      o[t] = new Array(gj.ﱣ︆︅︄);
      for (var u = 0; u < gj.ﱣ︆︅︄; u++) {
        o[t][u] = 0;
      }
    }
    for (t = 0; t < gj.ﱟ︂︆︄[Oa]; t++) {
      for (var z = (k = gj.ﱟ︂︆︄[t]).x2 / 100, A = k.y2 / 100, B = k.x1 / 100; B <= z; B++) {
        for (var C = k.y1 / 100; C <= A; C++) {
          o[C][B] = 1;
        }
      }
    }
    for (C = 0; C < gj.ﱢ︆︅︄; C++) {
      for (B = 0; B < gj.ﱣ︆︅︄; B++) {
        if (o[C][B] === 0) {
          f(o, B, C);
        }
      }
    }
    ej = {
      w: gj.ﱣ︆︅︄,
      ﱟ︁︋︁: gj.ﱢ︆︅︄,
      ﱡ︌︆︄: []
    };
    for (t = 0; t < gj.ﱢ︆︅︄; t++) {
      ej.ﱡ︌︆︄[t] = [];
    }
    if (gj.ﱟ︈︈︄ !== 0 && gj.ﱟ︈︈︄[Oa] > 0 && gj.ﱟ︈︈︄[0][Oa] > 3) {
      for (e = 0; e < gj.ﱟ︈︈︄[Oa]; e++) {
        if ((E = gj.ﱟ︈︈︄[e])[1] === "isl") {
          gj.ﱠ︉︈︄(E[2], E[3], E[4]);
        }
      }
    } else {
      gj.ﱟ︉︈︄(gj.ﱡ︈︈︄);
    }
    if (gj.ﱟ︈︈︄ !== 0 && gj.ﱟ︈︈︄[Oa] > 0 && gj.ﱟ︈︈︄[0][Oa] > 3) {
      var D = [];
      for (e = 0; e < gj.ﱟ︈︈︄[Oa]; e++) {
        var E;
        if ((E = gj.ﱟ︈︈︄[e])[0] === 1) {
          if (E[1] === "r") {
            F(E[3], E[2], "wtb", 0, 1);
            D[Na]([E[3], E[2], E[4]]);
          } else {
            F(E[4], E[3], E[1], E[2], E[5]);
          }
        }
      }
      m(0, D);
      D = [];
    } else {
      for (t = 0; t < gj.ﱟ︂︆︄[Oa]; t++) {
        k = gj.ﱟ︂︆︄[t];
        if (gj.mode === Ki.ﱟ︈︆︄) {
          if (k.t === gj.ﱡ︂︆︄) {
            s(t, k.w / 10000);
          }
        } else {
          if (k.t === gj.ﱡ︂︆︄) {
            v(t, k.w / 10000);
          }
          if (k.t === gj.ﱢ︂︆︄) {
            r(t, k.w / 10000);
          }
          if (k.t === gj.ﱣ︂︆︄) {
            p(t, k.w / 10000);
          }
          if (k.t === gj.ﱠ︃︆︄) {
            q(t, k.w / 10000);
          }
          if (k.t === gj.ﱞ︃︆︄) {
            n(t);
          }
        }
      }
    }
    hc("isl", 1);
    hc("wtb", 20);
    hc("la", 1);
    hc("c", 1);
    hc("s", 1);
    hc("f", 1);
    hc("p", 1);
    hc("g", 1);
    hc("d", 1);
    hc("a", 1);
    hc("re", 1);
    hc("m", 1);
    gc = [];
    gj.ﱣ︉︈︄(ej);
  };
  this.ﱢ︉︈︄ = F;
  this.ﱣ︉︈︄ = function (c) {
    for (var d = 0; d < this.ﱢ︆︅︄; d++) {
      for (var e = 0; e < this.ﱣ︆︅︄; e++) {
        if (!c.ﱡ︌︆︄[d]) {
          c.ﱡ︌︆︄[d] = [];
        }
        if (c.ﱡ︌︆︄[d][e]) {
          var f = c.ﱡ︌︆︄[d][e];
          if (f.de && f.de[Oa] > 0) {
            for (var g = 0; g < f.de[Oa]; g++) {
              if (f.de[g] && f.de[g][Oa] > 0) {
                f.de = f.de[g][0];
                if (g >= 41 && g <= 49) {
                  f.de.scale = 3;
                  var i = Math[A](Math[o]() * 3 + 1);
                  f.de.p = [];
                  for (var k = 0; k < i; k++) {
                    f.de.p[Na]({
                      x: Math[o]() * 120 - 60,
                      y: Math[o]() * 120 - 60,
                      angle: Math[o]() * Math[D] * 2,
                      ﱞ︅︇︄: 41 + Math[A](Math[o]() * 9)
                    });
                  }
                } else if (g >= 19 && g <= 26) {
                  f.de.scale = 3;
                  i = Math[A](Math[o]() * 3 + 1);
                  f.de.p = [];
                  for (k = 0; k < i; k++) {
                    f.de.p[Na]({
                      x: Math[o]() * 120 - 60,
                      y: Math[o]() * 120 - 60,
                      angle: Math[o]() * Math[D] * 2,
                      ﱞ︅︇︄: 19 + Math[A](Math[o]() * 8)
                    });
                  }
                } else if (g <= 15 || g >= 27 && g <= 40) {
                  f.de.angle = 0;
                  f.de.scale = 2;
                  f.de.ﱞ︅︇︄ = g;
                } else {
                  f.de.angle = Math[o]() * Math[D] * 2;
                  f.de.scale = 1;
                  f.de.ﱞ︅︇︄ = g;
                }
              }
            }
          }
          G(f, "p", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "t", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "s", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "g", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "d", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "b", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "f", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "sw", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "gw", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "dw", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "a", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "cs", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "plm", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "re", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "c", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
          G(f, "m", new Utils.ﱠ︃︋︁(false, 1, 1, 0, 10, 10));
        } else {
          c.ﱡ︌︆︄[d][e] = [];
        }
      }
    }
  };
  this.time = 0;
  this.ﱞ︉︆︄ = {
    translate: {
      x: 0,
      y: 0
    },
    init: 0,
    ﱠ︉︆︄: 0,
    now: 0
  };
  this.ﱞ︊︈︄ = function () {
    this.ﱞ︊︅︄ = [];
    this.ﱠ︀️︄[0] = [];
    this.ﱠ︀️︄[2] = [];
    this.ﱠ︀️︄[1] = [];
    this.ﱠ︀️︄[6] = [];
    this.ﱠ︀️︄[3] = [];
    this.ﱠ︀️︄[5] = [];
    this.ﱠ︀️︄[12] = [];
    this.ﱠ︀️︄[13] = [];
    this.ﱠ︀️︄[14] = [];
    this.ﱠ︀️︄[20] = [];
    this.ﱠ︀️︄[52] = [];
    this.ﱠ︀️︄[30] = [];
    this.ﱠ︀️︄[56] = [];
    this.ﱠ︀️︄[38] = [];
    this.ﱠ︀️︄[33] = [];
    this.ﱠ︀️︄[31] = [];
    this.ﱠ︀️︄[55] = [];
    this.ﱠ︀️︄[37] = [];
    this.ﱠ︀️︄[43] = [];
    this.ﱠ︀️︄[44] = [];
    this.ﱠ︀️︄[54] = [];
    this.ﱠ︀️︄[39] = [];
    this.ﱠ︀️︄[40] = [];
    this.ﱠ︀️︄[32] = [];
    this.ﱠ︀️︄[24] = [];
    this.ﱠ︀️︄[25] = [];
    this.ﱠ︀️︄[26] = [];
    this.ﱠ︀️︄[27] = [];
    this.ﱠ︀️︄[28] = [];
    this.ﱠ︀️︄[35] = [];
    this.ﱠ︀️︄[4] = [];
    this.ﱠ︀️︄[7] = [];
    this.ﱠ︀️︄[8] = [];
    this.ﱠ︀️︄[9] = [];
    this.ﱠ︀️︄[19] = [];
    this.ﱠ︀️︄[50] = [];
    this.ﱠ︀️︄[41] = [];
    this.ﱠ︀️︄[10] = [];
    this.ﱠ︀️︄[15] = [];
    this.ﱠ︀️︄[16] = [];
    this.ﱠ︀️︄[17] = [];
    this.ﱠ︀️︄[21] = [];
    this.ﱠ︀️︄[51] = [];
    this.ﱠ︀️︄[45] = [];
    this.ﱠ︀️︄[46] = [];
    this.ﱠ︀️︄[47] = [];
    this.ﱠ︀️︄[48] = [];
    this.ﱠ︀️︄[49] = [];
    this.ﱠ︀️︄[53] = [];
    this.ﱠ︀️︄[18] = [];
    this.ﱠ︀️︄[29] = [];
    this.ﱠ︀️︄[56] = [];
    this.ﱠ︀️︄[11] = [];
    this.ﱠ︀️︄[22] = [];
    this.ﱠ︀️︄[23] = [];
    this.ﱠ︀️︄[100] = [];
    this.ﱠ︀️︄[80] = [];
    this.ﱠ︀️︄[60] = [];
    this.ﱠ︀️︄[67] = [];
    this.ﱠ︀️︄[70] = [];
    this.ﱠ︀️︄[77] = [];
    this.ﱠ︀️︄[71] = [];
    this.ﱠ︀️︄[72] = [];
    this.ﱠ︀️︄[73] = [];
    this.ﱠ︀️︄[74] = [];
    this.ﱠ︀️︄[65] = [];
    this.ﱠ︀️︄[66] = [];
    this.ﱠ︀️︄[62] = [];
    this.ﱠ︀️︄[88] = [];
    this.ﱠ︀️︄[91] = [];
    this.ﱠ︀️︄[90] = [];
    this.ﱠ︀️︄[63] = [];
    this.ﱠ︀️︄[78] = [];
    this.ﱠ︀️︄[75] = [];
    this.ﱠ︀️︄[76] = [];
    this.ﱠ︀️︄[64] = [];
    this.ﱠ︀️︄[69] = [];
    this.ﱠ︀️︄[68] = [];
    this.ﱠ︀️︄[79] = [];
    this.ﱠ︀️︄[89] = [];
    this.ﱠ︀️︄[83] = [];
    this.ﱠ︀️︄[84] = [];
    this.ﱠ︀️︄[85] = [];
    this.ﱠ︀️︄[81] = [];
    this.ﱠ︀️︄[82] = [];
    this.ﱠ︀️︄[86] = [];
    this.ﱠ︀️︄[34] = [];
    this.ﱠ︀️︄[36] = [];
    this.ﱠ︀️︄[61] = [];
    this.ﱠ︀️︄[87] = [];
    this.ﱠ︀️︄[42] = [];
  };
  this.ﱠ︊︈︄ = function (c) {
    if (this.ﱞ︊︅︄[c]) {
      type = this.ﱞ︊︅︄[c].type;
      this.ﱞ︊︅︄[c] = null;
      for (var d = this.ﱠ︀️︄[type], e = 0; e < d[Oa]; e++) {
        if (d[e].ﱠ︊︅︄ == c) {
          return void d[u](e, 1);
        }
      }
    }
  };
  this.ﱟ︇︈︄ = function (c, d) {
    for (var e = 0; e < this.ﱠ︀️︄[56][Oa]; e++) {
      var f = this.ﱠ︀️︄[56][e];
      if (Math[A](f.x / 100) === d && Math[A](f.y / 100) === c) {
        return 1;
      }
    }
    return 0;
  };
  this.ﱞ︉︈︄ = function (c, d) {
    for (var e = 0; e < this.ﱠ︀️︄[30][Oa]; e++) {
      var f = this.ﱠ︀️︄[30][e];
      if (Math[A](f.x / 100) == c && Math[A](f.y / 100) == d) {
        return true;
      }
    }
    return false;
  };
  this.ﱟ︊︈︄ = function (c) {
    for (var d = 0; d < c[Oa]; d++) {
      b = c[d];
      if (b.angle != b.ﱟ︅︈︄) {
        var f = Math[D] * 2;
        b.angle = (b.angle + f) % f;
        b.ﱟ︅︈︄ = (b.ﱟ︅︈︄ + f) % f;
        if (b.angle != b.ﱟ︅︈︄) {
          var g = b.ﱟ︅︈︄ - b.angle;
          var i = Math[t](g);
          if (i > Math[D]) {
            i = Math[D] * 2 - i;
          }
          var k = i / Math[D] * 3 * Ki.ﱣ︎︇︄ * nj;
          if (g > Math[D]) {
            b.angle -= k;
          } else if (g < -Math[D]) {
            b.angle += k;
          } else if (g < 0) {
            b.angle -= k;
          } else {
            b.angle += k;
          }
          b.angle = (b.angle + f) % f;
          if (Math[t](b.angle - b.ﱟ︅︈︄) < k) {
            b.angle = b.ﱟ︅︈︄;
          }
        }
      }
      Math[A](b.r.y / 100);
      Math[A](b.r.x / 100);
      if (b.x != b.r.x || b.y != b.r.y) {
        if (b.action & 64) {
          b.action -= 64;
        }
        b.action |= 32;
        var m = Utils.ﱟ️︊︁(b, b.r) + Math[D];
        var n = nj * b.ﱡ️︎︄;
        var p = Utils.ﱣ️︊︁(n, m);
        if (Utils.ﱟ︎︊︁(p) < Utils.ﱟ︎︊︁(Utils.ﱢ︍︊︁(b, b.r))) {
          Utils.ﱢ️︊︁(b, p);
        } else {
          if (b.action & 32) {
            b.action -= 32;
          }
          b.action |= 64;
          Utils.ﱣ︍︊︁(b.r, b);
        }
      }
      if (b.ﱞ︀︇︄) {
        var q = b.bubbles;
        if ((z = q[Oa]) === 0 || z < 20 && q[z - 1].ﱣ︊︆︄ < 0.95) {
          q[Na]({
            id: Math[A](Math[o]() * sprite[534][0][Oa]),
            x: Math[A](b.x + Math[o]() * 80 - 40),
            y: Math[A](b.y + Math[o]() * 80 - 40),
            ﱣ︊︆︄: 1
          });
        }
        for (var r = 0; r < z; r++) {
          q[r].ﱣ︊︆︄ = Math[ba](0, q[r].ﱣ︊︆︄ - nj);
        }
        for (r = 0; r < z; r++) {
          if (q[r].ﱣ︊︆︄ === 0) {
            q[u](r, 1);
            break;
          }
        }
      }
      var s = 0;
      if (b.ﱟ︆︈︄ && dj.ﱢ︌︆︄) {
        var v = b.ﱞ︊︇︄;
        var z = v[Oa];
        if (b.ﱢ︅︈︄ > 0 && b.ﱠ︀︇︄ !== 221 && b.ﱠ︀︇︄ !== 222 && b.ﱠ︀︇︄ !== 224 && b.ﱠ︀︇︄ !== 223 && b.ﱠ︀︇︄ !== 91 && !b.ﱞ︀︇︄ && (s = 1, z === 0 || Utils.ﱡ️︊︁(v[z - 1], b) > 75)) {
          var B = -b.angle;
          var C = Math[e](B) * 45 * mb;
          var E = Math[za](B) * 45 * mb;
          v[Na]({
            x: b.x + C,
            y: b.y + E,
            r: 8,
            alpha: 0.8
          });
          v[Na]({
            x: b.x - C,
            y: b.y - E,
            r: 8,
            alpha: 0.8
          });
          v[Na]({
            x: b.x,
            y: b.y,
            r: 24,
            alpha: 1
          });
        }
        for (r = 0; r < z; r++) {
          v[r].alpha = Math[ba](0, v[r].alpha - nj / 2.2);
          v[r].r += nj * 20;
        }
        if (v[Oa] > 0 && v[0].alpha === 0) {
          v[u](0, 1);
        }
        var F = b.ﱣ︉︇︄;
        z = F[Oa];
        var G = -1;
        var H = Math[ba](0, Math[N](b.ﱡ︁︇︄));
        var I = Math[ba](0, Math[N](b.ﱟ︁︇︄));
        Math[ba](0, Math[N](b.ﱣ︁︇︄));
        var J = Math[ba](0, Math[N](b.ﱟ︌︇︄));
        var K = Math[ba](0, Math[N](b.ﱞ︆︈︄));
        if (b.ﱡ︁︇︄ > 0 || b.ﱣ︁︇︄ > 0) {
          G = 596;
        } else if (b.ﱞ︆︈︄ > 0) {
          G = 674;
        } else if (b.ﱟ︁︇︄ > 0) {
          G = 469;
        } else if (b.ﱟ︌︇︄ > 0) {
          G = 470;
        }
        if (b.ﱠ︀︇︄ === 219 && (H | I | J | K) == 1) {
          G = 222;
          var L = b.ﱟ︀︇︄ - Math[D] / 2;
          var M = 15;
          var O = 11;
          var P = 50;
        } else if (b.ﱠ︀︇︄ === 233 && (H | I | J | K) == 1) {
          G = 243;
          L = b.ﱟ︀︇︄ - Math[D] / 2;
          M = 21;
          O = 16;
          P = 50;
        } else if (b.ﱠ︀︇︄ === 220 && (H | I | J | K) == 1) {
          G = 228;
          L = b.ﱟ︀︇︄ - Math[D] / 2;
          var Q = Math[o]() * 50;
          M = 10 + Q;
          O = 0 + Q;
          P = 45;
        } else {
          L = b.angle;
          M = 15;
          O = 11;
          P = 50;
        }
        if (b.ﱠ︀︇︄ === 221 || b.ﱠ︀︇︄ === 222 || b.ﱠ︀︇︄ === 91 || b.ﱠ︀︇︄ === 223 || b.ﱠ︀︇︄ === 224 || b.ﱞ︀︇︄) ;else if (b.ﱠ︀︇︄ === 218) {
          if (z === 0 || Utils.ﱡ️︊︁(F[z - 1], b) > 10) {
            F[Na]({
              x: b.x,
              y: b.y,
              angle: b.ﱟ︀︇︄,
              alpha: 1,
              id: 220
            });
          }
        } else if (G != -1 && s === 0 && (z === 0 || Utils.ﱡ️︊︁(F[z - 1], b) > P)) {
          b.ﱡ︆︈︄++;
          if (Math[t](b.x - b.r.x) > 1 && Math[t](b.y - b.r.y) > 1) {
            if (b.r.x > b.x && b.r.y < b.y || b.r.x < b.x && b.r.y > b.y) {
              if (b.ﱡ︆︈︄ % 2) {
                C = -O * mb;
                E = -O * mb;
              } else {
                E = O * mb;
                C = O * mb;
              }
            } else if (b.ﱡ︆︈︄ % 2) {
              C = O * mb;
              E = -O * mb;
            } else {
              E = O * mb;
              C = -O * mb;
            }
          } else if (b.ﱡ︆︈︄ % 2) {
            C = Math[e](L) * M * mb;
            E = Math[za](L) * M * mb;
          } else {
            C = -Math[e](L) * M * mb;
            E = -Math[za](L) * M * mb;
          }
          F[Na]({
            x: b.x + C,
            y: b.y + E,
            angle: L + Math[D] / 2,
            alpha: 1,
            id: G
          });
        }
        for (r = 0; r < z; r++) {
          if (F[r].id === 220) {
            F[r].alpha = Math[ba](0, F[r].alpha - nj * 1.5);
          } else {
            F[r].alpha = Math[ba](0, F[r].alpha - nj / 2.85);
          }
        }
        if (F[Oa] > 0 && F[0].alpha === 0) {
          F[u](0, 1);
        }
      }
    }
  };
  this.update = function () {
    this.ﱟ︊︈︄(this.ﱠ︀️︄[0]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[80]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[60]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[67]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[70]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[77]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[71]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[72]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[73]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[74]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[61]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[62]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[88]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[91]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[90]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[63]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[78]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[75]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[76]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[64]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[68]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[65]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[66]);
    this.ﱟ︊︈︄(this.ﱠ︀️︄[69]);
  };
  this.ﱣ︍︆︄ = [];
  this.ﱣ︍︆︄[614] = new Utils.ﱠ︃︋︁(false, 1, 1.05, 1, 0.008, 0.008);
  this.ﱣ︍︆︄[613] = new Utils.ﱠ︃︋︁(false, 1, 1.08, 1, 0.006, 0.006);
  this.ﱣ︍︆︄[688] = new Utils.ﱠ︃︋︁(false, 1, 1.02, 1, 0.008, 0.008);
  this.ﱣ︍︆︄[689] = new Utils.ﱠ︃︋︁(false, 1, 1.08, 1, 0.006, 0.006);
  this.ﱠ︅︇︄ = [];
  this.ﱠ︅︇︄[0] = new Utils.ﱠ︃︋︁(false, 0.1, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[1] = new Utils.ﱠ︃︋︁(false, 0.4, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[2] = new Utils.ﱠ︃︋︁(false, 0.3, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[3] = new Utils.ﱠ︃︋︁(false, 0.8, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[4] = new Utils.ﱠ︃︋︁(false, 0.3, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[5] = new Utils.ﱠ︃︋︁(false, 0.8, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[6] = new Utils.ﱠ︃︋︁(false, 0.5, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[7] = new Utils.ﱠ︃︋︁(false, 0.9, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[8] = new Utils.ﱠ︃︋︁(false, 0.6, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[9] = new Utils.ﱠ︃︋︁(false, 0.2, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[10] = new Utils.ﱠ︃︋︁(false, 0.6, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[11] = new Utils.ﱠ︃︋︁(false, 0.4, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[12] = new Utils.ﱠ︃︋︁(false, 0.8, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[13] = new Utils.ﱠ︃︋︁(false, 0.2, 1, 0, 0.6, 0.6);
  this.ﱠ︅︇︄[14] = new Utils.ﱠ︃︋︁(false, 0.7, 1, 0, 0.6, 0.6);
}
function Ri(c, d, f, g) {
  this.id = c;
  this.ﱡ️︎︄ = (c + 5) * 8;
  this.ﱣ︊︆︄ = hb / 1366;
  this.x = d;
  this.y = f;
  this.c = Math[za](g);
  this.s = Math[e](g);
  this.alpha = 0;
}
function Si() {
  this.init = function () {};
  this.ﱣ︎︅︄ = {
    ﱡ︊︅︄: 1,
    ﱣ︊︅︄: 1,
    open: false
  };
  this.ﱟ︋︎︄ = {
    ﱡ︊︅︄: 1,
    ﱣ︊︅︄: -1,
    open: false
  };
  this.ﱡ︉︅︄ = {
    ﱣ︍︅︄: 0,
    ﱠ︋︅︄: 0,
    ﱡ︊︅︄: 1,
    ﱣ︊︅︄: -1,
    open: false
  };
  this.ﱢ︉︅︄ = {
    ﱞ︋︅︄: 0,
    ﱟ︌︅︄: 0,
    type: 0,
    ﱠ︌︅︄: 0,
    ﱡ︊︅︄: 1,
    ﱣ︊︅︄: -1,
    open: false
  };
  this.ﱣ︉︅︄ = {
    ﱞ︋︅︄: 0,
    ﱟ︋︅︄: 0,
    ﱠ︋︅︄: 0,
    ﱡ︊︅︄: 1,
    ﱣ︊︅︄: -1,
    open: false
  };
  this[N] = {
    ﱣ︊︅︄: -1,
    open: false
  };
  this.ﱟ︉︅︄ = {
    ﱠ︎︅︄: 0,
    ﱡ︊︅︄: 1,
    ﱣ︊︅︄: -1,
    open: false
  };
  this.ﱞ︀︇︄ = {
    enabled: false,
    delay: -1,
    ﱟ︌︎︄: false,
    now: -1,
    draw: Nh
  };
  this.ﱠ︉︅︄ = {
    id: -1,
    ﱠ︎︅︄: 0,
    ﱡ︊︅︄: 1,
    ﱣ︊︅︄: -1,
    open: false,
    ﱢ︎︎︄: false,
    ﱣ︎︎︄: false,
    ﱠ︀︆︄: false,
    ﱟ︀︆︄: false
  };
  this.ﱡ︊︈︄ = null;
  this.ﱠ︅︈︄ = true;
  this.reconnect = {
    enabled: false,
    rotate: 0
  };
  this.key = Utils.ﱢ︅︋︁("key", c.location.href);
  var e = Utils.ﱢ︅︋︁("egg", c.location.href);
  if (e) {
    dj.ﱡ︇︆︄ = parseInt(e);
  }
  this.beta = c.location.href[E]("http://starve.io/beta") === 0 ? 1 : 0;
  if (this.key && this.beta) {
    Cookies.set("starve_beta", this.key);
  } else if (this.beta) {
    this.key = Cookies.get("starve_beta");
  }
  this.ﱣ︊︈︄ = Cookies.get("starve_token") !== null ? Cookies.get("starve_token") : Utils.ﱣ︅︋︁(14);
  function f() {
    this.seed = 1;
    this.ﱢ︊︈︄ = 2;
    this.ﱞ︋︈︄ = 3;
    this.ﱠ︋︈︄ = 1;
    this.ﱟ︋︈︄ = 2;
    this.ﱡ︋︈︄ = 3;
    this.ﱣ︋︈︄ = function (c) {
      this.seed = 2 + Math[A](Math[o]() * Ki.ﱡ︇︎︁);
    };
    this.ﱢ︋︈︄ = function (c) {
      this.ﱢ︊︈︄ = 2 + Math[A](Math[o]() * Ki.ﱡ︇︎︁);
    };
    this.ﱞ︌︈︄ = function (c) {
      this.ﱞ︋︈︄ = 2 + Math[A](Math[o]() * Ki.ﱡ︇︎︁);
    };
    this.ﱠ︌︈︄ = function (c) {
      this.ﱠ︋︈︄ = 2 + Math[A](Math[o]() * Ki.ﱡ︇︎︁);
    };
    this.ﱟ︌︈︄ = function (c) {
      this.ﱟ︋︈︄ = 2 + Math[A](Math[o]() * Ki.ﱡ︇︎︁);
    };
    this.ﱡ︌︈︄ = function (c) {
      this.ﱡ︋︈︄ = 2 + Math[A](Math[o]() * Ki.ﱡ︇︎︁);
    };
    this.ﱣ︌︈︄ = function (c, e, f, g, i, k, m) {
      for (var n = 1; n < m;) {
        var p = n * f % 10000;
        var q = RANDOM[p];
        if (q < 0.1) {
          r += 50;
          n += 50;
        } else {
          var r = Math[A](q * g + i);
          if (n > k && n < m) {
            var s = Math[o]() > 0.5 ? nj * -10 : nj * 10;
            var t = r * e;
            this.ﱢ︌︈︄[p] = Math[ba](-Ki.ﱣ︃︈︄, Math[ta](Ki.ﱣ︃︈︄, this.ﱢ︌︈︄[p] + s));
            this.ﱞ︍︈︄[p] = Math[ba](-Ki.ﱢ︃︈︄, Math[ta](Ki.ﱢ︃︈︄, this.ﱞ︍︈︄[p] + s));
            if (t > 0) {
              gb[Y]();
              gb[J](n + hj.ﱡ︈︋︁.x + this.ﱞ︍︈︄[p], c + this.ﱢ︌︈︄[p] - Ki.ﱣ︃︈︄ * 0.8, t, 0, Math[D] * 2);
              if (gj.transition) {
                var u = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
                gb[d] = li(83, 156, 160, 236, 247, 249, u);
              } else {
                gb[d] = ["#ECF7F9", "#539CA0"][gj.time];
              }
              gb[xa]();
            }
          }
          n += r * 2;
        }
      }
    };
    this.ﱠ︍︈︄ = function (c, e, f, g, i, k, m) {
      for (var n = 1; n < m;) {
        var p = n * f % 10000;
        var q = RANDOM[p];
        if (q < 0.1) {
          r += 50;
          n += 50;
        } else {
          var r = Math[A](q * g + i);
          if (n > k && n < m) {
            var s = Math[o]() > 0.5 ? nj * -10 : nj * 10;
            var t = r * e;
            this.ﱟ︍︈︄[p] = Math[ba](-Ki.ﱣ︃︈︄, Math[ta](Ki.ﱣ︃︈︄, this.ﱟ︍︈︄[p] + s));
            this.ﱡ︍︈︄[p] = Math[ba](-Ki.ﱢ︃︈︄, Math[ta](Ki.ﱢ︃︈︄, this.ﱡ︍︈︄[p] + s));
            if (t > 0) {
              gb[Y]();
              gb[J](c + this.ﱟ︍︈︄[p] - Ki.ﱣ︃︈︄ * 0.8, n + hj.ﱡ︈︋︁.y + this.ﱡ︍︈︄[p], t, 0, Math[D] * 2);
              if (gj.transition) {
                var u = gj.time ? 1 - gj.ﱡ︅︇︄.ﱡ︃︋︁ : gj.ﱡ︅︇︄.ﱡ︃︋︁;
                gb[d] = li(83, 156, 160, 236, 247, 249, u);
              } else {
                gb[d] = ["#ECF7F9", "#539CA0"][gj.time];
              }
              gb[xa]();
            }
          }
          n += r * 2;
        }
      }
    };
    this.ﱢ︇︇︄ = function (c, d, e, f, g, i) {
      var k;
      g -= 30;
      i += 30;
      if ((k = -(e - Ki.ﱠ︆︇︄ - f - 2) / Ki.ﱞ︄︈︄) === 0) {
        this.ﱞ︌︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱣ︌︈︄(e, k, this.ﱞ︋︈︄, 18, 16, g, i);
      gb[ua] = 1;
      if ((k = -(c - Ki.ﱡ︆︇︄ - f + 500) / Ki.ﱟ︄︈︄) === 0) {
        this.ﱣ︋︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱣ︌︈︄(c, k, this.seed, 12, 10, g, i);
      gb[ua] = 1;
      if (d !== -1) {
        if ((k = -(d - Ki.ﱣ︆︇︄ - f + 698) / Ki.ﱣ︄︈︄) <= 0.01) {
          this.ﱢ︋︈︄();
        }
        gb[ua] = Utils.ﱟ︂︋︁(k);
        this.ﱣ︌︈︄(d, k, this.ﱢ︊︈︄, 6, 6, g, i);
        gb[ua] = 1;
      }
    };
    this.ﱡ︇︇︄ = function (c, d, e, f, g, i) {
      var k;
      g -= 30;
      i += 30;
      if ((k = -(-e + Ki.ﱠ︆︇︄ + f + 2) / Ki.ﱞ︄︈︄) === 0) {
        this.ﱞ︌︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱣ︌︈︄(e, k, this.ﱞ︋︈︄, 18, 16, g, i);
      gb[ua] = 1;
      if ((k = -(-c + Ki.ﱡ︆︇︄ + f) / Ki.ﱟ︄︈︄) === 0) {
        this.ﱣ︋︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱣ︌︈︄(c, k, this.seed, 12, 10, g, i);
      gb[ua] = 1;
      if (d !== -1) {
        if ((k = -(-d + Ki.ﱣ︆︇︄ + f) / Ki.ﱣ︄︈︄) <= 0.01) {
          this.ﱢ︋︈︄();
        }
        gb[ua] = Utils.ﱟ︂︋︁(k);
        this.ﱣ︌︈︄(d, k, this.ﱢ︊︈︄, 6, 6, g, i);
        gb[ua] = 1;
      }
    };
    this.ﱟ︇︇︄ = function (c, d, e, f, g, i) {
      var k;
      g -= 30;
      i += 30;
      if ((k = -(-e + Ki.ﱠ︆︇︄ + f + 2) / Ki.ﱞ︄︈︄) === 0) {
        this.ﱞ︌︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱠ︍︈︄(e, k, this.ﱞ︋︈︄, 18, 16, g, i);
      gb[ua] = 1;
      if ((k = -(-c + Ki.ﱡ︆︇︄ + f) / Ki.ﱟ︄︈︄) === 0) {
        this.ﱣ︋︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱠ︍︈︄(c, k, this.seed, 12, 10, g, i);
      gb[ua] = 1;
      if (d !== -1) {
        if ((k = -(-d + Ki.ﱣ︆︇︄ + f) / Ki.ﱣ︄︈︄) <= 0.01) {
          this.ﱢ︋︈︄();
        }
        gb[ua] = Utils.ﱟ︂︋︁(k);
        this.ﱠ︍︈︄(d, k, this.ﱢ︊︈︄, 6, 6, g, i);
        gb[ua] = 1;
      }
    };
    this.ﱣ︇︇︄ = function (c, d, e, f, g, i) {
      var k;
      g -= 30;
      i += 30;
      if ((k = -(e - Ki.ﱠ︆︇︄ - f - 2) / Ki.ﱞ︄︈︄) === 0) {
        this.ﱞ︌︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱠ︍︈︄(e, k, this.ﱞ︋︈︄, 18, 16, g, i);
      gb[ua] = 1;
      if ((k = -(c - Ki.ﱡ︆︇︄ - f + 500) / Ki.ﱟ︄︈︄) === 0) {
        this.ﱣ︋︈︄();
      }
      gb[ua] = Utils.ﱟ︂︋︁(k);
      this.ﱠ︍︈︄(c, k, this.seed, 12, 10, g, i);
      gb[ua] = 1;
      if (d !== -1) {
        if ((k = -(d - Ki.ﱣ︆︇︄ - f + 698) / Ki.ﱣ︄︈︄) <= 0.01) {
          this.ﱢ︋︈︄();
        }
        gb[ua] = Utils.ﱟ︂︋︁(k);
        this.ﱠ︍︈︄(d, k, this.ﱢ︊︈︄, 6, 6, g, i);
        gb[ua] = 1;
      }
    };
    this.ﱣ︅︇︄ = {
      r: new Utils.ﱠ︄︋︁(Utils.ﱠ︂︋︁, 0, 10, Ki.ﱟ︆︇︄, Ki.ﱟ︆︇︄, Ki.ﱞ︄︈︄),
      ﱣ︍︈︄: new Utils.ﱠ︄︋︁(Utils.ﱡ︂︋︁, 0, 10, Ki.ﱞ︄︈︄, Ki.ﱞ︄︈︄, Ki.ﱟ︆︇︄)
    };
    this.ﱢ︅︇︄ = {
      r: new Utils.ﱠ︄︋︁(Utils.ﱢ︂︋︁, 0, 10, Ki.ﱠ︄︈︄, Ki.ﱠ︄︈︄, Ki.ﱟ︄︈︄),
      ﱣ︍︈︄: new Utils.ﱠ︄︋︁(Utils.ﱟ︂︋︁, 0, 10, Ki.ﱟ︄︈︄, Ki.ﱟ︄︈︄, Ki.ﱠ︄︈︄)
    };
    this.ﱞ︆︇︄ = {
      r: new Utils.ﱠ︄︋︁(Utils.ﱞ︃︋︁, 0, 10, Ki.ﱡ︄︈︄, Ki.ﱡ︄︈︄, Ki.ﱣ︄︈︄),
      ﱣ︍︈︄: new Utils.ﱠ︄︋︁(Utils.ﱟ︂︋︁, 0, 10, Ki.ﱣ︄︈︄, Ki.ﱣ︄︈︄, Ki.ﱡ︄︈︄)
    };
    this.ﱢ︍︈︄ = function (c) {
      if (c.r.x === c.r.ex) {
        if (c.ﱣ︍︈︄.x === c.ﱣ︍︈︄.ex) {
          return c.r;
        } else {
          return c.ﱣ︍︈︄;
        }
      } else {
        return c.r;
      }
    };
    this.t = function (c) {
      var d;
      if (c.r.x === c.r.ex) {
        if (c.ﱣ︍︈︄.x === c.ﱣ︍︈︄.ex) {
          c.r.ﱢ︄︋︁();
          c.ﱣ︍︈︄.ﱢ︄︋︁();
          d = c.r;
        } else {
          d = c.ﱣ︍︈︄;
        }
      } else {
        d = c.r;
      }
      d.ﱞ︅︋︁(d.ex);
      return d;
    };
    this.ﱟ︍︈︄ = [];
    this.ﱡ︍︈︄ = [];
    this.ﱢ︌︈︄ = [];
    this.ﱞ︍︈︄ = [];
    this.init = function () {
      for (var c = 0; c < 10000; c++) {
        this.ﱟ︍︈︄[c] = Math[A](RANDOM[c] * Ki.ﱣ︃︈︄);
        this.ﱡ︍︈︄[c] = Math[A](RANDOM[c] * Ki.ﱢ︃︈︄);
        this.ﱢ︌︈︄[c] = Math[A](RANDOM[c] * Ki.ﱣ︃︈︄);
        this.ﱞ︍︈︄[c] = Math[A](RANDOM[c] * Ki.ﱢ︃︈︄);
      }
      this.ﱣ︅︇︄.r.x = this.ﱣ︅︇︄.r.ex;
      this.ﱢ︅︇︄.r.ﱡ︄︋︁ = 3.5;
      this.ﱞ︆︇︄.r.ﱡ︄︋︁ = 2;
    };
    this.init();
  }
  this.ﱞ︎︈︄ = Cookies.get("starve_token_id") !== null ? Cookies.get("starve_token_id") : "";
  this.id = 0;
  this.ﱠ︊︅︄ = 0;
  this.ﱡ︃︆︄ = 0;
  this.ﱠ︎︈︄ = {
    ﱟ︎︈︄: "",
    ﱞ︈︆︄: 0,
    ﱡ︎︈︄: 0,
    ﱣ︎︈︄: 0
  };
  this.ﱢ︎︈︄ = {
    connected: 0,
    ﱞ︄︋︁: new Date().getTime()
  };
  this.ﱢ️︅︄ = [];
  this.ﱣ︀︆︄ = function (c) {
    for (var d = 0; d < this.ﱢ️︅︄[Oa]; d++) {
      if (this.ﱢ️︅︄[d] == c) {
        return true;
      }
    }
    return false;
  };
  this.ﱞ️︈︄ = function (c) {
    return this.ﱣ︀︆︄(c) || c == hj.id;
  };
  this.ﱠ️︈︄ = {
    delay: 0,
    time: 0,
    value: 0,
    open: false,
    draw: function () {
      if (this.open) {
        var c = new Date().getTime();
        this.time = Math[A]((c - this.delay) / 1000);
        if (this.time < 60) {
          jj.ﱠ️︈︄.button.draw(gb);
        } else {
          document[fa]("shop_starterkit")[Z].display = "none";
          this.open = false;
        }
      }
    }
  };
  this.ﱞ️︅︄ = {
    id: -1,
    ﱡ︊︅︄: -1,
    ﱢ︎︎︄: 0,
    ﱣ︋︎︄: new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1 / 30, 1),
    ﱠ︌︎︄: false
  };
  this.ﱡ︉︆︄ = {
    ﱣ︋︎︄: new Utils.ﱠ︃︋︁(false, 0, 1, 0, 0.2, 1),
    ﱠ︌︎︄: false
  };
  this.ﱟ︉︆︄ = {
    ﱣ︋︎︄: new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1, 1),
    ﱠ︌︎︄: false
  };
  this.ﱣ︉︆︄ = {
    ﱣ︋︎︄: new Utils.ﱠ︃︋︁(false, 0, 1, 0, 0.1, 1),
    ﱠ︌︎︄: false
  };
  this.ﱡ︈︋︁ = new Utils.ﱠ︅︋︁(Utils.ﱞ︂︋︁, 0, 0.4, 0, 0, jb, kb, jb, kb);
  this.ﱡ︈︋︁.delay = 0;
  this.ﱡ︈︋︁.ﱟ️︈︄ = 0;
  this.ﱡ︈︋︁.update = function () {
    if (this.ﱟ️︈︄ > 0) {
      this.ﱟ️︈︄ -= nj;
    } else {
      var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
      if (c) {
        this.delay = 0;
        var d = Math[ba](Math[ta](jb - c.x, -2), 2 - gj.w + hb);
        var e = Math[ba](Math[ta](kb - c.y, -2), 2 - gj.ﱟ︁︋︁ + ib);
        this.ﱞ︅︋︁({
          x: d,
          y: e
        });
      } else {
        this.delay += nj;
        if (this.delay > 3) {
          this.delay = 0;
          if (!hj.reconnect.enabled) {
            client.ﱡ️︈︄();
          }
        }
      }
    }
  };
  this.ﱡ︈︋︁.w = screen.width;
  this.ﱡ︈︋︁.ﱟ︁︋︁ = screen.height;
  this.ﱡ︈︋︁.ﱟ︈︋︁ = this.ﱡ︈︋︁.w;
  this.ﱡ︈︋︁.ﱣ︈︋︁ = this.ﱡ︈︋︁.ﱟ︁︋︁;
  this.ﱡ︈︋︁.rx = 0;
  this.ﱡ︈︋︁.ry = 0;
  this.ﱡ︈︋︁.ﱣ️︈︄ = 0;
  this.ﱡ︈︋︁.ﱢ️︈︄ = 0;
  this.ﱡ︈︋︁.ﱞ︀︉︄ = function (c, d) {
    this.x = -Math[ta](Math[ba](-gj.ﱠ︈︇︄ * 2, c - gj.ﱠ︈︇︄ - this.ﱟ︈︋︁ / 2), gj.w - this.ﱟ︈︋︁);
    this.y = -Math[ta](Math[ba](-gj.ﱟ︈︇︄ * 2, d - (gj.ﱟ︈︇︄ + this.ﱣ︈︋︁) / 2), gj.ﱟ︁︋︁ - this.ﱣ︈︋︁ + gj.ﱟ︈︇︄);
    this.ex = this.x;
    this.ﱡ︅︋︁ = this.y;
  };
  this.control = {
    angle: 0,
    ﱣ︋︎︄: 0,
    ﱠ︀︉︄: 0,
    ﱡ︂︇︄: 0,
    attack: 0,
    update: function () {
      var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
      if (c) {
        var d = {
          x: hj.ﱡ︈︋︁.x + c.x,
          y: hj.ﱡ︈︋︁.y + c.y
        };
      } else {
        d = lb;
      }
      var e = Utils.ﱟ️︊︁(mj.ﱟ︅︇︄, d);
      var f = false;
      this.ﱡ︂︇︄ += nj;
      if (!mj.state && c && !(c.action & 16) && this.ﱡ︂︇︄ > 0.2) {
        this.attack = 1;
        f = true;
        this.ﱡ︂︇︄ = 0;
        var g = Math[D] * 2;
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([4, Math[A]((e + g) % g * 255 / g)]));
      }
      if (c) {
        c.angle = e;
        c.ﱟ︅︈︄ = e;
      }
      if (!f && (this.ﱣ︋︎︄ += nj, this.ﱣ︋︎︄ > 0.2 && (this.ﱣ︋︎︄ = 0, Math[t](this.angle - e) > 0.005))) {
        g = Math[D] * 2;
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([3, Math[A]((e + g) % g * 255 / g)]));
        this.angle = e;
      }
      if (!hj.ﱡ︀︉︄.open && !hj.ﱣ︀︉︄.open) {
        var i = 0;
        if (lj.ﱢ︀︉︄()) {
          i |= 1;
        }
        if (lj.ﱞ︁︉︄()) {
          i |= 2;
        }
        if (lj.ﱠ︁︉︄()) {
          i |= 4;
        }
        if (lj.ﱟ︁︉︄()) {
          i |= 8;
        }
        if (this.ﱠ︀︉︄ != i) {
          client.ﱡ︁︉︄(i);
        }
        this.ﱠ︀︉︄ = i;
      }
    }
  };
  this.ﱟ︅︆︄ = {
    c: 1,
    ﱣ︍︈︄: 1,
    ﱟ︁︋︁: 1,
    t: 1,
    ﱟ︃︋︁: 1,
    ﱣ︁︉︄: 1,
    ﱠ︋︆︄: new Utils.ﱠ︃︋︁(true, 0, 1, 0, 3, 3),
    ﱢ︊︆︄: new Utils.ﱠ︃︋︁(true, 0, 1, 0, 2, 2),
    ﱞ︋︆︄: new Utils.ﱠ︃︋︁(true, 0, 1, 0, 3, 3),
    ﱡ︋︆︄: new Utils.ﱠ︃︋︁(true, 0, 1, 0, 3, 3),
    ﱣ︋︆︄: new Utils.ﱠ︃︋︁(true, 0, 1, 0, 3, 3),
    ﱟ︋︆︄: new Utils.ﱠ︃︋︁(true, 0, 1, 0, 3, 3),
    ﱠ︅︆︄: new Utils.ﱠ︄︋︁(Utils.ﱞ︂︋︁, 0, 1, 0, 0, 1),
    ﱣ︊︆︄: new Utils.ﱠ︄︋︁(Utils.ﱞ︂︋︁, 0, 1, 0, 0, 1),
    ﱡ︅︆︄: new Utils.ﱠ︄︋︁(Utils.ﱞ︂︋︁, 0, 1, 0, 0, 1),
    ﱣ︅︆︄: new Utils.ﱠ︄︋︁(Utils.ﱞ︂︋︁, 0, 1, 0, 0, 1),
    ﱢ︅︆︄: new Utils.ﱠ︄︋︁(Utils.ﱞ︂︋︁, 0, 1, 0, 0, 1),
    ﱞ︆︆︄: new Utils.ﱠ︄︋︁(Utils.ﱞ︂︋︁, 0, 1, 0, 0, 1),
    update: function () {
      this.ﱠ︋︆︄.update();
      this.ﱢ︊︆︄.update();
      this.ﱞ︋︆︄.update();
      this.ﱡ︋︆︄.update();
      this.ﱣ︋︆︄.update();
      this.ﱟ︋︆︄.update();
      this.ﱠ︅︆︄.ﱞ︅︋︁(this.c);
      this.ﱣ︊︆︄.ﱞ︅︋︁(this.ﱣ︍︈︄);
      this.ﱡ︅︆︄.ﱞ︅︋︁(this.ﱟ︁︋︁);
      this.ﱣ︅︆︄.ﱞ︅︋︁(this.t);
      this.ﱢ︅︆︄.ﱞ︅︋︁(this.ﱟ︃︋︁);
      this.ﱞ︆︆︄.ﱞ︅︋︁(this.ﱣ︁︉︄);
    }
  };
  this.ﱢ︁︆︄ = false;
  this.ﱠ️︅︄ = false;
  this.ﱟ️︅︄ = false;
  this.ﱠ︆︈︄ = false;
  this.ﱞ︁︆︄ = {
    max: Ki.ﱢ︁︈︄,
    ﱢ︁︉︄: 0,
    ﱢ︂︇︄: 0,
    n: [],
    ﱠ︂︆︄: [],
    ﱞ︂︉︄: function (c, d) {
      if (c === 1) {
        this.ﱢ︂︇︄ = Ki.ﱞ︂︈︄;
      }
      this.ﱢ︁︉︄ += d;
      this[ba] = Ki.ﱢ︁︈︄ + this.ﱢ︁︉︄ + this.ﱢ︂︇︄;
    },
    ﱠ︂︉︄: {
      item: -1,
      ﱡ︃︉︂: null,
      ﱟ︂︉︄: 0,
      ﱡ︂︉︄: 0,
      ﱣ︌︇︄: -1,
      ﱢ︌︇︄: -1,
      move: function (c) {
        if (!(!this.ﱟ︂︉︄ || c.x === this.ﱣ︌︇︄ && c.y === this.ﱢ︌︇︄)) {
          this.ﱡ︂︉︄ = 1;
        }
      },
      start: function (c, d) {
        this.ﱣ︌︇︄ = d.x;
        this.ﱢ︌︇︄ = d.y;
        this.item = c;
        this.ﱡ︃︉︂ = hj.ﱞ︁︆︄.ﱠ︂︆︄[c].info.ﱡ︃︉︂[2];
        this.ﱟ︂︉︄ = 1;
      },
      stop: function () {
        this.ﱟ︂︉︄ = 0;
        this.ﱡ︂︉︄ = 0;
        this.ﱣ︌︇︄ = -1;
        this.ﱢ︌︇︄ = -1;
      },
      release: function () {
        var c = -1;
        var d = hj.ﱞ︁︆︄.ﱠ︂︆︄;
        var e = 0;
        if (this.ﱟ︂︉︄ && this.ﱡ︂︉︄) {
          for (var f = 0; f < d[Oa]; f++) {
            if (d[f].info.state === zi) {
              c = f;
              break;
            }
          }
          if (c !== -1 && c !== this.item && d[this.item]) {
            e = 1;
            var g = d[c];
            d[c] = d[this.item];
            d[this.item] = g;
            jj.ﱣ︂︉︄();
          }
        }
        this.stop();
        return e;
      },
      draw: function (c, d) {
        if (this.ﱟ︂︉︄ && this.ﱡ︂︉︄) {
          Yf(gb, this.ﱡ︃︉︂, Math[A](c - this.ﱡ︃︉︂.width / 2), Math[A](d - this.ﱡ︃︉︂.height / 2));
        }
      }
    },
    ﱢ︂︉︄: function (c) {
      for (g = 0; g < c[Oa]; g++) {
        if (this.n[c[g][0]] == c[g][1]) {
          return true;
        }
      }
      return false;
    },
    ﱢ︀︆︄: function (c) {
      for (var d = 0; d < this.ﱠ︂︆︄[Oa]; d++) {
        if (this.ﱠ︂︆︄[d].id == c) {
          return d;
        }
      }
      return -1;
    },
    ﱞ︃︉︄: function (c, d) {
      this.n[c] = 0;
      this.ﱠ︂︆︄[u](d, 1);
      jj.ﱣ︂︉︄();
    },
    ﱠ︃︉︄: function (c, d, e) {
      update = true;
      this.n[c] = Math[ba](0, this.n[c] - d);
      if (!this.n[c] && e >= 0) {
        this.ﱞ︃︉︄(c, e);
      }
    }
  };
  this.ﱟ︃︉︄ = {
    enabled: false,
    translate: {
      x: 0,
      y: 0
    },
    ﱡ︃︉︄: function () {
      if (!(gj.mode != Ki.ﱠ︇︆︄ || hj.ﱠ️︅︄)) {
        hj.ﱟ︃︉︄.enabled = !hj.ﱟ︃︉︄.enabled;
        if (hj.ﱟ︃︉︄.enabled) {
          jj.options.ﱣ︃︉︄.display = "inline-block";
        } else {
          jj.options.ﱣ︃︉︄.display = "none";
        }
      }
    }
  };
  jj.options.ﱣ︃︉︄.display = "none";
  this.ﱢ︄︆︄ = {
    enabled: false,
    translate: {
      x: 0,
      y: 0
    },
    delay: 0,
    ﱡ︃︉︄: function () {
      hj.ﱢ︄︆︄.enabled = !hj.ﱢ︄︆︄.enabled;
      if (hj.ﱢ︄︆︄.enabled) {
        jj.options.ﱢ︃︉︄.display = "inline-block";
      } else {
        jj.options.ﱢ︃︉︄.display = "none";
      }
    },
    update: function () {
      if (!(!this.enabled || hj.ﱟ︌︉︂.id >= 0 || jj.ﱞ︄︉︄.open)) {
        this.delay += nj;
        if (this.delay > 2) {
          this.delay = 0;
          if (hj.ﱟ︅︆︄.ﱟ︁︋︁ < 0.35) {
            if (hj.ﱞ︁︆︄.n[104]) {
              client.ﱠ︄︉︄(104, hj.ﱞ︁︆︄.ﱢ︀︆︄(104));
            } else if (hj.ﱞ︁︆︄.n[186]) {
              client.ﱠ︄︉︄(186, hj.ﱞ︁︆︄.ﱢ︀︆︄(186));
            } else if (hj.ﱞ︁︆︄.n[190]) {
              client.ﱠ︄︉︄(190, hj.ﱞ︁︆︄.ﱢ︀︆︄(190));
            } else if (hj.ﱞ︁︆︄.n[183]) {
              client.ﱠ︄︉︄(183, hj.ﱞ︁︆︄.ﱢ︀︆︄(183));
            } else if (hj.ﱞ︁︆︄.n[201]) {
              client.ﱠ︄︉︄(201, hj.ﱞ︁︆︄.ﱢ︀︆︄(201));
            } else if (hj.ﱞ︁︆︄.n[199]) {
              client.ﱠ︄︉︄(199, hj.ﱞ︁︆︄.ﱢ︀︆︄(199));
            } else if (hj.ﱞ︁︆︄.n[203]) {
              client.ﱠ︄︉︄(203, hj.ﱞ︁︆︄.ﱢ︀︆︄(203));
            } else if (hj.ﱞ︁︆︄.n[137]) {
              client.ﱠ︄︉︄(137, hj.ﱞ︁︆︄.ﱢ︀︆︄(137));
            } else if (hj.ﱞ︁︆︄.n[111]) {
              client.ﱠ︄︉︄(111, hj.ﱞ︁︆︄.ﱢ︀︆︄(111));
            } else if (hj.ﱞ︁︆︄.n[132]) {
              client.ﱠ︄︉︄(132, hj.ﱞ︁︆︄.ﱢ︀︆︄(132));
            } else if (hj.ﱞ︁︆︄.n[127]) {
              client.ﱠ︄︉︄(127, hj.ﱞ︁︆︄.ﱢ︀︆︄(127));
            } else if (hj.ﱞ︁︆︄.n[139]) {
              client.ﱠ︄︉︄(139, hj.ﱞ︁︆︄.ﱢ︀︆︄(139));
            } else if (hj.ﱞ︁︆︄.n[130]) {
              client.ﱠ︄︉︄(130, hj.ﱞ︁︆︄.ﱢ︀︆︄(130));
            } else if (hj.ﱞ︁︆︄.n[191]) {
              client.ﱠ︄︉︄(191, hj.ﱞ︁︆︄.ﱢ︀︆︄(191));
            }
          } else if (hj.ﱟ︅︆︄.t < 0.35 && hj.ﱞ︁︆︄.n[121]) {
            client.ﱠ︄︉︄(121, hj.ﱞ︁︆︄.ﱢ︀︆︄(121));
          }
        }
      }
    }
  };
  jj.options.ﱢ︃︉︄.display = "none";
  this.ﱟ︌︉︂ = {
    id: -1,
    ﱠ︄︉︂: -1,
    ﱣ︋︎︄: new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1, 1),
    ﱢ︉︆︄: false,
    ﱞ︊︆︄: -1,
    mode: 0,
    ﱟ︌︎︄: [],
    ﱠ︊︆︄: [],
    workbench: false,
    fire: false,
    water: false,
    ﱟ︋︎︄: false,
    ﱟ︄︉︄: function () {
      this.mode = this.mode === 0 ? 1 : 0;
    },
    ﱡ︄︉︄: function (c) {
      this.workbench = c;
      var d = jj.ﱞ︄︉︄;
      if (d.open) {
        d.ﱣ︄︉︄(d.button);
      }
      this.update();
    },
    ﱢ︄︉︄: function (c) {
      var d = Wb[c];
      this.id = c;
      this.ﱢ︉︆︄ = true;
      gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
      this.ﱣ︋︎︄.ﱣ︃︋︁ = d.time * 8;
      this.ﱠ︄︉︂ = d.ﱠ︄︉︂;
    },
    ﱞ︅︉︄: function (c) {
      var d = Wb[c];
      this.id = c;
      this.ﱢ︉︆︄ = true;
      var e = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
      if (e && e.ﱢ️︎︄ == 28) {
        this.ﱣ︋︎︄.ﱣ︃︋︁ = d.time * 3;
      } else {
        this.ﱣ︋︎︄.ﱣ︃︋︁ = d.time;
      }
      this.ﱠ︄︉︂ = d.ﱠ︄︉︂;
      for (var f = 0; f < d.r[Oa]; f++) {
        var g = d.r[f];
        hj.ﱞ︁︆︄.ﱠ︃︉︄(g[0], g[1], hj.ﱞ︁︆︄.ﱢ︀︆︄(g[0]));
      }
      jj.ﱣ︂︉︄();
    },
    update: function () {
      this.ﱠ︊︆︄ = [];
      if (jj.ﱞ︉︅︄.ﱟ︌︉︂ === 1) {
        jj.ﱞ︉︅︄.display = 0;
      }
      for (var c in Wb) {
        var d = Wb[c];
        var e = true;
        if (d.r) {
          for (var f = 0; f < d.r[Oa]; f++) {
            if (hj.ﱞ︁︆︄[ba] >= Ki.ﱟ︈︅︄ && d.id === 100) {
              e = false;
              break;
            }
            if (d.w > this.workbench || d.f > this.fire || d.ﱟ︃︋︁ > this.water || d.e > this.ﱟ︋︎︄) {
              e = false;
              break;
            }
            var g = d.r[f];
            if (!hj.ﱞ︁︆︄.n[g[0]] || hj.ﱞ︁︆︄.n[g[0]] < g[1]) {
              e = false;
              break;
            }
          }
          if (e) {
            this.ﱠ︊︆︄[Na](jj.ﱠ︅︉︄[d.id]);
          }
        }
      }
      jj.ﱟ︅︉︄();
      jj.ﱡ︅︉︄();
      jj.ﱣ︅︉︄();
      jj.ﱢ︅︉︄();
      jj.ﱞ︆︉︄();
      jj.ﱠ︆︉︄();
      jj[N].ﱟ︆︉︄();
    },
    ﱢ︄︋︁: function () {
      this.id = -1;
      this.ﱢ︉︆︄ = false;
      this.ﱣ︋︎︄.ﱡ︃︋︁ = 0;
      this.ﱣ︋︎︄.ﱟ︃︋︁ = false;
      this.update();
    }
  };
  this.ﱡ︆︉︄ = {
    message: undefined,
    draw: Oh
  };
  this.alert = {
    ﱣ︋︎︄: new Utils.ﱠ︃︋︁(false, 1, 1, 0, 4, 0.3),
    text: "",
    ﱟ︌︎︄: null,
    draw: Ph,
    list: []
  };
  this.ﱟ︆︆︄ = {
    ﱢ︆︆︄: document[p]("canvas"),
    ﱣ︆︆︄: [],
    update: true,
    translate: {
      x: 0,
      y: 0
    },
    sort: function () {
      for (var c = [], d = gj.players, e = 0; e < d[Oa]; e++) {
        if (d[e].ﱠ︅︈︄) {
          c[Na]({
            id: e,
            s: d[e].ﱞ︈︆︄
          });
        }
      }
      c[Pa](function (c, d) {
        return d.s - c.s;
      });
      this.ﱣ︆︆︄ = [];
      for (e = 0; e < c[Oa] && e < 10; e++) {
        this.ﱣ︆︆︄[Na](c[e].id);
      }
      this.update = true;
    },
    init: function (c) {
      for (var d = gj.players, e = 0; e < d[Oa]; e++) {
        d[e].ﱞ︈︆︄ = 0;
      }
      d[hj.id].ﱞ︈︆︄ = Utils.ﱣ︁︋︁(c[1]);
      this.ﱣ︆︆︄ = [];
      for (e = 0; e < c[2][Oa]; e++) {
        this.ﱣ︆︆︄[Na](c[2][e][0]);
        d[c[2][e][0]].ﱞ︈︆︄ = Utils.ﱣ︁︋︁(c[2][e][1]);
      }
      this.update = true;
    }
  };
  this.ﱟ︆︆︄.ﱢ︆︆︄.width = mb * 180;
  this.ﱟ︆︆︄.ﱢ︆︆︄.height = mb * 300;
  this.ﱟ︆︆︄.ﱞ︇︆︄ = this.ﱟ︆︆︄.ﱢ︆︆︄[T]("2d");
  this.ﱣ︀︉︄ = {
    open: false,
    input: document[fa]("commandInput"),
    ﱣ︆︉︄: document[fa]("commandsBox"),
    [Z]: document[fa]("commandMainBox")[Z],
    ﱢ︆︉︄: function (c) {
      this.ﱣ︆︉︄.innerHTML += c;
    },
    update: function () {
      this[Z].left = Math[A](hb / 2 - 300) + "px";
      this[Z].top = Math[A](ib / 2 - 250) + "px";
    },
    ﱞ︇︉︄: function () {
      this.ﱣ︆︉︄.innerHTML = "";
    },
    ﱠ︇︉︄: function () {
      this.open = false;
      this[Z].display = "none";
    },
    ﱟ︇︉︄: function (c) {
      for (var d = "<table class=\"tableList\">", e = 0; e < c[Oa]; e++) {
        if (e % 3 == 0) {
          d += "<tr>";
        }
        d += "<td class=\"tableList\">" + c[e] + "</td>";
        if (!((e + 1) % 3 != 0 && e + 1 !== c[Oa])) {
          d += "</tr>";
        }
      }
      return d += "</table>";
    },
    ﱡ︇︉︄: function (c, d, e, f) {
      var g = "<div class=commandWritten>" + (c = c || "");
      g += (d = d || "") ? "<div class=commandValidated>" : "<div class=commandUnknown>";
      g += (e = e || "") + "</div>" + (f = f || "") + "</div>";
      this.ﱢ︆︉︄(g);
      this.ﱣ︇︉︄();
    },
    ﱣ︇︉︄: function () {
      this.ﱣ︆︉︄.scrollTop = this.ﱣ︆︉︄.scrollHeight;
    },
    ﱢ︇︉︄: function (c) {
      switch (c) {
        case "clean":
          this.ﱞ︇︉︄();
          return true;
        case "list":
          for (var d = "", e = gj.players, f = 0; f < e[Oa]; f++) {
            var g = e[f];
            if (g.ﱠ︅︈︄) {
              d += g.nickname + " <span style=\"color:green\">#" + f + "</span><br />";
            }
          }
          this.ﱡ︇︉︄("list", 1, "List all connected players", d);
          return true;
        case "weapon-list":
          this.ﱡ︇︉︄("Weapons", 1, "List all weapons in the game", this.ﱟ︇︉︄(["sword_wood", "sword", "sword_gold", "sword_diamond", "sword_amethyst", "sword_reidite", "dragon_sword", "lava_sword", "sword_pirate", "wood_spear", "spear", "gold_spear", "diamond_spear", "amethyst_spear", "reidite_spear", "dragon_spear", "lava_spear", "crab_spear", "wood_bow", "wood_arrow"]));
          return true;
        case "tool-list":
          this.ﱡ︇︉︄("Tools", 1, "List all tools in the game", this.ﱟ︇︉︄(["pick_wood", "pick", "pick_gold", "pick_diamond", "pick_amethyst", "pick_reidite", "hammer", "hammer_gold", "hammer_diamond", "hammer_amethyst", "hammer_reidite", "super_hammer", "shovel", "shovel_gold", "shovel_diamond", "shovel_amethyst", "pitchfork", "pitchfork2", "spanner", "book"]));
          return true;
        case "survival-list":
          this.ﱡ︇︉︄("Survival Items", 1, "List all survival items in the game", this.ﱟ︇︉︄(["fire", "workbench", "bandage", "big_fire", "furnace", "paper", "blue_cord", "lock", "lockpick", "totem", "resurrection", "bridge", "bottle_full", "bottle_empty", "watering_can", "watering_can_full", "windmill", "plot", "bread_oven", "chest", "bucket_empty", "bucket_full", "well", "sign", "roof", "bed", "boat", "sled", "boar", "saddle", "emerald_machine", "extractor_stone", "extractor_gold", "extractor_diamond", "extractor_amethyst", "extractor_reidite_button"]));
          return true;
        case "resource-list":
          this.ﱡ︇︉︄("Resources", 1, "List all resources in the game", this.ﱟ︇︉︄(["wood", "stone", "gold", "diamond", "amethyst", "reidite", "fur", "fur_wolf", "fur_winter", "cord", "scales", "penguin_feather", "flame", "sand", "ground", "ice", "dragon_heart", "lava_heart", "kraken_skin", "special_fur", "special_fur_2", "gemme_green", "gemme_orange", "gemme_blue", "dragon_cube", "dragon_orb", "lava_cube", "lava_orb", "fur_boar", "pitchfork_part", "pilot_glasses", "fur_mammoth"]));
          return true;
        case "food-list":
          this.ﱡ︇︉︄("Food", 1, "List all food in the game", this.ﱟ︇︉︄(["plant", "seed", "meat", "cooked_meat", "flour", "wheat_seed", "cookies", "wild_wheat", "cake", "fish", "cooked_fish", "bread", "sandwich", "pumpkin_seed", "pumpkin", "garlic_seed", "garlic", "thornbush_seed", "thornbush", "crab_stick", "claw", "carrot_seed", "carrot", "tomato_seed", "tomato", "watermelon_seed", "watermelon", "aloe_vera_seed", "aloe_vera", "cactus"]));
          return true;
        case "hat-list":
          this.ﱡ︇︉︄("Hats", 1, "List all hats in the game", this.ﱟ︇︉︄(["earmuffs", "coat", "scarf", "fur_hat", "warm_protection", "warm_protection2", "warm_protection3", "explorer_hat", "pirate_hat", "wood_helmet", "stone_helmet", "gold_helmet", "diamond_helmet", "amethyst_helmet", "reidite_helmet", "dragon_helmet", "lava_helmet", "crab_helmet", "diving_mask", "super_diving_suit", "crown_green", "crown_orange", "crown_blue", "hood", "peasant", "winter_hood", "winter_peasant", "bag", "turban1", "turban2", "pilot_hat"]));
          return true;
        case "building-list":
          this.ﱡ︇︉︄("Buildings", 1, "List all buildings in the game", this.ﱟ︇︉︄(["wall", "stone_wall", "gold_wall", "diamond_wall", "amethyst_wall", "reidite_wall", "spike", "stone_spike", "gold_spike", "diamond_spike", "amethyst_spike", "reidite_spike", "wood_door", "stone_door", "gold_door", "diamond_door", "amethyst_door", "reidite_door", "wood_spike_door", "stone_spike_door", "gold_spike_door", "diamond_spike_door", "amethyst_spike_door", "reidite_spike_door"]));
          return true;
        case "biome-list":
          this.ﱡ︇︉︄("Biomes list", 1, "List all available biomes in the game", this.ﱟ︇︉︄(["forest", "winter", "lava", "sea", "beach", "island", "dragon"]));
          return true;
        case "help-config":
          this.ﱡ︇︉︄("Help Configuration", 1, "Learn how to build your customized map", "<div class=\"specialCommandBox\">To get the current map configuration, and modify it, copy the result of <span class=\"commandSynthax\">get-config</span> in a text file and change every parameter you want.</div>To modify the settings, change a number to another with <span class=\"commandSynthax\">set-config</span></br>To modify the map, modify \"important\" section (at the end)<div class=\"infoCommand\">The minimum size of the map is 50x50.</div>\"custom_map\" is used to change the biomes and is written like this :<div class=\"commandSynthax\" style=\"font-size:17px;\">\"custom_map\":[[\"biome\",width,height],...,[\"biome\",width,height]]</div>Biomes are <span class=\"commandSynthax\">\"forest\"</span>, <span class=\"commandSynthax\">\"lava\"</span>, <span class=\"commandSynthax\">\"winter\"</span>, and <span class=\"commandSynthax\">\"dragon\"</span>.");
          return true;
        case "pos":
          e = gj.ﱠ︀️︄[0];
          f = 0;
          for (; f < e[Oa]; f++) {
            var i = e[f];
            if (i.ﱡ︊︅︄ === hj.id) {
              this.ﱡ︇︉︄("pos", 1, "Your position is " + Math[A](i.x / 100) + ":" + Math[A](i.y / 100));
              return true;
            }
          }
          break;
        case "help-admin":
          this.ﱡ︇︉︄("help-admin", 1, "List all available commands for admin only", this.ﱟ︇︉︄(["restart", "m | message", "mt | message-to", "w | welcome", "name", "password", "k | kick", "b | ban", "tp | teleport", "tpa | teleport-all", "tpt | teleport-to", "pos", "heal", "cancel-craft", "da | disable-attack", "pvp | disable-pvp", "dgs | disable-gather-score", "drs | disable-resource", "dms | disable-mob-safety", "ds | disable-shop", "dn | disable-nickname", "dch | disable-chat", "dq | disable-quest", "dd | disable-drop", "ddc | disable-drop-crate", "db | disable-crate", "dwg | disable-warm-gauge", "dk | disable-kit", "dc | disable-craft", "dr | disable-recycling", "disable-clock", "disable-recipes-book", "disable-market", "sb | spawn-building", "fsb | force-spawn-building", "sch | spawn-chest", "spawn-area", "spawn-area-team", "cl | clean-position", "cba | clean-building-all", "ci | clean-inventory", "cia | clean-inventory-all", "harvest", "gs | give-score", "gsa | give-score-all", "rs | reset-score", "rk | reset-kill", "gm | godmode", "instant-craft", "ka | kill-animals", "g | give", "ga | give-to-all", "ri | remove-item", "ria | remove-item-all", "spawn-location", "tm | team-mode", "default-nickname", "mm | murder-mode", "br | battle-royale", "help-config", "gc | get-config", "sc | set-config", "reset-config", "save-config", "reset-event-time"]));
          return true;
        case "help":
          this.ﱡ︇︉︄("help", 1, "List all available commands", this.ﱟ︇︉︄(["clean", "list", "pos", "help-admin", "help", "weapon-list", "tool-list", "survival-list", "resource-list", "food-list", "hat-list", "building-list", "biome-list"]));
          return true;
      }
      return false;
    },
    ﱞ︈︉︄: function () {
      if (!this.open) {
        this.open = true;
        this[Z].display = "inline-block";
        this.input.focus();
      }
    },
    ﱠ︈︉︄: function () {
      var c = this.input.value;
      if (c && c[Oa] > 0) {
        if (!this.ﱢ︇︉︄(c)) {
          client.ﱟ︈︉︄(this.input.value);
        }
        this.input.value = "";
      }
    }
  };
  this.ﱡ︀︉︄ = {
    open: false,
    input: document[fa]("chat_input"),
    [Z]: document[fa]("chat_block")[Z],
    update: function () {
      this[Z].left = Math[A](hb / 2 - 150) + "px";
      this[Z].top = Math[A](ib / 2 + 80) + "px";
    },
    ﱠ︇︉︄: function () {
      this.open = false;
      this[Z].display = "none";
      this.input.value = "";
    },
    prefix: "!",
    ﱡ︈︉︄: {
      ﱣ︈︉︄: function (c) {
        if (c === "off") {
          var d = "Enter \"!hud\" without the quotes to restore the HUD";
          if (hj.alert.text) {
            hj.alert.list[Na](d);
          } else {
            hj.alert.text = d;
          }
          jj.ﱢ︈︉︄ = 0;
        } else {
          jj.ﱢ︈︉︄ = 1;
        }
      }
    },
    ﱢ︇︉︄: function (c) {
      if (c.charAt(0) == this.prefix) {
        for (var d = "", e = "", f = 1; f < c[Oa] && c.charAt(f) != " "; f++) {
          d += c.charAt(f);
        }
        for (f++; f < c[Oa]; f++) {
          e += c.charAt(f);
        }
        var g = this.ﱡ︈︉︄[d];
        if (g) {
          g(e);
        }
        return true;
      }
      return false;
    },
    ﱡ︇︈︄: function () {
      if (this.open) {
        this.open = false;
        this[Z].display = "none";
        var c = this.input.value;
        if (c) {
          if (!this.ﱢ︇︉︄(c)) {
            client.ﱞ︉︉︄(this.input.value);
          }
          this.input.value = "";
        }
      } else {
        this.open = true;
        this[Z].display = "inline-block";
        this.input.focus();
      }
    }
  };
  this.ﱠ︌︇︄ = {
    ﱢ︋︇︄: [],
    update: function (c) {
      c.y += nj * 80 * c.s;
      c.x += nj * 80 * c.c;
      c.ﱣ︊︆︄ -= nj / 6;
      if (c.ﱣ︊︆︄ > 0.2) {
        c.alpha = Math[ta](c.alpha + nj * 3, 1);
      } else {
        c.alpha = Math[ba](c.alpha - nj * 1, 0);
      }
    },
    add: function (c) {
      var d = Math[A](Math[ta](hb / 1366 * 34, 44) * Math[ba](Math[ta](gj.ﱟ︌︇︄ + 1000, 3000) / 3000, 0));
      if (this.ﱢ︋︇︄[Oa] < d) {
        var e = Math[A](Math[o]() * 5);
        var f = -hj.ﱡ︈︋︁.x + Math[A](Math[o]() * hj.ﱡ︈︋︁.w);
        var g = -hj.ﱡ︈︋︁.y + Math[A](Math[o]() * hj.ﱡ︈︋︁.ﱟ︁︋︁);
        var i = Math[o](Math[D]);
        this.ﱢ︋︇︄[Na](new Ri(e, f, g, i));
      }
    }
  };
  this.ﱞ︅︆︄ = 0;
  this.ﱠ︆︆︄ = 0;
  this.ﱟ︋︇︄ = {
    ﱢ︋︇︄: [],
    ﱡ︋︇︄: 0,
    ﱣ︋︇︄: 0,
    update: function (c) {
      c.y += nj * (200 + this.ﱣ︋︇︄ * 800) * c.s;
      c.x += nj * (200 + this.ﱣ︋︇︄ * 800) * c.c;
      c.ﱣ︊︆︄ -= nj / 6;
      if (c.ﱣ︊︆︄ > 0.2) {
        c.alpha = Math[ta](c.alpha + nj * 3, 1);
      } else {
        c.alpha = Math[ba](c.alpha - nj * 1, 0);
      }
    },
    add: function (c) {
      var d = Math[A](Math[ta]((this.ﱣ︋︇︄ + 0.1) * 68 * (hb / 1366), (this.ﱣ︋︇︄ + 0.1) * 68 + 10) * Math[ba](Math[ta](gj.ﱣ︁︇︄ + 1000, 3000) / 3000, 0));
      if (this.ﱢ︋︇︄[Oa] < d) {
        var e = Math[A](Math[o]() * 5);
        var f = -hj.ﱡ︈︋︁.x + Math[A](Math[o]() * hj.ﱡ︈︋︁.w);
        var g = -hj.ﱡ︈︋︁.y + Math[A](Math[o]() * hj.ﱡ︈︋︁.ﱟ︁︋︁);
        var i = Math[o](Math[D]);
        if (hj.ﱟ︋︇︄.ﱡ︋︇︄ !== 0) {
          f -= hj.ﱡ︈︋︁.w / 2;
        }
        this.ﱢ︋︇︄[Na](new Ri(e, f, g, i));
      }
    }
  };
  this.ﱞ︌︇︄ = {
    ﱢ︋︇︄: [],
    ﱡ︋︇︄: 0,
    ﱣ︋︇︄: 0,
    update: function (c) {
      if (lj.ﱟ︁︉︄()) {
        c.y += nj * c.ﱡ️︎︄ * (5.5 + this.ﱣ︋︇︄ * 10);
      } else {
        c.y += nj * c.ﱡ️︎︄ * (5 + this.ﱣ︋︇︄ * 10);
      }
      c.ﱣ︊︆︄ -= nj / 2;
      if (lj.ﱢ︀︉︄()) {
        c.x += nj * (100 + this.ﱣ︋︇︄ * 400);
      } else if (lj.ﱞ︁︉︄()) {
        c.x -= nj * (130 - this.ﱣ︋︇︄ * 400);
      } else {
        c.x -= nj * (30 - this.ﱣ︋︇︄ * 400);
      }
      if (c.ﱣ︊︆︄ > 0.2) {
        c.alpha = Math[ta](c.alpha + nj * 3, 1);
      } else {
        c.alpha = Math[ba](c.alpha - nj * 5, 0);
      }
    },
    add: function (c) {
      var d = Math[A](Math[ta]((this.ﱣ︋︇︄ * 1.5 + 0.5) * 34 * (hb / 1366), (this.ﱣ︋︇︄ * 1.5 + 0.5) * 34 + 10) * Math[ba](Math[ta](gj.ﱟ︁︇︄ + 1000, 3000) / 3000, 0));
      if (this.ﱢ︋︇︄[Oa] < d) {
        var e = Math[A](Math[o]() * 5);
        var f = -hj.ﱡ︈︋︁.x + Math[A](Math[o]() * hj.ﱡ︈︋︁.w);
        var g = -hj.ﱡ︈︋︁.y + Math[A](Math[o]() * 400 * mb - mb * 200);
        this.ﱢ︋︇︄[Na](new Ri(e, f, g, 0));
      }
    }
  };
  this.ﱞ︉︇︄ = [];
  for (var g = 0; g < 4; g++) {
    this.ﱞ︉︇︄[Na](new f());
  }
}
function Ti(f, i) {
  this.ﱢ︆︆︄ = f;
  this.ﱞ︇︆︄ = i;
  if (c.navigator.userAgent[E]("Edge") > -1) {
    this.ﱠ︉︉︄ = "default";
    this.ﱟ︉︉︄ = "pointer";
  } else {
    this.ﱠ︉︉︄ = "url('img/cursor0.png'), default";
    this.ﱟ︉︉︄ = "url('img/cursor1.png'), pointer";
  }
  var k = this;
  function m(c, d, e, f, g) {
    for (var i = this, m = d + 9, n = 0, o = f, p = d; p < m; p++) {
      k.ﱞ︀️︄[p].info.ﱠ︍︇︄ = r;
      k.ﱞ︀️︄[p].info.ﱡ︉︉︄ = c;
    }
    function q() {
      var d = c[o];
      dj.ﱣ︉︉︄ = Ci(d.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 350, undefined, 10, 8);
      if (d.level !== undefined) {
        dj.ﱢ︉︉︄ = Ci("Level " + d.level, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, undefined, 10, 8);
      } else {
        dj.ﱢ︉︉︄ = Ci("by " + d.ﱟ︄︆︄, "'Baloo Paaji', sans-serif", "#EFE4B4", 30, 250, undefined, 10, 8);
      }
    }
    function r() {
      if (o !== this.ﱞ︊︉︄ && this.ﱞ︊︉︄ !== -1) {
        if (this.ﱠ︊︉︄ > 0) {
          if (d === FIRST_BUTTON_SKIN) {
            na(N, Aa, "none");
          } else {
            na(O, Aa, "none");
          }
        } else if (d === FIRST_BUTTON_SKIN) {
          na(N, Ba, "inline-block");
        } else {
          na(O, Ba, "inline-block");
        }
        o = this.ﱞ︊︉︄;
        e(this.ﱞ︊︉︄);
        q();
      }
    }
    this.ﱟ︊︉︄ = function () {
      for (var e = d, f = n * 3; e < m && f < c[Oa]; e++, f++) {
        if (c[f].ﱠ︄︆︄ !== RARITY.SPECIAL || g[f] !== 0) {
          k.ﱞ︀️︄[e].info.ﱞ︊︉︄ = f;
          for (var i = 0; i < 3; i++) {
            k.ﱞ︀️︄[e].info.ﱡ︃︉︂[i] = RARITY_BUTTON[c[f].ﱠ︄︆︄][i];
            k.ﱞ︀️︄[e].info.active = Ba;
            k.ﱞ︀️︄[e].info.ﱠ︊︉︄ = g[f];
          }
        } else {
          k.ﱞ︀️︄[e].info.ﱞ︊︉︄ = -1;
          k.ﱞ︀️︄[e].info.active = Aa;
        }
      }
      for (; e < m; e++) {
        k.ﱞ︀️︄[e].info.ﱞ︊︉︄ = -1;
        k.ﱞ︀️︄[e].info.active = Aa;
      }
      q();
    };
    k.ﱞ︀️︄[m].info.ﱠ︍︇︄ = function () {
      if (n > 0) {
        n--;
      }
      i.ﱟ︊︉︄();
    };
    k.ﱞ︀️︄[m + 1].info.ﱠ︍︇︄ = function () {
      if (n * 3 + 9 < c[Oa]) {
        n++;
      }
      i.ﱟ︊︉︄();
    };
  }
  function n() {
    var c = Number(Cookies.get("starve_crate"));
    var d = Number(Cookies.get("starve_dead"));
    var e = Number(Cookies.get("starve_book"));
    var f = Number(Cookies.get("starve_bag"));
    var g = Number(Cookies.get("starve_skin"));
    var i = Number(Cookies.get("starve_accessory"));
    k.ﱡ︇︆︄ = g || 0;
    k.ﱣ︂︇︄ = e || 0;
    k.ﱢ︄︈︄ = c || 1;
    k.ﱟ︃︇︄ = i || 0;
    k.ﱢ︂︇︄ = f || 0;
    k.ﱞ︅︈︄ = d || 0;
  }
  function o() {
    for (var c = COSMETICS.ﱟ︃︆︄, d = 0; d < c[Oa]; d++) {
      if (c[d].ﱠ︄︆︄ === RARITY.FREE) {
        k.unlock.ﱡ︇︆︄[d] = 1;
      } else {
        k.unlock.ﱡ︇︆︄[d] = 0;
      }
    }
    c = COSMETICS.ﱣ︁︄︂;
    d = 0;
    for (; d < c[Oa]; d++) {
      if (c[d].ﱠ︄︆︄ === RARITY.FREE) {
        k.unlock.ﱟ︃︇︄[d] = 1;
      } else {
        k.unlock.ﱟ︃︇︄[d] = 0;
      }
    }
    c = COSMETICS.ﱡ︃︌︁;
    d = 0;
    for (; d < c[Oa]; d++) {
      if (c[d].ﱠ︄︆︄ === RARITY.FREE) {
        k.unlock.ﱢ︂︇︄[d] = 1;
      } else {
        k.unlock.ﱢ︂︇︄[d] = 0;
      }
    }
    c = COSMETICS.ﱟ︃︌︁;
    d = 0;
    for (; d < c[Oa]; d++) {
      if (c[d].ﱠ︄︆︄ === RARITY.FREE) {
        k.unlock.ﱣ︂︇︄[d] = 1;
      } else {
        k.unlock.ﱣ︂︇︄[d] = 0;
      }
    }
    c = COSMETICS.ﱟ︇︎︁;
    d = 0;
    for (; d < c[Oa]; d++) {
      if (c[d].ﱠ︄︆︄ === RARITY.FREE) {
        k.unlock.ﱢ︄︈︄[d] = 1;
        k.unlock.ﱞ︅︈︄[d] = 1;
      } else {
        k.unlock.ﱢ︄︈︄[d] = 0;
        k.unlock.ﱞ︅︈︄[d] = 0;
      }
    }
  }
  this.waiting = false;
  this.ﱡ︊︉︄ = 0;
  this.ﱣ︊︉︄ = -1;
  this.loading = {
    translate: {
      x: 0,
      y: 0
    },
    angle: 0,
    ﱡ︃︉︂: sprite[295],
    draw: function () {
      this.angle += nj * 2;
      i[g]();
      i[Ia](this.translate.x + this.ﱡ︃︉︂.width / 2, this.translate.y + this.ﱡ︃︉︂.height / 2);
      i[ra](this.angle);
      Yf(i, this.ﱡ︃︉︂, -this.ﱡ︃︉︂.width / 2, -this.ﱡ︃︉︂.height / 2);
      i[Qa]();
    }
  };
  this.ﱢ︊︉︄ = {
    id: document[fa]("langselect"),
    [Z]: document[fa]("langselect")[Z],
    translate: {
      x: 0,
      y: 0
    },
    update: function () {
      this[Z].left = Math[A](this.translate.x) + "px";
      this[Z].top = Math[A](this.translate.y) + "px";
    }
  };
  this.ﱞ︋︉︄ = 0;
  this.ﱠ︋︉︄ = -1;
  this.ﱟ︋︉︄ = undefined;
  this.ﱡ︋︉︄ = "";
  this.ﱣ︋︉︄ = "";
  this.ﱢ︋︉︄ = undefined;
  this.ﱞ︌︉︄ = 0;
  this.ﱠ︌︉︄ = -1;
  this.ﱟ︌︉︄ = undefined;
  this.ﱡ︌︉︄ = 0;
  this.ﱣ︌︉︄ = 0;
  this.ﱢ︌︉︄ = 0;
  this.ﱣ︎︈︄ = 0;
  this.ﱞ︍︉︄ = 0;
  this.time = 0;
  this.ﱞ︈︆︄ = 0;
  this.ﱠ︍︉︄ = 0;
  this.ﱟ︍︉︄ = 0;
  this.ﱡ︍︉︄ = 0;
  this.ﱣ︍︉︄ = 0;
  this.ﱢ︍︉︄ = [];
  this.ﱞ︎︉︄ = -1;
  this.ﱠ︎︉︄ = -1;
  this.ﱟ︎︉︄ = -1;
  this.ﱡ︎︉︄ = undefined;
  this.ﱣ︎︉︄ = undefined;
  this.ﱢ︎︉︄ = -1;
  this.ﱞ️︉︄ = -1;
  this.ﱠ️︉︄ = -1;
  this.ﱟ️︉︄ = -1;
  this.ﱡ️︉︄ = undefined;
  this.ﱣ️︉︄ = undefined;
  this.ﱢ️︉︄ = undefined;
  this.ﱣ︉︉︄ = undefined;
  this.ﱢ︉︉︄ = undefined;
  this.ﱞ︀︊︄ = undefined;
  this.ﱠ︀︊︄ = undefined;
  this.ﱟ︀︊︄ = undefined;
  this.ﱡ︀︊︄ = undefined;
  this.ﱣ︀︊︄ = 3;
  this.ﱣ︍︆︄ = 0;
  this.ﱢ︀︊︄ = false;
  this.ﱢ︌︆︄ = Cookies.get("starve_quality") ? Cookies.get("starve_quality") : "high";
  if (this.ﱢ︌︆︄ === "high") {
    document[fa]("high_ing")[Z].backgroundColor = "#B56D18";
    document[fa]("low_ing")[Z].backgroundColor = "#3A2A0D";
    this.ﱢ︌︆︄ = 1;
  } else {
    document[fa]("low_ing")[Z].backgroundColor = "#B56D18";
    document[fa]("high_ing")[Z].backgroundColor = "#3A2A0D";
    this.ﱢ︌︆︄ = 0;
  }
  this.ﱞ︁︊︄ = function () {
    document[fa]("high_ing")[Z].backgroundColor = "#B56D18";
    document[fa]("low_ing")[Z].backgroundColor = "#3A2A0D";
    Cookies.set("starve_quality", "high", {
      expires: 30
    });
    document[fa]("input_ratio").value = 1;
    jj.ﱠ︁︊︄();
    dj.ﱢ︌︆︄ = 1;
  };
  this.ﱟ︁︊︄ = function () {
    document[fa]("high_ing")[Z].backgroundColor = "#3A2A0D";
    document[fa]("low_ing")[Z].backgroundColor = "#B56D18";
    Cookies.set("starve_quality", "low", {
      expires: 30
    });
    document[fa]("input_ratio").value = 0.5 / (Gb / Hb);
    jj.ﱠ︁︊︄();
    dj.ﱢ︌︆︄ = 0;
  };
  if (Cookies.get("starve_mapping") === undefined && Kb === "FR") {
    lj.ﱡ︁︊︄();
    this.mapping = "azerty";
  } else {
    this.mapping = Cookies.get("starve_mapping") ? Cookies.get("starve_mapping") : "qwerty";
  }
  if (this.mapping == "azerty") {
    lj.ﱡ︁︊︄();
    document[fa]("azerty_ing")[Z].backgroundColor = "#B56D18";
    document[fa]("qwerty_ing")[Z].backgroundColor = "#3A2A0D";
  } else {
    document[fa]("qwerty_ing")[Z].backgroundColor = "#B56D18";
    document[fa]("azerty_ing")[Z].backgroundColor = "#3A2A0D";
  }
  this.ﱡ︁︊︄ = function () {
    lj.ﱡ︁︊︄();
    document[fa]("azerty_ing")[Z].backgroundColor = "#B56D18";
    document[fa]("qwerty_ing")[Z].backgroundColor = "#3A2A0D";
    Cookies.set("starve_mapping", "azerty", {
      expires: 30
    });
  };
  this.ﱣ︁︊︄ = function () {
    lj.ﱣ︁︊︄();
    document[fa]("azerty_ing")[Z].backgroundColor = "#3A2A0D";
    document[fa]("qwerty_ing")[Z].backgroundColor = "#B56D18";
    Cookies.set("starve_mapping", "qwerty", {
      expires: 30
    });
  };
  this.ﱢ︁︊︄ = {
    id: document[fa]("all_rights_reserved"),
    [Z]: document[fa]("all_rights_reserved")[Z],
    translate: {
      x: 0,
      y: 0
    },
    update: function () {
      this[Z].left = this.translate.x + "px";
      this[Z].top = Math[A](this.translate.y) + "px";
    }
  };
  n();
  this.unlock = {};
  this.unlock.ﱡ︇︆︄ = [];
  this.unlock.ﱢ︂︇︄ = [];
  this.unlock.ﱣ︂︇︄ = [];
  this.unlock.ﱢ︄︈︄ = [];
  this.unlock.ﱞ︅︈︄ = [];
  this.unlock.ﱟ︃︇︄ = [];
  this.ﱞ︂︊︄ = 0;
  this.ﱠ︂︊︄ = o;
  o();
  this.ﱟ︂︊︄ = {
    id: document[fa]("trevda"),
    [Z]: document[fa]("trevda")[Z],
    translate: {
      x: 0,
      y: 0
    },
    update: function () {
      this[Z].left = this.translate.x + "px";
      this[Z].top = Math[A](this.translate.y) + "px";
    }
  };
  var q;
  var r = 0;
  var s = function () {
    k.update();
    if (++r == 30) {
      k.ﱡ︂︊︄();
      k.ﱡ︊︉︄ = true;
      return void k.update();
    }
    c.setTimeout(s, 33);
  };
  this.ﱠ︇︉︄ = function (c) {
    q = c;
    k.ﱣ︂︊︄();
    k.ﱡ︊︉︄ = 0;
    u = -1;
    v();
  };
  var u = -1;
  var v = function () {
    k.update();
    if (++u == 30) {
      Cookies.set("starve_nickname", k.nickname.input.value, {
        expires: 30
      });
      k.nickname[Z].display = "none";
      k.ﱢ︂︊︄[Z].display = "none";
      k.ﱢ︊︉︄[Z].display = "none";
      k.ﱢ︁︊︄[Z].display = "none";
      k.ﱟ︂︊︄[Z].display = "none";
      k.stop();
      return void q();
    }
    c.setTimeout(v, 33);
  };
  this.ﱢ︈︋︁ = false;
  this.stop = function () {
    this.ﱢ︈︋︁ = false;
  };
  this.ﱡ︇︈︄ = function () {
    rj();
    document[fa]("game_body")[Z].backgroundColor = ["#133A2B", "#042b30"][fj.time];
    k.nickname[Z].display = "inline-block";
    k.ﱢ︂︊︄[Z].display = "inline-block";
    k.ﱢ︊︉︄[Z].display = "inline-block";
    k.ﱢ︁︊︄[Z].display = "inline-block";
    k.ﱟ︂︊︄[Z].display = "inline-block";
    k.waiting = false;
    k.ﱢ︈︋︁ = true;
    u = -1;
    r = 0;
    s();
  };
  this.ﱞ︃︊︄ = function (c, d) {
    d = d < 0 ? -d : d;
    if ((c.position & ya) === ya) {
      if ((c.position & qa) === qa) {
        c.translate.x = jb + c.translate.ﱣ︌︇︄ - d;
      } else if ((c.position & sa) === sa) {
        c.translate.x = jb + c.translate.ﱣ︌︇︄ + d;
      } else {
        c.translate.x = jb + c.translate.ﱣ︌︇︄;
      }
    } else if ((c.position & qa) === qa) {
      c.translate.x = c.translate.ﱣ︌︇︄ - d;
    } else if ((c.position & sa) === sa) {
      c.translate.x = hb - c.translate.ﱣ︌︇︄ + d;
    } else {
      c.translate.x = c.translate.ﱣ︌︇︄;
    }
    if ((c.position & za) === za) {
      if ((c.position & va) === va) {
        c.translate.y = kb + c.translate.ﱢ︌︇︄ - d;
      } else if ((c.position & wa) === wa) {
        c.translate.y = kb + c.translate.ﱢ︌︇︄ + d;
      } else {
        c.translate.y = kb + c.translate.ﱢ︌︇︄;
      }
    } else if ((c.position & va) === va) {
      c.translate.y = c.translate.ﱢ︌︇︄ - d;
    } else if ((c.position & wa) === wa) {
      c.translate.y = ib + c.translate.ﱢ︌︇︄ + d;
    } else {
      c.translate.y = c.translate.ﱢ︌︇︄;
    }
    if (c[Z] !== undefined) {
      c[Z].left = Math[A](c.translate.x) + "px";
      c[Z].top = Math[A](c.translate.y) + "px";
    }
  };
  this.update = function () {
    var c = 0;
    if (r != 30 || u != -1) {
      if (r != 30) {
        c = 1500 / (r + 1) - 50;
      }
      if (u != -1) {
        c = -(1750 / (30 - u + 1) - 48);
      }
    }
    for (var d = 0; d < this.ﱠ︃︊︄[Oa]; d++) {
      this.ﱞ︃︊︄(this.ﱠ︃︊︄[d], c);
    }
    for (d = 0; d < this.ﱞ︀️︄[Oa]; d++) {
      this.ﱞ︃︊︄(this.ﱞ︀️︄[d].info, c);
    }
    for (d = 0; d < this.ﱟ︃︊︄[Oa]; d++) {
      this.ﱞ︃︊︄(this.ﱟ︃︊︄[d], c);
    }
    this.loading.translate.x = (hb - this.loading.ﱡ︃︉︂.width) / 2;
    this.loading.translate.y = 0;
    this.ﱢ︊︉︄.translate.x = hb - 450;
    this.ﱢ︊︉︄.translate.y = ib - 40;
    this.ﱢ︁︊︄.translate.x = hb - 340;
    this.ﱢ︁︊︄.translate.y = ib - 25;
    this.ﱟ︂︊︄.translate.x = hb - 320;
    this.ﱟ︂︊︄.translate.y = 80;
    if (r != 30 || u != -1) {
      var e = 0;
      if (r != 30) {
        e = 1500 / (r + 1) - 50;
      }
      if (u != -1) {
        e = -(1750 / (30 - u + 1) - 48);
      }
      this.loading.translate.y -= e > 0 ? e : -e;
      this.ﱢ︊︉︄.translate.y -= e < 0 ? e : -e;
      this.ﱢ︁︊︄.translate.y -= e < 0 ? e : -e;
    }
    this.ﱢ︊︉︄.update();
    this.ﱢ︁︊︄.update();
    this.ﱟ︂︊︄.update();
  };
  this.ﱡ︃︊︄ = function (c) {
    var e = document[p]("canvas");
    var f = e[T]("2d");
    e.width = 342;
    e.height = 342;
    for (var g = -Math[D] / 2, i = 0; i < c[Oa]; i++) {
      var k = c[i][0];
      var m = c[i][1] * Math[D] / 180;
      f[Y]();
      f[J](171, 171, 170, g, g + m, false);
      f[L](171, 171);
      f[d] = k;
      f[xa]();
      g += m;
    }
    return e;
  };
  this.ﱣ︃︊︄ = function () {
    this.ﱡ︋︉︄ = document[fa]("account_nickname_input").value;
    if (this.ﱡ︋︉︄ !== this.ﱣ︋︉︄) {
      this.ﱣ︋︉︄ = this.ﱡ︋︉︄;
      this.ﱢ︋︉︄ = Ci(this.ﱡ︋︉︄, "'Baloo Paaji', sans-serif", "#EFE4B4", 45, 550);
    }
  };
  this.draw = function () {
    Xf();
    dj.ﱡ︌︉︄ = Utils.ﱟ︆︋︁(dj.ﱡ︌︉︄, dj.ﱣ︌︉︄, 0.03);
    this.ﱠ︃︊︄[LEVEL_GAUGE].translate.x = this.ﱠ︃︊︄[0].translate.x + -72 + dj.ﱡ︌︉︄ * 165;
    this.ﱠ︃︊︄[LEVEL_GAUGE].translate.ﱣ︌︇︄ = this.ﱠ︃︊︄[LEVEL_GAUGE].translate.x;
    this.ﱠ︃︊︄[LEVEL_GAUGE].translate.y = this.ﱠ︃︊︄[0].translate.y + 30;
    this.ﱠ︃︊︄[LEVEL_GAUGE].translate.ﱢ︌︇︄ = this.ﱠ︃︊︄[LEVEL_GAUGE].translate.y;
    for (var c = 2; c < this.ﱠ︃︊︄[Oa]; c++) {
      if (this.ﱠ︃︊︄[c].active === Ba) {
        this.ﱠ︃︊︄[c].draw(i);
      }
    }
    var d;
    if ((d = this.ﱞ︎︉︄ - Date.now()) > 0) {
      var f = Math[A](d / 60000);
      var m = Math[A](f / 60);
      if ((f %= 60) !== this.ﱟ︎︉︄) {
        this.ﱟ︎︉︄ = f;
        f = f < 10 ? "0" + f : "" + f;
        k.ﱡ︎︉︄ = Ci(f, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
      }
      if (m !== this.ﱠ︎︉︄) {
        this.ﱠ︎︉︄ = m;
        m = m < 10 ? "0" + m : "" + m;
        k.ﱣ︎︉︄ = Ci(m, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
      }
      (o = this.ﱠ︃︊︄[BAG_REMAIN_BOX]).draw(i);
      var n = this.ﱣ︎︉︄;
      Yf(i, n, o.translate.x - n.width / 4 + 182, o.translate.y - n.height / 4 + 40, n.width / 2, n.height / 2);
      n = this.ﱡ︎︉︄;
      Yf(i, n, o.translate.x - n.width / 4 + 251, o.translate.y - n.height / 4 + 40, n.width / 2, n.height / 2);
    }
    if ((d = this.ﱢ︎︉︄ - Date.now()) > 0) {
      f = Math[A](d / 60000);
      m = Math[A](f / 60);
      var o;
      var p = Math[A](m / 24);
      m %= 24;
      if ((f %= 60) !== this.ﱟ️︉︄) {
        this.ﱟ️︉︄ = f;
        f = f < 10 ? "0" + f : "" + f;
        k.ﱡ️︉︄ = Ci(f, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
      }
      if (m !== this.ﱠ️︉︄) {
        this.ﱠ️︉︄ = m;
        m = m < 10 ? "0" + m : "" + m;
        k.ﱣ️︉︄ = Ci(m, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
      }
      if (p !== this.ﱞ️︉︄) {
        this.ﱞ️︉︄ = p;
        p = p < 10 ? "0" + p : "" + p;
        k.ﱢ️︉︄ = Ci(p, "'Baloo Paaji', sans-serif", "#EFE4B4", 80, 200);
      }
      (o = this.ﱠ︃︊︄[SERVER_REMAIN_BOX]).draw(i);
      n = this.ﱢ️︉︄;
      Yf(i, n, o.translate.x - n.width / 4 + 113, o.translate.y - n.height / 4 + 40, n.width / 2, n.height / 2);
      n = this.ﱣ️︉︄;
      Yf(i, n, o.translate.x - n.width / 4 + 182, o.translate.y - n.height / 4 + 40, n.width / 2, n.height / 2);
      n = this.ﱡ️︉︄;
      Yf(i, n, o.translate.x - n.width / 4 + 251, o.translate.y - n.height / 4 + 40, n.width / 2, n.height / 2);
    }
    if ((this.ﱢ︃︊︄ & B) === B) {
      this.ﱞ︀️︄[GAME_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & K) === K) {
      this.ﱞ︀️︄[LEADERBOARD_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & G) === G) {
      this.ﱞ︀️︄[COSMETICS_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & C) === C) {
      this.ﱞ︀️︄[PROFILE_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & I) === I) {
      this.ﱞ︀️︄[TUTORIAL_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & F) === F) {
      this.ﱞ︀️︄[LOGIN_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & H) === H || (this.ﱢ︃︊︄ & P) === P || (this.ﱢ︃︊︄ & Q) === Q || (this.ﱢ︃︊︄ & R) === R || (this.ﱢ︃︊︄ & S) === S || (this.ﱢ︃︊︄ & U) === U || (this.ﱢ︃︊︄ & V) === V) {
      this.ﱞ︀️︄[SHOP_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & X) === X || (this.ﱢ︃︊︄ & aa) === aa || (this.ﱢ︃︊︄ & _) === _ || (this.ﱢ︃︊︄ & ca) === ca || (this.ﱢ︃︊︄ & da) === da || (this.ﱢ︃︊︄ & ea) === ea) {
      this.ﱞ︀️︄[COSMETICS_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & ja) === ja || (this.ﱢ︃︊︄ & ka) === ka || (this.ﱢ︃︊︄ & la) === la) {
      this.ﱞ︀️︄[SERVER_BUTTON].info.state = Ai;
    } else if ((this.ﱢ︃︊︄ & ma) === ma) {
      this.ﱞ︀️︄[PROFILE_BUTTON].info.state = Ai;
    }
    if ((this.ﱢ︃︊︄ & K) === K) {
      if (this.ﱠ︀︊︄ === this.ﱞ︄︊︄) {
        this.ﱞ︀︊︄ = this.ﱠ︄︊︄;
        this.ﱞ︀️︄[this.ﱠ︄︊︄].info.active = Aa;
        this.ﱞ︀️︄[this.ﱟ︄︊︄].info.active = Aa;
        this.ﱞ︀️︄[this.ﱡ︄︊︄].info.active = Aa;
      } else {
        this.ﱞ︀️︄[this.ﱠ︄︊︄].info.active = Ba;
        this.ﱞ︀️︄[this.ﱟ︄︊︄].info.active = Ba;
        this.ﱞ︀️︄[this.ﱡ︄︊︄].info.active = Ba;
      }
      if (this.ﱠ︀︊︄ === this.ﱣ︄︊︄) {
        this.ﱞ︀️︄[this.ﱣ︄︊︄].info.state = Ai;
      } else if (this.ﱠ︀︊︄ === this.ﱢ︄︊︄) {
        this.ﱞ︀️︄[this.ﱢ︄︊︄].info.state = Ai;
      } else if (this.ﱠ︀︊︄ === this.ﱞ︄︊︄) {
        this.ﱞ︀️︄[this.ﱞ︄︊︄].info.state = Ai;
      } else if (this.ﱠ︀︊︄ === this.ﱞ︅︊︄) {
        this.ﱞ︀️︄[this.ﱞ︅︊︄].info.state = Ai;
      } else if (this.ﱠ︀︊︄ === this.ﱠ︅︊︄) {
        this.ﱞ︀️︄[this.ﱠ︅︊︄].info.state = Ai;
      }
      if (this.ﱞ︀︊︄ === this.ﱠ︄︊︄) {
        this.ﱞ︀️︄[this.ﱠ︄︊︄].info.state = Ai;
      } else if (this.ﱞ︀︊︄ === this.ﱟ︄︊︄) {
        this.ﱞ︀️︄[this.ﱟ︄︊︄].info.state = Ai;
      } else if (this.ﱞ︀︊︄ === this.ﱡ︄︊︄) {
        this.ﱞ︀️︄[this.ﱡ︄︊︄].info.state = Ai;
      }
      if (this.ﱟ︀︊︄ === this.ﱟ︅︊︄) {
        this.ﱞ︀️︄[this.ﱟ︅︊︄].info.state = Ai;
      } else if (this.ﱟ︀︊︄ === this.ﱡ︅︊︄) {
        this.ﱞ︀️︄[this.ﱡ︅︊︄].info.state = Ai;
      } else if (this.ﱟ︀︊︄ === this.ﱣ︅︊︄) {
        this.ﱞ︀️︄[this.ﱣ︅︊︄].info.state = Ai;
      }
      if (this.ﱡ︀︊︄ === this.ﱢ︅︊︄) {
        this.ﱞ︀️︄[this.ﱢ︅︊︄].info.state = Ai;
      } else if (this.ﱡ︀︊︄ === this.ﱞ︆︊︄) {
        this.ﱞ︀️︄[this.ﱞ︆︊︄].info.state = Ai;
      } else if (this.ﱡ︀︊︄ === this.ﱠ︆︊︄) {
        this.ﱞ︀️︄[this.ﱠ︆︊︄].info.state = Ai;
      } else if (this.ﱡ︀︊︄ === this.ﱟ︆︊︄) {
        this.ﱞ︀️︄[this.ﱟ︆︊︄].info.state = Ai;
      } else if (this.ﱡ︀︊︄ === this.ﱡ︆︊︄) {
        this.ﱞ︀️︄[this.ﱡ︆︊︄].info.state = Ai;
      }
    }
    if ((this.ﱢ︃︊︄ & C) === C) {
      if (this.ﱣ︊︉︄ === -1) {
        this.ﱞ︀️︄[Sa].info.state = Ai;
      } else if (this.ﱣ︊︉︄ === Ki.ﱠ︈︆︄) {
        this.ﱞ︀️︄[Ta].info.state = Ai;
      } else if (this.ﱣ︊︉︄ === Ki.ﱟ︇︆︄) {
        this.ﱞ︀️︄[Va].info.state = Ai;
      } else if (this.ﱣ︊︉︄ === Ki.ﱣ︇︆︄) {
        this.ﱞ︀️︄[Wa].info.state = Ai;
      } else if (this.ﱣ︊︉︄ === Ki.ﱟ︈︆︄) {
        this.ﱞ︀️︄[Ua].info.state = Ai;
      }
      if (this.ﱣ︀︊︄ === 0) {
        this.ﱞ︀️︄[Ja].info.state = Ai;
      } else if (this.ﱣ︀︊︄ === 1) {
        this.ﱞ︀️︄[Ma].info.state = Ai;
      } else if (this.ﱣ︀︊︄ === 2) {
        this.ﱞ︀️︄[Na].info.state = Ai;
      } else if (this.ﱣ︀︊︄ === 3) {
        this.ﱞ︀️︄[Pa].info.state = Ai;
      } else if (this.ﱣ︀︊︄ === 4) {
        this.ﱞ︀️︄[Ra].info.state = Ai;
      }
    }
    if ((this.ﱢ︃︊︄ & B) === B && client.ﱣ︆︊︄ === 0) {
      if (this.ﱞ︀️︄[Ga].ﱡ︍︇︄(mj.ﱟ︅︇︄)) {
        this.ﱞ︀️︄[Ga].hint = Math[ta](1, this.ﱞ︀️︄[Ga].hint + nj * 1.5);
      } else {
        this.ﱞ︀️︄[Ga].hint = Math[ba](0, this.ﱞ︀️︄[Ga].hint - nj * 1.5);
      }
    }
    var q = 1;
    if ((this.ﱢ︃︊︄ & (P | Q | R | S | U | V)) > 1) {
      n = IMAGES.ﱟ︆︄︃;
      i[g]();
      i[Ia](jb, Fa + n.height / 4);
      if (this.ﱢ︆︊︄ === 1) {
        this.ﱞ︇︊︄ += nj / 3;
        q = this.ﱠ︇︊︄ - 100 / Math[W](1 + this.ﱞ︇︊︄, 1 + this.ﱞ︇︊︄);
        i[ra](q);
      }
      Yf(i, n, -n.width / 4, -n.height / 4, n.width / 2, n.height / 2);
      i[Qa]();
    }
    if (client.ﱣ︆︊︄ === 0 && client.ﱟ︇︊︄ === Ki.ﱢ︈︆︄) {
      this.ﱞ︀️︄[Ga].info.state = Ai;
    }
    for (c = 1; c < this.ﱞ︀️︄[Oa]; c++) {
      if (this.ﱞ︀️︄[c].info.active === Ba) {
        this.ﱞ︀️︄[c].draw(i);
      }
    }
    this.ﱠ︃︊︄[0].draw(i);
    if ((this.ﱢ︃︊︄ & (ia | ha)) > 0) {
      n = this.ﱢ︋︉︄;
      Yf(i, n, jb - n.width / 4, 138, n.width / 2, n.height / 2);
    }
    var r = Math[ba](1, Math[ta](18, Math[A]((dj.ﱞ︌︉︄ + 3) / 2)));
    this.ﱠ︃︊︄[r].active = Ba;
    this.ﱠ︃︊︄[r].draw(i);
    this.ﱠ︃︊︄[r].active = Aa;
    this.ﱞ︀️︄[0].draw(i);
    if ((this.ﱢ︃︊︄ & (G | aa | ca | X | da)) > 1) {
      var s = (this.ﱢ︃︊︄ & (aa | ca | X | da)) > 1 ? -190 : 0;
      n = sprite[29][this.ﱢ︂︇︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 + s, 183, n.width / 2, n.height / 2);
      this.ﱣ︍︆︄ = (this.ﱣ︍︆︄ + nj * 1000) % 2000;
      var u = (this.ﱣ︍︆︄ < 1000) * 4.5 ? this.ﱣ︍︆︄ / 1000 : (2000 - this.ﱣ︍︆︄) / 1000;
      n = sprite[28][this.ﱣ︂︇︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 - 62 + u + s, 240, n.width / 2, n.height / 2);
      n = sprite[7][this.ﱡ︇︆︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 - 54 + u + s, 272, n.width / 2, n.height / 2);
      Yf(i, n, jb - n.width / 4 + 54 - u + s, 272, n.width / 2, n.height / 2);
      n = sprite[249][this.ﱡ︇︆︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 + s, 222, n.width / 2, n.height / 2);
      n = sprite[790][this.ﱟ︃︇︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 + s, 222, n.width / 2, n.height / 2);
    }
    if ((this.ﱢ︃︊︄ & G) === G) {
      n = sprite[244][this.ﱢ︄︈︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 - 61, 406 - n.height / 4, n.width / 2, n.height / 2);
      n = sprite[244][this.ﱞ︅︈︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 + 53, 406 - n.height / 4, n.width / 2, n.height / 2);
    }
    if ((this.ﱢ︃︊︄ & _) === _) {
      n = sprite[244][this.ﱞ︅︈︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 - 200, 268 - n.height / 4, n.width / 2, n.height / 2);
    }
    if ((this.ﱢ︃︊︄ & ea) === ea) {
      n = sprite[244][this.ﱢ︄︈︄][this.ﱞ︂︊︄];
      Yf(i, n, jb - n.width / 4 - 200, 268 - n.height / 4, n.width / 2, n.height / 2);
    }
    if ((this.ﱢ︃︊︄ & (aa | ca | X | da | _ | ea)) > 1) {
      for (c = 1; c < this.ﱞ︀️︄[Oa]; c++) {
        if ((this.ﱞ︀️︄[c].view & this.ﱢ︃︊︄) != 0) {
          var v = this.ﱞ︀️︄[c].info;
          if (v.ﱞ︊︉︄ >= 0) {
            n = v.ﱡ︉︉︄[v.ﱞ︊︉︄].ﱡ︃︆︄;
            Yf(i, n, v.translate.x - n.width / 8 + 44.5, v.translate.y - n.height / 8 + 45.5, n.width / 4, n.height / 4);
            if (v.ﱠ︊︉︄ !== 1) {
              n = IMAGES.ﱣ︎︂︃;
              Yf(i, n, v.translate.x - n.width / 4 + 44.5, v.translate.y - n.height / 4 + 44.5, n.width / 2, n.height / 2);
            }
          }
        }
      }
      n = this.ﱣ︉︉︄;
      Yf(i, n, jb - 312, 375, n.width / 2, n.height / 2);
      n = this.ﱢ︉︉︄;
      Yf(i, n, jb - 312, 395, n.width / 2, n.height / 2);
    }
    if (this.ﱞ︋︉︄ !== this.ﱠ︋︉︄) {
      this.ﱠ︋︉︄ = this.ﱞ︋︉︄;
      this.ﱟ︋︉︄ = Ci("" + this.ﱞ︋︉︄, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 250);
    }
    Yf(i, this.ﱟ︋︉︄, this.ﱠ︃︊︄[0].translate.x + 350, 15, this.ﱟ︋︉︄.ﱢ︅︇︄, this.ﱟ︋︉︄.ﱡ︌︇︄);
    if (this.ﱞ︌︉︄ !== this.ﱠ︌︉︄) {
      this.ﱠ︌︉︄ = this.ﱞ︌︉︄;
      this.ﱟ︌︉︄ = Ci("LVL " + (this.ﱞ︌︉︄ + 1), "'Baloo Paaji', sans-serif", "#EFE4B4", 50, 250, undefined, 30, 24, undefined, undefined, undefined, undefined, "#3F3019", 20);
    }
    Yf(i, this.ﱟ︌︉︄, this.ﱠ︃︊︄[0].translate.x + 94, 0, this.ﱟ︌︉︄.ﱢ︅︇︄, this.ﱟ︌︉︄.ﱡ︌︇︄);
    if (client.ﱣ︆︊︄ === 0) {
      var z = this.ﱞ︀️︄[Ga].hint;
      if (z > 0) {
        n = IMAGES.ﱠ︌︀︃;
        Yf(i, n, jb - n.width / 4, -36 - n.height * Utils.ﱟ︂︋︁(1 - z) / 2, n.width / 2, n.height / 2);
      }
    }
    if (this.ﱢ︆︊︄ === 1 && Math[t](q - this.ﱠ︇︊︄) < 0.006) {
      i[ua] = Math[ta](1, this.ﱡ︇︊︄ * 3);
      n = IMAGES.ﱞ︉︄︃;
      i[g]();
      i[Ia](jb, 260);
      this.ﱡ︇︊︄ += nj;
      i[ra](this.ﱡ︇︊︄);
      Yf(i, n, -n.width / 2, -n.height / 2, n.width, n.height);
      i[Qa]();
      u = 1.05 + Math[e](this.ﱡ︇︊︄ * 5) * 0.05;
      if (this.ﱣ︇︊︄ === 0) {
        var E = u * (n = COSMETICS.ﱟ︃︆︄[this.ﱢ︇︊︄].ﱡ︃︆︄).width;
        var J = u * n.height;
        Yf(i, n, jb - E / 2, 260 - J / 2, E, J);
      } else if (this.ﱣ︇︊︄ === 1) {
        E = u * (n = COSMETICS.ﱟ︃︆︄[0].ﱡ︃︆︄).width;
        J = u * n.height;
        Yf(i, n, jb - E / 2, 260 - J / 2, E, J);
        E = u * (n = COSMETICS.ﱣ︁︄︂[this.ﱢ︇︊︄].ﱡ︃︆︄).width;
        J = u * n.height;
        Yf(i, n, jb - E / 2, 260 - J / 2, E, J);
      } else if (this.ﱣ︇︊︄ === 2) {
        E = u * (n = COSMETICS.ﱡ︃︌︁[this.ﱢ︇︊︄].ﱡ︃︆︄).width;
        J = u * n.height;
        Yf(i, n, jb - E / 2, 180 - J / 2, E, J);
        E = u * (n = COSMETICS.ﱟ︃︆︄[0].ﱡ︃︆︄).width;
        J = u * n.height;
        Yf(i, n, jb - E / 2, 260 - J / 2, E, J);
      } else if (this.ﱣ︇︊︄ === 3) {
        E = u * (n = COSMETICS.ﱟ︃︌︁[this.ﱢ︇︊︄].ﱡ︃︆︄).width;
        J = u * n.height;
        i[g]();
        i[Ia](jb, 260);
        i[ra](Math[D]);
        Yf(i, n, -E / 2, -J / 2, E, J);
        i[Qa]();
      } else if (this.ﱣ︇︊︄ === 4) {
        E = u * (n = COSMETICS.ﱟ︇︎︁[this.ﱢ︇︊︄].ﱡ︃︆︄).width;
        J = u * n.height;
        Yf(i, n, jb - E / 2, 260 - J / 2, E, J);
      }
      n = this.ﱞ︈︊︄;
      Yf(i, n, jb - n.width / 4, 340, n.width / 2, n.height / 2);
      n = this.ﱠ︈︊︄;
      Yf(i, n, jb - n.width / 4, 365, n.width / 2, n.height / 2);
      if (this.ﱡ︇︊︄ > 6) {
        this.ﱢ︆︊︄ = 0;
        pa(H);
      }
      i[ua] = 1;
    }
    hj.alert.draw("#FFF", "#000");
    if (k.waiting) {
      this.loading.draw();
    }
  };
  var z = 0;
  var B = Math[W](2, z++);
  var C = Math[W](2, z++);
  this.ﱟ︈︊︄ = C;
  var F = Math[W](2, z++);
  var G = Math[W](2, z++);
  var H = Math[W](2, z++);
  var I = Math[W](2, z++);
  var K = Math[W](2, z++);
  var M = Math[W](2, z++);
  this.ﱡ︈︊︄ = M;
  var N = Math[W](2, z++);
  var O = Math[W](2, z++);
  var P = Math[W](2, z++);
  var Q = Math[W](2, z++);
  var R = Math[W](2, z++);
  var S = Math[W](2, z++);
  var U = Math[W](2, z++);
  var V = Math[W](2, z++);
  var X = Math[W](2, z++);
  var _ = Math[W](2, z++);
  var aa = Math[W](2, z++);
  var ca = Math[W](2, z++);
  var da = Math[W](2, z++);
  var ea = Math[W](2, z++);
  var ha = Math[W](2, z++);
  var ia = Math[W](2, z++);
  var ja = Math[W](2, z++);
  this.ﱣ︈︊︄ = ja;
  var ka = Math[W](2, z++);
  this.ﱢ︈︊︄ = ka;
  var la = Math[W](2, z++);
  this.ﱞ︉︊︄ = la;
  var ma = Math[W](2, z++);
  function na(c, d, e) {
    for (var f = 0; f < k.ﱠ︃︊︄[Oa]; f++) {
      if ((k.ﱠ︃︊︄[f].view & c) != 0) {
        k.ﱠ︃︊︄[f].active = d;
      }
    }
    for (f = 0; f < k.ﱞ︀️︄[Oa]; f++) {
      if ((k.ﱞ︀️︄[f].view & c) != 0) {
        k.ﱞ︀️︄[f].info.active = d;
      }
    }
    for (f = 0; f < k.ﱟ︃︊︄[Oa]; f++) {
      if ((k.ﱟ︃︊︄[f].view & c) != 0) {
        k.ﱟ︃︊︄[f][Z].display = e;
      }
    }
  }
  this.ﱢ︃︊︄ = B;
  function oa() {
    var c = Number(Cookies.get("starve_crate"));
    var d = Number(Cookies.get("starve_dead"));
    var e = Number(Cookies.get("starve_book"));
    var f = Number(Cookies.get("starve_bag"));
    var g = Number(Cookies.get("starve_skin"));
    var i = Number(Cookies.get("starve_accessory"));
    if (!(dj.unlock.ﱡ︇︆︄[dj.ﱡ︇︆︄] > 0)) {
      dj.ﱡ︇︆︄ = dj.unlock.ﱡ︇︆︄[g] > 0 ? g : 0;
    }
    if (!(dj.unlock.ﱣ︂︇︄[dj.ﱣ︂︇︄] > 0)) {
      dj.ﱣ︂︇︄ = dj.unlock.ﱣ︂︇︄[e] > 0 ? e : 0;
    }
    if (!(dj.unlock.ﱞ︅︈︄[dj.ﱞ︅︈︄] > 0)) {
      dj.ﱞ︅︈︄ = dj.unlock.ﱞ︅︈︄[d] > 0 ? d : 0;
    }
    if (!(dj.unlock.ﱢ︄︈︄[dj.ﱢ︄︈︄] > 0)) {
      dj.ﱢ︄︈︄ = dj.unlock.ﱢ︄︈︄[c] > 0 ? c : 0;
    }
    if (!(dj.unlock.ﱟ︃︇︄[dj.ﱟ︃︇︄] > 0)) {
      dj.ﱟ︃︇︄ = dj.unlock.ﱟ︃︇︄[i] > 0 ? i : 0;
    }
    if (!(dj.unlock.ﱢ︂︇︄[dj.ﱢ︂︇︄] > 0)) {
      dj.ﱢ︂︇︄ = dj.unlock.ﱢ︂︇︄[f] > 0 ? f : 0;
    }
  }
  function pa(c) {
    if (k.ﱡ︊︉︄ !== false) {
      na(N, Aa, "none");
      na(O, Aa, "none");
      oa();
      if (!(c === k.ﱢ︃︊︄ || k.ﱢ︆︊︄ >= 1)) {
        k.ﱟ︂︊︄[Z].display = c === B || c === H || c === C || c === K || c === G || c === I ? "inline-block" : "none";
        na(k.ﱢ︃︊︄, Aa, "none");
        k.ﱢ︃︊︄ = c;
        na(k.ﱢ︃︊︄, Ba, "inline-block");
      }
    }
  }
  this.ﱠ︉︊︄ = 0;
  this.ﱟ︉︊︄ = pa;
  this.ﱡ︉︊︄ = function () {
    if (k.waiting === false) {
      hj.reconnect.enabled = false;
      k.waiting = true;
      oa();
      client.connect();
    }
  };
  var qa = 1;
  var sa = 2;
  var va = 4;
  var wa = 8;
  var ya = 16;
  var za = 32;
  var Aa = 0;
  var Ba = 1;
  if (c.innerWidth < 1300) {
    this.nickname = {
      id: document[fa]("nickname_block"),
      [Z]: document[fa]("nickname_block")[Z],
      input: document[fa]("nickname_input"),
      active: Ba,
      position: va | qa,
      view: B,
      translate: {
        x: 0,
        y: 0,
        ﱣ︌︇︄: 200,
        ﱢ︌︇︄: 184
      }
    };
  } else {
    this.nickname = {
      id: document[fa]("nickname_block"),
      [Z]: document[fa]("nickname_block")[Z],
      input: document[fa]("nickname_input"),
      active: Ba,
      position: va | ya,
      view: B,
      translate: {
        x: 0,
        y: 0,
        ﱣ︌︇︄: -180,
        ﱢ︌︇︄: 184
      }
    };
  }
  this.nickname.id[La]("keyup", function (c) {
    c.preventDefault();
    if (!(c.keyCode != 13 || k.waiting || k.ﱢ︀︊︄)) {
      k.ﱡ︉︊︄();
    }
  });
  this.nickname.input.value = Cookies.get("starve_nickname") ? Cookies.get("starve_nickname") : "";
  this.ﱣ︉︊︄ = {
    id: document[fa]("account_nickname_block"),
    [Z]: document[fa]("account_nickname_block")[Z],
    input: document[fa]("account_nickname_input"),
    active: Aa,
    position: va | ya,
    view: C,
    translate: {
      x: 0,
      y: 0,
      ﱣ︌︇︄: -122,
      ﱢ︌︇︄: 110
    }
  };
  if (c.innerWidth < 1300) {
    this.ﱢ︂︊︄ = {
      id: document[fa]("servselect"),
      [Z]: document[fa]("servselect")[Z],
      active: Ba,
      position: va | qa,
      view: B,
      translate: {
        x: 0,
        y: 0,
        ﱣ︌︇︄: 208,
        ﱢ︌︇︄: 225
      }
    };
  } else {
    this.ﱢ︂︊︄ = {
      id: document[fa]("servselect"),
      [Z]: document[fa]("servselect")[Z],
      active: Ba,
      position: va | ya,
      view: B,
      translate: {
        x: 0,
        y: 0,
        ﱣ︌︇︄: -180,
        ﱢ︌︇︄: 225
      }
    };
  }
  this.ﱡ︆︆︄ = {
    id: document[fa]("leaderboard"),
    [Z]: document[fa]("leaderboard")[Z],
    active: Aa,
    position: va | ya,
    view: K,
    translate: {
      x: 0,
      y: 0,
      ﱣ︌︇︄: -294.5,
      ﱢ︌︇︄: 190
    }
  };
  this.ﱢ︉︊︄ = {
    id: document[fa]("stats_box"),
    [Z]: document[fa]("stats_box")[Z],
    active: Aa,
    position: va | ya,
    view: C,
    translate: {
      x: 0,
      y: 0,
      ﱣ︌︇︄: 125,
      ﱢ︌︇︄: 187
    }
  };
  this.ﱞ︊︊︄ = {
    id: document[fa]("serverAddressBlock"),
    [Z]: document[fa]("serverAddressBlock")[Z],
    input: document[fa]("serverAddressInput"),
    active: Aa,
    position: va | ya,
    view: la,
    translate: {
      x: 0,
      y: 0,
      ﱣ︌︇︄: -220,
      ﱢ︌︇︄: 350
    }
  };
  z = 0;
  this.ﱟ︃︊︄ = [];
  this.ﱟ︃︊︄[z++] = this.nickname;
  this.ﱟ︃︊︄[z++] = this.ﱢ︂︊︄;
  this.ﱟ︃︊︄[z++] = this.ﱡ︆︆︄;
  this.ﱟ︃︊︄[z++] = this.ﱣ︉︊︄;
  this.ﱟ︃︊︄[z++] = this.ﱢ︉︊︄;
  this.ﱟ︃︊︄[z++] = this.ﱞ︊︊︄;
  z = 0;
  this.ﱠ︃︊︄ = [];
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱢ️︁︃, Ba, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱞ︀︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱠ︀︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱟ︀︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱡ︀︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱣ︀︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱢ︀︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱞ︁︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱠ︁︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱟ︁︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱡ︁︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱣ︁︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱢ︁︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱞ︂︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱠ︂︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱟ︂︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱡ︂︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱣ︂︂︃, Aa, 0, 0, qa);
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱢ︂︂︃, Aa, 0, 0, qa);
  if (c.innerWidth < 1300) {
    this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︋︀︃, Ba, 200, 100, va | qa);
  } else {
    this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︋︀︃, Ba, -753 / 4, 100, va | ya);
  }
  this.ﱠ︃︊︄[z++].view = B;
  this.ﱠ︃︊︄[z++] = Ei(IMAGES.ﱞ︅︁︃, Ba, 403, -10, sa);
  if (c.innerWidth > 1300) {
    this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱠ︅︁︃, Ba, -885 / 4, -159.5, wa | ya);
    this.ﱠ︃︊︄[z++].view = B;
  }
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱠ︅︂︃, Aa, -323.25, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = C;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︅︂︃, Aa, -356.25, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = G;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱣ︇︁︃, Aa, -905 / 4, 50, va | ya);
  this.ﱠ︃︊︄[z++].view = F;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱡ︅︂︃, Aa, -402, 130, va | ya);
  this.ﱠ︃︊︄[z++].view = H;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱢ︅︂︃, Aa, -279.25, 130, va | ya);
  this.ﱠ︃︊︄[z++].view = ja;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱞ︆︂︃, Aa, -305.5, 130, va | ya);
  this.ﱠ︃︊︄[z++].view = ka;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱢ︇︂︃, Aa, -305.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = la;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱞ︅︂︃, Aa, -IMAGES.ﱞ︅︂︃.width / 4 - 350, -15, va | ya);
  this.ﱠ︃︊︄[z++].view = ma;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱠ︆︂︃, Aa, -374.25, 110, va | ya);
  this.ﱠ︃︊︄[z++].view = I;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︆︂︃, Aa, -306.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = K;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱡ︆︂︃, Aa, -345.25, 80, va | ya);
  this.ﱠ︃︊︄[z++].view = M;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︅︄︃, Aa, -385.5, 150, va | ya);
  this.ﱠ︃︊︄[z++].view = P;
  var Da = 3.6;
  var Ea = this.ﱡ︃︊︄([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", Da * 57]]);
  this.ﱠ︃︊︄[z] = Ei(Ea, Aa, -Ea.width / 4, 178, va | ya);
  this.ﱠ︃︊︄[z++].view = P;
  this.ﱠ︊︊︄ = function (c, d, e) {
    var f;
    k.ﱢ︆︊︄ = 1;
    k.ﱞ︇︊︄ = 0;
    k.ﱡ︇︊︄ = 0;
    k.ﱠ︇︊︄ = c;
    k.ﱣ︇︊︄ = d;
    var g = 0;
    if (d === 0) {
      for (g = 0; g < COSMETICS.ﱟ︃︆︄[Oa] && e !== COSMETICS.ﱟ︃︆︄[g].id; g++);
      f = COSMETICS.ﱟ︃︆︄[g];
      k.unlock.ﱡ︇︆︄[g] = 1;
    } else if (d === 1) {
      for (g = 0; g < COSMETICS.ﱣ︁︄︂[Oa] && e !== COSMETICS.ﱣ︁︄︂[g].id; g++);
      f = COSMETICS.ﱣ︁︄︂[g];
      k.unlock.ﱟ︃︇︄[g] = 1;
    } else if (d === 2) {
      for (g = 0; g < COSMETICS.ﱡ︃︌︁[Oa] && e !== COSMETICS.ﱡ︃︌︁[g].id; g++);
      f = COSMETICS.ﱡ︃︌︁[g];
      k.unlock.ﱢ︂︇︄[g] = 1;
    } else if (d === 3) {
      for (g = 0; g < COSMETICS.ﱟ︃︌︁[Oa] && e !== COSMETICS.ﱟ︃︌︁[g].id; g++);
      f = COSMETICS.ﱟ︃︌︁[g];
      k.unlock.ﱣ︂︇︄[g] = 1;
    } else if (d === 4) {
      for (g = 0; g < COSMETICS.ﱟ︇︎︁[Oa] && e !== COSMETICS.ﱟ︇︎︁[g].id; g++);
      f = COSMETICS.ﱟ︇︎︁[g];
      k.unlock.ﱢ︄︈︄[g] = 1;
      k.unlock.ﱞ︅︈︄[g] = 1;
    }
    k.ﱢ︇︊︄ = g;
    k.ﱠ︈︊︄ = Ci("by " + f.ﱟ︄︆︄, "'Baloo Paaji', sans-serif", "#EFE4B4", 40, 500, undefined, 30, 24, undefined, undefined, undefined, undefined, "#000000", 24);
    k.ﱞ︈︊︄ = Ci(f.name, "'Baloo Paaji', sans-serif", "#EFE4B4", 60, 600, undefined, 30, 24, undefined, undefined, undefined, undefined, "#000000", 20);
  };
  this.ﱢ︆︊︄ = 0;
  this.ﱞ︇︊︄ = 0;
  this.ﱠ︇︊︄ = 0;
  this.ﱣ︇︊︄ = 0;
  this.ﱡ︇︊︄ = 0;
  this.ﱠ︈︊︄ = undefined;
  this.ﱞ︈︊︄ = undefined;
  var Fa = 197;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱡ︅︄︃, Aa, -385.5, 150, va | ya);
  this.ﱠ︃︊︄[z++].view = U;
  Ea = this.ﱡ︃︊︄([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", Da * 57]]);
  this.ﱠ︃︊︄[z] = Ei(Ea, Aa, -Ea.width / 4, 178, va | ya);
  this.ﱠ︃︊︄[z++].view = U;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱣ︅︄︃, Aa, -385.5, 150, va | ya);
  this.ﱠ︃︊︄[z++].view = R;
  Ea = this.ﱡ︃︊︄([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", Da * 57]]);
  this.ﱠ︃︊︄[z] = Ei(Ea, Aa, -Ea.width / 4, 178, va | ya);
  this.ﱠ︃︊︄[z++].view = R;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱢ︅︄︃, Aa, -385.5, 150, va | ya);
  this.ﱠ︃︊︄[z++].view = S;
  Ea = this.ﱡ︃︊︄([["#25c5d6", 10.8], ["#e2cf27", 36], ["#afac98", 108], ["#d88e23", Da * 57]]);
  this.ﱠ︃︊︄[z] = Ei(Ea, Aa, -Ea.width / 4, 178, va | ya);
  this.ﱠ︃︊︄[z++].view = S;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱞ︆︄︃, Aa, -385.5, 150, va | ya);
  this.ﱠ︃︊︄[z++].view = Q;
  Ea = this.ﱡ︃︊︄([["#d45ce5", 10.8], ["#25c5d6", 36], ["#e2cf27", 108], ["#afac98", Da * 57]]);
  this.ﱠ︃︊︄[z] = Ei(Ea, Aa, -Ea.width / 4, 178, va | ya);
  this.ﱠ︃︊︄[z++].view = Q;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱠ︆︄︃, Aa, -385.5, 150, va | ya);
  this.ﱠ︃︊︄[z++].view = V;
  Ea = this.ﱡ︃︊︄([["#d33a2a", 10.8], ["#d45ce5", 36], ["#25c5d6", 108], ["#e2cf27", Da * 57]]);
  this.ﱠ︃︊︄[z] = Ei(Ea, Aa, -Ea.width / 4, 178, va | ya);
  this.ﱠ︃︊︄[z++].view = V;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︇︂︃, Aa, -341.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = X;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱠ︇︂︃, Aa, -341.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = da;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱣ︆︂︃, Aa, -341.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = aa;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱞ︇︂︃, Aa, -341.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = ca;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱢ︆︂︃, Aa, -341.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = _;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱞ︈︂︃, Aa, -341.5, 100, va | ya);
  this.ﱠ︃︊︄[z++].view = ea;
  BAG_REMAIN_BOX = z++;
  this.ﱠ︃︊︄[BAG_REMAIN_BOX] = Ei(IMAGES.ﱡ︇︂︃, Aa, 484, 0, va);
  SERVER_REMAIN_BOX = z++;
  this.ﱠ︃︊︄[SERVER_REMAIN_BOX] = Ei(IMAGES.ﱣ︇︂︃, Aa, 812.5, 0, va);
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱡ︎︂︃, Aa, -189.5, -5, va | ya);
  this.ﱠ︃︊︄[z++].view = O;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︎︂︃, Aa, -189.5, -5, va | ya);
  this.ﱠ︃︊︄[z++].view = N;
  LEVEL_GAUGE = z++;
  this.ﱠ︃︊︄[LEVEL_GAUGE] = Ei(IMAGES.ﱣ︃︂︃, Ba, 93, 30, va);
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱠ︈︂︃, Aa, -173, 110, va | ya);
  this.ﱠ︃︊︄[z++].view = ha;
  this.ﱠ︃︊︄[z] = Ei(IMAGES.ﱟ︈︂︃, Aa, -173, 110, va | ya);
  this.ﱠ︃︊︄[z++].view = ia;
  z = 0;
  this.ﱞ︀️︄ = [];
  this.ﱞ︀️︄[z] = Di(50, 57, 0, [IMAGES.ﱠ︃︂︃, IMAGES.ﱟ︃︂︃, IMAGES.ﱡ︃︂︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      pa(M);
    } else {
      pa(F);
    }
  }, 320, 0, qa, Ba);
  z++;
  if (c.innerWidth < 1300) {
    this.ﱞ︀️︄[z] = Di(202, 97, 0, [IMAGES.ﱡ︈︁︃, IMAGES.ﱣ︈︁︃, IMAGES.ﱢ︈︁︃], 1, 0, this.ﱡ︉︊︄, 462, 235, va | qa, Ba);
  } else {
    this.ﱞ︀️︄[z] = Di(202, 97, 0, [IMAGES.ﱡ︈︁︃, IMAGES.ﱣ︈︁︃, IMAGES.ﱢ︈︁︃], 1, 0, this.ﱡ︉︊︄, 74, 235, va | ya, Ba);
  }
  this.ﱞ︀️︄[z].view = B;
  z++;
  if (c.innerWidth > 1300) {
    this.ﱞ︀️︄[z] = Di(355, 168, 0, [IMAGES.ﱟ︅︁︃, IMAGES.ﱟ︅︁︃, IMAGES.ﱟ︅︁︃], 1, 0, function () {
      c.open("./changelog.html", "_blank");
    }, -195, -115, wa | ya, Ba);
    this.ﱞ︀️︄[z++].view = B;
    this.ﱞ︀️︄[z] = Di(355, 168, 0, [IMAGES.ﱡ︅︁︃, IMAGES.ﱡ︅︁︃, IMAGES.ﱡ︅︁︃], 1, 0, function () {
      c.open("https://devast.io", "_blank");
    }, 20, -115, wa | ya, Ba);
    this.ﱞ︀️︄[z++].view = B;
  }
  this.ﱞ︀️︄[z++] = Di(80, 80, 0, [IMAGES.ﱡ︂︁︃, IMAGES.ﱣ︂︁︃, IMAGES.ﱢ︂︁︃], 1, 0, function () {
    c.open("https://shop.addictinggames.com/", "_blank");
  }, 380, 10, sa, Ba);
  this.ﱞ︀️︄[z++] = Di(80, 80, 0, [IMAGES.ﱞ︂︁︃, IMAGES.ﱠ︂︁︃, IMAGES.ﱟ︂︁︃], 1, 0, function () {
    c.open("https://discord.gg/starveio", "_blank");
  }, 330, 10, sa, Ba);
  this.ﱞ︀️︄[z++] = Di(80, 80, 0, [IMAGES.ﱡ︁︁︃, IMAGES.ﱣ︁︁︃, IMAGES.ﱢ︁︁︃], 1, 0, function () {
    c.open("https://reddit.com/r/starveio", "_blank");
  }, 280, 10, sa, Ba);
  this.ﱞ︀️︄[z++] = Di(80, 80, 0, [IMAGES.ﱞ︀︁︃, IMAGES.ﱠ︀︁︃, IMAGES.ﱟ︀︁︃], 1, 0, function () {
    c.open("https://starveiopro.wikia.com/wiki/", "_blank");
  }, 230, 10, sa, Ba);
  this.ﱞ︀️︄[z++] = Di(80, 80, 0, [IMAGES.ﱞ︁︁︃, IMAGES.ﱠ︁︁︃, IMAGES.ﱟ︁︁︃], 1, 0, function () {
    c.open("https://www.facebook.com/pages/category/Video-Game/limaxio-571818073000979/", "_blank");
  }, 155, 10, sa, Ba);
  this.ﱞ︀️︄[z++] = Di(80, 80, 0, [IMAGES.ﱡ︀︁︃, IMAGES.ﱣ︀︁︃, IMAGES.ﱢ︀︁︃], 1, 0, function () {
    c.open("https://twitter.com/lapamauve", "_blank");
  }, 105, 10, sa, Ba);
  this.ﱞ︀️︄[z++] = Di(80, 80, 0, [IMAGES.ﱡ️︀︃, IMAGES.ﱣ️︀︃, IMAGES.ﱢ️︀︃], 1, 0, function () {
    c.open("https://youtube.com/c/lapamauve", "_blank");
  }, 55, 10, sa, Ba);
  LEADERBOARD_BUTTON = z++;
  this.ﱞ︀️︄[LEADERBOARD_BUTTON] = Di(232, 142, 0, [IMAGES.ﱟ️︁︃, IMAGES.ﱡ️︁︃, IMAGES.ﱣ️︁︃], 1, 0, function () {
    pa(K);
    Nj(dj.ﱠ︄︊︄, dj.ﱞ︄︊︄, dj.ﱡ︅︊︄, dj.ﱡ︆︊︄);
  }, -5, 573, qa, Ba);
  this.ﱞ︀️︄[z++] = Di(236, 165, 0, [IMAGES.ﱠ︎︁︃, IMAGES.ﱠ︎︁︃, IMAGES.ﱠ︎︁︃], 1, 1, function () {
    pa(K);
  }, -5, 566, qa, Ba);
  TUTORIAL_BUTTON = z++;
  this.ﱞ︀️︄[TUTORIAL_BUTTON] = Di(236, 165, 0, [IMAGES.ﱢ︎︁︃, IMAGES.ﱞ️︁︃, IMAGES.ﱠ️︁︃], 1, 0, function () {
    pa(I);
  }, -5, 494, qa, Ba);
  this.ﱞ︀️︄[z++] = Di(236, 165, 0, [IMAGES.ﱡ︍︁︃, IMAGES.ﱡ︍︁︃, IMAGES.ﱡ︍︁︃], 1, 1, function () {
    pa(I);
  }, -5, 494, qa, Ba);
  SERVER_BUTTON = z++;
  this.ﱞ︀️︄[SERVER_BUTTON] = Di(236, 165, 0, [IMAGES.ﱢ︎︁︃, IMAGES.ﱞ️︁︃, IMAGES.ﱠ️︁︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      if (dj.ﱢ︎︉︄ - Date.now() > 0) {
        pa(la);
      }
    } else {
      pa(F);
    }
  }, -5, 415, qa, Ba);
  this.ﱞ︀️︄[z++] = Di(236, 165, 0, [IMAGES.ﱣ︎︁︃, IMAGES.ﱣ︎︁︃, IMAGES.ﱣ︎︁︃], 1, 1, function () {
    if (k.ﱟ︊︊︄()) {
      if (dj.ﱢ︎︉︄ - Date.now() > 0) {
        pa(la);
      }
    } else {
      pa(F);
    }
  }, -5, 415, qa, Ba);
  SHOP_BUTTON = z++;
  this.ﱞ︀️︄[SHOP_BUTTON] = Di(236, 165, 0, [IMAGES.ﱢ︎︁︃, IMAGES.ﱞ️︁︃, IMAGES.ﱠ️︁︃], 1, 0, function () {
    pa(H);
  }, -5, 336, qa, Ba);
  this.ﱞ︀️︄[z++] = Di(236, 165, 0, [IMAGES.ﱢ︍︁︃, IMAGES.ﱢ︍︁︃, IMAGES.ﱢ︍︁︃], 1, 1, function () {
    pa(H);
  }, -5, 336, qa, Ba);
  COSMETICS_BUTTON = z++;
  this.ﱞ︀️︄[COSMETICS_BUTTON] = Di(236, 165, 0, [IMAGES.ﱢ︎︁︃, IMAGES.ﱞ️︁︃, IMAGES.ﱠ️︁︃], 1, 0, function () {
    pa(G);
  }, -5, 257, qa, Ba);
  this.ﱞ︀️︄[z++] = Di(236, 165, 0, [IMAGES.ﱣ︍︁︃, IMAGES.ﱣ︍︁︃, IMAGES.ﱣ︍︁︃], 1, 1, function () {
    pa(G);
  }, -5, 257, qa, Ba);
  GAME_BUTTON = z++;
  this.ﱞ︀️︄[GAME_BUTTON] = Di(236, 165, 0, [IMAGES.ﱢ︎︁︃, IMAGES.ﱞ️︁︃, IMAGES.ﱠ️︁︃], 1, 0, function () {
    pa(B);
  }, -5, 178, qa, Ba);
  this.ﱞ︀️︄[z++] = Di(236, 165, 0, [IMAGES.ﱟ︎︁︃, IMAGES.ﱟ︎︁︃, IMAGES.ﱟ︎︁︃], 1, 1, function () {
    pa(B);
  }, -5, 178, qa, Ba);
  LOGIN_BUTTON = z++;
  this.ﱡ︊︊︄ = LOGIN_BUTTON;
  this.ﱞ︀️︄[LOGIN_BUTTON] = Di(324, 222, 0, [IMAGES.ﱠ︆︁︃, IMAGES.ﱟ︆︁︃, IMAGES.ﱡ︆︁︃], 1, 0, function () {
    pa(F);
  }, 0, 70, qa, Ba);
  PROFILE_BUTTON = z++;
  PROFILE_BUTTON_2 = z++;
  this.ﱣ︊︊︄ = PROFILE_BUTTON;
  this.ﱢ︊︊︄ = PROFILE_BUTTON_2;
  this.ﱞ︀️︄[PROFILE_BUTTON] = Di(324, 222, 0, [IMAGES.ﱣ︅︁︃, IMAGES.ﱢ︅︁︃, IMAGES.ﱞ︆︁︃], 1, 0, function () {
    pa(C);
    Ha(-1);
  }, 0, 70, qa, Aa);
  this.ﱞ︀️︄[PROFILE_BUTTON_2] = Di(324, 222, 0, [IMAGES.ﱡ︎︁︃, IMAGES.ﱡ︎︁︃, IMAGES.ﱡ︎︁︃], 1, 1, function () {
    pa(C);
    Ha(-1);
  }, 0, 70, qa, Aa);
  if (client.ﱣ︆︊︄ === 0) {
    var Ga = z++;
    if (c.innerWidth < 1300) {
      this.ﱞ︀️︄[Ga] = Di(266, 176, 0, [IMAGES.ﱡ︎︀︃, IMAGES.ﱣ︎︀︃, IMAGES.ﱢ︎︀︃], 1, 0, function () {
        client.ﱞ︋︊︄(Ki.ﱢ︈︆︄);
      }, 450, 300, qa | va, Ba);
    } else {
      this.ﱞ︀️︄[Ga] = Di(266, 176, 0, [IMAGES.ﱡ︎︀︃, IMAGES.ﱣ︎︀︃, IMAGES.ﱢ︎︀︃], 1, 0, function () {
        client.ﱞ︋︊︄(Ki.ﱢ︈︆︄);
      }, -80, 300, ya | va, Ba);
    }
    this.ﱞ︀️︄[Ga].view = B;
    this.ﱞ︀️︄[Ga].hint = 0;
  }

  function Ha(c, d) {
    if (d !== undefined) {
      dj.ﱣ︀︊︄ = d;
      var e = dj.ﱢ︍︉︄[d];
      dj.ﱞ︈︆︄ = e.ﱞ︈︆︄;
      dj.ﱣ︎︈︄ = e.ﱣ︎︈︄;
      dj.ﱞ︍︉︄ = e.ﱞ︍︉︄;
      dj.time = e.time;
      dj.ﱣ︍︉︄ = e.ﱣ︍︉︄;
      dj.ﱟ︍︉︄ = e.ﱟ︍︉︄;
      dj.ﱡ︍︉︄ = e.ﱡ︍︉︄;
      dj.ﱠ︍︉︄ = e.ﱠ︍︉︄;
    }
    if (c === undefined) {
      c = dj.ﱣ︊︉︄;
    }
    dj.ﱣ︊︉︄ = c;
    if (c >= 0) {
      document[fa]("stats_box_time").innerHTML = dj.ﱡ︍︉︄[c];
      document[fa]("stats_box_kill").innerHTML = dj.ﱟ︍︉︄[c];
      document[fa]("stats_box_score").innerHTML = dj.ﱣ︍︉︄[c];
    } else {
      for (var f = 0, g = 0; g < dj.ﱣ︎︈︄[Oa]; g++) {
        f += dj.ﱣ︎︈︄[g];
      }
      var i = 0;
      for (g = 0; g < dj.time[Oa]; g++) {
        i += dj.time[g];
      }
      document[fa]("stats_box_time").innerHTML = i;
      document[fa]("stats_box_kill").innerHTML = f;
      document[fa]("stats_box_score").innerHTML = dj.ﱞ︈︆︄;
    }
  }
  this.ﱞ︀️︄[z] = Di(87, 78, 0, [IMAGES.ﱡ︉︁︃, IMAGES.ﱣ︉︁︃, IMAGES.ﱢ︉︁︃], 1, 0, function () {
    dj.ﱣ︃︊︄();
    if (dj.ﱢ︌︉︄ === 0) {
      pa(ia);
    } else {
      pa(ha);
    }
  }, 127, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  this.ﱞ︀️︄[z] = Di(87, 78, 0, [IMAGES.ﱡ︌︁︃, IMAGES.ﱣ︌︁︃, IMAGES.ﱢ︌︁︃], 1, 0, function () {
    !function () {
      if (vj === uj && c.FB.getUserID()) {
        c.FB.logout();
      }
      if (vj === tj && Cj !== undefined) {
        c.gapi.auth2.getAuthInstance().signOut();
        Cj = undefined;
      }
      xj = undefined;
      wj = undefined;
      vj = undefined;
      dj.ﱞ︎︉︄ = 0;
      dj.ﱞ︋︉︄ = 0;
      dj.ﱞ︈︆︄ = 0;
      dj.ﱠ︂︊︄();
      onUserLogout();
    }();
  }, 255, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  this.ﱞ︀️︄[z] = Di(58, 64, 0, [IMAGES.ﱞ︈︁︃, IMAGES.ﱠ︈︁︃, IMAGES.ﱟ︈︁︃], 1, 0, function () {
    pa(B);
  }, 189, 118, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = F;
  this.ﱞ︀️︄[z] = Di(497, 72, 0, [IMAGES.ﱣ︆︁︃, IMAGES.ﱢ︆︁︃, IMAGES.ﱞ︇︁︃], 1, 0, function () {
    c.gapi.auth2.getAuthInstance().ﱠ︋︊︄();
  }, -130, 390, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = F;
  this.ﱞ︀️︄[z] = Di(497, 72, 0, [IMAGES.ﱠ︇︁︃, IMAGES.ﱟ︇︁︃, IMAGES.ﱡ︇︁︃], 1, 0, function () {
    c.FB.login(function (d) {
      if (d.ﱟ︋︊︄) {
        c.FB.api("/me", function (d) {
          vj = uj;
          wj = c.FB.ﱡ︋︊︄().accessToken;
          c.onUserLogin(xj);
        });
      }
    });
  }, -130, 430, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = F;
  __LEVEL_FACTOR__ = 20000;
  this.ﱣ︋︊︄ = function (c) {
    var d = dj.ﱢ︋︊︄(c);
    var e = d * d * 20000;
    return (c -= e) / ((d + 1) * (d + 1) * 20000 - e);
  };
  this.ﱢ︋︊︄ = function (c) {
    return Math[A](Math[Ca](c / 20000));
  };
  this.ﱞ︌︊︄ = function (c) {
    dj.ﱞ︌︉︄ = dj.ﱢ︋︊︄(c);
    dj.ﱣ︌︉︄ = dj.ﱣ︋︊︄(c);
    dj.ﱡ︌︉︄ = 0;
    dj.ﱞ︈︆︄ = c;
  };
  this.ﱠ︌︊︄ = function (d) {
    dj.ﱞ︀️︄[dj.ﱡ︊︊︄].info.active = 0;
    dj.ﱞ︀️︄[dj.ﱣ︊︊︄].info.active = 1;
    dj.ﱞ︀️︄[dj.ﱢ︊︊︄].info.active = 1;
    n();
    if (d.name[E]("Starver#") === -1) {
      document[fa]("account_nickname_input").value = c.decodeURIComponent(c.escape(c.atob(d.name)));
    } else {
      document[fa]("account_nickname_input").value = d.name;
    }
    dj.ﱞ︋︉︄ = d.ﱞ︋︉︄;
    var e = d.ﱢ︍︉︄;
    var f = e[e[Oa] - 1];
    dj.ﱢ︍︉︄ = e;
    k.ﱞ︌︊︄(f.ﱞ︈︆︄);
    dj.ﱞ︈︆︄ = f.ﱞ︈︆︄;
    dj.ﱣ︎︈︄ = f.ﱣ︎︈︄;
    dj.ﱞ︍︉︄ = f.ﱞ︍︉︄;
    dj.time = f.time;
    dj.ﱣ︍︉︄ = f.ﱣ︍︉︄;
    dj.ﱟ︍︉︄ = f.ﱟ︍︉︄;
    dj.ﱡ︍︉︄ = f.ﱡ︍︉︄;
    dj.ﱠ︍︉︄ = f.ﱠ︍︉︄;
    dj.ﱢ︌︉︄ = d.ﱢ︌︉︄;
    document[fa]("serverAddressInput").value = "https://starve.io/?server=" + d.ﱣ︆︊︄;
    if (dj.ﱢ︌︉︄ === undefined) {
      dj.ﱢ︌︉︄ = 0;
    }
    dj.ﱢ︎︉︄ = Date.now() + d.ﱢ︎︉︄;
    if (Number(d.ﱢ︎︉︄) > 0) {
      dj.ﱢ︎︉︄ = Date.now() + Number(d.ﱢ︎︉︄);
    }
    dj.ﱞ︎︉︄ = Date.now() + d.ﱞ︎︉︄;
    if (Number(d.ﱞ︎︉︄) > 0) {
      dj.ﱞ︎︉︄ = Date.now() + Number(d.ﱞ︎︉︄);
    }
    for (var g = COSMETICS.ﱟ︃︆︄, i = 0; i < d.ﱟ︌︊︄[Oa]; i++) {
      if (d.ﱟ︌︊︄[i] > 0) {
        for (var m = 0; m < g[Oa]; m++) {
          if (g[m].id === i) {
            k.unlock.ﱡ︇︆︄[m] = 1;
          }
        }
      }
    }
    g = COSMETICS.ﱣ︁︄︂;
    i = 0;
    for (; i < d.ﱡ︌︊︄[Oa]; i++) {
      if (d.ﱡ︌︊︄[i] > 0) {
        for (m = 0; m < g[Oa]; m++) {
          if (g[m].id === i) {
            k.unlock.ﱟ︃︇︄[m] = 1;
          }
        }
      }
    }
    g = COSMETICS.ﱟ︃︌︁;
    i = 0;
    for (; i < d.ﱣ︌︊︄[Oa]; i++) {
      if (d.ﱣ︌︊︄[i] > 0) {
        for (m = 0; m < g[Oa]; m++) {
          if (g[m].id === i) {
            k.unlock.ﱣ︂︇︄[m] = 1;
          }
        }
      }
    }
    g = COSMETICS.ﱡ︃︌︁;
    i = 0;
    for (; i < d.ﱢ︌︊︄[Oa]; i++) {
      if (d.ﱢ︌︊︄[i] > 0) {
        for (m = 0; m < g[Oa]; m++) {
          if (g[m].id === i) {
            k.unlock.ﱢ︂︇︄[m] = 1;
          }
        }
      }
    }
    g = COSMETICS.ﱟ︇︎︁;
    i = 0;
    for (; i < d.ﱞ︍︊︄[Oa]; i++) {
      if (d.ﱞ︍︊︄[i] > 0) {
        for (m = 0; m < g[Oa]; m++) {
          if (g[m].id === i) {
            k.unlock.ﱢ︄︈︄[m] = 1;
            k.unlock.ﱞ︅︈︄[m] = 1;
          }
        }
      }
    }
  };
  this.ﱠ︍︊︄ = function () {
    c.onUserLogin = function () {
      pa(B);
      (function (c) {
        var d = new XMLHttpRequest();
        d.open("GET", DB + "login?token=" + wj + "&type=" + vj);
        d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        d.onreadystatechange = function () {
          if (this.readyState === 4 && this.status === 200 && d.responseText !== "0") {
            c(JSON.parse(d.responseText));
          }
        };
        d.send();
      })(k.ﱠ︌︊︄);
    };
    if (yj === 1) {
      c.onUserLogin();
    }
  };
  c.onUserLogout = function () {
    dj.ﱞ︀️︄[dj.ﱡ︊︊︄].info.active = 1;
    dj.ﱞ︀️︄[dj.ﱣ︊︊︄].info.active = 0;
    dj.ﱞ︀️︄[dj.ﱢ︊︊︄].info.active = 0;
    pa(B);
  };
  this.ﱟ︊︊︄ = function () {
    return dj.ﱞ︀️︄[dj.ﱣ︊︊︄].info.active;
  };
  this.ﱞ︀️︄[z] = Di(461, 105, 0, [IMAGES.ﱢ︇︃︃, IMAGES.ﱞ︈︃︃, IMAGES.ﱠ︈︃︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      pa(M);
    } else {
      pa(F);
    }
  }, -100, 80, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(157, 158, 0, [IMAGES.ﱠ︉︄︃, IMAGES.ﱟ︉︄︃, IMAGES.ﱡ︉︄︃], 1, 0, function () {
    c.open("https://starveiopro.wikia.com/wiki/", "_blank");
  }, -35, 125, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = I;
  this.ﱞ︀️︄[z] = Di(66, 73, 0, [IMAGES.ﱣ︉︄︃, IMAGES.ﱢ︉︄︃, IMAGES.ﱞ︊︄︃], 1, 0, undefined, -68, 340, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = I;
  this.ﱞ︀️︄[z] = Di(66, 73, 0, [IMAGES.ﱠ︊︄︃, IMAGES.ﱟ︊︄︃, IMAGES.ﱡ︊︄︃], 1, 0, undefined, -30, 340, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = I;
  this.ﱞ︀️︄[z] = Di(97, 66, 0, [IMAGES.ﱣ︋︄︃, IMAGES.ﱢ︋︄︃, IMAGES.ﱞ︌︄︃], 1, 0, undefined, -14, 151, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱟ︅︊︄ = z;
  this.ﱞ︀️︄[z] = Di(135, 66, 0, [IMAGES.ﱠ︌︄︃, IMAGES.ﱟ︌︄︃, IMAGES.ﱡ︌︄︃], 1, 0, function () {
    Nj(undefined, undefined, dj.ﱟ︅︊︄);
  }, 37.5, 151, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱣ︅︊︄ = z;
  this.ﱞ︀️︄[z] = Di(160, 66, 0, [IMAGES.ﱣ︊︄︃, IMAGES.ﱢ︊︄︃, IMAGES.ﱞ︋︄︃], 1, 0, function () {
    Nj(undefined, undefined, dj.ﱣ︅︊︄);
  }, 107.5, 151, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱡ︅︊︄ = z;
  this.ﱞ︀️︄[z] = Di(207, 66, 0, [IMAGES.ﱠ︋︄︃, IMAGES.ﱟ︋︄︃, IMAGES.ﱡ︋︄︃], 1, 0, function () {
    Nj(undefined, undefined, dj.ﱡ︅︊︄);
  }, 190.5, 151, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱡ︄︊︄ = z;
  this.ﱞ︀️︄[z] = Di(144, 66, 0, [IMAGES.ﱠ︍︄︃, IMAGES.ﱟ︍︄︃, IMAGES.ﱡ︍︄︃], 1, 0, function () {
    Nj(dj.ﱡ︄︊︄);
  }, 103.5, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱟ︄︊︄ = z;
  this.ﱞ︀️︄[z] = Di(124, 66, 0, [IMAGES.ﱣ︍︄︃, IMAGES.ﱢ︍︄︃, IMAGES.ﱞ︎︄︃], 1, 0, function () {
    Nj(dj.ﱟ︄︊︄);
  }, 177.5, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱠ︄︊︄ = z;
  this.ﱞ︀️︄[z] = Di(104, 66, 0, [IMAGES.ﱣ︌︄︃, IMAGES.ﱢ︌︄︃, IMAGES.ﱞ︍︄︃], 1, 0, function () {
    Nj(dj.ﱠ︄︊︄);
  }, 242, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱢ︅︊︄ = z;
  this.ﱞ︀️︄[z] = Di(183, 66, 0, [IMAGES.ﱠ︎︄︃, IMAGES.ﱟ︎︄︃, IMAGES.ﱡ︎︄︃], 1, 0, function () {
    Nj(undefined, undefined, undefined, dj.ﱢ︅︊︄);
  }, -290, 521, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱞ︆︊︄ = z;
  this.ﱞ︀️︄[z] = Di(183, 66, 0, [IMAGES.ﱣ︎︄︃, IMAGES.ﱢ︎︄︃, IMAGES.ﱞ️︄︃], 1, 0, function () {
    Nj(undefined, undefined, undefined, dj.ﱞ︆︊︄);
  }, -185, 521, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱠ︆︊︄ = z;
  this.ﱞ︀️︄[z] = Di(183, 66, 0, [IMAGES.ﱠ️︄︃, IMAGES.ﱟ️︄︃, IMAGES.ﱡ️︄︃], 1, 0, function () {
    Nj(undefined, undefined, undefined, dj.ﱠ︆︊︄);
  }, -80, 521, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱟ︆︊︄ = z;
  this.ﱞ︀️︄[z] = Di(183, 66, 0, [IMAGES.ﱣ️︄︃, IMAGES.ﱢ️︄︃, IMAGES.ﱞ︀︅︃], 1, 0, function () {
    Nj(undefined, undefined, undefined, dj.ﱟ︆︊︄);
  }, 25, 521, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱡ︆︊︄ = z;
  this.ﱞ︀️︄[z] = Di(183, 66, 0, [IMAGES.ﱠ︀︅︃, IMAGES.ﱟ︀︅︃, IMAGES.ﱡ︀︅︃], 1, 0, function () {
    Nj(undefined, undefined, undefined, dj.ﱡ︆︊︄);
  }, 130, 521, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱞ︀️︄[z] = Di(232, 352, 0, [IMAGES.ﱟ︈︃︃, IMAGES.ﱡ︈︃︃, IMAGES.ﱣ︈︃︃], 1, 0, function () {
    Hj(300);
  }, -330, 135, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = M;
  this.ﱞ︀️︄[z] = Di(232, 352, 0, [IMAGES.ﱢ︈︃︃, IMAGES.ﱞ︉︃︃, IMAGES.ﱠ︉︃︃], 1, 0, function () {
    Hj(600);
  }, -195, 135, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = M;
  this.ﱞ︀️︄[z] = Di(243, 374, 0, [IMAGES.ﱟ︉︃︃, IMAGES.ﱡ︉︃︃, IMAGES.ﱣ︉︃︃], 1, 0, function () {
    Hj(2600);
  }, -60, 130, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = M;
  this.ﱞ︀️︄[z] = Di(232, 352, 0, [IMAGES.ﱢ︉︃︃, IMAGES.ﱞ︊︃︃, IMAGES.ﱠ︊︃︃], 1, 0, function () {
    Hj(7000);
  }, 78, 135, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = M;
  this.ﱞ︀️︄[z] = Di(243, 374, 0, [IMAGES.ﱟ︊︃︃, IMAGES.ﱡ︊︃︃, IMAGES.ﱣ︊︃︃], 1, 0, function () {
    Hj(20000);
  }, 213, 130, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = M;
  this.ﱞ︀️︄[z] = Di(58, 64, 0, [IMAGES.ﱞ︈︁︃, IMAGES.ﱠ︈︁︃, IMAGES.ﱟ︈︁︃], 1, 0, function () {
    pa(H);
  }, 300, 88, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = M;
  this.ﱞ︀️︄[z] = Di(323, 112, 0, [IMAGES.ﱢ︎︂︃, IMAGES.ﱞ️︂︃, IMAGES.ﱠ️︂︃], 1, 0, function () {
    pa(X);
    Xa.ﱟ︊︉︄();
  }, -315, 185, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = G;
  this.ﱞ︀️︄[z] = Di(323, 112, 0, [IMAGES.ﱟ️︂︃, IMAGES.ﱡ️︂︃, IMAGES.ﱣ️︂︃], 1, 0, function () {
    pa(da);
    ab.ﱟ︊︉︄();
  }, -315, 321, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = G;
  this.ﱞ︀️︄[z] = Di(323, 112, 0, [IMAGES.ﱢ️︂︃, IMAGES.ﱞ︀︃︃, IMAGES.ﱠ︀︃︃], 1, 0, function () {
    pa(aa);
    Ya.ﱟ︊︉︄();
  }, 153, 185, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = G;
  this.ﱞ︀️︄[z] = Di(323, 112, 0, [IMAGES.ﱟ︀︃︃, IMAGES.ﱡ︀︃︃, IMAGES.ﱣ︀︃︃], 1, 0, function () {
    pa(ca);
    Za.ﱟ︊︉︄();
  }, 153, 321, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = G;
  this.ﱞ︀️︄[z] = Di(323, 112, 0, [IMAGES.ﱢ︀︃︃, IMAGES.ﱞ︁︃︃, IMAGES.ﱠ︁︃︃], 1, 0, function () {
    pa(_);
    $a.ﱟ︊︉︄();
  }, 153, 463, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = G;
  this.ﱞ︀️︄[z] = Di(323, 112, 0, [IMAGES.ﱟ︁︃︃, IMAGES.ﱡ︁︃︃, IMAGES.ﱣ︁︃︃], 1, 0, function () {
    pa(ea);
    _a.ﱟ︊︉︄();
  }, -315, 463, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = G;
  this.ﱞ︀️︄[z] = Di(327, 117, 0, [IMAGES.ﱡ︄︂︃, IMAGES.ﱣ︄︂︃, IMAGES.ﱢ︄︂︃], 1, 0, function () {
    pa(ma);
  }, 155, 70, qa, Ba);
  this.ﱞ︀️︄[z++].view = B;
  this.ﱞ︀️︄[z] = Di(130, 129, 0, [IMAGES.ﱞ︌︁︃, IMAGES.ﱠ︌︁︃, IMAGES.ﱟ︌︁︃], 1, 0, function () {
    na(N, Aa, "none");
    pa(H);
  }, 10, 40, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = N;
  this.ﱞ︀️︄[z] = Di(130, 129, 0, [IMAGES.ﱞ︌︁︃, IMAGES.ﱠ︌︁︃, IMAGES.ﱟ︌︁︃], 1, 0, function () {
    na(O, Aa, "none");
    pa(H);
  }, 10, 40, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = O;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(H);
  }, 200, 140, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱢ︍︃︃, IMAGES.ﱞ︎︃︃, IMAGES.ﱠ︎︃︃], 1, 0, function () {
    Ij("Atlanta");
  }, -265, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱟ︎︃︃, IMAGES.ﱡ︎︃︃, IMAGES.ﱣ︎︃︃], 1, 0, function () {
    Ij("Dallas");
  }, -130, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱢ︎︃︃, IMAGES.ﱞ️︃︃, IMAGES.ﱠ️︃︃], 1, 0, function () {
    Ij("Fremont");
  }, 5, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱟ️︃︃, IMAGES.ﱡ️︃︃, IMAGES.ﱣ️︃︃], 1, 0, function () {
    Ij("Newark");
  }, 140, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱟ︁︄︃, IMAGES.ﱡ︁︄︃, IMAGES.ﱣ︁︄︃], 1, 0, function () {
    Ij("London");
  }, -265, 365, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱢ︀︄︃, IMAGES.ﱞ︁︄︃, IMAGES.ﱠ︁︄︃], 1, 0, function () {
    Ij("Frankfurt");
  }, -130, 365, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱟ︀︄︃, IMAGES.ﱡ︀︄︃, IMAGES.ﱣ︀︄︃], 1, 0, function () {
    Ij("Singapore");
  }, 5, 365, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱟ︂︄︃, IMAGES.ﱡ︂︄︃, IMAGES.ﱣ︂︄︃], 1, 0, function () {
    Ij("Tokyo");
  }, 140, 365, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱢ️︃︃, IMAGES.ﱞ︀︄︃, IMAGES.ﱠ︀︄︃], 1, 0, function () {
    Ij("Toronto");
  }, -265, 430, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(253, 110, 0, [IMAGES.ﱢ︁︄︃, IMAGES.ﱞ︂︄︃, IMAGES.ﱠ︂︄︃], 1, 0, function () {
    Ij("Mumbai");
  }, -130, 430, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ja;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(ja);
  }, 230, 140, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ka;
  this.ﱞ︀️︄[z] = Di(230, 352, 0, [IMAGES.ﱟ︃︄︃, IMAGES.ﱡ︃︄︃, IMAGES.ﱣ︃︄︃], 1, 0, function () {
    Hj(350);
  }, -280, 240, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ka;
  this.ﱞ︀️︄[z] = Di(230, 352, 0, [IMAGES.ﱢ︃︄︃, IMAGES.ﱞ︄︄︃, IMAGES.ﱠ︄︄︃], 1, 0, function () {
    Hj(700);
  }, -130, 240, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ka;
  this.ﱞ︀️︄[z] = Di(230, 352, 0, [IMAGES.ﱟ︄︄︃, IMAGES.ﱡ︄︄︃, IMAGES.ﱣ︄︄︃], 1, 0, function () {
    Hj(1400);
  }, 20, 240, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ka;
  this.ﱞ︀️︄[z] = Di(230, 352, 0, [IMAGES.ﱢ︄︄︃, IMAGES.ﱞ︅︄︃, IMAGES.ﱠ︅︄︃], 1, 0, function () {
    Hj(3000);
  }, 170, 240, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ka;
  this.ﱞ︀️︄[z] = Di(105, 119, 0, [IMAGES.ﱡ︄︁︃, IMAGES.ﱣ︄︁︃, IMAGES.ﱢ︄︁︃], 1, 0, function () {
    document[fa]("serverAddressInput").select();
    document.execCommand("copy");
  }, 170, 310, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = la;
  this.ﱞ︀️︄[z] = Di(105, 119, 0, [IMAGES.ﱡ︃︁︃, IMAGES.ﱣ︃︁︃, IMAGES.ﱢ︃︁︃], 1, 0, function () {
    !function () {
      var c = new XMLHttpRequest();
      c.open("GET", DB + "rebootServer?token=" + wj + "&userid=" + xj);
      c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      c.onreadystatechange = function () {
        if (this.readyState === 4 && this.status === 200 && c.responseText !== "0") {
          location.href = document[fa]("serverAddressInput").value;
        }
      };
      c.send();
    }();
  }, 235, 310, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = la;
  this.ﱞ︀️︄[z] = Di(204, 115, 0, [IMAGES.ﱞ︄︁︃, IMAGES.ﱠ︄︁︃, IMAGES.ﱟ︄︁︃], 1, 0, function () {
    c.open("./commands.html", "_blank");
  }, -265, 490, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = la;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱢ︌︃︃, IMAGES.ﱞ︍︃︃, IMAGES.ﱠ︍︃︃], 1, 0, function () {
    pa(P);
  }, -210, 170, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱢ︊︃︃, IMAGES.ﱞ︋︃︃, IMAGES.ﱠ︋︃︃], 1, 0, function () {
    pa(S);
  }, 70, 170, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱟ︋︃︃, IMAGES.ﱡ︋︃︃, IMAGES.ﱣ︋︃︃], 1, 0, function () {
    pa(Q);
  }, 70, 204, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱢ︋︃︃, IMAGES.ﱞ︌︃︃, IMAGES.ﱠ︌︃︃], 1, 0, function () {
    pa(U);
  }, -210, 204, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱢ︋︃︃, IMAGES.ﱞ︌︃︃, IMAGES.ﱠ︌︃︃], 1, 0, function () {
    pa(V);
  }, 70, 238, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱢ︋︃︃, IMAGES.ﱞ︌︃︃, IMAGES.ﱠ︌︃︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Lj(0, 300);
    } else {
      pa(F);
    }
  }, 307, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱟ︌︃︃, IMAGES.ﱡ︌︃︃, IMAGES.ﱣ︌︃︃], 1, 0, function () {
    pa(R);
  }, -210, 238, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(145, 69, 0, [IMAGES.ﱟ︌︃︃, IMAGES.ﱡ︌︃︃, IMAGES.ﱣ︌︃︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Lj(1, 600);
    } else {
      pa(F);
    }
  }, 307, 239, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  this.ﱞ︀️︄[z] = Di(192, 101, 0, [IMAGES.ﱞ︊︁︃, IMAGES.ﱠ︊︁︃, IMAGES.ﱟ︊︁︃], 1, 0, function () {
    Kj();
  }, -100, 250, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ia;
  this.ﱞ︀️︄[z] = Di(192, 104, 0, [IMAGES.ﱡ︊︁︃, IMAGES.ﱣ︊︁︃, IMAGES.ﱢ︊︁︃], 1, 0, function () {
    Kj();
  }, -100, 239, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ha;
  this.ﱞ︀️︄[z] = Di(192, 101, 0, [IMAGES.ﱞ︋︁︃, IMAGES.ﱠ︋︁︃, IMAGES.ﱟ︋︁︃], 1, 0, function () {
    pa(C);
  }, 10, 250, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ia;
  this.ﱞ︀️︄[z] = Di(192, 104, 0, [IMAGES.ﱡ︋︁︃, IMAGES.ﱣ︋︁︃, IMAGES.ﱢ︋︁︃], 1, 0, function () {
    pa(C);
  }, 10, 239, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ha;
  RARITY_BUTTON = [];
  RARITY_BUTTON[RARITY.FREE] = [IMAGES.ﱢ︁︃︃, IMAGES.ﱞ︂︃︃, IMAGES.ﱠ︂︃︃];
  RARITY_BUTTON[RARITY.ﱟ︁︉︂] = [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃];
  RARITY_BUTTON[RARITY.ﱠ︁︉︂] = [IMAGES.ﱢ︂︃︃, IMAGES.ﱞ︃︃︃, IMAGES.ﱠ︃︃︃];
  RARITY_BUTTON[RARITY.ﱠ︀︍︁] = [IMAGES.ﱟ︃︃︃, IMAGES.ﱡ︃︃︃, IMAGES.ﱣ︃︃︃];
  RARITY_BUTTON[RARITY.ﱟ︀︍︁] = [IMAGES.ﱢ︃︃︃, IMAGES.ﱞ︄︃︃, IMAGES.ﱠ︄︃︃];
  RARITY_BUTTON[RARITY.ﱢ︁︍︁] = [IMAGES.ﱟ︄︃︃, IMAGES.ﱡ︄︃︃, IMAGES.ﱣ︄︃︃];
  RARITY_BUTTON[RARITY.ﱟ️︍︁] = [IMAGES.ﱢ︄︃︃, IMAGES.ﱞ︅︃︃, IMAGES.ﱠ︅︃︃];
  RARITY_BUTTON[RARITY.LEVEL] = [IMAGES.ﱢ︅︃︃, IMAGES.ﱞ︆︃︃, IMAGES.ﱠ︆︃︃];
  RARITY_BUTTON[RARITY.SPECIAL] = [IMAGES.ﱟ︅︃︃, IMAGES.ﱡ︅︃︃, IMAGES.ﱣ︅︃︃];
  FIRST_BUTTON_SKIN = z;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱟ︆︃︃, IMAGES.ﱡ︆︃︃, IMAGES.ﱣ︆︃︃], 1, 0, undefined, -61, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱢ︆︃︃, IMAGES.ﱞ︇︃︃, IMAGES.ﱠ︇︃︃], 1, 0, undefined, 260, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(G);
  }, -320, 470, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = X;
  FIRST_BUTTON_ACCESSORY = z;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱟ︆︃︃, IMAGES.ﱡ︆︃︃, IMAGES.ﱣ︆︃︃], 1, 0, undefined, -61, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱢ︆︃︃, IMAGES.ﱞ︇︃︃, IMAGES.ﱠ︇︃︃], 1, 0, undefined, 260, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(G);
  }, -320, 470, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = da;
  FIRST_BUTTON_LOOT = z;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱟ︆︃︃, IMAGES.ﱡ︆︃︃, IMAGES.ﱣ︆︃︃], 1, 0, undefined, -61, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱢ︆︃︃, IMAGES.ﱞ︇︃︃, IMAGES.ﱠ︇︃︃], 1, 0, undefined, 260, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(G);
  }, -320, 470, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ea;
  FIRST_BUTTON_BAG = z;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱟ︆︃︃, IMAGES.ﱡ︆︃︃, IMAGES.ﱣ︆︃︃], 1, 0, undefined, -61, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱢ︆︃︃, IMAGES.ﱞ︇︃︃, IMAGES.ﱠ︇︃︃], 1, 0, undefined, 260, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(G);
  }, -320, 470, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = aa;
  FIRST_BUTTON_BOOK = z;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱟ︆︃︃, IMAGES.ﱡ︆︃︃, IMAGES.ﱣ︆︃︃], 1, 0, undefined, -61, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱢ︆︃︃, IMAGES.ﱞ︇︃︃, IMAGES.ﱠ︇︃︃], 1, 0, undefined, 260, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(G);
  }, -320, 470, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = ca;
  FIRST_BUTTON_CRATE = z;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, -29, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 65, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 205, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 300, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(178, 182, 0, [IMAGES.ﱟ︂︃︃, IMAGES.ﱡ︂︃︃, IMAGES.ﱣ︂︃︃], 1, 0, undefined, 159, 395, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱟ︆︃︃, IMAGES.ﱡ︆︃︃, IMAGES.ﱣ︆︃︃], 1, 0, undefined, -61, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(39, 122, 0, [IMAGES.ﱢ︆︃︃, IMAGES.ﱞ︇︃︃, IMAGES.ﱠ︇︃︃], 1, 0, undefined, 260, 315, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(G);
  }, -320, 470, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = _;
  this.ﱞ︀️︄[z] = Di(260, 260, 0, [IMAGES.ﱡ︆︄︃, IMAGES.ﱣ︆︄︃, IMAGES.ﱢ︆︄︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Jj(3, 50);
    } else {
      pa(F);
    }
  }, -65, 197, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = S;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(H);
  }, 309, 180, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = S;
  this.ﱞ︀️︄[z] = Di(260, 260, 0, [IMAGES.ﱞ︇︄︃, IMAGES.ﱠ︇︄︃, IMAGES.ﱟ︇︄︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Jj(0, 100);
    } else {
      pa(F);
    }
  }, -65, 197, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = P;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(H);
  }, 309, 180, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = P;
  this.ﱞ︀️︄[z] = Di(260, 260, 0, [IMAGES.ﱡ︇︄︃, IMAGES.ﱣ︇︄︃, IMAGES.ﱢ︇︄︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Jj(4, 150);
    } else {
      pa(F);
    }
  }, -65, 197, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = Q;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(H);
  }, 309, 180, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = Q;
  this.ﱞ︀️︄[z] = Di(260, 260, 0, [IMAGES.ﱞ︈︄︃, IMAGES.ﱠ︈︄︃, IMAGES.ﱟ︈︄︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Jj(1, 300);
    } else {
      pa(F);
    }
  }, -65, 197, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = U;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(H);
  }, 309, 180, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = U;
  this.ﱞ︀️︄[z] = Di(260, 260, 0, [IMAGES.ﱡ︈︄︃, IMAGES.ﱣ︈︄︃, IMAGES.ﱢ︈︄︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Jj(2, 600);
    } else {
      pa(F);
    }
  }, -65, 197, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = R;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(H);
  }, 309, 180, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = R;
  this.ﱞ︀️︄[z] = Di(260, 260, 0, [IMAGES.ﱞ︈︄︃, IMAGES.ﱠ︈︄︃, IMAGES.ﱟ︈︄︃], 1, 0, function () {
    if (k.ﱟ︊︊︄()) {
      Jj(5, 300);
    } else {
      pa(F);
    }
  }, -65, 197, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = V;
  this.ﱞ︀️︄[z] = Di(115, 73, 0, [IMAGES.ﱟ︇︃︃, IMAGES.ﱡ︇︃︃, IMAGES.ﱣ︇︃︃], 1, 0, function () {
    pa(H);
  }, 309, 180, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = V;
  var Ja = z;
  this.ﱞ︀️︄[z] = Di(205, 67, 0, [IMAGES.ﱢ︋︂︃, IMAGES.ﱞ︌︂︃, IMAGES.ﱠ︌︂︃], 1, 0, function () {
    Ha(undefined, 0);
  }, -305, 125, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Ma = z;
  this.ﱞ︀️︄[z] = Di(205, 67, 0, [IMAGES.ﱟ︌︂︃, IMAGES.ﱡ︌︂︃, IMAGES.ﱣ︌︂︃], 1, 0, function () {
    Ha(undefined, 1);
  }, -305, 170, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Na = z;
  this.ﱞ︀️︄[z] = Di(205, 67, 0, [IMAGES.ﱢ︌︂︃, IMAGES.ﱞ︍︂︃, IMAGES.ﱠ︍︂︃], 1, 0, function () {
    Ha(undefined, 2);
  }, -305, 215, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Pa = z;
  this.ﱞ︀️︄[z] = Di(205, 67, 0, [IMAGES.ﱟ︍︂︃, IMAGES.ﱡ︍︂︃, IMAGES.ﱣ︍︂︃], 1, 0, function () {
    Ha(undefined, 3);
  }, -305, 260, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Ra = z;
  this.ﱞ︀️︄[z] = Di(205, 67, 0, [IMAGES.ﱢ︍︂︃, IMAGES.ﱞ︎︂︃, IMAGES.ﱠ︎︂︃], 1, 0, function () {
    Ha(undefined, 3);
  }, -305, 305, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Sa = z;
  this.ﱞ︀️︄[z] = Di(460, 73, 0, [IMAGES.ﱟ︋︂︃, IMAGES.ﱡ︋︂︃, IMAGES.ﱣ︋︂︃], 1, 0, function () {
    Ha(-1);
  }, -180, 170, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Ta = z;
  this.ﱞ︀️︄[z] = Di(222, 68, 0, [IMAGES.ﱟ︉︂︃, IMAGES.ﱡ︉︂︃, IMAGES.ﱣ︉︂︃], 1, 0, function () {
    Ha(Ki.ﱠ︈︆︄);
  }, -180, 215, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Ua = z;
  this.ﱞ︀️︄[z] = Di(222, 68, 0, [IMAGES.ﱢ︉︂︃, IMAGES.ﱞ︊︂︃, IMAGES.ﱠ︊︂︃], 1, 0, function () {
    Ha(Ki.ﱟ︈︆︄);
  }, -180, 260, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Va = z;
  this.ﱞ︀️︄[z] = Di(222, 68, 0, [IMAGES.ﱟ︊︂︃, IMAGES.ﱡ︊︂︃, IMAGES.ﱣ︊︂︃], 1, 0, function () {
    Ha(Ki.ﱟ︇︆︄);
  }, -60, 215, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  var Wa = z;
  this.ﱞ︀️︄[z] = Di(222, 68, 0, [IMAGES.ﱢ︊︂︃, IMAGES.ﱞ︋︂︃, IMAGES.ﱠ︋︂︃], 1, 0, function () {
    Ha(Ki.ﱣ︇︆︄);
  }, -60, 260, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = C;
  this.ﱞ︄︊︄ = z;
  this.ﱞ︀️︄[z] = Di(143, 66, 0, [IMAGES.ﱣ︀︅︃, IMAGES.ﱢ︀︅︃, IMAGES.ﱞ︁︅︃], 1, 0, function () {
    Nj(undefined, dj.ﱞ︄︊︄);
  }, -298, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱣ︄︊︄ = z;
  this.ﱞ︀️︄[z] = Di(104, 66, 0, [IMAGES.ﱠ︁︅︃, IMAGES.ﱟ︁︅︃, IMAGES.ﱡ︁︅︃], 1, 0, function () {
    Nj(undefined, dj.ﱣ︄︊︄);
  }, -223, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱠ︅︊︄ = z;
  this.ﱞ︀️︄[z] = Di(110, 66, 0, [IMAGES.ﱣ︁︅︃, IMAGES.ﱢ︁︅︃, IMAGES.ﱞ︂︅︃], 1, 0, function () {
    Nj(undefined, dj.ﱠ︅︊︄);
  }, -168, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱞ︅︊︄ = z;
  this.ﱞ︀️︄[z] = Di(88, 66, 0, [IMAGES.ﱣ︂︅︃, IMAGES.ﱢ︂︅︃, IMAGES.ﱞ︃︅︃], 1, 0, function () {
    Nj(undefined, dj.ﱞ︅︊︄);
  }, -110, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱢ︄︊︄ = z;
  this.ﱞ︀️︄[z] = Di(88, 66, 0, [IMAGES.ﱠ︂︅︃, IMAGES.ﱟ︂︅︃, IMAGES.ﱡ︂︅︃], 1, 0, function () {
    Nj(undefined, dj.ﱢ︄︊︄);
  }, -63, 110, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = K;
  this.ﱞ︀️︄[z] = Di(86, 44, 0, [IMAGES.ﱞ︍︁︃, IMAGES.ﱠ︍︁︃, IMAGES.ﱟ︍︁︃], 1, 0, function () {
    c.open("./terms.html", "_blank");
  }, 349, 290, ya | va, Aa);
  this.ﱞ︀️︄[z++].view = H;
  var Xa = new m(COSMETICS.ﱟ︃︆︄, FIRST_BUTTON_SKIN, function (c) {
    dj.ﱡ︇︆︄ = c;
    if (dj.unlock.ﱡ︇︆︄[c] === 1) {
      Cookies.set("starve_skin", "" + c, {
        expires: 30
      });
    }
  }, this.ﱡ︇︆︄, this.unlock.ﱡ︇︆︄);
  var Ya = new m(COSMETICS.ﱡ︃︌︁, FIRST_BUTTON_BAG, function (c) {
    dj.ﱢ︂︇︄ = c;
    if (dj.unlock.ﱢ︂︇︄[c] === 1) {
      Cookies.set("starve_bag", "" + c, {
        expires: 30
      });
    }
  }, this.ﱢ︂︇︄, this.unlock.ﱢ︂︇︄);
  var Za = new m(COSMETICS.ﱟ︃︌︁, FIRST_BUTTON_BOOK, function (c) {
    dj.ﱣ︂︇︄ = c;
    if (dj.unlock.ﱣ︂︇︄[c] === 1) {
      Cookies.set("starve_book", "" + c, {
        expires: 30
      });
    }
  }, this.ﱣ︂︇︄, this.unlock.ﱣ︂︇︄);
  var $a = new m(COSMETICS.ﱟ︇︎︁, FIRST_BUTTON_CRATE, function (c) {
    dj.ﱞ︅︈︄ = c;
    if (dj.unlock.ﱞ︅︈︄[c] === 1) {
      Cookies.set("starve_dead", "" + c, {
        expires: 30
      });
    }
  }, this.ﱞ︅︈︄, this.unlock.ﱞ︅︈︄);
  var _a = new m(COSMETICS.ﱟ︇︎︁, FIRST_BUTTON_LOOT, function (c) {
    dj.ﱢ︄︈︄ = c;
    if (dj.unlock.ﱢ︄︈︄[c] === 1) {
      Cookies.set("starve_crate", "" + c, {
        expires: 30
      });
    }
  }, this.ﱢ︄︈︄, this.unlock.ﱢ︄︈︄);
  var ab = new m(COSMETICS.ﱣ︁︄︂, FIRST_BUTTON_ACCESSORY, function (c) {
    dj.ﱟ︃︇︄ = c;
    if (dj.unlock.ﱟ︃︇︄[c] === 1) {
      Cookies.set("starve_accessory", "" + c, {
        expires: 30
      });
    }
  }, this.ﱟ︃︇︄, this.unlock.ﱟ︃︇︄);
  this.ﱟ︍︊︄ = function (c) {
    mj.ﱟ︅︇︄ = Bi(k.ﱢ︆︆︄, c);
    for (var d = 0; d < k.ﱞ︀️︄[Oa]; d++) {
      if (k.ﱞ︀️︄[d].info.active === Ba) {
        k.ﱞ︀️︄[d].ﱟ︍︇︄(k.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      }
    }
  };
  this.ﱡ︍︊︄ = function (c) {
    mj.ﱟ︅︇︄ = Bi(k.ﱢ︆︆︄, c);
    for (var d = 0; d < k.ﱞ︀️︄[Oa]; d++) {
      var e = k.ﱞ︀️︄[d];
      if (e.info.active === Ba && e.ﱟ︍︇︄(k.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
        return void e.info.ﱠ︍︇︄();
      }
    }
  };
  this.ﱣ︍︊︄ = false;
  this.ﱢ︍︊︄ = function (c) {
    mj.ﱟ︅︇︄ = Bi(k.ﱢ︆︆︄, c);
    for (var d = false, e = 0; e < k.ﱞ︀️︄[Oa]; e++) {
      if (k.ﱞ︀️︄[e].info.active === Ba) {
        d |= k.ﱞ︀️︄[e].ﱟ︍︇︄(k.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      }
    }
    if (k.ﱣ︍︊︄ !== d) {
      k.ﱣ︍︊︄ = d;
      f[Z].cursor = d ? k.ﱟ︉︉︄ : k.ﱠ︉︉︄;
    }
  };
  this.ﱡ︂︊︄ = function () {
    c[La]("mousedown", this.ﱟ︍︊︄, false);
    c[La]("mouseup", this.ﱡ︍︊︄, false);
    c[La]("mousemove", this.ﱢ︍︊︄, false);
  };
  this.ﱣ︂︊︄ = function () {
    c[Ka]("mousedown", this.ﱟ︍︊︄, false);
    c[Ka]("mouseup", this.ﱡ︍︊︄, false);
    c[Ka]("mousemove", this.ﱢ︍︊︄, false);
  };
}
function Ui(d, e) {
  var f = this;
  this.ﱢ︆︆︄ = d;
  this.ﱞ︇︆︄ = e;
  if (c.navigator.userAgent[E]("Edge") > -1) {
    this.ﱠ︉︉︄ = "default";
    this.ﱟ︉︉︄ = "pointer";
  } else {
    this.ﱠ︉︉︄ = "url('img/cursor0.png'), default";
    this.ﱟ︉︉︄ = "url('img/cursor1.png'), pointer";
  }
  this.ﱢ︈︉︄ = 1;
  this.ﱞ︎︊︄ = 1;
  this.ﱠ︎︊︄ = 1;
  this.ﱟ︎︊︄ = 1;
  this.ﱡ︎︊︄ = {
    id: document[fa]("team_box"),
    [Z]: document[fa]("team_box")[Z],
    update: function () {
      this[Z].left = Math[A](jb - 125) + "px";
      this[Z].top = "110px";
    }
  };
  this.ﱣ︎︊︄ = {
    ﱢ︎︊︄: Di(60, 60, 0, sprite[776]),
    ﱞ️︊︄: Di(60, 60, 0, sprite[777])
  };
  this[N] = {
    open: false,
    ﱠ️︊︄: 0,
    ﱟ️︊︄: document[fa]("sign_object"),
    ﱡ️︊︄: 0,
    id: document[fa]("sign_window"),
    [Z]: document[fa]("sign_window")[Z],
    button: Di(60, 60, 0, sprite[797]),
    ﱟ︆︉︄: function () {
      var c = Math[A](Math[A]((3 + hj.ﱟ︌︉︂.ﱠ︊︆︄[Oa]) / 4) * (10 + sprite[310][0].width) + 35);
      this.button.info.translate.x = c;
      this.button.info.translate.y = 22;
    },
    update: function () {
      this[Z].left = Math[A](jb - 150) + "px";
      this[Z].top = Math[A](kb - 115) + "px";
    },
    ﱠ︇︉︄: function () {
      jj[N][Z].display = "none";
      jj[N].open = false;
    },
    select: function () {
      jj[N].open = !jj[N].open;
      if (jj[N].open) {
        jj[N][Z].display = "inline-block";
      } else {
        jj[N][Z].display = "none";
      }
    },
    ok: function () {
      client.ﱣ️︊︄(hj[N].ﱣ︊︅︄, jj[N].ﱡ️︊︄);
      jj[N].select();
    },
    ﱟ️︆︄: function () {
      jj[N].ﱡ️︊︄ = jj[N].ﱡ️︊︄ === 0 ? 3 : jj[N].ﱡ️︊︄ - 1;
      jj[N].ﱟ️︊︄.src = "./img/sign" + jj[N].ﱡ️︊︄ + ".png";
    },
    ﱢ️︊︄: function () {
      jj[N].ﱡ️︊︄ = (jj[N].ﱡ️︊︄ + 1) % 4;
      jj[N].ﱟ️︊︄.src = "./img/sign" + jj[N].ﱡ️︊︄ + ".png";
    }
  };
  document[fa]("quit_sign")[La]("mouseup", this[N].select, false);
  document[fa]("ok_sign")[La]("mouseup", this[N].ok, false);
  document[fa]("sign_up")[La]("mouseup", this[N].ﱟ️︆︄, false);
  document[fa]("sign_down")[La]("mouseup", this[N].ﱢ️︊︄, false);
  this.ﱞ︀︋︄ = {
    open: false,
    id: document[fa]("shop_market"),
    [Z]: document[fa]("shop_market")[Z],
    items: [{
      id: 0,
      name: "wood",
      ﱠ︀︋︄: 1,
      b: 1,
      a: 3,
      ﱟ︀︋︄: 310
    }, {
      id: 1,
      name: "stone",
      ﱠ︀︋︄: 1,
      b: 1,
      a: 4,
      ﱟ︀︋︄: 309
    }, {
      id: 2,
      name: "gold",
      ﱠ︀︋︄: 1,
      b: 1,
      a: 6,
      ﱟ︀︋︄: 291
    }, {
      id: 3,
      name: "diamond",
      ﱠ︀︋︄: 4,
      b: 4,
      a: 1,
      ﱟ︀︋︄: 292
    }, {
      id: 4,
      name: "amethyst",
      ﱠ︀︋︄: 8,
      b: 8,
      a: 1,
      ﱟ︀︋︄: 412
    }, {
      id: 5,
      name: "reidite",
      ﱠ︀︋︄: 16,
      b: 16,
      a: 1,
      ﱟ︀︋︄: 932
    }, {
      id: 6,
      name: "pumpkin_seed",
      ﱠ︀︋︄: 10,
      b: 10,
      a: 1,
      ﱟ︀︋︄: 802
    }, {
      id: 7,
      name: "carrot_seed",
      ﱠ︀︋︄: 16,
      b: 16,
      a: 1,
      ﱟ︀︋︄: 943
    }, {
      id: 8,
      name: "tomato_seed",
      ﱠ︀︋︄: 20,
      b: 20,
      a: 1,
      ﱟ︀︋︄: 953
    }, {
      id: 9,
      name: "thornbush_seed",
      ﱠ︀︋︄: 30,
      b: 30,
      a: 1,
      ﱟ︀︋︄: 839
    }, {
      id: 10,
      name: "garlic_seed",
      ﱠ︀︋︄: 40,
      b: 40,
      a: 1,
      ﱟ︀︋︄: 828
    }, {
      id: 11,
      name: "watermelon_seed",
      ﱠ︀︋︄: 60,
      b: 60,
      a: 1,
      ﱟ︀︋︄: 960
    }],
    button: Di(60, 60, 0, sprite[789]),
    update: function () {
      this[Z].left = Math[A](jb - 450) + "px";
      this[Z].top = Math[A](kb - 270) + "px";
    },
    select: function () {
      jj.ﱞ︀︋︄.open = !jj.ﱞ︀︋︄.open;
      if (jj.ﱞ︀︋︄.open) {
        jj.ﱞ︀︋︄[Z].display = "inline-block";
      } else {
        jj.ﱞ︀︋︄[Z].display = "none";
      }
    },
    ﱠ︇︉︄: function () {
      jj.ﱞ︀︋︄[Z].display = "none";
      jj.ﱞ︀︋︄.open = false;
    },
    ﱡ︀︋︄: function () {
      client.ﱣ︀︋︄(this.ﱢ︀︋︄);
    },
    ﱞ︀︉︄: function () {
      this.id;
      if (this.ﱢ︀︋︄.a === 1) {
        var c = Math[A](Number(this.value) * this.ﱢ︀︋︄.b);
        this.ﱢ︀︋︄.ﱠ︀︋︄ = c;
        document[fa](this.ﱢ︀︋︄.name + "_trad_number").innerHTML = c + "";
      } else {
        c = Math[A](Number(this.value) / this.ﱢ︀︋︄.a);
        this.ﱢ︀︋︄.ﱠ︀︋︄ = c;
        document[fa](this.ﱢ︀︋︄.name + "_trad_number").innerHTML = c + "";
      }
    }
  };
  document[fa]("quit_market")[La]("mouseup", this.ﱞ︀︋︄.ﱠ︇︉︄, false);
  for (var g = [["mouseup", this.ﱞ︀︋︄.ﱡ︀︋︄, "buy_"], ["click", this.ﱞ︀︋︄.ﱞ︀︉︄, ""], ["change", this.ﱞ︀︋︄.ﱞ︀︉︄, ""], ["keypress", this.ﱞ︀︋︄.keypress, ""]], i = 0; i < this.ﱞ︀︋︄.items[Oa]; i++) {
    var k = this.ﱞ︀︋︄.items[i];
    document[fa](k.name + "_market").src = sprite[k.ﱟ︀︋︄][0].ﱞ︁︋︄ === undefined ? sprite[k.ﱟ︀︋︄][0].src : sprite[k.ﱟ︀︋︄][0].ﱞ︁︋︄;
    if (k.a === 1) {
      document[fa](k.name + "_trad_number").innerHTML = k.b;
      document[fa](k.name + "_number").value = 1;
      document[fa](k.name + "_number").step = 1;
      document[fa](k.name + "_number")[ta] = 1;
      document[fa](k.name + "_number")[ba] = Math[A](255 / k.b);
    } else {
      document[fa](k.name + "_trad_number").innerHTML = 1;
      document[fa](k.name + "_number").value = k.a;
      document[fa](k.name + "_number").step = k.a;
      document[fa](k.name + "_number")[ta] = k.a;
    }
    document[fa]("buy_" + k.name + "_number").ﱢ︀︋︄ = k;
    document[fa](k.name + "_number").ﱢ︀︋︄ = k;
    for (var m = 0; m < g[Oa]; m++) {
      document[fa](g[m][2] + k.name + "_number")[La](g[m][0], g[m][1], false);
    }
  }
  $("[type='number']").keypress(function (c) {
    c.preventDefault();
  });
  this.options = {
    open: false,
    id: document[fa]("option_in_game"),
    [Z]: document[fa]("option_in_game")[Z],
    ﱠ︁︋︄: document[fa]("agree_ing")[Z],
    ﱟ︁︋︄: document[fa]("cancel_agree_ing")[Z],
    ﱡ︁︋︄: document[fa]("quest_agree_ing")[Z],
    ﱣ︃︉︄: document[fa]("spectator_agree_ing")[Z],
    ﱢ︃︉︄: document[fa]("auto_feed_agree_ing")[Z],
    ﱣ︁︋︄: document[fa]("info_agree_ing")[Z],
    ﱢ︁︋︄: document[fa]("pixelated_agree_ing")[Z],
    button: Di(60, 60, 0, sprite[721]),
    ﱞ︂︋︄: function () {
      jj.options.open = !jj.options.open;
      if (jj.options.open) {
        jj.options[Z].display = "inline-block";
      } else {
        jj.options[Z].display = "none";
      }
    },
    ﱠ︂︋︄: function () {
      dj.ﱡ︁︊︄();
    },
    ﱟ︂︋︄: function () {
      dj.ﱣ︁︊︄();
    },
    high: function () {
      dj.ﱞ︁︊︄();
    },
    low: function () {
      dj.ﱟ︁︊︄();
    },
    ﱡ︂︋︄: function () {
      jj.ﱞ︄︉︄.ﱡ︂︋︄();
    },
    ﱣ︂︋︄: function () {
      jj.ﱢ︂︋︄.ﱡ︂︋︄();
    },
    ﱞ︃︋︄: function () {
      jj.ﱠ︃︋︄.ﱡ︂︋︄();
    },
    ﱟ︃︋︄: function () {
      hj.ﱟ︃︉︄.ﱡ︃︉︄();
    },
    ﱡ︃︋︄: function () {
      hj.ﱢ︄︆︄.ﱡ︃︉︄();
    },
    ﱠ︇︉︄: function () {
      jj.options[Z].display = "none";
      jj.options.open = false;
    },
    update: function () {
      this[Z].left = Math[A](jb - 235) + "px";
      this[Z].top = Math[A](kb - 170) + "px";
    }
  };
  document[fa]("azerty_ing")[La]("mouseup", this.options.ﱠ︂︋︄, false);
  document[fa]("qwerty_ing")[La]("mouseup", this.options.ﱟ︂︋︄, false);
  document[fa]("low_ing")[La]("mouseup", this.options.low, false);
  document[fa]("high_ing")[La]("mouseup", this.options.high, false);
  document[fa]("quit_opt")[La]("mouseup", this.options.ﱠ︇︉︄, false);
  document[fa]("case_agree_opt")[La]("mouseup", this.options.ﱡ︂︋︄, false);
  document[fa]("quest_case_agree_opt")[La]("mouseup", this.options.ﱞ︃︋︄, false);
  document[fa]("cancel_case_agree_opt")[La]("mouseup", this.options.ﱣ︂︋︄, false);
  document[fa]("spectator_case_agree_opt")[La]("mouseup", this.options.ﱟ︃︋︄, false);
  document[fa]("auto_feed_case_agree_opt")[La]("mouseup", this.options.ﱡ︃︋︄, false);
  this.ﱢ︂︋︄ = {
    open: false,
    activated: Cookies.get("starve_cancel") && Cookies.get("starve_cancel") === "0" ? 0 : 1,
    id: document[fa]("cancel_sure_delete"),
    [Z]: document[fa]("cancel_sure_delete")[Z],
    ﱠ︁︋︄: document[fa]("cancel_agree")[Z],
    button: 0,
    i: 0,
    ﱠ︇︉︄: function () {
      jj.ﱢ︂︋︄[Z].display = "none";
      jj.ﱢ︂︋︄.open = false;
    },
    ﱣ︃︋︄: function () {
      if (hj.ﱟ︌︉︂.ﱢ︉︆︄) {
        client.ﱢ︃︋︄();
      }
      jj.ﱢ︂︋︄.ﱠ︇︉︄();
    },
    ﱡ︂︋︄: function () {
      if (jj.ﱢ︂︋︄.activated) {
        Cookies.set("starve_cancel", "0");
        jj.ﱢ︂︋︄.ﱠ︁︋︄.display = "inline-block";
        jj.options.ﱟ︁︋︄.display = "none";
      } else {
        Cookies.set("starve_cancel", "1");
        jj.ﱢ︂︋︄.ﱠ︁︋︄.display = "none";
        jj.options.ﱟ︁︋︄.display = "inline-block";
      }
      jj.ﱢ︂︋︄.activated = !jj.ﱢ︂︋︄.activated;
    },
    ﱣ︄︉︄: function () {
      if (this.activated) {
        this[Z].display = "inline-block";
        this.open = true;
      } else {
        this.ﱣ︃︋︄();
      }
    },
    update: function () {
      this[Z].left = Math[A](jb - 235) + "px";
      this[Z].top = Math[A](kb - 130) + "px";
    }
  };
  this.ﱢ︂︋︄.id.oncontextmenu = function () {
    return false;
  };
  this.ﱢ︂︋︄.ﱠ︁︋︄.display = "none";
  if (this.ﱢ︂︋︄.activated) {
    this.options.ﱟ︁︋︄.display = "inline-block";
  } else {
    this.options.ﱟ︁︋︄.display = "none";
  }
  document[fa]("cancel_yes_delete")[La]("mouseup", this.ﱢ︂︋︄.ﱣ︃︋︄, false);
  document[fa]("cancel_no_delete")[La]("mouseup", this.ﱢ︂︋︄.ﱠ︇︉︄, false);
  document[fa]("cancel_case_agree")[La]("mouseup", this.ﱢ︂︋︄.ﱡ︂︋︄, false);
  document[La]("cancel_sure_delete", function (c) {
    c.preventDefault();
  }, false);
  this.ﱞ︄︋︄ = {
    activated: Cookies.get("starve_aliasing") && Cookies.get("starve_aliasing") === "0" ? 0 : 1,
    ﱠ︄︋︄: function (c) {
      document[fa]("game_canvas")[Z].imageRendering = c ? "pixelated" : "auto";
    },
    ﱡ︂︋︄: function () {
      if (jj.ﱞ︄︋︄.activated === 0) {
        Cookies.set("starve_aliasing", "1");
        jj.ﱞ︄︋︄.ﱠ︄︋︄(1);
        jj.options.ﱢ︁︋︄.display = "inline-block";
      } else {
        Cookies.set("starve_aliasing", "0");
        jj.ﱞ︄︋︄.ﱠ︄︋︄(0);
        jj.options.ﱢ︁︋︄.display = "none";
      }
      jj.ﱞ︄︋︄.activated = (jj.ﱞ︄︋︄.activated + 1) % 2;
    }
  };
  if (this.ﱞ︄︋︄.activated === 1) {
    this.options.ﱢ︁︋︄.display = "inline-block";
  } else {
    this.ﱞ︄︋︄.ﱠ︄︋︄(0);
    this.options.ﱢ︁︋︄.display = "none";
  }
  document[fa]("pixelated_case_agree_opt")[La]("mouseup", this.ﱞ︄︋︄.ﱡ︂︋︄, false);
  this.ﱞ︉︅︄ = {
    activated: Cookies.get("starve_info_box") && Cookies.get("starve_info_box") === "0" ? 0 : 1,
    display: 0,
    x: 0,
    y: 0,
    id: 0,
    ﱟ︌︉︂: 0,
    ﱡ︂︋︄: function () {
      if (jj.ﱞ︉︅︄.activated === 0) {
        Cookies.set("starve_info_box", "1");
        jj.options.ﱣ︁︋︄.display = "inline-block";
      } else {
        Cookies.set("starve_info_box", "0");
        jj.options.ﱣ︁︋︄.display = "none";
      }
      jj.ﱞ︉︅︄.activated = (jj.ﱞ︉︅︄.activated + 1) % 2;
    },
    ﱟ︍︇︄: function (c, d, e) {
      if (c && this.activated) {
        this.display = 1;
        this.id = e === 0 ? d.id : Wb[d.id].ﱠ︄︉︂;
        this.x = d.info.translate.x + 80;
        this.y = d.info.translate.y;
        this.ﱟ︌︉︂ = e;
      }
      return c;
    }
  };
  if (this.ﱞ︉︅︄.activated === 1) {
    this.options.ﱣ︁︋︄.display = "inline-block";
  } else {
    this.options.ﱣ︁︋︄.display = "none";
  }
  document[fa]("info_case_agree_opt")[La]("mouseup", this.ﱞ︉︅︄.ﱡ︂︋︄, false);
  if (Cookies.get("starve_scale")) {
    ob = Number(Cookies.get("starve_scale"));
    document[fa]("input_ratio").value = ob;
    ob *= Gb / Hb;
    Ib();
  }
  this.ﱠ︁︊︄ = function () {
    Cookies.set("starve_scale", "" + document[fa]("input_ratio").value);
    ob = document[fa]("input_ratio").value * (Gb / Hb);
    Ib();
  };
  document[fa]("input_ratio")[La]("input", this.ﱠ︁︊︄, false);
  this.ﱞ︄︉︄ = {
    open: false,
    activated: Cookies.get("starve_safe") && Cookies.get("starve_safe") === "0" ? 0 : 1,
    id: document[fa]("sure_delete"),
    [Z]: document[fa]("sure_delete")[Z],
    ﱠ︁︋︄: document[fa]("agree")[Z],
    button: 0,
    i: 0,
    ﱠ︇︉︄: function () {
      jj.ﱞ︄︉︄[Z].display = "none";
      jj.ﱞ︄︉︄.open = false;
    },
    all: function () {
      if (!hj.ﱟ︉︆︄.ﱠ︌︎︄) {
        if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && hj.ﱟ︌︉︂.id < 0) {
          client.ﱟ︄︋︄(jj.ﱞ︄︉︄.button);
        }
        jj.ﱞ︄︉︄.ﱠ︇︉︄();
      }
    },
    ﱣ︃︉︂: function () {
      if (hj.ﱟ︌︉︂.workbench && !hj.ﱟ︉︆︄.ﱠ︌︎︄) {
        if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && hj.ﱟ︌︉︂.id < 0) {
          client.ﱡ︄︋︄(jj.ﱞ︄︉︄.button);
        }
        jj.ﱞ︄︉︄.ﱠ︇︉︄();
      }
    },
    ﱣ︄︋︄: function () {
      if (!hj.ﱟ︉︆︄.ﱠ︌︎︄) {
        if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && hj.ﱟ︌︉︂.id < 0) {
          client.ﱢ︄︋︄(jj.ﱞ︄︉︄.button);
        }
        jj.ﱞ︄︉︄.ﱠ︇︉︄();
      }
    },
    ﱡ︂︋︄: function () {
      if (jj.ﱞ︄︉︄.activated) {
        Cookies.set("starve_safe", "0");
        jj.ﱞ︄︉︄.ﱠ︁︋︄.display = "inline-block";
        jj.options.ﱠ︁︋︄.display = "none";
      } else {
        Cookies.set("starve_safe", "1");
        jj.ﱞ︄︉︄.ﱠ︁︋︄.display = "none";
        jj.options.ﱠ︁︋︄.display = "inline-block";
      }
      jj.ﱞ︄︉︄.activated = !jj.ﱞ︄︉︄.activated;
    },
    ﱣ︄︉︄: function (c) {
      this.button = c;
      document[fa]("item_to_del").src = sprite[Ub[c].ﱡ︃︉︂][0].ﱞ︁︋︄ === undefined ? sprite[Ub[c].ﱡ︃︉︂][0].src : sprite[Ub[c].ﱡ︃︉︂][0].ﱞ︁︋︄;
      if (Ub[c].ﱣ︃︉︂ && !hj.ﱟ️︅︄ && hj.ﱟ︌︉︂.workbench) {
        document[fa]("recycle_delete")[Z].display = "inline-block";
      } else {
        document[fa]("recycle_delete")[Z].display = "none";
      }
      if (this.activated) {
        this[Z].display = "inline-block";
        this.open = true;
      } else {
        this.all();
      }
    },
    update: function () {
      this[Z].left = Math[A](jb - 235) + "px";
      this[Z].top = Math[A](kb - 175) + "px";
    }
  };
  this.ﱞ︄︉︄.ﱠ︁︋︄.display = "none";
  if (this.ﱞ︄︉︄.activated) {
    this.options.ﱠ︁︋︄.display = "inline-block";
  } else {
    this.options.ﱠ︁︋︄.display = "none";
  }
  document[fa]("one_delete")[La]("mouseup", this.ﱞ︄︉︄.ﱣ︄︋︄, false);
  document[fa]("yes_delete")[La]("mouseup", this.ﱞ︄︉︄.all, false);
  document[fa]("recycle_delete")[La]("mouseup", this.ﱞ︄︉︄.ﱣ︃︉︂, false);
  document[fa]("no_delete")[La]("mouseup", this.ﱞ︄︉︄.ﱠ︇︉︄, false);
  document[fa]("case_agree")[La]("mouseup", this.ﱞ︄︉︄.ﱡ︂︋︄, false);
  this.ﱠ️︈︄ = {
    open: false,
    ﱞ︎︉︄: -1,
    button: Di(60, 60, 0, sprite[586]),
    id: document[fa]("shop_starterkit"),
    [Z]: document[fa]("shop_starterkit")[Z],
    update: function () {
      this[Z].left = Math[A](jb - 300) + "px";
      this[Z].top = Math[A](kb - 215) + "px";
    },
    ﱠ︇︉︄: function () {
      jj.ﱠ️︈︄.open = false;
      jj.ﱠ️︈︄[Z].display = "none";
    },
    select: function () {
      jj.ﱠ️︈︄.open = !jj.ﱠ️︈︄.open;
      if (jj.ﱠ️︈︄.open) {
        jj.ﱠ️︈︄[Z].display = "inline-block";
      } else {
        jj.ﱠ️︈︄[Z].display = "none";
      }
    },
    ﱡ︀︋︄: function () {
      if (jj.ﱠ️︈︄.ﱞ︎︉︄ >= 0) {
        client.ﱞ︅︋︄(jj.ﱠ️︈︄.ﱞ︎︉︄);
        jj.ﱠ️︈︄.ﱠ︇︉︄();
        if (ga) {
          ga("send", "event", "Game", "kit", "" + jj.ﱠ️︈︄.ﱞ︎︉︄);
        }
      }
    },
    init: function () {
      var c = hj.ﱠ️︈︄.value;
      document[fa]("points_bank").innerHTML = Utils.ﱢ︁︋︁(c) + " points";
      for (var d = 0; d < Ii[Oa]; d++) {
        if (Ii[d].ﱣ︍︇︄ > c) {
          document[fa]("starter" + (d + 1))[Z].opacity = "0.4";
        } else {
          document[fa]("starter" + (d + 1))[Z].opacity = "1";
        }
      }
      for (d = 1; d < 13; d++) {
        document[fa]("inv_shop" + d).src = "./img/empty-shop.png";
        document[fa]("amount_shop" + d).innerHTML = "";
      }
      document[fa]("buy_kit")[Z].opacity = "0.2";
    },
    ﱠ︅︋︄: function () {
      if (this.id[Oa] > 8) {
        var c = Number(this.id.charAt(7) + this.id.charAt(8));
      } else {
        c = Number(this.id.charAt(7));
      }
      var d = Ii[c - 1];
      if (hj.ﱠ️︈︄.value >= d.ﱣ︍︇︄) {
        jj.ﱠ️︈︄.ﱞ︎︉︄ = c;
        document[fa]("buy_kit")[Z].opacity = "1";
      } else {
        jj.ﱠ️︈︄.ﱞ︎︉︄ = -1;
        document[fa]("buy_kit")[Z].opacity = "0.2";
      }
      d = d.items;
      for (var e = 1, f = 1; e < d[Oa] + 1; e++) {
        if (d[e - 1][1] !== 29) {
          document[fa]("inv_shop" + f)[Z].display = "inline-block";
          document[fa]("inv_shop" + f).src = sprite[Ub[d[e - 1][1]].ﱡ︃︉︂][0].ﱞ︁︋︄ === undefined ? sprite[Ub[d[e - 1][1]].ﱡ︃︉︂][0].src : sprite[Ub[d[e - 1][1]].ﱡ︃︉︂][0].ﱞ︁︋︄;
          document[fa]("amount_shop" + f).innerHTML = "" + d[e - 1][0];
          f++;
        }
      }
      for (; f < 13; f++) {
        document[fa]("inv_shop" + f).src = "./img/empty-shop.png";
        document[fa]("amount_shop" + f).innerHTML = "";
      }
    }
  };
  document[fa]("quit3")[La]("mouseup", this.ﱠ️︈︄.ﱠ︇︉︄, false);
  document[fa]("buy_kit")[La]("mouseup", this.ﱠ️︈︄.ﱡ︀︋︄, false);
  for (m = 1; m < 11; m++) {
    document[fa]("starter" + m)[La]("mouseup", this.ﱠ️︈︄.ﱠ︅︋︄, false);
  }
  this.ﱠ︃︋︄ = {
    open: false,
    activated: Cookies.get("starve_quests") && Cookies.get("starve_quests") === "1" ? 1 : 0,
    button: Di(60, 60, 0, sprite[749]),
    id: document[fa]("chronoquest"),
    [Z]: document[fa]("chronoquest")[Z],
    update: function () {
      this[Z].left = Math[A](jb - 420) + "px";
      this[Z].top = Math[A](kb - 270) + "px";
    },
    ﱠ︇︉︄: function () {
      jj.ﱠ︃︋︄[Z].display = "none";
      jj.ﱠ︃︋︄.open = false;
    },
    select: function () {
      jj.ﱠ︃︋︄.open = !jj.ﱠ︃︋︄.open;
      if (jj.ﱠ︃︋︄.open) {
        jj.ﱠ︃︋︄[Z].display = "inline-block";
      } else {
        jj.ﱠ︃︋︄[Z].display = "none";
      }
    },
    list: [],
    reset: function () {
      for (var c = 0; c < Mi[Oa]; c++) {
        this.list[c] = 1;
        document[fa]("timeremain_" + c)[Z].display = "inline-block";
        document[fa]("time_finished_" + c)[Z].display = "none";
        document[fa]("claim_reward_" + c)[Z].display = "none";
      }
    },
    ﱟ︅︋︄: 0,
    ﱡ︎︆︄: 0,
    ﱡ︅︋︄: function () {
      if (jj.ﱠ︃︋︄.open) {
        var c = new Date().getTime();
        if (!(c - this.ﱟ︅︋︄ < 1000)) {
          this.ﱟ︅︋︄ = c;
          for (var d = 0; d < Mi[Oa]; d++) {
            if (jj.ﱠ︃︋︄.list[d]) {
              var e = Mi[d].time - (c - gj.ﱞ︉︆︄.init + jj.ﱠ︃︋︄.ﱡ︎︆︄);
              document[fa]("timeremain_" + d).innerHTML = e > 960000 ? Math[A](e / 480000) + " days" : e > 480000 ? Math[A](e / 480000) + " day" : e > 60000 ? Math[A](e / 60000) + " min" : Math[A](e / 1000) + " sec";
            }
          }
        }
      }
    },
    restore: function (c) {
      for (var d = 0; d < c[Oa]; d++) {
        if (c[d] != 1) {
          jj.ﱠ︃︋︄.ﱣ︅︋︄(d, c[d]);
        }
      }
    },
    ﱣ︅︋︄: function (c, d) {
      if (!(d !== 3 || c !== 11 && c !== 12)) {
        hj.ﱞ︁︆︄.ﱞ︂︉︄(0, 1);
        jj.ﱣ︂︉︄();
      }
      document[fa]("timeremain_" + c).innerHTML = "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
      if (d > 1) {
        document[fa]("time_finished_" + c).innerHTML = "SUCCEED";
        document[fa]("timeremain_" + c)[Z].display = "none";
      } else if (d === 0) {
        document[fa]("time_finished_" + c).innerHTML = "FAILED";
        document[fa]("timeremain_" + c)[Z].display = "none";
      }
      document[fa]("claim_reward_" + c)[Z].display = d === 2 ? "inline-block" : "none";
      document[fa]("time_finished_" + c)[Z].display = "inline";
      jj.ﱠ︃︋︄.list[c] = 0;
    },
    modify: function (c, d) {
      jj.ﱠ︃︋︄.ﱣ︅︋︄(c, d);
      if (jj.ﱠ︃︋︄.activated) {
        jj.ﱠ︃︋︄.open = true;
        jj.ﱠ︃︋︄[Z].display = "inline-block";
      }
    },
    ﱡ︂︋︄: function () {
      if (jj.ﱠ︃︋︄.activated) {
        Cookies.set("starve_quests", "0");
        jj.options.ﱡ︁︋︄.display = "none";
      } else {
        Cookies.set("starve_quests", "1");
        jj.options.ﱡ︁︋︄.display = "inline-block";
      }
      jj.ﱠ︃︋︄.activated = !jj.ﱠ︃︋︄.activated;
    },
    ﱢ︅︋︄: function () {
      var c = Number(this.id.charAt(13));
      var d = Number(this.id.charAt(14));
      if (this.id.charAt(14) !== "" && d >= 0 && d <= 9) {
        c = c * 10 + d;
      }
      client.ﱞ︆︋︄(c);
    }
  };
  if (this.ﱠ︃︋︄.activated) {
    this.options.ﱡ︁︋︄.display = "inline-block";
  } else {
    this.options.ﱡ︁︋︄.display = "none";
  }
  document[fa]("quit_chronoquest")[La]("mouseup", this.ﱠ︃︋︄.ﱠ︇︉︄, false);
  for (m = 0; m < Mi[Oa]; m++) {
    document[fa]("claim_reward_" + m)[La]("mouseup", this.ﱠ︃︋︄.ﱢ︅︋︄, false);
  }
  this.ﱠ︆︋︄ = {
    open: false,
    button: Di(60, 60, 0, sprite[702]),
    list: {
      id: document[fa]("recipe_craft"),
      [Z]: document[fa]("recipe_craft")[Z],
      ﱟ︆︋︄: [],
      category: 0,
      update: function () {
        this[Z].left = Math[A](jb - 335) + "px";
        this[Z].top = Math[A](kb - 215) + "px";
      },
      ﱠ︇︉︄: function () {
        document[fa]("recipe_craft")[Z].display = "none";
        jj.ﱠ︆︋︄.open = false;
      },
      ﱠ︀︉︄: function () {
        document[fa]("recipe_craft")[Z].display = "none";
        document[fa]("home_craft")[Z].display = "inline-block";
      },
      ﱡ︆︋︄: function (c) {
        if ((d = this.ﱟ︆︋︄[c]).ﱟ︃︋︁) {
          document[fa]("watercraft")[Z].display = "inline-block";
        } else {
          document[fa]("watercraft")[Z].display = "none";
        }
        if (d.f) {
          document[fa]("firecraft")[Z].display = "inline-block";
        } else {
          document[fa]("firecraft")[Z].display = "none";
        }
        if (d.w) {
          document[fa]("workcraft")[Z].display = "inline-block";
        } else {
          document[fa]("workcraft")[Z].display = "none";
        }
        if (d.e) {
          document[fa]("wellcraft")[Z].display = "inline-block";
        } else {
          document[fa]("wellcraft")[Z].display = "none";
        }
        for (var d = d.r, e = (c = 0, 1); c < d[Oa]; c++) {
          document[fa]("inv" + e)[Z].display = "inline-block";
          document[fa]("inv" + e).src = sprite[Ub[d[c][0]].ﱡ︃︉︂][0].ﱞ︁︋︄ === undefined ? sprite[Ub[d[c][0]].ﱡ︃︉︂][0].src : sprite[Ub[d[c][0]].ﱡ︃︉︂][0].ﱞ︁︋︄;
          document[fa]("numb" + e).innerHTML = "" + d[c][1];
          e++;
        }
        for (; e < 6; e++) {
          document[fa]("inv" + e)[Z].display = "none";
          document[fa]("numb" + e).innerHTML = "";
        }
      },
      select: function (c) {
        this.category = c;
        document[fa]("home_craft")[Z].display = "none";
        document[fa]("workcraft")[Z].display = "none";
        document[fa]("firecraft")[Z].display = "none";
        document[fa]("watercraft")[Z].display = "none";
        document[fa]("wellcraft")[Z].display = "none";
        document[fa]("recipe_craft")[Z].display = "inline-block";
        document[fa]("inv1")[Z].display = "none";
        document[fa]("inv2")[Z].display = "none";
        document[fa]("inv3")[Z].display = "none";
        document[fa]("inv4")[Z].display = "none";
        document[fa]("inv5")[Z].display = "none";
        document[fa]("numb1").innerHTML = "";
        document[fa]("numb2").innerHTML = "";
        document[fa]("numb3").innerHTML = "";
        document[fa]("numb4").innerHTML = "";
        document[fa]("numb5").innerHTML = "";
        for (var d = 0, e = 0; d < Wb[Oa]; d++) {
          var f = Wb[d];
          if (c === f.t) {
            this.ﱟ︆︋︄[e] = f;
            e++;
            document[fa]("img_" + e)[Z].display = "inline-block";
            document[fa]("img_" + e).src = sprite[Ub[f.ﱠ︄︉︂].ﱡ︃︉︂][0].ﱞ︁︋︄ === undefined ? sprite[Ub[f.ﱠ︄︉︂].ﱡ︃︉︂][0].src : sprite[Ub[f.ﱠ︄︉︂].ﱡ︃︉︂][0].ﱞ︁︋︄;
          }
        }
        for (e++; e < 49; e++) {
          document[fa]("img_" + e)[Z].display = "none";
        }
      }
    },
    ﱣ︆︋︄: {
      id: document[fa]("home_craft"),
      [Z]: document[fa]("home_craft")[Z],
      update: function () {
        this[Z].left = Math[A](jb - 285) + "px";
        this[Z].top = Math[A](kb - 170) + "px";
      },
      ﱠ︇︉︄: function () {
        document[fa]("home_craft")[Z].display = "none";
        jj.ﱠ︆︋︄.open = false;
      }
    },
    ﱢ︆︋︄: function () {
      this.open = !this.open;
      if (this.open) {
        document[fa]("home_craft")[Z].display = "inline-block";
      } else {
        document[fa]("home_craft")[Z].display = "none";
        document[fa]("recipe_craft")[Z].display = "none";
      }
    }
  };
  document[fa]("quit")[La]("mouseup", this.ﱠ︆︋︄.ﱣ︆︋︄.ﱠ︇︉︄, false);
  document[fa]("quitmenu")[La]("mouseup", this.ﱠ︆︋︄.list.ﱠ︇︉︄, false);
  document[fa]("backhome")[La]("mouseup", this.ﱠ︆︋︄.list.ﱠ︀︉︄, false);
  document[fa]("hatcategory")[La]("mouseup", function () {
    jj.ﱠ︆︋︄.list.select(2);
  }, false);
  document[fa]("weaponcategory")[La]("mouseup", function () {
    jj.ﱠ︆︋︄.list.select(1);
  }, false);
  document[fa]("toolcategory")[La]("mouseup", function () {
    jj.ﱠ︆︋︄.list.select(0);
  }, false);
  document[fa]("foodcategory")[La]("mouseup", function () {
    jj.ﱠ︆︋︄.list.select(3);
  }, false);
  document[fa]("placeablecategory")[La]("mouseup", function () {
    jj.ﱠ︆︋︄.list.select(4);
  }, false);
  document[fa]("constructioncategory")[La]("mouseup", function () {
    jj.ﱠ︆︋︄.list.select(5);
  }, false);
  document[fa]("img_1")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(0);
  }, false);
  document[fa]("img_2")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(1);
  }, false);
  document[fa]("img_3")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(2);
  }, false);
  document[fa]("img_4")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(3);
  }, false);
  document[fa]("img_5")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(4);
  }, false);
  document[fa]("img_6")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(5);
  }, false);
  document[fa]("img_7")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(6);
  }, false);
  document[fa]("img_8")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(7);
  }, false);
  document[fa]("img_9")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(8);
  }, false);
  document[fa]("img_10")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(9);
  }, false);
  document[fa]("img_11")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(10);
  }, false);
  document[fa]("img_12")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(11);
  }, false);
  document[fa]("img_13")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(12);
  }, false);
  document[fa]("img_14")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(13);
  }, false);
  document[fa]("img_15")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(14);
  }, false);
  document[fa]("img_16")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(15);
  }, false);
  document[fa]("img_17")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(16);
  }, false);
  document[fa]("img_18")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(17);
  }, false);
  document[fa]("img_19")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(18);
  }, false);
  document[fa]("img_20")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(19);
  }, false);
  document[fa]("img_21")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(20);
  }, false);
  document[fa]("img_22")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(21);
  }, false);
  document[fa]("img_23")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(22);
  }, false);
  document[fa]("img_24")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(23);
  }, false);
  document[fa]("img_25")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(24);
  }, false);
  document[fa]("img_26")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(25);
  }, false);
  document[fa]("img_27")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(26);
  }, false);
  document[fa]("img_28")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(27);
  }, false);
  document[fa]("img_29")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(28);
  }, false);
  document[fa]("img_30")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(29);
  }, false);
  document[fa]("img_31")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(30);
  }, false);
  document[fa]("img_32")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(31);
  }, false);
  document[fa]("img_33")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(32);
  }, false);
  document[fa]("img_34")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(33);
  }, false);
  document[fa]("img_35")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(34);
  }, false);
  document[fa]("img_36")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(35);
  }, false);
  document[fa]("img_37")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(36);
  }, false);
  document[fa]("img_38")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(37);
  }, false);
  document[fa]("img_39")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(38);
  }, false);
  document[fa]("img_40")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(39);
  }, false);
  document[fa]("img_41")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(40);
  }, false);
  document[fa]("img_42")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(41);
  }, false);
  document[fa]("img_43")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(42);
  }, false);
  document[fa]("img_44")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(43);
  }, false);
  document[fa]("img_45")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(44);
  }, false);
  document[fa]("img_46")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(45);
  }, false);
  document[fa]("img_47")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(46);
  }, false);
  document[fa]("img_48")[La]("mousedown", function () {
    jj.ﱠ︆︋︄.list.ﱡ︆︋︄(47);
  }, false);
  this.ﱞ︂︆︄ = {
    translate: {
      x: 0,
      y: 0
    },
    marker: {
      x: -1,
      y: -1
    },
    players: [],
    focus: function (c) {
      var d = this.translate.y + (hj.ﱞ︁︆︄.ﱠ︂︆︄[Oa] > 0 ? -120 : -50);
      if (c.x > this.translate.x && c.x < this.translate.x + 193 && c.y > d && c.y < d + 193) {
        this.marker.x = c.x - this.translate.x;
        this.marker.y = c.y - d;
      }
    }
  };
  this.ﱡ︆︆︄ = {
    translate: {
      x: 0,
      y: 0
    },
    ﱡ︃︉︂: sprite[272],
    ﱢ︆︆︄: document[p]("canvas")
  };
  this.ﱡ︆︆︄.ﱢ︆︆︄.width = this.ﱡ︆︆︄.ﱡ︃︉︂.width;
  this.ﱡ︆︆︄.ﱢ︆︆︄.height = this.ﱡ︆︆︄.ﱡ︃︉︂.height;
  this.ﱡ︆︆︄.ﱞ︇︆︄ = this.ﱡ︆︆︄.ﱢ︆︆︄[T]("2d");
  this.ﱟ︅︆︄ = {
    translate: {
      x: 0,
      y: 0
    },
    ﱡ︃︉︂: sprite[261],
    draw: wg,
    y: 0
  };
  this.ﱞ︇︋︄ = function () {
    div = document[fa]("team_box");
    div.innerHTML = "";
    div.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-ﱢ️︎︄:5px;\" ></img>" + gj.players[hj.ﱢ️︅︄[0]].nickname + "</div";
    for (var c = 1; c < hj.ﱢ️︅︄[Oa]; c++) {
      div.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + gj.players[hj.ﱢ️︅︄[c]].nickname + "</div></div>";
    }
    div.innerHTML += "<div id=\"leave\" style=\"display:inline-block;\">LEAVE</div></div>";
    div[Z].display = "inline-block";
    document[fa]("leave")[La]("click", client.ﱞ︇︋︄, false);
  };
  this.ﱠ︇︋︄ = function () {
    div = document[fa]("team_box");
    div.innerHTML = "";
    div.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-ﱢ️︎︄:5px;\" ></img>" + gj.players[hj.ﱢ️︅︄[0]].nickname + "</div";
    for (var c = 1; c < hj.ﱢ️︅︄[Oa]; c++) {
      div.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + gj.players[hj.ﱢ️︅︄[c]].nickname + "</div></div>";
    }
    div.innerHTML += "</div>";
    div[Z].display = "inline-block";
  };
  this.ﱟ︇︋︄ = function () {
    div = document[fa]("team_box");
    div.innerHTML = "";
    div.innerHTML += "<div id=\"leader\"><img src=\"./img/leaderlogo.png\" style=\"width:25px;margin-ﱢ️︎︄:5px;\" ></img>" + gj.players[hj.ﱢ️︅︄[0]].nickname + "</div";
    for (var c = 1; c < hj.ﱢ️︅︄[Oa]; c++) {
      div.innerHTML += "<div class=\"nicknames\"> <div style=\"display:inline-block;padding-top:7px;\">" + gj.players[hj.ﱢ️︅︄[c]].nickname + "</div><div class=\"eject_member\" id=\"eject_member" + c + "\"><img src=\"./img/close-team.png\" style=\"width:20px;padding:5px;\"></img></div>";
    }
    if (hj.ﱞ️︅︄.ﱢ︎︎︄ === 0) {
      div.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">LOCK</div></div>";
    } else {
      div.innerHTML += "<div id=\"lock_team\" style=\"display:inline-block;\">UNLOCK</div></div>";
    }
    document[fa]("lock_team")[La]("click", client.ﱡ︇︋︄, false);
    div[Z].display = "inline-block";
    for (c = 1; c < hj.ﱢ️︅︄[Oa]; c++) {
      switch (c) {
        case 1:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(1);
          }, false);
          break;
        case 2:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(2);
          }, false);
          break;
        case 3:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(3);
          }, false);
          break;
        case 4:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(4);
          }, false);
          break;
        case 5:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(5);
          }, false);
          break;
        case 6:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(6);
          }, false);
          break;
        case 7:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(7);
          }, false);
          break;
        case 8:
          document[fa]("eject_member" + c)[La]("click", function () {
            client.ﱣ︇︋︄(8);
          }, false);
      }
    }
  };
  this.ﱞ︀︆︄ = [];
  this.ﱞ︀︆︄[2] = {
    button: Di(60, 60, 0, sprite[550]),
    action: this.ﱞ︇︋︄
  };
  this.ﱞ︀︆︄[3] = {
    button: Di(60, 60, 0, sprite[550]),
    action: client.ﱢ︇︋︄
  };
  this.ﱞ︀︆︄[0] = {
    button: Di(60, 60, 0, sprite[551]),
    action: this.ﱟ︇︋︄
  };
  this.ﱞ︀︆︄[1] = {
    button: Di(60, 60, 0, sprite[555]),
    action: this.ﱠ︇︋︄
  };
  this.ﱞ︀︆︄[4] = {
    button: Di(60, 60, 0, sprite[554]),
    action: function () {}
  };
  this.ﱣ️︅︄ = -1;
  this.ﱡ︋︅︄ = Di(60, 60, 0, sprite[717]);
  this.ﱣ︋︅︄ = Di(60, 60, 0, sprite[718]);
  this.ﱢ︋︅︄ = Di(60, 60, 0, sprite[652]);
  this.ﱢ︍︅︄ = Di(60, 60, 0, sprite[651]);
  this.ﱞ︎︅︄ = Di(60, 60, 0, sprite[652]);
  this.ﱡ︌︅︄ = Di(60, 60, 0, sprite[310]);
  this.ﱣ︌︅︄ = Di(60, 60, 0, sprite[309]);
  this.ﱢ︌︅︄ = Di(60, 60, 0, sprite[291]);
  this.ﱞ︍︅︄ = Di(60, 60, 0, sprite[292]);
  this.ﱠ︍︅︄ = Di(60, 60, 0, sprite[412]);
  this.ﱟ︍︅︄ = Di(60, 60, 0, sprite[932]);
  this.ﱡ︎︅︄ = Di(60, 60, 0, sprite[406]);
  this.ﱡ︁︆︄ = Di(60, 60, 0, sprite[530]);
  this.ﱣ︁︆︄ = Di(60, 60, 0, sprite[529]);
  this.ﱟ︁︆︄ = Di(60, 60, 0, sprite[532]);
  this.ﱣ︎︅︄ = Di(120, 120, 0, sprite[143]);
  this.ﱣ︎︅︄.info.translate.x = 10;
  this.ﱣ︎︅︄.info.translate.y = 10;
  this.ﱠ︁︆︄ = [];
  this.ﱠ︁︆︄[0] = Di(68, 68, 0, sprite[334], 3);
  this.ﱠ︁︆︄[0].id = 0;
  this.ﱠ︁︆︄[1] = Di(68, 68, 0, sprite[335], 3);
  this.ﱠ︁︆︄[1].id = 1;
  this.ﱠ︁︆︄[102] = Di(68, 68, 0, sprite[336], 3);
  this.ﱠ︁︆︄[102].id = 102;
  this.ﱠ︁︆︄[103] = Di(68, 68, 0, sprite[337], 3);
  this.ﱠ︁︆︄[103].id = 103;
  this.ﱠ︁︆︄[104] = Di(68, 68, 0, sprite[263], 3);
  this.ﱠ︁︆︄[104].id = 104;
  this.ﱠ︁︆︄[227] = Di(68, 68, 0, sprite[1149], 3);
  this.ﱠ︁︆︄[227].id = 227;
  this.ﱠ︁︆︄[105] = Di(68, 68, 0, sprite[264], 3);
  this.ﱠ︁︆︄[105].id = 105;
  this.ﱠ︁︆︄[106] = Di(68, 68, 0, sprite[265], 3);
  this.ﱠ︁︆︄[106].id = 106;
  this.ﱠ︁︆︄[3] = Di(68, 68, 0, sprite[266], 3);
  this.ﱠ︁︆︄[3].id = 3;
  this.ﱠ︁︆︄[4] = Di(68, 68, 0, sprite[338], 3);
  this.ﱠ︁︆︄[4].id = 4;
  this.ﱠ︁︆︄[5] = Di(68, 68, 0, sprite[339], 3);
  this.ﱠ︁︆︄[5].id = 5;
  this.ﱠ︁︆︄[57] = Di(68, 68, 0, sprite[825], 3);
  this.ﱠ︁︆︄[57].id = 57;
  this.ﱠ︁︆︄[6] = Di(68, 68, 0, sprite[340], 3);
  this.ﱠ︁︆︄[6].id = 6;
  this.ﱠ︁︆︄[107] = Di(68, 68, 0, sprite[267], 3);
  this.ﱠ︁︆︄[107].id = 107;
  this.ﱠ︁︆︄[108] = Di(68, 68, 0, sprite[352], 3);
  this.ﱠ︁︆︄[108].id = 108;
  this.ﱠ︁︆︄[109] = Di(68, 68, 0, sprite[342], 3);
  this.ﱠ︁︆︄[109].id = 109;
  this.ﱠ︁︆︄[156] = Di(68, 68, 0, sprite[343], 3);
  this.ﱠ︁︆︄[156].id = 156;
  this.ﱠ︁︆︄[154] = Di(68, 68, 0, sprite[344], 3);
  this.ﱠ︁︆︄[154].id = 154;
  this.ﱠ︁︆︄[8] = Di(68, 68, 0, sprite[268], 3);
  this.ﱠ︁︆︄[8].id = 8;
  this.ﱠ︁︆︄[111] = Di(68, 68, 0, sprite[345], 3);
  this.ﱠ︁︆︄[111].id = 111;
  this.ﱠ︁︆︄[110] = Di(68, 68, 0, sprite[269], 3);
  this.ﱠ︁︆︄[110].id = 110;
  this.ﱠ︁︆︄[112] = Di(68, 68, 0, sprite[270], 3);
  this.ﱠ︁︆︄[112].id = 112;
  this.ﱠ︁︆︄[189] = Di(68, 68, 0, sprite[346], 3);
  this.ﱠ︁︆︄[189].id = 189;
  this.ﱠ︁︆︄[155] = Di(68, 68, 0, sprite[347], 3);
  this.ﱠ︁︆︄[155].id = 155;
  this.ﱠ︁︆︄[157] = Di(68, 68, 0, sprite[348], 3);
  this.ﱠ︁︆︄[157].id = 157;
  this.ﱠ︁︆︄[158] = Di(68, 68, 0, sprite[349], 3);
  this.ﱠ︁︆︄[158].id = 158;
  this.ﱠ︁︆︄[159] = Di(68, 68, 0, sprite[350], 3);
  this.ﱠ︁︆︄[159].id = 159;
  this.ﱠ︁︆︄[160] = Di(68, 68, 0, sprite[351], 3);
  this.ﱠ︁︆︄[160].id = 160;
  this.ﱠ︁︆︄[161] = Di(68, 68, 0, sprite[353], 3);
  this.ﱠ︁︆︄[161].id = 161;
  this.ﱠ︁︆︄[162] = Di(68, 68, 0, sprite[376], 3);
  this.ﱠ︁︆︄[162].id = 162;
  this.ﱠ︁︆︄[163] = Di(68, 68, 0, sprite[377], 3);
  this.ﱠ︁︆︄[163].id = 163;
  this.ﱠ︁︆︄[164] = Di(68, 68, 0, sprite[378], 3);
  this.ﱠ︁︆︄[164].id = 164;
  this.ﱠ︁︆︄[2] = Di(68, 68, 0, sprite[380], 3);
  this.ﱠ︁︆︄[2].id = 2;
  this.ﱠ︁︆︄[231] = Di(68, 68, 0, sprite[1157], 3);
  this.ﱠ︁︆︄[231].id = 231;
  this.ﱠ︁︆︄[168] = Di(68, 68, 0, sprite[388], 3);
  this.ﱠ︁︆︄[168].id = 168;
  this.ﱠ︁︆︄[216] = Di(68, 68, 0, sprite[1030], 3);
  this.ﱠ︁︆︄[216].id = 216;
  this.ﱠ︁︆︄[225] = Di(68, 68, 0, sprite[1032], 3);
  this.ﱠ︁︆︄[225].id = 225;
  this.ﱠ︁︆︄[226] = Di(68, 68, 0, sprite[1034], 3);
  this.ﱠ︁︆︄[226].id = 226;
  this.ﱠ︁︆︄[228] = Di(68, 68, 0, sprite[1151], 3);
  this.ﱠ︁︆︄[228].id = 228;
  this.ﱠ︁︆︄[10] = Di(68, 68, 0, sprite[381], 3);
  this.ﱠ︁︆︄[10].id = 10;
  this.ﱠ︁︆︄[165] = Di(68, 68, 0, sprite[382], 3);
  this.ﱠ︁︆︄[165].id = 165;
  this.ﱠ︁︆︄[166] = Di(68, 68, 0, sprite[383], 3);
  this.ﱠ︁︆︄[166].id = 166;
  this.ﱠ︁︆︄[167] = Di(68, 68, 0, sprite[384], 3);
  this.ﱠ︁︆︄[167].id = 167;
  this.ﱠ︁︆︄[11] = Di(68, 68, 0, sprite[385], 3);
  this.ﱠ︁︆︄[11].id = 11;
  this.ﱠ︁︆︄[12] = Di(68, 68, 0, sprite[397], 3);
  this.ﱠ︁︆︄[12].id = 12;
  this.ﱠ︁︆︄[13] = Di(68, 68, 0, sprite[391], 3);
  this.ﱠ︁︆︄[13].id = 13;
  this.ﱠ︁︆︄[14] = Di(68, 68, 0, sprite[394], 3);
  this.ﱠ︁︆︄[14].id = 14;
  this.ﱠ︁︆︄[15] = Di(68, 68, 0, sprite[400], 3);
  this.ﱠ︁︆︄[15].id = 15;
  this.ﱠ︁︆︄[16] = Di(68, 68, 0, sprite[869], 3);
  this.ﱠ︁︆︄[16].id = 16;
  this.ﱠ︁︆︄[113] = Di(68, 68, 0, sprite[404], 3);
  this.ﱠ︁︆︄[113].id = 113;
  this.ﱠ︁︆︄[23] = Di(68, 68, 0, sprite[416], 3);
  this.ﱠ︁︆︄[23].id = 23;
  this.ﱠ︁︆︄[24] = Di(68, 68, 0, sprite[419], 3);
  this.ﱠ︁︆︄[24].id = 24;
  this.ﱠ︁︆︄[87] = Di(68, 68, 0, sprite[1223], 3);
  this.ﱠ︁︆︄[87].id = 87;
  this.ﱠ︁︆︄[88] = Di(68, 68, 0, sprite[1226], 3);
  this.ﱠ︁︆︄[88].id = 88;
  this.ﱠ︁︆︄[80] = Di(68, 68, 0, sprite[1133], 3);
  this.ﱠ︁︆︄[80].id = 80;
  this.ﱠ︁︆︄[81] = Di(68, 68, 0, sprite[1136], 3);
  this.ﱠ︁︆︄[81].id = 81;
  this.ﱠ︁︆︄[95] = Di(68, 68, 0, sprite[1161], 3);
  this.ﱠ︁︆︄[95].id = 95;
  this.ﱠ︁︆︄[64] = Di(68, 68, 0, sprite[565], 3);
  this.ﱠ︁︆︄[64].id = 64;
  this.ﱠ︁︆︄[71] = Di(68, 68, 0, sprite[1234], 3);
  this.ﱠ︁︆︄[71].id = 71;
  this.ﱠ︁︆︄[96] = Di(68, 68, 0, sprite[1164], 3);
  this.ﱠ︁︆︄[96].id = 96;
  this.ﱠ︁︆︄[65] = Di(68, 68, 0, sprite[568], 3);
  this.ﱠ︁︆︄[65].id = 65;
  this.ﱠ︁︆︄[72] = Di(68, 68, 0, sprite[1237], 3);
  this.ﱠ︁︆︄[72].id = 72;
  this.ﱠ︁︆︄[97] = Di(68, 68, 0, sprite[1167], 3);
  this.ﱠ︁︆︄[97].id = 97;
  this.ﱠ︁︆︄[66] = Di(68, 68, 0, sprite[571], 3);
  this.ﱠ︁︆︄[66].id = 66;
  this.ﱠ︁︆︄[73] = Di(68, 68, 0, sprite[1240], 3);
  this.ﱠ︁︆︄[73].id = 73;
  this.ﱠ︁︆︄[98] = Di(68, 68, 0, sprite[1170], 3);
  this.ﱠ︁︆︄[98].id = 98;
  this.ﱠ︁︆︄[67] = Di(68, 68, 0, sprite[574], 3);
  this.ﱠ︁︆︄[67].id = 67;
  this.ﱠ︁︆︄[74] = Di(68, 68, 0, sprite[1243], 3);
  this.ﱠ︁︆︄[74].id = 74;
  this.ﱠ︁︆︄[99] = Di(68, 68, 0, sprite[1173], 3);
  this.ﱠ︁︆︄[99].id = 99;
  this.ﱠ︁︆︄[68] = Di(68, 68, 0, sprite[577], 3);
  this.ﱠ︁︆︄[68].id = 68;
  this.ﱠ︁︆︄[75] = Di(68, 68, 0, sprite[1246], 3);
  this.ﱠ︁︆︄[75].id = 75;
  this.ﱠ︁︆︄[100] = Di(68, 68, 0, sprite[1176], 3);
  this.ﱠ︁︆︄[100].id = 100;
  this.ﱠ︁︆︄[69] = Di(68, 68, 0, sprite[580], 3);
  this.ﱠ︁︆︄[69].id = 69;
  this.ﱠ︁︆︄[76] = Di(68, 68, 0, sprite[1249], 3);
  this.ﱠ︁︆︄[76].id = 76;
  this.ﱠ︁︆︄[101] = Di(68, 68, 0, sprite[1179], 3);
  this.ﱠ︁︆︄[101].id = 101;
  this.ﱠ︁︆︄[70] = Di(68, 68, 0, sprite[583], 3);
  this.ﱠ︁︆︄[70].id = 70;
  this.ﱠ︁︆︄[58] = Di(68, 68, 0, sprite[822], 3);
  this.ﱠ︁︆︄[58].id = 58;
  this.ﱠ︁︆︄[25] = Di(68, 68, 0, sprite[425], 3);
  this.ﱠ︁︆︄[25].id = 25;
  this.ﱠ︁︆︄[26] = Di(68, 68, 0, sprite[428], 3);
  this.ﱠ︁︆︄[26].id = 26;
  this.ﱠ︁︆︄[27] = Di(68, 68, 0, sprite[431], 3);
  this.ﱠ︁︆︄[27].id = 27;
  this.ﱠ︁︆︄[28] = Di(68, 68, 0, sprite[434], 3);
  this.ﱠ︁︆︄[28].id = 28;
  this.ﱠ︁︆︄[114] = Di(68, 68, 0, sprite[437], 3);
  this.ﱠ︁︆︄[114].id = 114;
  this.ﱠ︁︆︄[29] = Di(68, 68, 0, sprite[379], 3);
  this.ﱠ︁︆︄[29].id = 29;
  this.ﱠ︁︆︄[115] = Di(68, 68, 0, sprite[440], 3);
  this.ﱠ︁︆︄[115].id = 115;
  this.ﱠ︁︆︄[30] = Di(68, 68, 0, sprite[451], 3);
  this.ﱠ︁︆︄[30].id = 30;
  this.ﱠ︁︆︄[9] = Di(68, 68, 0, sprite[856], 3);
  this.ﱠ︁︆︄[9].id = 9;
  this.ﱠ︁︆︄[31] = Di(68, 68, 0, sprite[453], 3);
  this.ﱠ︁︆︄[31].id = 31;
  this.ﱠ︁︆︄[32] = Di(68, 68, 0, sprite[1012], 3);
  this.ﱠ︁︆︄[32].id = 32;
  this.ﱠ︁︆︄[33] = Di(68, 68, 0, sprite[468], 3);
  this.ﱠ︁︆︄[33].id = 33;
  this.ﱠ︁︆︄[35] = Di(68, 68, 0, sprite[473], 3);
  this.ﱠ︁︆︄[35].id = 35;
  this.ﱠ︁︆︄[36] = Di(68, 68, 0, sprite[476], 3);
  this.ﱠ︁︆︄[36].id = 36;
  this.ﱠ︁︆︄[37] = Di(68, 68, 0, sprite[479], 3);
  this.ﱠ︁︆︄[37].id = 37;
  this.ﱠ︁︆︄[38] = Di(68, 68, 0, sprite[482], 3);
  this.ﱠ︁︆︄[38].id = 38;
  this.ﱠ︁︆︄[39] = Di(68, 68, 0, sprite[485], 3);
  this.ﱠ︁︆︄[39].id = 39;
  this.ﱠ︁︆︄[116] = Di(68, 68, 0, sprite[488], 3);
  this.ﱠ︁︆︄[116].id = 116;
  this.ﱠ︁︆︄[117] = Di(68, 68, 0, sprite[491], 3);
  this.ﱠ︁︆︄[117].id = 117;
  this.ﱠ︁︆︄[118] = Di(68, 68, 0, sprite[495], 3);
  this.ﱠ︁︆︄[118].id = 118;
  this.ﱠ︁︆︄[40] = Di(68, 68, 0, sprite[498], 3);
  this.ﱠ︁︆︄[40].id = 40;
  this.ﱠ︁︆︄[140] = Di(68, 68, 0, sprite[500], 3);
  this.ﱠ︁︆︄[140].id = 140;
  this.ﱠ︁︆︄[234] = Di(68, 68, 0, sprite[1228], 3);
  this.ﱠ︁︆︄[234].id = 234;
  this.ﱠ︁︆︄[141] = Di(68, 68, 0, sprite[508], 3);
  this.ﱠ︁︆︄[141].id = 141;
  this.ﱠ︁︆︄[142] = Di(68, 68, 0, sprite[514], 3);
  this.ﱠ︁︆︄[142].id = 142;
  this.ﱠ︁︆︄[143] = Di(68, 68, 0, sprite[516], 3);
  this.ﱠ︁︆︄[143].id = 143;
  this.ﱠ︁︆︄[144] = Di(68, 68, 0, sprite[518], 3);
  this.ﱠ︁︆︄[144].id = 144;
  this.ﱠ︁︆︄[145] = Di(68, 68, 0, sprite[525], 3);
  this.ﱠ︁︆︄[145].id = 145;
  this.ﱠ︁︆︄[152] = Di(68, 68, 0, sprite[528], 3);
  this.ﱠ︁︆︄[152].id = 152;
  this.ﱠ︁︆︄[153] = Di(68, 68, 0, sprite[548], 3);
  this.ﱠ︁︆︄[153].id = 153;
  this.ﱠ︁︆︄[43] = Di(68, 68, 0, sprite[537], 3);
  this.ﱠ︁︆︄[43].id = 43;
  this.ﱠ︁︆︄[45] = Di(68, 68, 0, sprite[546], 3);
  this.ﱠ︁︆︄[45].id = 45;
  this.ﱠ︁︆︄[119] = Di(68, 68, 0, sprite[600], 3);
  this.ﱠ︁︆︄[119].id = 119;
  this.ﱠ︁︆︄[215] = Di(68, 68, 0, sprite[1231], 3);
  this.ﱠ︁︆︄[215].id = 215;
  this.ﱠ︁︆︄[217] = Di(68, 68, 0, sprite[1023], 3);
  this.ﱠ︁︆︄[217].id = 217;
  this.ﱠ︁︆︄[218] = Di(68, 68, 0, sprite[1026], 3);
  this.ﱠ︁︆︄[218].id = 218;
  this.ﱠ︁︆︄[224] = Di(68, 68, 0, sprite[1112], 3);
  this.ﱠ︁︆︄[224].id = 224;
  this.ﱠ︁︆︄[89] = Di(68, 68, 0, sprite[1041], 3);
  this.ﱠ︁︆︄[89].id = 89;
  this.ﱠ︁︆︄[219] = Di(68, 68, 0, sprite[1044], 3);
  this.ﱠ︁︆︄[219].id = 219;
  this.ﱠ︁︆︄[221] = Di(68, 68, 0, sprite[1075], 3);
  this.ﱠ︁︆︄[221].id = 221;
  this.ﱠ︁︆︄[233] = Di(68, 68, 0, sprite[1219], 3);
  this.ﱠ︁︆︄[233].id = 233;
  this.ﱠ︁︆︄[222] = Di(68, 68, 0, sprite[1090], 3);
  this.ﱠ︁︆︄[222].id = 222;
  this.ﱠ︁︆︄[223] = Di(68, 68, 0, sprite[1105], 3);
  this.ﱠ︁︆︄[223].id = 223;
  this.ﱠ︁︆︄[220] = Di(68, 68, 0, sprite[1184], 3);
  this.ﱠ︁︆︄[220].id = 220;
  this.ﱠ︁︆︄[120] = Di(68, 68, 0, sprite[604], 3);
  this.ﱠ︁︆︄[120].id = 120;
  this.ﱠ︁︆︄[121] = Di(68, 68, 0, sprite[609], 3);
  this.ﱠ︁︆︄[121].id = 121;
  this.ﱠ︁︆︄[122] = Di(68, 68, 0, sprite[608], 3);
  this.ﱠ︁︆︄[122].id = 122;
  this.ﱠ︁︆︄[46] = Di(68, 68, 0, sprite[611], 3);
  this.ﱠ︁︆︄[46].id = 46;
  this.ﱠ︁︆︄[50] = Di(68, 68, 0, sprite[695], 3);
  this.ﱠ︁︆︄[50].id = 50;
  this.ﱠ︁︆︄[51] = Di(68, 68, 0, sprite[697], 3);
  this.ﱠ︁︆︄[51].id = 51;
  this.ﱠ︁︆︄[52] = Di(68, 68, 0, sprite[701], 3);
  this.ﱠ︁︆︄[52].id = 52;
  this.ﱠ︁︆︄[55] = Di(68, 68, 0, sprite[704], 3);
  this.ﱠ︁︆︄[55].id = 55;
  this.ﱠ︁︆︄[123] = Di(68, 68, 0, sprite[619], 3);
  this.ﱠ︁︆︄[123].id = 123;
  this.ﱠ︁︆︄[124] = Di(68, 68, 0, sprite[622], 3);
  this.ﱠ︁︆︄[124].id = 124;
  this.ﱠ︁︆︄[125] = Di(68, 68, 0, sprite[624], 3);
  this.ﱠ︁︆︄[125].id = 125;
  this.ﱠ︁︆︄[126] = Di(68, 68, 0, sprite[627], 3);
  this.ﱠ︁︆︄[126].id = 126;
  this.ﱠ︁︆︄[127] = Di(68, 68, 0, sprite[630], 3);
  this.ﱠ︁︆︄[127].id = 127;
  this.ﱠ︁︆︄[128] = Di(68, 68, 0, sprite[634], 3);
  this.ﱠ︁︆︄[128].id = 128;
  this.ﱠ︁︆︄[129] = Di(68, 68, 0, sprite[639], 3);
  this.ﱠ︁︆︄[129].id = 129;
  this.ﱠ︁︆︄[47] = Di(68, 68, 0, sprite[642], 3);
  this.ﱠ︁︆︄[47].id = 47;
  this.ﱠ︁︆︄[48] = Di(68, 68, 0, sprite[645], 3);
  this.ﱠ︁︆︄[48].id = 48;
  this.ﱠ︁︆︄[49] = Di(68, 68, 0, sprite[647], 3);
  this.ﱠ︁︆︄[49].id = 49;
  this.ﱠ︁︆︄[130] = Di(68, 68, 0, sprite[655], 3);
  this.ﱠ︁︆︄[130].id = 130;
  this.ﱠ︁︆︄[137] = Di(68, 68, 0, sprite[683], 3);
  this.ﱠ︁︆︄[137].id = 137;
  this.ﱠ︁︆︄[131] = Di(68, 68, 0, sprite[657], 3);
  this.ﱠ︁︆︄[131].id = 131;
  this.ﱠ︁︆︄[132] = Di(68, 68, 0, sprite[659], 3);
  this.ﱠ︁︆︄[132].id = 132;
  this.ﱠ︁︆︄[133] = Di(68, 68, 0, sprite[669], 3);
  this.ﱠ︁︆︄[133].id = 133;
  this.ﱠ︁︆︄[134] = Di(68, 68, 0, sprite[676], 3);
  this.ﱠ︁︆︄[134].id = 134;
  this.ﱠ︁︆︄[135] = Di(68, 68, 0, sprite[677], 3);
  this.ﱠ︁︆︄[135].id = 135;
  this.ﱠ︁︆︄[136] = Di(68, 68, 0, sprite[680], 3);
  this.ﱠ︁︆︄[136].id = 136;
  this.ﱠ︁︆︄[138] = Di(68, 68, 0, sprite[713], 3);
  this.ﱠ︁︆︄[138].id = 138;
  this.ﱠ︁︆︄[139] = Di(68, 68, 0, sprite[725], 3);
  this.ﱠ︁︆︄[139].id = 139;
  this.ﱠ︁︆︄[59] = Di(68, 68, 0, sprite[727], 3);
  this.ﱠ︁︆︄[59].id = 59;
  this.ﱠ︁︆︄[62] = Di(68, 68, 0, sprite[559], 3);
  this.ﱠ︁︆︄[62].id = 62;
  this.ﱠ︁︆︄[179] = Di(68, 68, 0, sprite[584], 3);
  this.ﱠ︁︆︄[179].id = 179;
  this.ﱠ︁︆︄[178] = Di(68, 68, 0, sprite[746], 3);
  this.ﱠ︁︆︄[178].id = 178;
  this.ﱠ︁︆︄[181] = Di(68, 68, 0, sprite[585], 3);
  this.ﱠ︁︆︄[181].id = 181;
  this.ﱠ︁︆︄[180] = Di(68, 68, 0, sprite[748], 3);
  this.ﱠ︁︆︄[180].id = 180;
  this.ﱠ︁︆︄[77] = Di(68, 68, 0, sprite[751], 3);
  this.ﱠ︁︆︄[77].id = 77;
  this.ﱠ︁︆︄[169] = Di(68, 68, 0, sprite[753], 3);
  this.ﱠ︁︆︄[169].id = 169;
  this.ﱠ︁︆︄[170] = Di(68, 68, 0, sprite[757], 3);
  this.ﱠ︁︆︄[170].id = 170;
  this.ﱠ︁︆︄[78] = Di(68, 68, 0, sprite[755], 3);
  this.ﱠ︁︆︄[78].id = 78;
  this.ﱠ︁︆︄[171] = Di(68, 68, 0, sprite[760], 3);
  this.ﱠ︁︆︄[171].id = 171;
  this.ﱠ︁︆︄[79] = Di(68, 68, 0, sprite[759], 3);
  this.ﱠ︁︆︄[79].id = 79;
  this.ﱠ︁︆︄[83] = Di(68, 68, 0, sprite[763], 3);
  this.ﱠ︁︆︄[83].id = 83;
  this.ﱠ︁︆︄[84] = Di(68, 68, 0, sprite[767], 3);
  this.ﱠ︁︆︄[84].id = 84;
  this.ﱠ︁︆︄[172] = Di(68, 68, 0, sprite[768], 3);
  this.ﱠ︁︆︄[172].id = 172;
  this.ﱠ︁︆︄[173] = Di(68, 68, 0, sprite[769], 3);
  this.ﱠ︁︆︄[173].id = 173;
  this.ﱠ︁︆︄[86] = Di(68, 68, 0, sprite[772], 3);
  this.ﱠ︁︆︄[86].id = 86;
  this.ﱠ︁︆︄[85] = Di(68, 68, 0, sprite[775], 3);
  this.ﱠ︁︆︄[85].id = 85;
  this.ﱠ︁︆︄[174] = Di(68, 68, 0, sprite[780], 3);
  this.ﱠ︁︆︄[174].id = 174;
  this.ﱠ︁︆︄[175] = Di(68, 68, 0, sprite[781], 3);
  this.ﱠ︁︆︄[175].id = 175;
  this.ﱠ︁︆︄[176] = Di(68, 68, 0, sprite[784], 3);
  this.ﱠ︁︆︄[176].id = 176;
  this.ﱠ︁︆︄[177] = Di(68, 68, 0, sprite[795], 3);
  this.ﱠ︁︆︄[177].id = 177;
  this.ﱠ︁︆︄[182] = Di(68, 68, 0, sprite[804], 3);
  this.ﱠ︁︆︄[182].id = 182;
  this.ﱠ︁︆︄[183] = Di(68, 68, 0, sprite[809], 3);
  this.ﱠ︁︆︄[183].id = 183;
  this.ﱠ︁︆︄[184] = Di(68, 68, 0, sprite[838], 3);
  this.ﱠ︁︆︄[184].id = 184;
  this.ﱠ︁︆︄[185] = Di(68, 68, 0, sprite[830], 3);
  this.ﱠ︁︆︄[185].id = 185;
  this.ﱠ︁︆︄[186] = Di(68, 68, 0, sprite[835], 3);
  this.ﱠ︁︆︄[186].id = 186;
  this.ﱠ︁︆︄[187] = Di(68, 68, 0, sprite[841], 3);
  this.ﱠ︁︆︄[187].id = 187;
  this.ﱠ︁︆︄[188] = Di(68, 68, 0, sprite[845], 3);
  this.ﱠ︁︆︄[188].id = 188;
  this.ﱠ︁︆︄[200] = Di(68, 68, 0, sprite[955], 3);
  this.ﱠ︁︆︄[200].id = 200;
  this.ﱠ︁︆︄[201] = Di(68, 68, 0, sprite[968], 3);
  this.ﱠ︁︆︄[201].id = 201;
  this.ﱠ︁︆︄[198] = Di(68, 68, 0, sprite[945], 3);
  this.ﱠ︁︆︄[198].id = 198;
  this.ﱠ︁︆︄[199] = Di(68, 68, 0, sprite[950], 3);
  this.ﱠ︁︆︄[199].id = 199;
  this.ﱠ︁︆︄[202] = Di(68, 68, 0, sprite[962], 3);
  this.ﱠ︁︆︄[202].id = 202;
  this.ﱠ︁︆︄[203] = Di(68, 68, 0, sprite[967], 3);
  this.ﱠ︁︆︄[203].id = 203;
  this.ﱠ︁︆︄[204] = Di(68, 68, 0, sprite[977], 3);
  this.ﱠ︁︆︄[204].id = 204;
  this.ﱠ︁︆︄[205] = Di(68, 68, 0, sprite[982], 3);
  this.ﱠ︁︆︄[205].id = 205;
  this.ﱠ︁︆︄[41] = Di(68, 68, 0, sprite[875], 3);
  this.ﱠ︁︆︄[41].id = 41;
  this.ﱠ︁︆︄[42] = Di(68, 68, 0, sprite[877], 3);
  this.ﱠ︁︆︄[42].id = 42;
  this.ﱠ︁︆︄[12] = Di(68, 68, 0, sprite[397], 3);
  this.ﱠ︁︆︄[12].id = 12;
  this.ﱠ︁︆︄[16] = Di(68, 68, 0, sprite[869], 3);
  this.ﱠ︁︆︄[16].id = 16;
  this.ﱠ︁︆︄[190] = Di(68, 68, 0, sprite[892], 3);
  this.ﱠ︁︆︄[190].id = 190;
  this.ﱠ︁︆︄[18] = Di(68, 68, 0, sprite[893], 3);
  this.ﱠ︁︆︄[18].id = 18;
  this.ﱠ︁︆︄[191] = Di(68, 68, 0, sprite[900], 3);
  this.ﱠ︁︆︄[191].id = 191;
  this.ﱠ︁︆︄[192] = Di(68, 68, 0, sprite[902], 3);
  this.ﱠ︁︆︄[192].id = 192;
  this.ﱠ︁︆︄[61] = Di(68, 68, 0, sprite[905], 3);
  this.ﱠ︁︆︄[61].id = 61;
  this.ﱠ︁︆︄[195] = Di(68, 68, 0, sprite[865], 3);
  this.ﱠ︁︆︄[195].id = 195;
  this.ﱠ︁︆︄[193] = Di(68, 68, 0, sprite[857], 3);
  this.ﱠ︁︆︄[193].id = 193;
  this.ﱠ︁︆︄[194] = Di(68, 68, 0, sprite[862], 3);
  this.ﱠ︁︆︄[194].id = 194;
  this.ﱡ︊︆︄ = [];
  for (var n = 0; n < 250; n++) {
    this.ﱡ︊︆︄[n] = Di(0, 0, 0, sprite[360]);
  }
  this.ﱞ︈︋︄ = [];
  this.ﱞ︈︋︄[0] = Di(60, 60, 0, sprite[255], 3);
  this.ﱞ︈︋︄[0].id = 0;
  this.ﱞ︈︋︄[1] = Di(60, 60, 0, sprite[306], 3);
  this.ﱞ︈︋︄[1].id = 1;
  this.ﱞ︈︋︄[102] = Di(60, 60, 0, sprite[309], 3);
  this.ﱞ︈︋︄[102].id = 102;
  this.ﱞ︈︋︄[102].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[102].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[103] = Di(60, 60, 0, sprite[310], 3);
  this.ﱞ︈︋︄[103].id = 103;
  this.ﱞ︈︋︄[103].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[103].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[104] = Di(60, 60, 0, sprite[271], 3);
  this.ﱞ︈︋︄[104].id = 104;
  this.ﱞ︈︋︄[227] = Di(60, 60, 0, sprite[1148], 3);
  this.ﱞ︈︋︄[227].id = 227;
  this.ﱞ︈︋︄[105] = Di(60, 60, 0, sprite[291], 3);
  this.ﱞ︈︋︄[105].id = 105;
  this.ﱞ︈︋︄[105].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[105].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[106] = Di(60, 60, 0, sprite[292], 3);
  this.ﱞ︈︋︄[106].id = 106;
  this.ﱞ︈︋︄[106].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[106].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[3] = Di(60, 60, 0, sprite[252], 3);
  this.ﱞ︈︋︄[3].id = 3;
  this.ﱞ︈︋︄[4] = Di(60, 60, 0, sprite[290], 3);
  this.ﱞ︈︋︄[4].id = 4;
  this.ﱞ︈︋︄[5] = Di(60, 60, 0, sprite[286], 3);
  this.ﱞ︈︋︄[5].id = 5;
  this.ﱞ︈︋︄[57] = Di(60, 60, 0, sprite[823], 3);
  this.ﱞ︈︋︄[57].id = 57;
  this.ﱞ︈︋︄[6] = Di(60, 60, 0, sprite[287], 3);
  this.ﱞ︈︋︄[6].id = 6;
  this.ﱞ︈︋︄[107] = Di(60, 60, 0, sprite[303], 3);
  this.ﱞ︈︋︄[107].id = 107;
  this.ﱞ︈︋︄[108] = Di(60, 60, 0, sprite[304], 3);
  this.ﱞ︈︋︄[108].id = 108;
  this.ﱞ︈︋︄[109] = Di(60, 60, 0, sprite[305], 3);
  this.ﱞ︈︋︄[109].id = 109;
  this.ﱞ︈︋︄[156] = Di(60, 60, 0, sprite[311], 3);
  this.ﱞ︈︋︄[156].id = 156;
  this.ﱞ︈︋︄[154] = Di(60, 60, 0, sprite[313], 3);
  this.ﱞ︈︋︄[154].id = 154;
  this.ﱞ︈︋︄[8] = Di(60, 60, 0, sprite[307], 3);
  this.ﱞ︈︋︄[8].id = 8;
  this.ﱞ︈︋︄[111] = Di(60, 60, 0, sprite[317], 3);
  this.ﱞ︈︋︄[111].id = 111;
  this.ﱞ︈︋︄[110] = Di(60, 60, 0, sprite[294], 3);
  this.ﱞ︈︋︄[110].id = 110;
  this.ﱞ︈︋︄[112] = Di(60, 60, 0, sprite[322], 3);
  this.ﱞ︈︋︄[112].id = 112;
  this.ﱞ︈︋︄[189] = Di(60, 60, 0, sprite[297], 3);
  this.ﱞ︈︋︄[189].id = 189;
  this.ﱞ︈︋︄[155] = Di(60, 60, 0, sprite[299], 3);
  this.ﱞ︈︋︄[155].id = 155;
  this.ﱞ︈︋︄[155].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[155].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[157] = Di(60, 60, 0, sprite[323], 3);
  this.ﱞ︈︋︄[157].id = 157;
  this.ﱞ︈︋︄[158] = Di(60, 60, 0, sprite[324], 3);
  this.ﱞ︈︋︄[158].id = 158;
  this.ﱞ︈︋︄[159] = Di(60, 60, 0, sprite[325], 3);
  this.ﱞ︈︋︄[159].id = 159;
  this.ﱞ︈︋︄[160] = Di(60, 60, 0, sprite[329], 3);
  this.ﱞ︈︋︄[160].id = 160;
  this.ﱞ︈︋︄[161] = Di(60, 60, 0, sprite[331], 3);
  this.ﱞ︈︋︄[161].id = 161;
  this.ﱞ︈︋︄[162] = Di(60, 60, 0, sprite[355], 3);
  this.ﱞ︈︋︄[162].id = 162;
  this.ﱞ︈︋︄[163] = Di(60, 60, 0, sprite[356], 3);
  this.ﱞ︈︋︄[163].id = 163;
  this.ﱞ︈︋︄[164] = Di(60, 60, 0, sprite[358], 3);
  this.ﱞ︈︋︄[164].id = 164;
  this.ﱞ︈︋︄[29] = Di(60, 60, 0, sprite[386], 3);
  this.ﱞ︈︋︄[29].id = 29;
  this.ﱞ︈︋︄[10] = Di(60, 60, 0, sprite[363], 3);
  this.ﱞ︈︋︄[10].id = 10;
  this.ﱞ︈︋︄[165] = Di(60, 60, 0, sprite[366], 3);
  this.ﱞ︈︋︄[165].id = 165;
  this.ﱞ︈︋︄[166] = Di(60, 60, 0, sprite[369], 3);
  this.ﱞ︈︋︄[166].id = 166;
  this.ﱞ︈︋︄[167] = Di(60, 60, 0, sprite[372], 3);
  this.ﱞ︈︋︄[167].id = 167;
  this.ﱞ︈︋︄[2] = Di(60, 60, 0, sprite[362], 3);
  this.ﱞ︈︋︄[2].id = 2;
  this.ﱞ︈︋︄[2].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[2].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[231] = Di(60, 60, 0, sprite[1156], 3);
  this.ﱞ︈︋︄[231].id = 231;
  this.ﱞ︈︋︄[231].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[231].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[168] = Di(60, 60, 0, sprite[387], 3);
  this.ﱞ︈︋︄[168].id = 168;
  this.ﱞ︈︋︄[168].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[168].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[216] = Di(60, 60, 0, sprite[1029], 3);
  this.ﱞ︈︋︄[216].id = 216;
  this.ﱞ︈︋︄[225] = Di(60, 60, 0, sprite[1031], 3);
  this.ﱞ︈︋︄[225].id = 225;
  this.ﱞ︈︋︄[226] = Di(60, 60, 0, sprite[1033], 3);
  this.ﱞ︈︋︄[226].id = 226;
  this.ﱞ︈︋︄[228] = Di(60, 60, 0, sprite[1150], 3);
  this.ﱞ︈︋︄[228].id = 228;
  this.ﱞ︈︋︄[10] = Di(60, 60, 0, sprite[363], 3);
  this.ﱞ︈︋︄[10].id = 10;
  this.ﱞ︈︋︄[11] = Di(60, 60, 0, sprite[375], 3);
  this.ﱞ︈︋︄[11].id = 11;
  this.ﱞ︈︋︄[12] = Di(60, 60, 0, sprite[395], 3);
  this.ﱞ︈︋︄[12].id = 12;
  this.ﱞ︈︋︄[13] = Di(60, 60, 0, sprite[389], 3);
  this.ﱞ︈︋︄[13].id = 13;
  this.ﱞ︈︋︄[14] = Di(60, 60, 0, sprite[392], 3);
  this.ﱞ︈︋︄[14].id = 14;
  this.ﱞ︈︋︄[15] = Di(60, 60, 0, sprite[398], 3);
  this.ﱞ︈︋︄[15].id = 15;
  this.ﱞ︈︋︄[16] = Di(60, 60, 0, sprite[868], 3);
  this.ﱞ︈︋︄[16].id = 16;
  this.ﱞ︈︋︄[113] = Di(60, 60, 0, sprite[402], 3);
  this.ﱞ︈︋︄[113].id = 113;
  this.ﱞ︈︋︄[23] = Di(60, 60, 0, sprite[414], 3);
  this.ﱞ︈︋︄[23].id = 23;
  this.ﱞ︈︋︄[24] = Di(60, 60, 0, sprite[417], 3);
  this.ﱞ︈︋︄[24].id = 24;
  this.ﱞ︈︋︄[87] = Di(60, 60, 0, sprite[1221], 3);
  this.ﱞ︈︋︄[87].id = 87;
  this.ﱞ︈︋︄[88] = Di(60, 60, 0, sprite[1224], 3);
  this.ﱞ︈︋︄[88].id = 88;
  this.ﱞ︈︋︄[80] = Di(60, 60, 0, sprite[1131], 3);
  this.ﱞ︈︋︄[80].id = 80;
  this.ﱞ︈︋︄[81] = Di(60, 60, 0, sprite[1134], 3);
  this.ﱞ︈︋︄[81].id = 81;
  this.ﱞ︈︋︄[64] = Di(60, 60, 0, sprite[563], 3);
  this.ﱞ︈︋︄[64].id = 64;
  this.ﱞ︈︋︄[95] = Di(60, 60, 0, sprite[1160], 3);
  this.ﱞ︈︋︄[95].id = 95;
  this.ﱞ︈︋︄[71] = Di(60, 60, 0, sprite[1233], 3);
  this.ﱞ︈︋︄[71].id = 71;
  this.ﱞ︈︋︄[65] = Di(60, 60, 0, sprite[566], 3);
  this.ﱞ︈︋︄[65].id = 65;
  this.ﱞ︈︋︄[96] = Di(60, 60, 0, sprite[1163], 3);
  this.ﱞ︈︋︄[96].id = 96;
  this.ﱞ︈︋︄[72] = Di(60, 60, 0, sprite[1236], 3);
  this.ﱞ︈︋︄[72].id = 72;
  this.ﱞ︈︋︄[66] = Di(60, 60, 0, sprite[569], 3);
  this.ﱞ︈︋︄[66].id = 66;
  this.ﱞ︈︋︄[97] = Di(60, 60, 0, sprite[1166], 3);
  this.ﱞ︈︋︄[97].id = 97;
  this.ﱞ︈︋︄[73] = Di(60, 60, 0, sprite[1239], 3);
  this.ﱞ︈︋︄[73].id = 73;
  this.ﱞ︈︋︄[67] = Di(60, 60, 0, sprite[572], 3);
  this.ﱞ︈︋︄[67].id = 67;
  this.ﱞ︈︋︄[98] = Di(60, 60, 0, sprite[1169], 3);
  this.ﱞ︈︋︄[98].id = 98;
  this.ﱞ︈︋︄[74] = Di(60, 60, 0, sprite[1242], 3);
  this.ﱞ︈︋︄[74].id = 74;
  this.ﱞ︈︋︄[68] = Di(60, 60, 0, sprite[575], 3);
  this.ﱞ︈︋︄[68].id = 68;
  this.ﱞ︈︋︄[99] = Di(60, 60, 0, sprite[1172], 3);
  this.ﱞ︈︋︄[99].id = 99;
  this.ﱞ︈︋︄[75] = Di(60, 60, 0, sprite[1245], 3);
  this.ﱞ︈︋︄[75].id = 75;
  this.ﱞ︈︋︄[69] = Di(60, 60, 0, sprite[578], 3);
  this.ﱞ︈︋︄[69].id = 69;
  this.ﱞ︈︋︄[100] = Di(60, 60, 0, sprite[1175], 3);
  this.ﱞ︈︋︄[100].id = 100;
  this.ﱞ︈︋︄[76] = Di(60, 60, 0, sprite[1248], 3);
  this.ﱞ︈︋︄[76].id = 76;
  this.ﱞ︈︋︄[70] = Di(60, 60, 0, sprite[581], 3);
  this.ﱞ︈︋︄[70].id = 70;
  this.ﱞ︈︋︄[101] = Di(60, 60, 0, sprite[1178], 3);
  this.ﱞ︈︋︄[101].id = 101;
  this.ﱞ︈︋︄[58] = Di(60, 60, 0, sprite[820], 3);
  this.ﱞ︈︋︄[58].id = 58;
  this.ﱞ︈︋︄[25] = Di(60, 60, 0, sprite[423], 3);
  this.ﱞ︈︋︄[25].id = 25;
  this.ﱞ︈︋︄[26] = Di(60, 60, 0, sprite[426], 3);
  this.ﱞ︈︋︄[26].id = 26;
  this.ﱞ︈︋︄[27] = Di(60, 60, 0, sprite[429], 3);
  this.ﱞ︈︋︄[27].id = 27;
  this.ﱞ︈︋︄[28] = Di(60, 60, 0, sprite[432], 3);
  this.ﱞ︈︋︄[28].id = 28;
  this.ﱞ︈︋︄[114] = Di(60, 60, 0, sprite[435], 3);
  this.ﱞ︈︋︄[114].id = 114;
  this.ﱞ︈︋︄[114].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[114].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[29] = Di(60, 60, 0, sprite[386], 3);
  this.ﱞ︈︋︄[29].id = 29;
  this.ﱞ︈︋︄[115] = Di(60, 60, 0, sprite[412], 3);
  this.ﱞ︈︋︄[115].id = 115;
  this.ﱞ︈︋︄[115].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[115].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[30] = Di(60, 60, 0, sprite[449], 3);
  this.ﱞ︈︋︄[30].id = 30;
  this.ﱞ︈︋︄[9] = Di(60, 60, 0, sprite[854], 3);
  this.ﱞ︈︋︄[9].id = 9;
  this.ﱞ︈︋︄[31] = Di(60, 60, 0, sprite[452], 3);
  this.ﱞ︈︋︄[31].id = 31;
  this.ﱞ︈︋︄[32] = Di(60, 60, 0, sprite[1011], 3);
  this.ﱞ︈︋︄[32].id = 32;
  this.ﱞ︈︋︄[33] = Di(60, 60, 0, sprite[466], 3);
  this.ﱞ︈︋︄[33].id = 33;
  this.ﱞ︈︋︄[35] = Di(60, 60, 0, sprite[471], 3);
  this.ﱞ︈︋︄[35].id = 35;
  this.ﱞ︈︋︄[36] = Di(60, 60, 0, sprite[474], 3);
  this.ﱞ︈︋︄[36].id = 36;
  this.ﱞ︈︋︄[37] = Di(60, 60, 0, sprite[477], 3);
  this.ﱞ︈︋︄[37].id = 37;
  this.ﱞ︈︋︄[38] = Di(60, 60, 0, sprite[480], 3);
  this.ﱞ︈︋︄[38].id = 38;
  this.ﱞ︈︋︄[39] = Di(60, 60, 0, sprite[483], 3);
  this.ﱞ︈︋︄[39].id = 39;
  this.ﱞ︈︋︄[116] = Di(60, 60, 0, sprite[486], 3);
  this.ﱞ︈︋︄[116].id = 116;
  this.ﱞ︈︋︄[117] = Di(60, 60, 0, sprite[489], 3);
  this.ﱞ︈︋︄[117].id = 117;
  this.ﱞ︈︋︄[118] = Di(60, 60, 0, sprite[493], 3);
  this.ﱞ︈︋︄[118].id = 118;
  this.ﱞ︈︋︄[40] = Di(60, 60, 0, sprite[496], 3);
  this.ﱞ︈︋︄[40].id = 40;
  this.ﱞ︈︋︄[140] = Di(60, 60, 0, sprite[499], 3);
  this.ﱞ︈︋︄[140].id = 140;
  this.ﱞ︈︋︄[140].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[140].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[234] = Di(60, 60, 0, sprite[1227], 3);
  this.ﱞ︈︋︄[234].id = 234;
  this.ﱞ︈︋︄[234].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[234].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[141] = Di(60, 60, 0, sprite[507], 3);
  this.ﱞ︈︋︄[141].id = 141;
  this.ﱞ︈︋︄[141].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[141].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[142] = Di(60, 60, 0, sprite[512], 3);
  this.ﱞ︈︋︄[142].id = 142;
  this.ﱞ︈︋︄[142].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[142].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[143] = Di(60, 60, 0, sprite[515], 3);
  this.ﱞ︈︋︄[143].id = 143;
  this.ﱞ︈︋︄[144] = Di(60, 60, 0, sprite[517], 3);
  this.ﱞ︈︋︄[144].id = 144;
  this.ﱞ︈︋︄[145] = Di(60, 60, 0, sprite[523], 3);
  this.ﱞ︈︋︄[145].id = 145;
  this.ﱞ︈︋︄[152] = Di(60, 60, 0, sprite[526], 3);
  this.ﱞ︈︋︄[152].id = 152;
  this.ﱞ︈︋︄[153] = Di(60, 60, 0, sprite[547], 3);
  this.ﱞ︈︋︄[153].id = 153;
  this.ﱞ︈︋︄[43] = Di(60, 60, 0, sprite[535], 3);
  this.ﱞ︈︋︄[43].id = 43;
  this.ﱞ︈︋︄[45] = Di(60, 60, 0, sprite[544], 3);
  this.ﱞ︈︋︄[45].id = 45;
  this.ﱞ︈︋︄[119] = Di(60, 60, 0, sprite[599], 3);
  this.ﱞ︈︋︄[119].id = 119;
  this.ﱞ︈︋︄[215] = Di(60, 60, 0, sprite[1230], 3);
  this.ﱞ︈︋︄[215].id = 215;
  this.ﱞ︈︋︄[217] = Di(60, 60, 0, sprite[1022], 3);
  this.ﱞ︈︋︄[217].id = 217;
  this.ﱞ︈︋︄[218] = Di(60, 60, 0, sprite[1025], 3);
  this.ﱞ︈︋︄[218].id = 218;
  this.ﱞ︈︋︄[224] = Di(60, 60, 0, sprite[1111], 3);
  this.ﱞ︈︋︄[224].id = 224;
  this.ﱞ︈︋︄[89] = Di(60, 60, 0, sprite[1040], 3);
  this.ﱞ︈︋︄[89].id = 89;
  this.ﱞ︈︋︄[219] = Di(60, 60, 0, sprite[1043], 3);
  this.ﱞ︈︋︄[219].id = 219;
  this.ﱞ︈︋︄[220] = Di(60, 60, 0, sprite[1183], 3);
  this.ﱞ︈︋︄[220].id = 220;
  this.ﱞ︈︋︄[221] = Di(60, 60, 0, sprite[1074], 3);
  this.ﱞ︈︋︄[221].id = 221;
  this.ﱞ︈︋︄[233] = Di(60, 60, 0, sprite[1218], 3);
  this.ﱞ︈︋︄[233].id = 233;
  this.ﱞ︈︋︄[222] = Di(60, 60, 0, sprite[1089], 3);
  this.ﱞ︈︋︄[222].id = 222;
  this.ﱞ︈︋︄[223] = Di(60, 60, 0, sprite[1104], 3);
  this.ﱞ︈︋︄[223].id = 223;
  this.ﱞ︈︋︄[120] = Di(60, 60, 0, sprite[603], 3);
  this.ﱞ︈︋︄[120].id = 120;
  this.ﱞ︈︋︄[120].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[120].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[121] = Di(60, 60, 0, sprite[607], 3);
  this.ﱞ︈︋︄[121].id = 121;
  this.ﱞ︈︋︄[122] = Di(60, 60, 0, sprite[606], 3);
  this.ﱞ︈︋︄[122].id = 122;
  this.ﱞ︈︋︄[46] = Di(60, 60, 0, sprite[610], 3);
  this.ﱞ︈︋︄[46].id = 46;
  this.ﱞ︈︋︄[50] = Di(60, 60, 0, sprite[693], 3);
  this.ﱞ︈︋︄[50].id = 50;
  this.ﱞ︈︋︄[51] = Di(60, 60, 0, sprite[696], 3);
  this.ﱞ︈︋︄[51].id = 51;
  this.ﱞ︈︋︄[52] = Di(60, 60, 0, sprite[699], 3);
  this.ﱞ︈︋︄[52].id = 52;
  this.ﱞ︈︋︄[55] = Di(60, 60, 0, sprite[703], 3);
  this.ﱞ︈︋︄[55].id = 55;
  this.ﱞ︈︋︄[123] = Di(60, 60, 0, sprite[618], 3);
  this.ﱞ︈︋︄[123].id = 123;
  this.ﱞ︈︋︄[123].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[123].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[124] = Di(60, 60, 0, sprite[620], 3);
  this.ﱞ︈︋︄[124].id = 124;
  this.ﱞ︈︋︄[125] = Di(60, 60, 0, sprite[623], 3);
  this.ﱞ︈︋︄[125].id = 125;
  this.ﱞ︈︋︄[125].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[125].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[126] = Di(60, 60, 0, sprite[625], 3);
  this.ﱞ︈︋︄[126].id = 126;
  this.ﱞ︈︋︄[127] = Di(60, 60, 0, sprite[628], 3);
  this.ﱞ︈︋︄[127].id = 127;
  this.ﱞ︈︋︄[128] = Di(60, 60, 0, sprite[633], 3);
  this.ﱞ︈︋︄[128].id = 128;
  this.ﱞ︈︋︄[128].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[128].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[129] = Di(60, 60, 0, sprite[638], 3);
  this.ﱞ︈︋︄[129].id = 129;
  this.ﱞ︈︋︄[47] = Di(60, 60, 0, sprite[640], 3);
  this.ﱞ︈︋︄[47].id = 47;
  this.ﱞ︈︋︄[48] = Di(60, 60, 0, sprite[643], 3);
  this.ﱞ︈︋︄[48].id = 48;
  this.ﱞ︈︋︄[49] = Di(60, 60, 0, sprite[646], 3);
  this.ﱞ︈︋︄[49].id = 49;
  this.ﱞ︈︋︄[130] = Di(60, 60, 0, sprite[653], 3);
  this.ﱞ︈︋︄[130].id = 130;
  this.ﱞ︈︋︄[137] = Di(60, 60, 0, sprite[137], 3);
  this.ﱞ︈︋︄[137].id = 137;
  this.ﱞ︈︋︄[131] = Di(60, 60, 0, sprite[656], 3);
  this.ﱞ︈︋︄[131].id = 131;
  this.ﱞ︈︋︄[132] = Di(60, 60, 0, sprite[658], 3);
  this.ﱞ︈︋︄[132].id = 132;
  this.ﱞ︈︋︄[133] = Di(60, 60, 0, sprite[668], 3);
  this.ﱞ︈︋︄[133].id = 133;
  this.ﱞ︈︋︄[133].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[133].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[134] = Di(60, 60, 0, sprite[134], 3);
  this.ﱞ︈︋︄[134].id = 134;
  this.ﱞ︈︋︄[134].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[134].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[135] = Di(60, 60, 0, sprite[679], 3);
  this.ﱞ︈︋︄[135].id = 135;
  this.ﱞ︈︋︄[136] = Di(60, 60, 0, sprite[136], 3);
  this.ﱞ︈︋︄[136].id = 136;
  this.ﱞ︈︋︄[136].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[136].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[138] = Di(60, 60, 0, sprite[711], 3);
  this.ﱞ︈︋︄[138].id = 138;
  this.ﱞ︈︋︄[139] = Di(60, 60, 0, sprite[139], 3);
  this.ﱞ︈︋︄[139].id = 139;
  this.ﱞ︈︋︄[59] = Di(60, 60, 0, sprite[726], 3);
  this.ﱞ︈︋︄[59].id = 59;
  this.ﱞ︈︋︄[62] = Di(60, 60, 0, sprite[557], 3);
  this.ﱞ︈︋︄[62].id = 62;
  this.ﱞ︈︋︄[179] = Di(60, 60, 0, sprite[246], 3);
  this.ﱞ︈︋︄[179].id = 179;
  this.ﱞ︈︋︄[179].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[179].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[178] = Di(60, 60, 0, sprite[745], 3);
  this.ﱞ︈︋︄[178].id = 178;
  this.ﱞ︈︋︄[178].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[178].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[17] = Di(60, 60, 0, sprite[871], 3);
  this.ﱞ︈︋︄[17].id = 17;
  this.ﱞ︈︋︄[63] = Di(60, 60, 0, sprite[560], 3);
  this.ﱞ︈︋︄[63].id = 63;
  this.ﱞ︈︋︄[181] = Di(60, 60, 0, sprite[247], 3);
  this.ﱞ︈︋︄[181].id = 181;
  this.ﱞ︈︋︄[181].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[181].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[180] = Di(60, 60, 0, sprite[747], 3);
  this.ﱞ︈︋︄[180].id = 180;
  this.ﱞ︈︋︄[180].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[180].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[77] = Di(60, 60, 0, sprite[750], 3);
  this.ﱞ︈︋︄[77].id = 77;
  this.ﱞ︈︋︄[169] = Di(60, 60, 0, sprite[170], 3);
  this.ﱞ︈︋︄[169].id = 169;
  this.ﱞ︈︋︄[169].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[169].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[170] = Di(60, 60, 0, sprite[171], 3);
  this.ﱞ︈︋︄[170].id = 170;
  this.ﱞ︈︋︄[170].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[170].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[78] = Di(60, 60, 0, sprite[754], 3);
  this.ﱞ︈︋︄[78].id = 78;
  this.ﱞ︈︋︄[171] = Di(60, 60, 0, sprite[169], 3);
  this.ﱞ︈︋︄[171].id = 171;
  this.ﱞ︈︋︄[171].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[171].info.ﱡ︃︉︂[0];
  this.ﱞ︈︋︄[79] = Di(60, 60, 0, sprite[758], 3);
  this.ﱞ︈︋︄[79].id = 79;
  this.ﱞ︈︋︄[83] = Di(60, 60, 0, sprite[761], 3);
  this.ﱞ︈︋︄[83].id = 83;
  this.ﱞ︈︋︄[84] = Di(60, 60, 0, sprite[765], 3);
  this.ﱞ︈︋︄[84].id = 84;
  this.ﱞ︈︋︄[172] = Di(60, 60, 0, sprite[172], 3);
  this.ﱞ︈︋︄[172].id = 172;
  this.ﱞ︈︋︄[173] = Di(60, 60, 0, sprite[173], 3);
  this.ﱞ︈︋︄[173].id = 173;
  this.ﱞ︈︋︄[86] = Di(60, 60, 0, sprite[770], 3);
  this.ﱞ︈︋︄[86].id = 86;
  this.ﱞ︈︋︄[85] = Di(60, 60, 0, sprite[773], 3);
  this.ﱞ︈︋︄[85].id = 85;
  this.ﱞ︈︋︄[174] = Di(60, 60, 0, sprite[174], 3);
  this.ﱞ︈︋︄[174].id = 174;
  this.ﱞ︈︋︄[175] = Di(60, 60, 0, sprite[175], 3);
  this.ﱞ︈︋︄[175].id = 175;
  this.ﱞ︈︋︄[176] = Di(60, 60, 0, sprite[783], 3);
  this.ﱞ︈︋︄[176].id = 176;
  this.ﱞ︈︋︄[177] = Di(60, 60, 0, sprite[794], 3);
  this.ﱞ︈︋︄[177].id = 177;
  this.ﱞ︈︋︄[182] = Di(60, 60, 0, sprite[802], 3);
  this.ﱞ︈︋︄[182].id = 182;
  this.ﱞ︈︋︄[183] = Di(60, 60, 0, sprite[808], 3);
  this.ﱞ︈︋︄[183].id = 183;
  this.ﱞ︈︋︄[185] = Di(60, 60, 0, sprite[828], 3);
  this.ﱞ︈︋︄[185].id = 185;
  this.ﱞ︈︋︄[186] = Di(60, 60, 0, sprite[834], 3);
  this.ﱞ︈︋︄[186].id = 186;
  this.ﱞ︈︋︄[184] = Di(60, 60, 0, sprite[836], 3);
  this.ﱞ︈︋︄[184].id = 184;
  this.ﱞ︈︋︄[187] = Di(60, 60, 0, sprite[839], 3);
  this.ﱞ︈︋︄[187].id = 187;
  this.ﱞ︈︋︄[188] = Di(60, 60, 0, sprite[844], 3);
  this.ﱞ︈︋︄[188].id = 188;
  this.ﱞ︈︋︄[198] = Di(60, 60, 0, sprite[943], 3);
  this.ﱞ︈︋︄[198].id = 198;
  this.ﱞ︈︋︄[199] = Di(60, 60, 0, sprite[949], 3);
  this.ﱞ︈︋︄[199].id = 199;
  this.ﱞ︈︋︄[200] = Di(60, 60, 0, sprite[953], 3);
  this.ﱞ︈︋︄[200].id = 200;
  this.ﱞ︈︋︄[201] = Di(60, 60, 0, sprite[959], 3);
  this.ﱞ︈︋︄[201].id = 201;
  this.ﱞ︈︋︄[202] = Di(60, 60, 0, sprite[960], 3);
  this.ﱞ︈︋︄[202].id = 202;
  this.ﱞ︈︋︄[203] = Di(60, 60, 0, sprite[966], 3);
  this.ﱞ︈︋︄[203].id = 203;
  this.ﱞ︈︋︄[204] = Di(60, 60, 0, sprite[975], 3);
  this.ﱞ︈︋︄[204].id = 204;
  this.ﱞ︈︋︄[205] = Di(60, 60, 0, sprite[981], 3);
  this.ﱞ︈︋︄[205].id = 205;
  this.ﱞ︈︋︄[41] = Di(60, 60, 0, sprite[874], 3);
  this.ﱞ︈︋︄[41].id = 41;
  this.ﱞ︈︋︄[42] = Di(60, 60, 0, sprite[876], 3);
  this.ﱞ︈︋︄[42].id = 42;
  this.ﱞ︈︋︄[12] = Di(60, 60, 0, sprite[395], 3);
  this.ﱞ︈︋︄[12].id = 12;
  this.ﱞ︈︋︄[16] = Di(60, 60, 0, sprite[868], 3);
  this.ﱞ︈︋︄[16].id = 16;
  this.ﱞ︈︋︄[190] = Di(60, 60, 0, sprite[190], 3);
  this.ﱞ︈︋︄[190].id = 190;
  this.ﱞ︈︋︄[18] = Di(60, 60, 0, sprite[895], 3);
  this.ﱞ︈︋︄[18].id = 18;
  this.ﱞ︈︋︄[191] = Di(60, 60, 0, sprite[191], 3);
  this.ﱞ︈︋︄[191].id = 191;
  this.ﱞ︈︋︄[192] = Di(60, 60, 0, sprite[901], 3);
  this.ﱞ︈︋︄[192].id = 192;
  this.ﱞ︈︋︄[61] = Di(60, 60, 0, sprite[904], 3);
  this.ﱞ︈︋︄[61].id = 61;
  this.ﱞ︈︋︄[195] = Di(60, 60, 0, sprite[864], 3);
  this.ﱞ︈︋︄[195].id = 195;
  this.ﱞ︈︋︄[194] = Di(60, 60, 0, sprite[194], 3);
  this.ﱞ︈︋︄[194].id = 194;
  this.ﱞ︈︋︄[193] = Di(60, 60, 0, sprite[859], 3);
  this.ﱞ︈︋︄[193].id = 193;
  this.ﱠ︅︉︄ = [];
  this.ﱠ︅︉︄[35] = Di(60, 60, 0, sprite[248], 3);
  this.ﱠ︅︉︄[35].id = 35;
  this.ﱠ︅︉︄[5] = Di(60, 60, 0, sprite[250], 3);
  this.ﱠ︅︉︄[5].id = 5;
  this.ﱠ︅︉︄[0] = Di(60, 60, 0, sprite[296], 3);
  this.ﱠ︅︉︄[0].id = 0;
  this.ﱠ︅︉︄[3] = Di(60, 60, 0, sprite[256], 3);
  this.ﱠ︅︉︄[3].id = 3;
  this.ﱠ︅︉︄[55] = Di(60, 60, 0, sprite[312], 3);
  this.ﱠ︅︉︄[55].id = 55;
  this.ﱠ︅︉︄[67] = Di(60, 60, 0, sprite[314], 3);
  this.ﱠ︅︉︄[67].id = 67;
  this.ﱠ︅︉︄[40] = Di(60, 60, 0, sprite[278], 3);
  this.ﱠ︅︉︄[40].id = 40;
  this.ﱠ︅︉︄[6] = Di(60, 60, 0, sprite[289], 3);
  this.ﱠ︅︉︄[6].id = 6;
  this.ﱠ︅︉︄[7] = Di(60, 60, 0, sprite[251], 3);
  this.ﱠ︅︉︄[7].id = 7;
  this.ﱠ︅︉︄[36] = Di(60, 60, 0, sprite[284], 3);
  this.ﱠ︅︉︄[36].id = 36;
  this.ﱠ︅︉︄[34] = Di(60, 60, 0, sprite[824], 3);
  this.ﱠ︅︉︄[34].id = 34;
  this.ﱠ︅︉︄[37] = Di(60, 60, 0, sprite[285], 3);
  this.ﱠ︅︉︄[37].id = 37;
  this.ﱠ︅︉︄[4] = Di(60, 60, 0, sprite[308], 3);
  this.ﱠ︅︉︄[4].id = 4;
  this.ﱠ︅︉︄[49] = Di(60, 60, 0, sprite[319], 3);
  this.ﱠ︅︉︄[49].id = 49;
  this.ﱠ︅︉︄[1] = Di(60, 60, 0, sprite[321], 3);
  this.ﱠ︅︉︄[1].id = 1;
  this.ﱠ︅︉︄[54] = Di(60, 60, 0, sprite[298], 3);
  this.ﱠ︅︉︄[54].id = 54;
  this.ﱠ︅︉︄[56] = Di(60, 60, 0, sprite[257], 3);
  this.ﱠ︅︉︄[56].id = 56;
  this.ﱠ︅︉︄[57] = Di(60, 60, 0, sprite[259], 3);
  this.ﱠ︅︉︄[57].id = 57;
  this.ﱠ︅︉︄[58] = Di(60, 60, 0, sprite[326], 3);
  this.ﱠ︅︉︄[58].id = 58;
  this.ﱠ︅︉︄[61] = Di(60, 60, 0, sprite[262], 3);
  this.ﱠ︅︉︄[61].id = 61;
  this.ﱠ︅︉︄[79] = Di(60, 60, 0, sprite[332], 3);
  this.ﱠ︅︉︄[79].id = 79;
  this.ﱠ︅︉︄[68] = Di(60, 60, 0, sprite[354], 3);
  this.ﱠ︅︉︄[68].id = 68;
  this.ﱠ︅︉︄[69] = Di(60, 60, 0, sprite[357], 3);
  this.ﱠ︅︉︄[69].id = 69;
  this.ﱠ︅︉︄[70] = Di(60, 60, 0, sprite[359], 3);
  this.ﱠ︅︉︄[70].id = 70;
  this.ﱠ︅︉︄[100] = Di(60, 60, 0, sprite[361], 3);
  this.ﱠ︅︉︄[100].id = 100;
  this.ﱠ︅︉︄[83] = Di(60, 60, 0, sprite[364], 3);
  this.ﱠ︅︉︄[83].id = 83;
  this.ﱠ︅︉︄[62] = Di(60, 60, 0, sprite[365], 3);
  this.ﱠ︅︉︄[62].id = 62;
  this.ﱠ︅︉︄[63] = Di(60, 60, 0, sprite[368], 3);
  this.ﱠ︅︉︄[63].id = 63;
  this.ﱠ︅︉︄[64] = Di(60, 60, 0, sprite[371], 3);
  this.ﱠ︅︉︄[64].id = 64;
  this.ﱠ︅︉︄[83] = Di(60, 60, 0, sprite[364], 3);
  this.ﱠ︅︉︄[83].id = 83;
  this.ﱠ︅︉︄[84] = Di(60, 60, 0, sprite[374], 3);
  this.ﱠ︅︉︄[84].id = 84;
  this.ﱠ︅︉︄[25] = Di(60, 60, 0, sprite[396], 3);
  this.ﱠ︅︉︄[25].id = 25;
  this.ﱠ︅︉︄[26] = Di(60, 60, 0, sprite[390], 3);
  this.ﱠ︅︉︄[26].id = 26;
  this.ﱠ︅︉︄[27] = Di(60, 60, 0, sprite[393], 3);
  this.ﱠ︅︉︄[27].id = 27;
  this.ﱠ︅︉︄[28] = Di(60, 60, 0, sprite[399], 3);
  this.ﱠ︅︉︄[28].id = 28;
  this.ﱠ︅︉︄[31] = Di(60, 60, 0, sprite[870], 3);
  this.ﱠ︅︉︄[31].id = 31;
  this.ﱠ︅︉︄[2] = Di(60, 60, 0, sprite[403], 3);
  this.ﱠ︅︉︄[2].id = 2;
  this.ﱠ︅︉︄[80] = Di(60, 60, 0, sprite[415], 3);
  this.ﱠ︅︉︄[80].id = 80;
  this.ﱠ︅︉︄[81] = Di(60, 60, 0, sprite[418], 3);
  this.ﱠ︅︉︄[81].id = 81;
  this.ﱠ︅︉︄[Sb.ﱠ︍︌︁] = Di(60, 60, 0, sprite[1222], 3);
  this.ﱠ︅︉︄[Sb.ﱠ︍︌︁].id = Sb.ﱠ︍︌︁;
  this.ﱠ︅︉︄[86] = Di(60, 60, 0, sprite[1225], 3);
  this.ﱠ︅︉︄[86].id = 86;
  this.ﱠ︅︉︄[98] = Di(60, 60, 0, sprite[1132], 3);
  this.ﱠ︅︉︄[98].id = 98;
  this.ﱠ︅︉︄[99] = Di(60, 60, 0, sprite[1135], 3);
  this.ﱠ︅︉︄[99].id = 99;
  this.ﱠ︅︉︄[131] = Di(60, 60, 0, sprite[564], 3);
  this.ﱠ︅︉︄[131].id = 131;
  this.ﱠ︅︉︄[132] = Di(60, 60, 0, sprite[1162], 3);
  this.ﱠ︅︉︄[132].id = 132;
  this.ﱠ︅︉︄[145] = Di(60, 60, 0, sprite[1232], 3);
  this.ﱠ︅︉︄[145].id = 145;
  this.ﱠ︅︉︄[133] = Di(60, 60, 0, sprite[567], 3);
  this.ﱠ︅︉︄[133].id = 133;
  this.ﱠ︅︉︄[134] = Di(60, 60, 0, sprite[1165], 3);
  this.ﱠ︅︉︄[134].id = 134;
  this.ﱠ︅︉︄[146] = Di(60, 60, 0, sprite[1235], 3);
  this.ﱠ︅︉︄[146].id = 146;
  this.ﱠ︅︉︄[135] = Di(60, 60, 0, sprite[570], 3);
  this.ﱠ︅︉︄[135].id = 135;
  this.ﱠ︅︉︄[136] = Di(60, 60, 0, sprite[1168], 3);
  this.ﱠ︅︉︄[136].id = 136;
  this.ﱠ︅︉︄[147] = Di(60, 60, 0, sprite[1238], 3);
  this.ﱠ︅︉︄[147].id = 147;
  this.ﱠ︅︉︄[137] = Di(60, 60, 0, sprite[573], 3);
  this.ﱠ︅︉︄[137].id = 137;
  this.ﱠ︅︉︄[138] = Di(60, 60, 0, sprite[1171], 3);
  this.ﱠ︅︉︄[138].id = 138;
  this.ﱠ︅︉︄[148] = Di(60, 60, 0, sprite[1241], 3);
  this.ﱠ︅︉︄[148].id = 148;
  this.ﱠ︅︉︄[139] = Di(60, 60, 0, sprite[576], 3);
  this.ﱠ︅︉︄[139].id = 139;
  this.ﱠ︅︉︄[140] = Di(60, 60, 0, sprite[1174], 3);
  this.ﱠ︅︉︄[140].id = 140;
  this.ﱠ︅︉︄[149] = Di(60, 60, 0, sprite[1244], 3);
  this.ﱠ︅︉︄[149].id = 149;
  this.ﱠ︅︉︄[141] = Di(60, 60, 0, sprite[579], 3);
  this.ﱠ︅︉︄[141].id = 141;
  this.ﱠ︅︉︄[142] = Di(60, 60, 0, sprite[1177], 3);
  this.ﱠ︅︉︄[142].id = 142;
  this.ﱠ︅︉︄[150] = Di(60, 60, 0, sprite[1247], 3);
  this.ﱠ︅︉︄[150].id = 150;
  this.ﱠ︅︉︄[143] = Di(60, 60, 0, sprite[582], 3);
  this.ﱠ︅︉︄[143].id = 143;
  this.ﱠ︅︉︄[144] = Di(60, 60, 0, sprite[1180], 3);
  this.ﱠ︅︉︄[144].id = 144;
  this.ﱠ︅︉︄[87] = Di(60, 60, 0, sprite[821], 3);
  this.ﱠ︅︉︄[87].id = 87;
  this.ﱠ︅︉︄[88] = Di(60, 60, 0, sprite[424], 3);
  this.ﱠ︅︉︄[88].id = 88;
  this.ﱠ︅︉︄[89] = Di(60, 60, 0, sprite[427], 3);
  this.ﱠ︅︉︄[89].id = 89;
  this.ﱠ︅︉︄[90] = Di(60, 60, 0, sprite[430], 3);
  this.ﱠ︅︉︄[90].id = 90;
  this.ﱠ︅︉︄[24] = Di(60, 60, 0, sprite[433], 3);
  this.ﱠ︅︉︄[24].id = 24;
  this.ﱠ︅︉︄[101] = Di(60, 60, 0, sprite[436], 3);
  this.ﱠ︅︉︄[101].id = 101;
  this.ﱠ︅︉︄[100] = Di(60, 60, 0, sprite[361], 3);
  this.ﱠ︅︉︄[100].id = 100;
  this.ﱠ︅︉︄[38] = Di(60, 60, 0, sprite[450], 3);
  this.ﱠ︅︉︄[38].id = 38;
  this.ﱠ︅︉︄[Sb.ﱠ︀︌︁] = Di(60, 60, 0, sprite[855], 3);
  this.ﱠ︅︉︄[Sb.ﱠ︀︌︁].id = Sb.ﱠ︀︌︁;
  this.ﱠ︅︉︄[8] = Di(60, 60, 0, sprite[454], 3);
  this.ﱠ︅︉︄[8].id = 8;
  this.ﱠ︅︉︄[9] = Di(60, 60, 0, sprite[1013], 3);
  this.ﱠ︅︉︄[9].id = 9;
  this.ﱠ︅︉︄[29] = Di(60, 60, 0, sprite[467], 3);
  this.ﱠ︅︉︄[29].id = 29;
  this.ﱠ︅︉︄[10] = Di(60, 60, 0, sprite[472], 3);
  this.ﱠ︅︉︄[10].id = 10;
  this.ﱠ︅︉︄[11] = Di(60, 60, 0, sprite[475], 3);
  this.ﱠ︅︉︄[11].id = 11;
  this.ﱠ︅︉︄[12] = Di(60, 60, 0, sprite[478], 3);
  this.ﱠ︅︉︄[12].id = 12;
  this.ﱠ︅︉︄[13] = Di(60, 60, 0, sprite[481], 3);
  this.ﱠ︅︉︄[13].id = 13;
  this.ﱠ︅︉︄[14] = Di(60, 60, 0, sprite[484], 3);
  this.ﱠ︅︉︄[14].id = 14;
  this.ﱠ︅︉︄[59] = Di(60, 60, 0, sprite[487], 3);
  this.ﱠ︅︉︄[59].id = 59;
  this.ﱠ︅︉︄[71] = Di(60, 60, 0, sprite[490], 3);
  this.ﱠ︅︉︄[71].id = 71;
  this.ﱠ︅︉︄[65] = Di(60, 60, 0, sprite[492], 3);
  this.ﱠ︅︉︄[65].id = 65;
  this.ﱠ︅︉︄[85] = Di(60, 60, 0, sprite[497], 3);
  this.ﱠ︅︉︄[85].id = 85;
  this.ﱠ︅︉︄[102] = Di(60, 60, 0, sprite[509], 3);
  this.ﱠ︅︉︄[102].id = 102;
  this.ﱠ︅︉︄[103] = Di(60, 60, 0, sprite[513], 3);
  this.ﱠ︅︉︄[103].id = 103;
  this.ﱠ︅︉︄[115] = Di(60, 60, 0, sprite[524], 3);
  this.ﱠ︅︉︄[115].id = 115;
  this.ﱠ︅︉︄[104] = Di(60, 60, 0, sprite[527], 3);
  this.ﱠ︅︉︄[104].id = 104;
  this.ﱠ︅︉︄[105] = Di(60, 60, 0, sprite[549], 3);
  this.ﱠ︅︉︄[105].id = 105;
  this.ﱠ︅︉︄[91] = Di(60, 60, 0, sprite[536], 3);
  this.ﱠ︅︉︄[91].id = 91;
  this.ﱠ︅︉︄[15] = Di(60, 60, 0, sprite[545], 3);
  this.ﱠ︅︉︄[15].id = 15;
  this.ﱠ︅︉︄[106] = Di(60, 60, 0, sprite[598], 3);
  this.ﱠ︅︉︄[106].id = 106;
  this.ﱠ︅︉︄[108] = Di(60, 60, 0, sprite[1229], 3);
  this.ﱠ︅︉︄[108].id = 108;
  this.ﱠ︅︉︄[163] = Di(60, 60, 0, sprite[1021], 3);
  this.ﱠ︅︉︄[163].id = 163;
  this.ﱠ︅︉︄[164] = Di(60, 60, 0, sprite[1024], 3);
  this.ﱠ︅︉︄[164].id = 164;
  this.ﱠ︅︉︄[166] = Di(60, 60, 0, sprite[1110], 3);
  this.ﱠ︅︉︄[166].id = 166;
  this.ﱠ︅︉︄[165] = Di(60, 60, 0, sprite[1042], 3);
  this.ﱠ︅︉︄[165].id = 165;
  this.ﱠ︅︉︄[Sb.ﱡ︃︎︁] = Di(60, 60, 0, sprite[1045], 3);
  this.ﱠ︅︉︄[Sb.ﱡ︃︎︁].id = Sb.ﱡ︃︎︁;
  this.ﱠ︅︉︄[Sb.ﱟ︄︎︁] = Di(60, 60, 0, sprite[1076], 3);
  this.ﱠ︅︉︄[Sb.ﱟ︄︎︁].id = Sb.ﱟ︄︎︁;
  this.ﱠ︅︉︄[Sb.ﱞ︇︎︁] = Di(60, 60, 0, sprite[1220], 3);
  this.ﱠ︅︉︄[Sb.ﱞ︇︎︁].id = Sb.ﱞ︇︎︁;
  this.ﱠ︅︉︄[Sb.ﱠ︄︎︁] = Di(60, 60, 0, sprite[1185], 3);
  this.ﱠ︅︉︄[Sb.ﱠ︄︎︁].id = Sb.ﱠ︄︎︁;
  this.ﱠ︅︉︄[110] = Di(60, 60, 0, sprite[605], 3);
  this.ﱠ︅︉︄[110].id = 110;
  this.ﱠ︅︉︄[111] = Di(60, 60, 0, sprite[709], 3);
  this.ﱠ︅︉︄[111].id = 111;
  this.ﱠ︅︉︄[112] = Di(60, 60, 0, sprite[709], 3);
  this.ﱠ︅︉︄[112].id = 112;
  this.ﱠ︅︉︄[113] = Di(60, 60, 0, sprite[709], 3);
  this.ﱠ︅︉︄[113].id = 113;
  this.ﱠ︅︉︄[16] = Di(60, 60, 0, sprite[612], 3);
  this.ﱠ︅︉︄[16].id = 16;
  this.ﱠ︅︉︄[17] = Di(60, 60, 0, sprite[694], 3);
  this.ﱠ︅︉︄[17].id = 17;
  this.ﱠ︅︉︄[18] = Di(60, 60, 0, sprite[698], 3);
  this.ﱠ︅︉︄[18].id = 18;
  this.ﱠ︅︉︄[19] = Di(60, 60, 0, sprite[700], 3);
  this.ﱠ︅︉︄[19].id = 19;
  this.ﱠ︅︉︄[122] = Di(60, 60, 0, sprite[705], 3);
  this.ﱠ︅︉︄[122].id = 122;
  this.ﱠ︅︉︄[20] = Di(60, 60, 0, sprite[621], 3);
  this.ﱠ︅︉︄[20].id = 20;
  this.ﱠ︅︉︄[41] = Di(60, 60, 0, sprite[626], 3);
  this.ﱠ︅︉︄[41].id = 41;
  this.ﱠ︅︉︄[52] = Di(60, 60, 0, sprite[629], 3);
  this.ﱠ︅︉︄[52].id = 52;
  this.ﱠ︅︉︄[114] = Di(60, 60, 0, sprite[637], 3);
  this.ﱠ︅︉︄[114].id = 114;
  this.ﱠ︅︉︄[94] = Di(60, 60, 0, sprite[641], 3);
  this.ﱠ︅︉︄[94].id = 94;
  this.ﱠ︅︉︄[93] = Di(60, 60, 0, sprite[644], 3);
  this.ﱠ︅︉︄[93].id = 93;
  this.ﱠ︅︉︄[21] = Di(60, 60, 0, sprite[648], 3);
  this.ﱠ︅︉︄[21].id = 21;
  this.ﱠ︅︉︄[53] = Di(60, 60, 0, sprite[654], 3);
  this.ﱠ︅︉︄[53].id = 53;
  this.ﱠ︅︉︄[51] = Di(60, 60, 0, sprite[684], 3);
  this.ﱠ︅︉︄[51].id = 51;
  this.ﱠ︅︉︄[50] = Di(60, 60, 0, sprite[660], 3);
  this.ﱠ︅︉︄[50].id = 50;
  this.ﱠ︅︉︄[109] = Di(60, 60, 0, sprite[678], 3);
  this.ﱠ︅︉︄[109].id = 109;
  this.ﱠ︅︉︄[124] = Di(60, 60, 0, sprite[712], 3);
  this.ﱠ︅︉︄[124].id = 124;
  this.ﱠ︅︉︄[125] = Di(60, 60, 0, sprite[724], 3);
  this.ﱠ︅︉︄[125].id = 125;
  this.ﱠ︅︉︄[126] = Di(60, 60, 0, sprite[728], 3);
  this.ﱠ︅︉︄[126].id = 126;
  this.ﱠ︅︉︄[129] = Di(60, 60, 0, sprite[557], 3);
  this.ﱠ︅︉︄[129].id = 129;
  this.ﱠ︅︉︄[151] = Di(60, 60, 0, sprite[752], 3);
  this.ﱠ︅︉︄[151].id = 151;
  this.ﱠ︅︉︄[152] = Di(60, 60, 0, sprite[756], 3);
  this.ﱠ︅︉︄[152].id = 152;
  this.ﱠ︅︉︄[153] = Di(60, 60, 0, sprite[764], 3);
  this.ﱠ︅︉︄[153].id = 153;
  this.ﱠ︅︉︄[154] = Di(60, 60, 0, sprite[762], 3);
  this.ﱠ︅︉︄[154].id = 154;
  this.ﱠ︅︉︄[155] = Di(60, 60, 0, sprite[766], 3);
  this.ﱠ︅︉︄[155].id = 155;
  this.ﱠ︅︉︄[157] = Di(60, 60, 0, sprite[771], 3);
  this.ﱠ︅︉︄[157].id = 157;
  this.ﱠ︅︉︄[156] = Di(60, 60, 0, sprite[774], 3);
  this.ﱠ︅︉︄[156].id = 156;
  this.ﱠ︅︉︄[158] = Di(60, 60, 0, sprite[778], 3);
  this.ﱠ︅︉︄[158].id = 158;
  this.ﱠ︅︉︄[159] = Di(60, 60, 0, sprite[779], 3);
  this.ﱠ︅︉︄[159].id = 159;
  this.ﱠ︅︉︄[160] = Di(60, 60, 0, sprite[785], 3);
  this.ﱠ︅︉︄[160].id = 160;
  this.ﱠ︅︉︄[161] = Di(60, 60, 0, sprite[793], 3);
  this.ﱠ︅︉︄[161].id = 161;
  this.ﱠ︅︉︄[42] = Di(60, 60, 0, sprite[803], 3);
  this.ﱠ︅︉︄[42].id = 42;
  this.ﱠ︅︉︄[43] = Di(60, 60, 0, sprite[829], 3);
  this.ﱠ︅︉︄[43].id = 43;
  this.ﱠ︅︉︄[107] = Di(60, 60, 0, sprite[837], 3);
  this.ﱠ︅︉︄[107].id = 107;
  this.ﱠ︅︉︄[44] = Di(60, 60, 0, sprite[840], 3);
  this.ﱠ︅︉︄[44].id = 44;
  this.ﱠ︅︉︄[46] = Di(60, 60, 0, sprite[954], 3);
  this.ﱠ︅︉︄[46].id = 46;
  this.ﱠ︅︉︄[45] = Di(60, 60, 0, sprite[944], 3);
  this.ﱠ︅︉︄[45].id = 45;
  this.ﱠ︅︉︄[47] = Di(60, 60, 0, sprite[961], 3);
  this.ﱠ︅︉︄[47].id = 47;
  this.ﱠ︅︉︄[48] = Di(60, 60, 0, sprite[976], 3);
  this.ﱠ︅︉︄[48].id = 48;
  this.ﱠ︅︉︄[25] = Di(60, 60, 0, sprite[396], 3);
  this.ﱠ︅︉︄[25].id = 25;
  this.ﱠ︅︉︄[31] = Di(60, 60, 0, sprite[870], 3);
  this.ﱠ︅︉︄[31].id = 31;
  this.ﱠ︅︉︄[33] = Di(60, 60, 0, sprite[894], 3);
  this.ﱠ︅︉︄[33].id = 33;
  this.ﱠ︅︉︄[162] = Di(60, 60, 0, sprite[903], 3);
  this.ﱠ︅︉︄[162].id = 162;
  this.ﱠ︅︉︄[128] = Di(60, 60, 0, sprite[906], 3);
  this.ﱠ︅︉︄[128].id = 128;
  this.ﱠ︁︆︄[53] = Di(68, 68, 0, sprite[970], 3);
  this.ﱠ︁︆︄[53].id = 53;
  this.ﱞ︈︋︄[53] = Di(60, 60, 0, sprite[969], 3);
  this.ﱞ︈︋︄[53].id = 53;
  this.ﱠ︅︉︄[22] = Di(60, 60, 0, sprite[971], 3);
  this.ﱠ︅︉︄[22].id = 22;
  this.ﱠ︁︆︄[54] = Di(68, 68, 0, sprite[973], 3);
  this.ﱠ︁︆︄[54].id = 54;
  this.ﱞ︈︋︄[54] = Di(60, 60, 0, sprite[972], 3);
  this.ﱞ︈︋︄[54].id = 54;
  this.ﱠ︅︉︄[23] = Di(60, 60, 0, sprite[974], 3);
  this.ﱠ︅︉︄[23].id = 23;
  this.ﱠ︁︆︄[56] = Di(68, 68, 0, sprite[707], 3);
  this.ﱠ︁︆︄[56].id = 56;
  this.ﱞ︈︋︄[56] = Di(60, 60, 0, sprite[706], 3);
  this.ﱞ︈︋︄[56].id = 56;
  this.ﱠ︅︉︄[123] = Di(60, 60, 0, sprite[708], 3);
  this.ﱠ︅︉︄[123].id = 123;
  this.ﱠ︁︆︄[82] = Di(68, 68, 0, sprite[422], 3);
  this.ﱠ︁︆︄[82].id = 82;
  this.ﱞ︈︋︄[82] = Di(60, 60, 0, sprite[420], 3);
  this.ﱞ︈︋︄[82].id = 82;
  this.ﱠ︅︉︄[82] = Di(60, 60, 0, sprite[421], 3);
  this.ﱠ︅︉︄[82].id = 82;
  this.ﱠ︁︆︄[229] = Di(68, 68, 0, sprite[1153], 3);
  this.ﱠ︁︆︄[229].id = 229;
  this.ﱞ︈︋︄[229] = Di(60, 60, 0, sprite[1152], 3);
  this.ﱞ︈︋︄[229].id = 229;
  this.ﱠ︁︆︄[232] = Di(68, 68, 0, sprite[1182], 3);
  this.ﱠ︁︆︄[232].id = 232;
  this.ﱞ︈︋︄[232] = Di(60, 60, 0, sprite[1181], 3);
  this.ﱞ︈︋︄[232].id = 232;
  this.ﱠ︁︆︄[230] = Di(68, 68, 0, sprite[1155], 3);
  this.ﱠ︁︆︄[230].id = 230;
  this.ﱞ︈︋︄[230] = Di(60, 60, 0, sprite[1154], 3);
  this.ﱞ︈︋︄[230].id = 230;
  this.ﱠ︁︆︄[146] = Di(68, 68, 0, sprite[1191], 3);
  this.ﱠ︁︆︄[146].id = 146;
  this.ﱞ︈︋︄[146] = Di(60, 60, 0, sprite[1189], 3);
  this.ﱞ︈︋︄[146].id = 146;
  this.ﱠ︅︉︄[116] = Di(60, 60, 0, sprite[1190], 3);
  this.ﱠ︅︉︄[116].id = 116;
  this.ﱠ︁︆︄[206] = Di(68, 68, 0, sprite[986], 3);
  this.ﱠ︁︆︄[206].id = 206;
  this.ﱞ︈︋︄[206] = Di(60, 60, 0, sprite[985], 3);
  this.ﱞ︈︋︄[206].id = 206;
  this.ﱠ︅︉︄[73] = Di(60, 60, 0, sprite[984], 3);
  this.ﱠ︅︉︄[73].id = 73;
  this.ﱠ︁︆︄[207] = Di(68, 68, 0, sprite[989], 3);
  this.ﱠ︁︆︄[207].id = 207;
  this.ﱞ︈︋︄[207] = Di(60, 60, 0, sprite[988], 3);
  this.ﱞ︈︋︄[207].id = 207;
  this.ﱠ︅︉︄[74] = Di(60, 60, 0, sprite[987], 3);
  this.ﱠ︅︉︄[74].id = 74;
  this.ﱠ︁︆︄[208] = Di(68, 68, 0, sprite[992], 3);
  this.ﱠ︁︆︄[208].id = 208;
  this.ﱞ︈︋︄[208] = Di(60, 60, 0, sprite[991], 3);
  this.ﱞ︈︋︄[208].id = 208;
  this.ﱠ︅︉︄[75] = Di(60, 60, 0, sprite[990], 3);
  this.ﱠ︅︉︄[75].id = 75;
  this.ﱠ︁︆︄[209] = Di(68, 68, 0, sprite[995], 3);
  this.ﱠ︁︆︄[209].id = 209;
  this.ﱞ︈︋︄[209] = Di(60, 60, 0, sprite[994], 3);
  this.ﱞ︈︋︄[209].id = 209;
  this.ﱠ︅︉︄[76] = Di(60, 60, 0, sprite[993], 3);
  this.ﱠ︅︉︄[76].id = 76;
  this.ﱠ︁︆︄[210] = Di(68, 68, 0, sprite[998], 3);
  this.ﱠ︁︆︄[210].id = 210;
  this.ﱞ︈︋︄[210] = Di(60, 60, 0, sprite[997], 3);
  this.ﱞ︈︋︄[210].id = 210;
  this.ﱠ︅︉︄[77] = Di(60, 60, 0, sprite[996], 3);
  this.ﱠ︅︉︄[77].id = 77;
  this.ﱠ︁︆︄[214] = Di(68, 68, 0, sprite[1001], 3);
  this.ﱠ︁︆︄[214].id = 214;
  this.ﱞ︈︋︄[214] = Di(60, 60, 0, sprite[1000], 3);
  this.ﱞ︈︋︄[214].id = 214;
  this.ﱠ︅︉︄[78] = Di(60, 60, 0, sprite[999], 3);
  this.ﱠ︅︉︄[78].id = 78;
  this.ﱠ︁︆︄[211] = Di(68, 68, 0, sprite[1010], 3);
  this.ﱠ︁︆︄[211].id = 211;
  this.ﱞ︈︋︄[211] = Di(60, 60, 0, sprite[1009], 3);
  this.ﱞ︈︋︄[211].id = 211;
  this.ﱠ︅︉︄[60] = Di(60, 60, 0, sprite[1008], 3);
  this.ﱠ︅︉︄[60].id = 60;
  this.ﱠ︁︆︄[213] = Di(68, 68, 0, sprite[1007], 3);
  this.ﱠ︁︆︄[213].id = 213;
  this.ﱞ︈︋︄[213] = Di(60, 60, 0, sprite[1006], 3);
  this.ﱞ︈︋︄[213].id = 213;
  this.ﱠ︅︉︄[72] = Di(60, 60, 0, sprite[1005], 3);
  this.ﱠ︅︉︄[72].id = 72;
  this.ﱠ︁︆︄[212] = Di(68, 68, 0, sprite[1004], 3);
  this.ﱠ︁︆︄[212].id = 212;
  this.ﱞ︈︋︄[212] = Di(60, 60, 0, sprite[1003], 3);
  this.ﱞ︈︋︄[212].id = 212;
  this.ﱠ︅︉︄[66] = Di(60, 60, 0, sprite[1002], 3);
  this.ﱠ︅︉︄[66].id = 66;
  this.ﱠ︁︆︄[147] = Di(68, 68, 0, sprite[1195], 3);
  this.ﱠ︁︆︄[147].id = 147;
  this.ﱞ︈︋︄[147] = Di(60, 60, 0, sprite[1193], 3);
  this.ﱞ︈︋︄[147].id = 147;
  this.ﱠ︅︉︄[117] = Di(60, 60, 0, sprite[1194], 3);
  this.ﱠ︅︉︄[117].id = 117;
  this.ﱠ︁︆︄[148] = Di(68, 68, 0, sprite[1199], 3);
  this.ﱠ︁︆︄[148].id = 148;
  this.ﱞ︈︋︄[148] = Di(60, 60, 0, sprite[1197], 3);
  this.ﱞ︈︋︄[148].id = 148;
  this.ﱠ︅︉︄[118] = Di(60, 60, 0, sprite[1198], 3);
  this.ﱠ︅︉︄[118].id = 118;
  this.ﱠ︁︆︄[149] = Di(68, 68, 0, sprite[1203], 3);
  this.ﱠ︁︆︄[149].id = 149;
  this.ﱞ︈︋︄[149] = Di(60, 60, 0, sprite[1201], 3);
  this.ﱞ︈︋︄[149].id = 149;
  this.ﱠ︅︉︄[119] = Di(60, 60, 0, sprite[1202], 3);
  this.ﱠ︅︉︄[119].id = 119;
  this.ﱠ︁︆︄[150] = Di(68, 68, 0, sprite[1207], 3);
  this.ﱠ︁︆︄[150].id = 150;
  this.ﱞ︈︋︄[150] = Di(60, 60, 0, sprite[1205], 3);
  this.ﱞ︈︋︄[150].id = 150;
  this.ﱠ︅︉︄[120] = Di(60, 60, 0, sprite[1206], 3);
  this.ﱠ︅︉︄[120].id = 120;
  this.ﱠ︁︆︄[151] = Di(68, 68, 0, sprite[1211], 3);
  this.ﱠ︁︆︄[151].id = 151;
  this.ﱞ︈︋︄[151] = Di(60, 60, 0, sprite[1209], 3);
  this.ﱞ︈︋︄[151].id = 151;
  this.ﱠ︅︉︄[121] = Di(60, 60, 0, sprite[1210], 3);
  this.ﱠ︅︉︄[121].id = 121;
  this.ﱠ︁︆︄[197] = Di(68, 68, 0, sprite[931], 3);
  this.ﱠ︁︆︄[197].id = 197;
  this.ﱞ︈︋︄[197] = Di(60, 60, 0, sprite[930], 3);
  this.ﱞ︈︋︄[197].id = 197;
  this.ﱞ︈︋︄[197].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[197].info.ﱡ︃︉︂[0];
  this.ﱠ︁︆︄[144] = Di(68, 68, 0, sprite[518], 3);
  this.ﱠ︁︆︄[144].id = 144;
  this.ﱞ︈︋︄[144] = Di(60, 60, 0, sprite[517], 3);
  this.ﱞ︈︋︄[144].id = 144;
  this.ﱞ︈︋︄[144].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[144].info.ﱡ︃︉︂[0];
  this.ﱠ︁︆︄[196] = Di(68, 68, 0, sprite[933], 3);
  this.ﱠ︁︆︄[196].id = 196;
  this.ﱞ︈︋︄[196] = Di(60, 60, 0, sprite[932], 3);
  this.ﱞ︈︋︄[196].id = 196;
  this.ﱞ︈︋︄[196].info.ﱡ︃︉︂[2] = this.ﱞ︈︋︄[196].info.ﱡ︃︉︂[0];
  this.ﱠ︁︆︄[19] = Di(68, 68, 0, sprite[928], 3);
  this.ﱠ︁︆︄[19].id = 19;
  this.ﱞ︈︋︄[19] = Di(60, 60, 0, sprite[926], 3);
  this.ﱞ︈︋︄[19].id = 19;
  this.ﱠ︅︉︄[39] = Di(60, 60, 0, sprite[927], 3);
  this.ﱠ︅︉︄[39].id = 39;
  this.ﱠ︁︆︄[20] = Di(68, 68, 0, sprite[917], 3);
  this.ﱠ︁︆︄[20].id = 20;
  this.ﱞ︈︋︄[20] = Di(60, 60, 0, sprite[915], 3);
  this.ﱞ︈︋︄[20].id = 20;
  this.ﱠ︅︉︄[95] = Di(60, 60, 0, sprite[916], 3);
  this.ﱠ︅︉︄[95].id = 95;
  this.ﱠ︁︆︄[21] = Di(68, 68, 0, sprite[921], 3);
  this.ﱠ︁︆︄[21].id = 21;
  this.ﱞ︈︋︄[21] = Di(60, 60, 0, sprite[919], 3);
  this.ﱞ︈︋︄[21].id = 21;
  this.ﱠ︅︉︄[96] = Di(60, 60, 0, sprite[920], 3);
  this.ﱠ︅︉︄[96].id = 96;
  this.ﱠ︁︆︄[22] = Di(68, 68, 0, sprite[925], 3);
  this.ﱠ︁︆︄[22].id = 22;
  this.ﱞ︈︋︄[22] = Di(60, 60, 0, sprite[923], 3);
  this.ﱞ︈︋︄[22].id = 22;
  this.ﱠ︅︉︄[97] = Di(60, 60, 0, sprite[924], 3);
  this.ﱠ︅︉︄[97].id = 97;
  this.ﱠ︁︆︄[60] = Di(68, 68, 0, sprite[730], 3);
  this.ﱠ︁︆︄[60].id = 60;
  this.ﱞ︈︋︄[60] = Di(60, 60, 0, sprite[729], 3);
  this.ﱞ︈︋︄[60].id = 60;
  this.ﱠ︅︉︄[127] = Di(60, 60, 0, sprite[731], 3);
  this.ﱠ︅︉︄[127].id = 127;
  this.ﱠ︁︆︄[90] = Di(68, 68, 0, sprite[733], 3);
  this.ﱠ︁︆︄[90].id = 90;
  this.ﱞ︈︋︄[90] = Di(60, 60, 0, sprite[732], 3);
  this.ﱞ︈︋︄[90].id = 90;
  this.ﱠ︅︉︄[167] = Di(60, 60, 0, sprite[734], 3);
  this.ﱠ︅︉︄[167].id = 167;
  this.ﱠ︁︆︄[92] = Di(68, 68, 0, sprite[739], 3);
  this.ﱠ︁︆︄[92].id = 92;
  this.ﱞ︈︋︄[92] = Di(60, 60, 0, sprite[738], 3);
  this.ﱞ︈︋︄[92].id = 92;
  this.ﱠ︅︉︄[168] = Di(60, 60, 0, sprite[740], 3);
  this.ﱠ︅︉︄[168].id = 168;
  this.ﱠ︁︆︄[93] = Di(68, 68, 0, sprite[742], 3);
  this.ﱠ︁︆︄[93].id = 93;
  this.ﱞ︈︋︄[93] = Di(60, 60, 0, sprite[741], 3);
  this.ﱞ︈︋︄[93].id = 93;
  this.ﱠ︅︉︄[169] = Di(60, 60, 0, sprite[743], 3);
  this.ﱠ︅︉︄[169].id = 169;
  this.ﱠ︁︆︄[91] = Di(68, 68, 0, sprite[736], 3);
  this.ﱠ︁︆︄[91].id = 91;
  this.ﱞ︈︋︄[91] = Di(60, 60, 0, sprite[735], 3);
  this.ﱞ︈︋︄[91].id = 91;
  this.ﱠ︅︉︄[170] = Di(60, 60, 0, sprite[737], 3);
  this.ﱠ︅︉︄[170].id = 170;
  this.ﱠ︁︆︄[94] = Di(68, 68, 0, sprite[1159], 3);
  this.ﱠ︁︆︄[94].id = 94;
  this.ﱞ︈︋︄[94] = Di(60, 60, 0, sprite[1158], 3);
  this.ﱞ︈︋︄[94].id = 94;
  this.ﱠ︅︉︄[Sb.ﱡ︆︎︁] = Di(60, 60, 0, sprite[Rb.ﱢ︇︅︄], 3);
  this.ﱠ︅︉︄[Sb.ﱡ︆︎︁].id = Sb.ﱡ︆︎︁;
  this.ﱠ︁︆︄[34] = Di(68, 68, 0, sprite[939], 3);
  this.ﱠ︁︆︄[34].id = 34;
  this.ﱞ︈︋︄[34] = Di(60, 60, 0, sprite[937], 3);
  this.ﱞ︈︋︄[34].id = 34;
  this.ﱠ︅︉︄[30] = Di(60, 60, 0, sprite[938], 3);
  this.ﱠ︅︉︄[30].id = 30;
  this.ﱠ︁︆︄[44] = Di(68, 68, 0, sprite[942], 3);
  this.ﱠ︁︆︄[44].id = 44;
  this.ﱞ︈︋︄[44] = Di(60, 60, 0, sprite[940], 3);
  this.ﱞ︈︋︄[44].id = 44;
  this.ﱠ︅︉︄[92] = Di(60, 60, 0, sprite[941], 3);
  this.ﱠ︅︉︄[92].id = 92;
  this.ﱠ︁︆︄[17] = Di(68, 68, 0, sprite[872], 3);
  this.ﱠ︁︆︄[17].id = 17;
  this.ﱞ︈︋︄[17] = Di(60, 60, 0, sprite[871], 3);
  this.ﱞ︈︋︄[17].id = 17;
  this.ﱠ︅︉︄[32] = Di(60, 60, 0, sprite[873], 3);
  this.ﱠ︅︉︄[32].id = 32;
  this.ﱠ︁︆︄[63] = Di(68, 68, 0, sprite[562], 3);
  this.ﱠ︁︆︄[63].id = 63;
  this.ﱞ︈︋︄[63] = Di(60, 60, 0, sprite[560], 3);
  this.ﱞ︈︋︄[63].id = 63;
  this.ﱠ︅︉︄[130] = Di(60, 60, 0, sprite[561], 3);
  this.ﱠ︅︉︄[130].id = 130;
  this.ﱠ︁︆︄[181] = Di(68, 68, 0, sprite[585], 3);
  this.ﱠ︁︆︄[181].id = 181;
  this.ﱞ︈︋︄[181] = Di(60, 60, 0, sprite[247], 3);
  this.ﱞ︈︋︄[181].id = 181;
  this.ﱠ︁︆︄[Tb.ﱟ︋︉︂] = Di(68, 68, 0, sprite[Rb.ﱠ︈︋︄], 3);
  this.ﱠ︁︆︄[Tb.ﱟ︋︉︂].id = Tb.ﱟ︋︉︂;
  this.ﱞ︈︋︄[Tb.ﱟ︋︉︂] = Di(60, 60, 0, sprite[Rb.ﱟ︈︋︄], 3);
  this.ﱞ︈︋︄[Tb.ﱟ︋︉︂].id = Tb.ﱟ︋︉︂;
  this.ﱠ︁︆︄[Tb.ﱡ︋︉︂] = Di(68, 68, 0, sprite[Rb.ﱡ︈︋︄], 3);
  this.ﱠ︁︆︄[Tb.ﱡ︋︉︂].id = Tb.ﱡ︋︉︂;
  this.ﱞ︈︋︄[Tb.ﱡ︋︉︂] = Di(60, 60, 0, sprite[Rb.ﱣ︈︋︄], 3);
  this.ﱞ︈︋︄[Tb.ﱡ︋︉︂].id = Tb.ﱡ︋︉︂;
  this.ﱠ︁︆︄[Tb.ﱣ︋︉︂] = Di(68, 68, 0, sprite[Rb.ﱢ︈︋︄], 3);
  this.ﱠ︁︆︄[Tb.ﱣ︋︉︂].id = Tb.ﱣ︋︉︂;
  this.ﱞ︈︋︄[Tb.ﱣ︋︉︂] = Di(60, 60, 0, sprite[Rb.ﱞ︉︋︄], 3);
  this.ﱞ︈︋︄[Tb.ﱣ︋︉︂].id = Tb.ﱣ︋︉︂;
  this.ﱠ︁︆︄[Tb.ﱢ︋︉︂] = Di(68, 68, 0, sprite[Rb.ﱠ︉︋︄], 3);
  this.ﱠ︁︆︄[Tb.ﱢ︋︉︂].id = Tb.ﱢ︋︉︂;
  this.ﱞ︈︋︄[Tb.ﱢ︋︉︂] = Di(60, 60, 0, sprite[Rb.ﱟ︉︋︄], 3);
  this.ﱞ︈︋︄[Tb.ﱢ︋︉︂].id = Tb.ﱢ︋︉︂;
  this.ﱠ︁︆︄[Tb.ﱞ︌︉︂] = Di(68, 68, 0, sprite[Rb.ﱡ︉︋︄], 3);
  this.ﱠ︁︆︄[Tb.ﱞ︌︉︂].id = Tb.ﱞ︌︉︂;
  this.ﱞ︈︋︄[Tb.ﱞ︌︉︂] = Di(60, 60, 0, sprite[Rb.ﱣ︉︋︄], 3);
  this.ﱞ︈︋︄[Tb.ﱞ︌︉︂].id = Tb.ﱞ︌︉︂;
  this.ﱟ︅︉︄ = function () {
    for (var c = hj.ﱟ︌︉︂.ﱠ︊︆︄, d = 10, e = 10, f = 0; f < c[Oa]; f++) {
      if (f > 0 && !(f % 4)) {
        d += c[0].info.width + 10;
        e = 10;
      }
      c[f].info.translate.x = d;
      c[f].info.translate.y = e;
      e += 10 + c[f].info.height;
    }
  };
  this.ﱡ︅︉︄ = function () {
    for (var c = Math[A](Math[A]((3 + hj.ﱟ︌︉︂.ﱠ︊︆︄[Oa]) / 4) * (10 + this.ﱠ︁︆︄[0].info.ﱡ︃︉︂[0].width) + 35), d = 0; d < this.ﱠ︁︆︄[Oa]; d++) {
      if (this.ﱠ︁︆︄[d]) {
        this.ﱠ︁︆︄[d].info.translate.x = c;
        this.ﱠ︁︆︄[d].info.translate.y = 22;
      }
    }
    this.ﱣ︁︆︄.info.translate.x = c + 17;
    this.ﱣ︁︆︄.info.translate.y = 22 + sprite[333].height;
    this.ﱟ︁︆︄.info.translate.x = c + 17;
    this.ﱟ︁︆︄.info.translate.y = 30;
    this.ﱡ︁︆︄.info.translate.x = c + 17;
    this.ﱡ︁︆︄.info.translate.y = 22 + sprite[333].height;
  };
  this.ﱢ︉︋︄ = function () {
    for (var c = Math[A]((hb - sprite[550][0].width) / 2), d = 0; d < this.ﱞ︀︆︄[Oa]; d++) {
      this.ﱞ︀︆︄[d].button.info.translate.x = c;
      this.ﱞ︀︆︄[d].button.info.translate.y = -13;
    }
  };
  this.ﱠ︆︉︄ = function () {
    var c = 12 + Math[A](Math[A]((3 + hj.ﱟ︌︉︂.ﱠ︊︆︄[Oa]) / 4) * (10 + this.ﱡ︋︅︄.info.ﱡ︃︉︂[0].width) + 35);
    this.ﱡ︋︅︄.info.translate.x = c;
    this.ﱡ︋︅︄.info.translate.y = 33;
    this.ﱢ︋︅︄.info.translate.x = this.ﱡ︋︅︄.info.translate.x;
    this.ﱢ︋︅︄.info.translate.y = 137;
    this.ﱣ︋︅︄.info.translate.x = this.ﱡ︋︅︄.info.translate.x;
    this.ﱣ︋︅︄.info.translate.y = 240;
  };
  this.ﱞ︆︉︄ = function () {
    var c = 12 + Math[A](Math[A]((3 + hj.ﱟ︌︉︂.ﱠ︊︆︄[Oa]) / 4) * (10 + this.ﱡ︌︅︄.info.ﱡ︃︉︂[0].width) + 35);
    this.ﱡ︌︅︄.info.translate.x = c;
    this.ﱡ︌︅︄.info.translate.y = 36;
    c += 83;
    this.ﱣ︌︅︄.info.translate.x = c;
    this.ﱣ︌︅︄.info.translate.y = 36;
    this.ﱢ︌︅︄.info.translate.x = c;
    this.ﱢ︌︅︄.info.translate.y = 36;
    this.ﱞ︍︅︄.info.translate.x = c;
    this.ﱞ︍︅︄.info.translate.y = 36;
    this.ﱠ︍︅︄.info.translate.x = c;
    this.ﱠ︍︅︄.info.translate.y = 36;
    this.ﱟ︍︅︄.info.translate.x = c;
    this.ﱟ︍︅︄.info.translate.y = 36;
  };
  this.ﱢ︅︉︄ = function () {
    var c = 12 + Math[A](Math[A]((3 + hj.ﱟ︌︉︂.ﱠ︊︆︄[Oa]) / 4) * (10 + this.ﱢ︍︅︄.info.ﱡ︃︉︂[0].width) + 35);
    this.ﱢ︍︅︄.info.translate.x = c;
    this.ﱢ︍︅︄.info.translate.y = 36;
    c += 83;
    this.ﱞ︎︅︄.info.translate.x = c;
    this.ﱞ︎︅︄.info.translate.y = 36;
  };
  this.ﱣ︅︉︄ = function () {
    var c = Math[A](Math[A]((3 + hj.ﱟ︌︉︂.ﱠ︊︆︄[Oa]) / 4) * (10 + this.ﱡ︎︅︄.info.ﱡ︃︉︂[0].width) + 35);
    this.ﱡ︎︅︄.info.translate.x = c;
    this.ﱡ︎︅︄.info.translate.y = 22;
  };
  this.ﱣ︂︉︄ = function () {
    var c = hj.ﱞ︁︆︄.ﱠ︂︆︄;
    if (c[Oa] > 0) {
      var d = Math[A]((hb - (c[0].info.width + 5) * hj.ﱞ︁︆︄[ba]) / 2);
    }
    for (var e = 0; e < c[Oa]; e++) {
      c[e].info.translate.x = d + (c[e].info.width + 5) * e;
      c[e].info.translate.y = ib - c[e].info.width - 10;
      this.ﱡ︊︆︄[c[e].id].info.translate.x = c[e].info.translate.x + 13;
      this.ﱡ︊︆︄[c[e].id].info.translate.y = c[e].info.translate.y - this.ﱡ︊︆︄[c[e].id].info.ﱡ︃︉︂[0].height - 6;
    }
  };
  var o;
  var q = 0;
  var r = function () {
    f.update();
    if (++q == 30) {
      f.ﱡ︂︊︄();
      return void f.update();
    }
    c.setTimeout(r, 33);
  };
  this.ﱠ︇︉︄ = function (c) {
    if (hj.ﱡ︀︉︄.open) {
      hj.ﱡ︀︉︄.ﱠ︇︉︄();
    }
    if (hj.ﱣ︀︉︄.open) {
      hj.ﱣ︀︉︄.ﱠ︇︉︄();
    }
    document[fa]("team_box")[Z].display = "none";
    f.ﱞ︀︋︄[Z].display = "none";
    f.ﱞ︀︋︄.open = false;
    f[N][Z].display = "none";
    f[N].open = false;
    document[fa]("shop_starterkit")[Z].display = "none";
    document[fa]("home_craft")[Z].display = "none";
    document[fa]("recipe_craft")[Z].display = "none";
    f.ﱠ︆︋︄.open = false;
    document[fa]("option_in_game")[Z].display = "none";
    f.options.open = false;
    document[fa]("sure_delete")[Z].display = "none";
    f.ﱞ︄︉︄.open = false;
    document[fa]("cancel_sure_delete")[Z].display = "none";
    f.ﱢ︂︋︄.open = false;
    document[fa]("chronoquest")[Z].display = "none";
    f.ﱠ︃︋︄.open = false;
    o = c;
    f.ﱣ︂︊︄();
    f.ﱢ︆︆︄[Z].cursor = f.ﱠ︉︉︄;
    kj.ﱠ︇︉︄();
    s = -1;
    t();
    qj();
  };
  var s = -1;
  var t = function () {
    f.update();
    if (++s == 30) {
      f.stop();
      return void o();
    }
    c.setTimeout(t, 33);
  };
  this.ﱢ︈︋︁ = false;
  this.stop = function () {
    this.ﱢ︈︋︁ = false;
  };
  this.ﱡ︇︈︄ = function () {
    client.ﱞ︊︋︄();
    f.ﱢ︈︋︁ = true;
    s = -1;
    q = 0;
    r();
  };
  this.update = function () {
    this.ﱡ︆︆︄.translate.x = hb - this.ﱡ︆︆︄.ﱡ︃︉︂.width - 10;
    this.ﱡ︆︆︄.translate.y = 5;
    gj.ﱞ︉︆︄.translate.x = this.ﱡ︆︆︄.translate.x - sprite[719][0].width - 85;
    gj.ﱞ︉︆︄.translate.y = 10;
    this.ﱠ︆︋︄.button.info.translate.x = this.ﱡ︆︆︄.translate.x - sprite[702][0].width - 10;
    this.ﱠ︆︋︄.button.info.translate.y = 10;
    this.ﱠ︃︋︄.button.info.translate.x = this.ﱡ︆︆︄.translate.x - sprite[749][0].width - 20;
    this.ﱠ︃︋︄.button.info.translate.y = this.ﱠ︆︋︄.button.info.translate.y + sprite[702][0].height + 5;
    this.options.button.info.translate.x = this.ﱡ︆︆︄.translate.x - sprite[721][0].width - 20;
    this.options.button.info.translate.y = this.ﱠ︃︋︄.button.info.translate.y + sprite[721][0].height + 18;
    this.ﱣ︎︊︄.ﱢ︎︊︄.info.translate.x = this.ﱡ︆︆︄.translate.x - sprite[721][0].width - 20;
    this.ﱣ︎︊︄.ﱢ︎︊︄.info.translate.y = this.options.button.info.translate.y + sprite[777][0].height;
    this.ﱣ︎︊︄.ﱞ️︊︄.info.translate.x = this.ﱡ︆︆︄.translate.x - sprite[721][0].width - 20;
    this.ﱣ︎︊︄.ﱞ️︊︄.info.translate.y = this.options.button.info.translate.y + sprite[777][0].height;
    this.ﱞ︀︋︄.button.info.translate.x = this.ﱡ︆︆︄.translate.x - sprite[789][0].width - 20;
    this.ﱞ︀︋︄.button.info.translate.y = this.ﱣ︎︊︄.ﱢ︎︊︄.info.translate.y + sprite[789][0].height;
    hj.ﱢ︄︆︄.translate.x = this.ﱡ︆︆︄.translate.x - 63 - 85;
    hj.ﱢ︄︆︄.translate.y = 100;
    hj.ﱟ︃︉︄.translate.x = this.ﱡ︆︆︄.translate.x - sprite[511].width - 85;
    hj.ﱟ︃︉︄.translate.y = hj.ﱢ︄︆︄.translate.y + 10 + sprite[540].height;
    this.ﱞ︂︆︄.translate.y = ib - 3 - 193;
    this.ﱞ︂︆︄.translate.x = hb - 3 - 193;
    this.ﱟ︅︆︄.translate.x = 5;
    this.ﱟ︅︆︄.translate.y = ib - this.ﱟ︅︆︄.ﱡ︃︉︂.height - 5;
    this.ﱠ️︈︄.button.info.translate.x = jb - 45.5;
    this.ﱠ️︈︄.button.info.translate.y = 50;
    this.ﱟ︅︉︄();
    this.ﱣ︂︉︄();
    this.ﱡ︅︉︄();
    this.ﱣ︅︉︄();
    this.ﱢ︅︉︄();
    this.ﱞ︆︉︄();
    this.ﱠ︆︉︄();
    this.ﱢ︉︋︄();
    this[N].ﱟ︆︉︄();
    gg();
    hj.ﱡ︀︉︄.update();
    hj.ﱣ︀︉︄.update();
    this.ﱡ︎︊︄.update();
    this.ﱠ︆︋︄.ﱣ︆︋︄.update();
    this.ﱠ︆︋︄.list.update();
    this.ﱞ︄︉︄.update();
    this.ﱢ︂︋︄.update();
    this.ﱠ︃︋︄.update();
    this.ﱠ️︈︄.update();
    this.options.update();
    this.ﱞ︀︋︄.update();
    this[N].update();
    var c = 0;
    if (q != 30) {
      c = 1500 / (q + 1) - 50;
    }
    if (s != -1) {
      c = -(1500 / (30 - s + 1) - 48);
    }
    this.ﱠ️︈︄.button.info.translate.y -= c > 0 ? c : -c;
    this.ﱡ︆︆︄.translate.y -= c > 0 ? c : -c;
    hj.ﱢ︄︆︄.translate.y -= c > 0 ? c : -c;
    hj.ﱟ︃︉︄.translate.y -= c > 0 ? c : -c;
    this.ﱠ︆︋︄.button.info.translate.y -= c > 0 ? c : -c;
    this.ﱠ︃︋︄.button.info.translate.y -= c > 0 ? c : -c;
    this.options.button.info.translate.y -= c > 0 ? c : -c;
    this.ﱞ︀︋︄.button.info.translate.y -= c > 0 ? c : -c;
    this.ﱣ︎︊︄.ﱢ︎︊︄.info.translate.y -= c > 0 ? c : -c;
    this.ﱣ︎︊︄.ﱞ️︊︄.info.translate.y -= c > 0 ? c : -c;
    gj.ﱞ︉︆︄.translate.y -= c > 0 ? c : -c;
    this.ﱟ︅︆︄.translate.y -= c < 0 ? c : -c;
    this.ﱞ︂︆︄.translate.y -= c < 0 ? c : -c;
  };
  this.ﱠ︊︋︄ = function () {
    if (!(hj.ﱞ︀︇︄.enabled || !this.ﱢ︈︉︄ || hj.ﱟ️︅︄)) {
      ug();
    }
    tg();
    (function () {
      var c = gj.ﱠ︀️︄[0];
      if (gj.mode === Ki.ﱠ︈︆︄ || gj.mode === Ki.ﱣ︈︆︄ || gj.mode === Ki.ﱟ︇︆︄ || gj.mode === Ki.ﱟ︈︆︄ || gj.mode === Ki.ﱡ︈︆︄ || gj.mode === Ki.ﱣ︇︆︄ || gj.mode === Ki.ﱢ︈︆︄) {
        for (var d = 0; d < c[Oa]; d++) {
          c[d].ﱢ︆︈︄();
        }
      } else if (gj.mode === Ki.ﱠ︇︆︄) {
        for (d = 0; d < c[Oa]; d++) {
          if (hj.ﱠ️︅︄ || hj.ﱟ︃︉︄.enabled || c[d].ﱞ︄︇︄.nickname !== "spectator") {
            c[d].ﱢ︆︈︄();
          }
        }
      }
    })();
    if (this.ﱢ︈︉︄) {
      kg();
      if (this.ﱠ︎︊︄ === 1) {
        this.ﱠ︆︋︄.button.draw(e);
      }
      if (gj.mode !== Ki.ﱟ︇︆︄ && gj.mode !== Ki.ﱟ︈︆︄ && gj.mode !== Ki.ﱡ︈︆︄ && this.ﱟ︎︊︄ === 1) {
        this.ﱠ︃︋︄.button.draw(e);
      }
      this.options.button.draw(e);
      if (this.ﱟ︊︋︄ === 1) {
        this.ﱞ︀︋︄.button.draw(e);
      }
      if (kj.ﱡ︇︈︄) {
        this.ﱣ︎︊︄.ﱢ︎︊︄.draw(e);
      } else {
        this.ﱣ︎︊︄.ﱞ️︊︄.draw(e);
      }
      ng();
      mg();
      this.ﱟ︅︆︄.draw();
      sg();
      rg();
      qg();
      og();
      vg();
      hg();
      eg();
      (function () {
        if (!(hj.ﱠ︉︅︄.open || hj.ﱟ︉︅︄.open || hj.ﱡ︉︅︄.open || hj.ﱣ︉︅︄.open || hj.ﱢ︉︅︄.open)) {
          hj.ﱟ︋︎︄.open = false;
          var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
          var d = Ki.ﱠ︂︈︄;
          if (c) {
            for (var e = 0; e < gj.ﱠ︀️︄[35][Oa]; e++) {
              var f = gj.ﱠ︀️︄[35][e];
              var g = Utils.ﱡ️︊︁(f, c);
              if (g < d) {
                d = g;
                hj.ﱟ︋︎︄.open = true;
                hj.ﱟ︋︎︄.ﱡ︊︅︄ = f.ﱡ︊︅︄;
                hj.ﱟ︋︎︄.ﱣ︊︅︄ = f.id;
              }
            }
          }
        }
      })();
      dg();
      cg();
      bg();
      ag();
      gg();
      Zf();
    }
    if (hj.ﱞ︀︇︄.enabled) {
      fg();
    }
    ig();
    if (this.ﱢ︈︉︄ && this.ﱞ︎︊︄ === 1) {
      pg();
    }
    hj.ﱡ︆︉︄.draw();
    hj.alert.draw("#FFF", "#000");
    if (this.ﱢ︈︉︄) {
      hj.ﱞ︀︇︄.draw();
      hj.ﱠ️︈︄.draw();
      hj.ﱞ︁︆︄.ﱠ︂︉︄.draw(mj.ﱟ︅︇︄.x, mj.ﱟ︅︇︄.y);
    }
    jg();
  };
  this.ﱡ︊︋︄ = function () {
    hj.ﱡ︈︋︁.update();
    hj.ﱟ︅︆︄.update();
    if (!hj.reconnect.enabled && hj.ﱠ︅︈︄) {
      hj.control.update();
      hj.ﱢ︄︆︄.update();
    }
    gj.update();
    this.ﱠ︃︋︄.ﱡ︅︋︄();
  };
  this.ﱣ︊︋︄ = function () {
    ui();
  };
  this.ﱢ︊︋︄ = function () {
    client.ﱞ︋︋︄();
    client.ﱠ︋︋︄();
    client.ﱟ︋︋︄();
    client.ﱡ︋︋︄();
  };
  this.draw = function () {
    if (!hj.reconnect.enabled && hj.ﱠ︅︈︄) {
      this.ﱢ︊︋︄();
    }
    kj.ﱣ︋︋︄();
    this.ﱡ︊︋︄();
    if (dj.ﱠ︉︊︄ !== 1) {
      this.ﱣ︊︋︄();
      this.ﱠ︊︋︄();
    } else {
      var c = IMAGES.ﱡ︈︂︃;
      Yf(e, c, jb - c.width / 4, kb - c.height / 4, c.width / 2, c.height / 2);
    }
  };
  this.ﱢ︋︋︄ = function (c) {
    if (hj.ﱡ︀︉︄.open && c.keyCode === 27) {
      hj.ﱡ︀︉︄.ﱠ︇︉︄();
    } else if (hj.ﱣ︀︉︄.open && c.keyCode === 27) {
      hj.ﱣ︀︉︄.ﱠ︇︉︄();
    } else if (hj.ﱡ︀︉︄.open || hj.ﱣ︀︉︄.open || c.keyCode != 79 || s != -1) {
      if (c.keyCode == 13 && s == -1) {
        if (hj.ﱣ︀︉︄.open) {
          hj.ﱣ︀︉︄.ﱠ︈︉︄();
        } else {
          hj.ﱡ︀︉︄.ﱡ︇︈︄();
        }
      } else if (!hj.ﱡ︀︉︄.open && !hj.ﱣ︀︉︄.open) {
        if (c.keyCode === 82) {
          hj.ﱢ︄︆︄.ﱡ︃︉︄();
        } else if (c.keyCode !== 80 || gj.mode !== Ki.ﱠ︇︆︄ || hj.ﱠ️︅︄) {
          if (c.keyCode >= 49 && c.keyCode <= 57) {
            if (hj.ﱟ︌︉︂.id < 0) {
              var d = c.keyCode - 49;
              var e = hj.ﱞ︁︆︄.ﱠ︂︆︄[d];
              if (e) {
                client.ﱠ︄︉︄(e.id, d);
              }
            }
          } else if (c.keyCode == 89) {
            hj.ﱢ︁︆︄ = !hj.ﱢ︁︆︄;
          } else if (c.keyCode == 71) {
            hj.ﱟ︌︉︂.ﱟ︄︉︄();
          }
        } else {
          hj.ﱟ︃︉︄.ﱡ︃︉︄();
        }
      }
    } else {
      hj.ﱣ︀︉︄.ﱞ︈︉︄();
    }
    lj.ﱟ️︆︄(c);
  };
  this.ﱞ︌︋︄ = function (c) {
    lj.ﱢ️︊︄(c);
    if (!(c.keyCode != 8 || hj.ﱡ︀︉︄.open || hj.ﱣ︀︉︄.open)) {
      c.preventDefault();
    }
  };
  this.ﱟ︍︊︄ = function (c) {
    mj.ﱟ︅︇︄ = Bi(f.ﱢ︆︆︄, c);
    var d = false;
    if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
      f.ﱞ︂︆︄.focus(mj.ﱟ︅︇︄);
    }
    var e = hj.ﱠ︉︅︄;
    if (hj.ﱟ︌︉︂.id < 0 && e.id >= 0) {
      if (!(hj.ﱠ︉︅︄.ﱢ︎︎︄ && hj.ﱠ︉︅︄.ﱡ︊︅︄ !== hj.id)) {
        d |= f.ﱠ︁︆︄[hj.ﱠ︉︅︄.id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      }
    }
    var g = hj.ﱡ︉︅︄;
    if (g.open && g.ﱠ︋︅︄ > 0) {
      d |= f.ﱞ︎︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    var i = hj.ﱢ︉︅︄;
    if (i.open && i.ﱟ︌︅︄ > 0) {
      d |= f.ﱣ︌︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      d |= f.ﱢ︌︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      d |= f.ﱞ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      d |= f.ﱠ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      d |= f.ﱟ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    var k = hj.ﱣ︉︅︄;
    if (k.open && k.ﱟ︋︅︄ > 0) {
      d |= f.ﱣ︋︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (hj[N].open) {
      d |= f[N].button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (!hj.ﱠ︉︅︄.ﱢ︎︎︄) {
      if (hj.ﱠ︉︅︄.ﱟ︀︆︄) {
        d |= f.ﱡ︁︆︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      }
    }
    if (hj.ﱠ︉︅︄.ﱠ︀︆︄) {
      d |= f.ﱣ︁︆︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (hj.ﱟ︌︉︂.id < 0 && !f.ﱠ︆︋︄.open && !f.ﱞ︄︉︄.open && !f.ﱢ︂︋︄.open && !f.ﱠ︃︋︄.open && !f.options.open && !f.ﱞ︀︋︄.open) {
      for (var m = hj.ﱞ︁︆︄.ﱠ︂︆︄, n = 0; n < m[Oa]; n++) {
        var o = m[n].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
        d |= o;
        if (o) {
          hj.ﱞ︁︆︄.ﱠ︂︉︄.start(n, mj.ﱟ︅︇︄);
        }
        if (e.open && (e.id < 0 || e.id == m[n].id) || hj.ﱟ︉︅︄.open && m[n].id === 103 || hj.ﱟ︋︎︄.open && m[n].id === 174 || hj.ﱣ︉︅︄.open && (m[n].id === 103 || m[n].id === 125) || hj.ﱡ︉︅︄.open && m[n].id === 128 || hj.ﱢ︉︅︄.open && m[n].id === 103) {
          d |= f.ﱡ︊︆︄[m[n].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
        }
      }
    }
    if (hj.ﱣ︎︅︄.open) {
      d |= f.ﱣ︎︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (f.ﱣ️︅︄ != -1) {
      if (d |= f.ﱞ︀︆︄[f.ﱣ️︅︄].button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi)) {
        var p = true;
      }
    } else {
      p = false;
    }
    if (!(!(hj.ﱟ︌︉︂.id < 0 && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || p || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || f.ﱞ︀︋︄.open || hj.ﱟ️︅︄)) {
      m = hj.ﱟ︌︉︂.ﱠ︊︆︄;
      n = 0;
      m = hj.ﱟ︌︉︂.ﱠ︊︆︄;
      n = 0;
      for (; n < m[Oa]; n++) {
        d |= m[n].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      }
    }
    if (!(!(hj.ﱟ︌︉︂.id < 0 && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && hj.ﱠ️︈︄.open) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.ﱞ︀︋︄.open)) {
      d |= f.ﱠ️︈︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.ﱞ︀︋︄.open)) {
      d |= f.ﱠ︆︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.ﱞ︀︋︄.open)) {
      d |= f.options.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.options.open)) {
      d |= f.ﱞ︀︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.options.open || f.ﱞ︀︋︄.open)) {
      if (kj.ﱡ︇︈︄) {
        d |= f.ﱣ︎︊︄.ﱢ︎︊︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      } else {
        d |= f.ﱣ︎︊︄.ﱞ️︊︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
      }
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︀︋︄.open || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || gj.mode === Ki.ﱟ︇︆︄ || gj.mode === Ki.ﱟ︈︆︄ || gj.mode === Ki.ﱡ︈︆︄)) {
      d |= f.ﱠ︃︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, wi);
    }
    if (!(d || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.ﱞ︀︋︄.open || f[N].open)) {
      if (hj.ﱟ︌︉︂.ﱞ︊︆︄ >= 0) {
        var q = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
        if (q) {
          var r = Math[D] * 2;
          client.ﱟ︀︉︄[Fi](wb[Ya].stringify([10, hj.ﱟ︌︉︂.ﱞ︊︆︄, Math[A]((q.angle + r) % r * 255 / r), hj.ﱟ︌︉︂.mode]));
        }
      } else if (!p) {
        mj.ﱢ️︊︄();
      }
    }
  };
  this.ﱡ︍︊︄ = function (c) {
    mj.ﱟ︅︇︄ = Bi(f.ﱢ︆︆︄, c);
    mj.ﱟ️︆︄();
    if (!hj.ﱞ︁︆︄.ﱠ︂︉︄.release()) {
      var d = hj.ﱠ︉︅︄;
      var e = hj.ﱟ︉︅︄;
      var g = hj.ﱟ︋︎︄;
      var i = hj.ﱡ︉︅︄;
      var k = hj.ﱢ︉︅︄;
      var m = hj.ﱣ︉︅︄;
      if (hj.control.attack) {
        hj.control.attack = 0;
        client.ﱠ︌︋︄();
      }
      if (f.ﱣ️︅︄ != -1) {
        var n = f.ﱞ︀︆︄[f.ﱣ️︅︄].button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi);
        var o = document[fa]("team_box")[Z];
        if (n && o.display == "inline-block") {
          return void (o.display = "none");
        }
        if (n) {
          f.ﱞ︀︆︄[f.ﱣ️︅︄].action();
        }
      }
      if (hj.ﱟ︌︉︂.id < 0 && d.id >= 0 && !f.ﱞ︄︉︄.open) {
        if (!hj.ﱠ︉︅︄.ﱢ︎︎︄ || hj.ﱠ︉︅︄.ﱡ︊︅︄ === hj.id) {
          if (n = f.ﱠ︁︆︄[hj.ﱠ︉︅︄.id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
            client.ﱟ︌︋︄(d);
          }
        }
      }
      if ((i = hj.ﱡ︉︅︄).open && i.ﱠ︋︅︄ > 0 && !f.ﱞ︄︉︄.open) {
        if (n = f.ﱞ︎︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          client.ﱡ︌︋︄(i);
        }
      }
      if ((k = hj.ﱢ︉︅︄).open && k.ﱟ︌︅︄ > 0 && !f.ﱞ︄︉︄.open) {
        switch (k.type) {
          case 24:
            if (n = f.ﱣ︌︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
              client.ﱣ︌︋︄(k);
            }
            break;
          case 25:
            if (n = f.ﱢ︌︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
              client.ﱣ︌︋︄(k);
            }
            break;
          case 26:
            if (n = f.ﱞ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
              client.ﱣ︌︋︄(k);
            }
            break;
          case 27:
            if (n = f.ﱠ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
              client.ﱣ︌︋︄(k);
            }
            break;
          case 28:
            if (n = f.ﱟ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
              client.ﱣ︌︋︄(k);
            }
        }
      }
      if ((m = hj.ﱣ︉︅︄).open && m.ﱟ︋︅︄ > 0 && !f.ﱞ︄︉︄.open) {
        if (n = f.ﱣ︋︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          client.ﱢ︌︋︄(m);
        }
      }
      if (hj[N].open && !f.ﱞ︄︉︄.open) {
        if (n = f[N].button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          f[N].select();
        }
      }
      if (!(hj.ﱠ︉︅︄.ﱢ︎︎︄ || f.ﱞ︄︉︄.open)) {
        if (hj.ﱠ︉︅︄.ﱟ︀︆︄ && (n = f.ﱡ︁︆︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi))) {
          client.ﱞ︍︋︄(d);
        }
      }
      if (hj.ﱠ︉︅︄.ﱠ︀︆︄ && !f.ﱞ︄︉︄.open && (n = f.ﱣ︁︆︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi))) {
        client.ﱠ︍︋︄(d);
        if (ga) {
          ga("send", "event", "Game", "lockpick");
        }
      }
      if (hj.ﱣ︎︅︄.open) {
        if (n = f.ﱣ︎︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          client.ﱣ︎︅︄();
          if (ga) {
            ga("send", "event", "Game", "resurrection");
          }
        }
      }
      if (hj.ﱟ︌︉︂.id < 0 && !f.ﱞ︄︉︄.open) {
        for (var p = hj.ﱞ︁︆︄.ﱠ︂︆︄, q = 0; q < p[Oa]; q++) {
          if (n = p[q].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
            if (c.which != 1 || c.shiftKey) {
              if ((c.which == 1 && c.shiftKey || c.which == 3) && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
                f.ﱞ︄︉︄.ﱣ︄︉︄(p[q].id);
              }
            } else {
              client.ﱠ︄︉︄(p[q].id, q);
            }
          } else if (d.open && (d.id < 0 || d.id === p[q].id)) {
            if ((n = f.ﱡ︊︆︄[p[q].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
              client.ﱟ︍︋︄(d, p[q].id, c.shiftKey ? 10 : 1);
            }
          } else if (g.open && p[q].id === 174) {
            if ((n = f.ﱡ︊︆︄[p[q].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
              client.ﱡ︍︋︄(g);
            }
          } else if (e.open && p[q].id === 103) {
            if ((n = f.ﱡ︊︆︄[p[q].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
              client.ﱣ︍︋︄(e, c.shiftKey ? 10 : 1);
            }
          } else if (i.open && p[q].id === 128) {
            if ((n = f.ﱡ︊︆︄[p[q].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
              client.ﱢ︍︋︄(i, c.shiftKey ? 10 : 1);
            }
          } else if (k.open && p[q].id === 103) {
            if ((n = f.ﱡ︊︆︄[p[q].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
              client.ﱞ︎︋︄(k, c.shiftKey ? 10 : 1);
            }
          } else if (m.open && (p[q].id === 103 || p[q].id === 125)) {
            if ((n = f.ﱡ︊︆︄[p[q].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) {
              if (p[q].id === 103) {
                client.ﱠ︎︋︄(m, c.shiftKey ? 10 : 1, 0);
              } else {
                client.ﱠ︎︋︄(m, 0, c.shiftKey ? 10 : 1);
              }
            }
          }
        }
      }
      if (hj.ﱟ︌︉︂.id < 0 && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && !f.ﱞ︄︉︄.open && !hj.ﱟ️︅︄) {
        p = hj.ﱟ︌︉︂.ﱠ︊︆︄;
        q = 0;
        p = hj.ﱟ︌︉︂.ﱠ︊︆︄;
        q = 0;
        for (; q < p[Oa]; q++) {
          if (n = p[q].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
            ret = client.ﱟ︎︋︄(p[q].id);
            if (ret && ga) {
              ga("send", "event", "Game", "craft", Ub[Wb[p[q].id].ﱠ︄︉︂].name);
            }
          }
        }
      }
      if (hj.ﱟ︌︉︂.id < 0 && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && hj.ﱠ️︈︄.open && !f.ﱞ︀︋︄.open && !f.ﱠ︆︋︄.open && !f.ﱞ︄︉︄.open && !f.options.open && !f.ﱢ︂︋︄.open && !f.ﱠ︃︋︄.open) {
        if (n = f.ﱠ️︈︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi)) {
          jj.ﱠ️︈︄.select();
        }
      }
      if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && !f.ﱠ︆︋︄.open && !f.ﱞ︄︉︄.open && !f.ﱞ︀︋︄.open && !f.ﱢ︂︋︄.open && !f.ﱠ︃︋︄.open && !f.options.open) {
        if (kj.ﱡ︇︈︄) {
          if (n = f.ﱣ︎︊︄.ﱢ︎︊︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
            kj.select();
            if (ga) {
              ga("send", "event", "Game", "sound on");
            }
          }
        } else if (n = f.ﱣ︎︊︄.ﱞ️︊︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          kj.select();
          if (ga) {
            ga("send", "event", "Game", "sound off");
          }
        }
      }
      if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && !f.ﱠ︆︋︄.open && !f.ﱞ︄︉︄.open && !f.ﱢ︂︋︄.open && !f.ﱠ︃︋︄.open && !f.ﱞ︀︋︄.open) {
        if (n = f.options.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          f.options.ﱞ︂︋︄();
          if (ga) {
            ga("send", "event", "Game", "options");
          }
        }
      }
      if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && !f.ﱠ︆︋︄.open && !f.ﱞ︄︉︄.open && !f.ﱢ︂︋︄.open && !f.ﱠ︃︋︄.open && !f.options.open && f.ﱟ︊︋︄ === 1) {
        if (n = f.ﱞ︀︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          f.ﱞ︀︋︄.select();
          if (ga) {
            ga("send", "event", "Game", "market");
          }
        }
      }
      if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && !f.ﱞ︄︉︄.open && !f.ﱞ︀︋︄.open && !f.options.open && !f.ﱢ︂︋︄.open && !f.ﱠ︃︋︄.open && f.ﱠ︎︊︄ === 1) {
        if (n = f.ﱠ︆︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          f.ﱠ︆︋︄.ﱢ︆︋︄();
          if (ga) {
            ga("send", "event", "Game", "recipe");
          }
        }
      }
      if (hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && !f.ﱠ︆︋︄.open && !f.ﱞ︄︉︄.open && !f.options.open && !f.ﱢ︂︋︄.open && !f.ﱞ︀︋︄.open && gj.mode !== Ki.ﱟ︇︆︄ && gj.mode !== Ki.ﱟ︈︆︄ && gj.mode !== Ki.ﱡ︈︆︄ && f.ﱟ︎︊︄ === 1) {
        if (n = f.ﱠ︃︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, xi)) {
          f.ﱠ︃︋︄.select();
          if (ga) {
            ga("send", "event", "Game", "quests");
          }
        }
      }
      if (hj.ﱟ︌︉︂.ﱢ︉︆︄ && c.which == 3) {
        f.ﱢ︂︋︄.ﱣ︄︉︄();
      }
    }
  };
  this.ﱣ︍︊︄ = false;
  this.ﱢ︍︊︄ = function (c) {
    mj.ﱟ︅︇︄ = Bi(f.ﱢ︆︆︄, c);
    var e = false;
    jj.ﱞ︉︅︄.display = 0;
    hj.ﱞ︁︆︄.ﱠ︂︉︄.move(mj.ﱟ︅︇︄);
    if (f.ﱣ️︅︄ != -1) {
      e |= f.ﱞ︀︆︄[f.ﱣ️︅︄].button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    var g = hj.ﱡ︉︅︄;
    if (g.open && g.ﱠ︋︅︄ > 0) {
      e |= f.ﱞ︎︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    var i = hj.ﱢ︉︅︄;
    if (i.open && i.ﱟ︌︅︄ > 0) {
      e |= f.ﱣ︌︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      e |= f.ﱢ︌︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      e |= f.ﱞ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      e |= f.ﱠ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      e |= f.ﱟ︍︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    var k = hj.ﱣ︉︅︄;
    if (k.open && k.ﱟ︋︅︄ > 0) {
      e |= f.ﱣ︋︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (hj[N].open) {
      e |= f[N].button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    var m = hj.ﱠ︉︅︄;
    if (hj.ﱟ︌︉︂.id < 0 && m.id >= 0) {
      if (!(hj.ﱠ︉︅︄.ﱢ︎︎︄ && hj.ﱠ︉︅︄.ﱡ︊︅︄ !== hj.id)) {
        e |= f.ﱠ︁︆︄[m.id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      }
    }
    if (hj.ﱣ︎︅︄.open) {
      e |= f.ﱣ︎︅︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (!hj.ﱠ︉︅︄.ﱢ︎︎︄) {
      if (hj.ﱠ︉︅︄.ﱟ︀︆︄) {
        e |= f.ﱡ︁︆︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      }
    }
    if (hj.ﱠ︉︅︄.ﱠ︀︆︄) {
      e |= f.ﱣ︁︆︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (hj.ﱟ︌︉︂.id < 0) {
      for (var n = hj.ﱞ︁︆︄.ﱠ︂︆︄, o = 0; o < n[Oa]; o++) {
        var p = n[o].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
        e |= jj.ﱞ︉︅︄.ﱟ︍︇︄(p, n[o], 0);
        if (m.open && (m.id < 0 || m.id == n[o].id) || hj.ﱟ︉︅︄.open && n[o].id == 103 || hj.ﱟ︋︎︄.open && n[o].id === 174 || hj.ﱣ︉︅︄.open && (n[o].id == 103 || n[o].id == 125) || hj.ﱡ︉︅︄.open && n[o].id == 128 || hj.ﱢ︉︅︄.open && n[o].id == 103) {
          e |= f.ﱡ︊︆︄[n[o].id].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
        }
      }
    }
    if (hj.ﱟ︌︉︂.id < 0 && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && !hj.ﱟ️︅︄) {
      n = hj.ﱟ︌︉︂.ﱠ︊︆︄;
      o = 0;
      n = hj.ﱟ︌︉︂.ﱠ︊︆︄;
      o = 0;
      for (; o < n[Oa]; o++) {
        p = false;
        p = n[o].ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
        e |= jj.ﱞ︉︅︄.ﱟ︍︇︄(p, n[o], 1);
      }
    }
    if (!(!(hj.ﱟ︌︉︂.id < 0 && hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0 && hj.ﱠ️︈︄.open) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.ﱞ︀︋︄.open)) {
      e |= f.ﱠ️︈︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.ﱞ︀︋︄.open || f.ﱠ︎︊︄ !== 1)) {
      e |= f.ﱠ︆︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.ﱞ︀︋︄.open)) {
      e |= f.options.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.options.open || f.ﱟ︊︋︄ !== 1)) {
      e |= f.ﱞ︀︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.ﱢ︂︋︄.open || f.ﱠ︃︋︄.open || f.options.open || f.ﱞ︀︋︄.open)) {
      if (kj.ﱡ︇︈︄) {
        e |= f.ﱣ︎︊︄.ﱢ︎︊︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      } else {
        e |= f.ﱣ︎︊︄.ﱞ️︊︄.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
      }
    }
    if (!(!(hj.ﱟ︌︉︂.ﱞ︊︆︄ < 0) || f.ﱠ︆︋︄.open || f.ﱞ︄︉︄.open || f.options.open || f.ﱢ︂︋︄.open || f.ﱞ︀︋︄.open || gj.mode === Ki.ﱟ︇︆︄ || gj.mode === Ki.ﱟ︈︆︄ || gj.mode === Ki.ﱡ︎︋︄ || f.ﱟ︎︊︄ !== 1)) {
      e |= f.ﱠ︃︋︄.button.ﱟ︍︇︄(f.ﱢ︆︆︄, mj.ﱟ︅︇︄, vi);
    }
    if (f.ﱣ︍︊︄ !== e) {
      f.ﱣ︍︊︄ = e;
      d[Z].cursor = e ? f.ﱟ︉︉︄ : f.ﱠ︉︉︄;
    }
  };
  this.ﱡ︂︊︄ = function () {
    c[La]("mousedown", this.ﱟ︍︊︄, false);
    c[La]("mouseup", this.ﱡ︍︊︄, false);
    c[La]("mousemove", this.ﱢ︍︊︄, false);
    c[La]("keyup", this.ﱢ︋︋︄, false);
    c[La]("keydown", this.ﱞ︌︋︄, false);
  };
  this.ﱣ︂︊︄ = function () {
    c[Ka]("mousedown", this.ﱟ︍︊︄, false);
    c[Ka]("mouseup", this.ﱡ︍︊︄, false);
    c[Ka]("mousemove", this.ﱢ︍︊︄, false);
    c[Ka]("keyup", this.ﱢ︋︋︄, false);
    c[Ka]("keydown", this.ﱞ︌︋︄, false);
  };
}
function Vi() {
  Utils.ﱠ︍︊︁("https://twitter.com/intent/tweet?text=I%20survived%20" + hj.ﱡ︃︆︄ + "%20days%20with%20" + hj.ﱠ︎︈︄.ﱞ︈︆︄ + "%20points%20in%20http%3A%2F%2Fstarve.io%2F%20%23starve.io");
}
function Wi() {
  Utils.ﱠ︍︊︁("https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.starve.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0");
}
function Xi(d, e) {
  this.ﱢ︆︆︄ = d;
  this.ﱞ︇︆︄ = e;
  var f = this;
  this.ﱣ︎︋︄ = false;
  this.ﱢ︎︋︄ = {
    id: document[fa]("scoreboard"),
    [Z]: document[fa]("scoreboard")[Z],
    height: 0,
    translate: {
      x: 0,
      y: 0
    },
    update: function () {
      this[Z].left = this.translate.x + "px";
      this[Z].top = this.translate.y + "px";
    },
    init: function () {
      this.id.innerHTML = "<div style=\"position:absolute;\"> <img src=\"./img/scoreboard.png\"style=\"width:250px;transform:translate(125px, -80px);\"> </img> </div><div><div id=\"whokilled\">" + hj.ﱠ︎︈︄.ﱟ︎︈︄ + "</div></div><div class=\"deco\" style=\"margin-top:35px;\"></div><div class=\"deco\"></div><div><div class=\"stats\"> " + cc[335] + " : " + hj.ﱡ︃︆︄ + "</div><div class=\"stats\"> " + cc[334] + " : " + hj.ﱠ︎︈︄.ﱣ︎︈︄ + "</div></div><div id=\"flexDisplay\"><div id=\"score\"> " + cc[333] + " : " + hj.ﱠ︎︈︄.ﱞ︈︆︄ + "</div><div id=\"breadWon\"><span id=\"breadWonInner\">0</span><img src=\"./img/golden-bread.png\" style=\"width:50px;margin-left:-25px;transform: translate(37px, 8px);\"></img></div></div><div><div id=\"points\"> " + hj.ﱠ︎︈︄.ﱡ︎︈︄ + " " + cc[332] + "</div></div><div id=\"shop_points\">" + cc[331] + "</div><div style=\"display:inline-block;\"><div class=\"social\" id=\"tttwitter\">" + cc[329] + "</div><div class=\"social\" id=\"fffacebook\">" + cc[330] + "</div></div><div id=\"bbback\">" + cc[328] + "</div>";
      this[Z].display = "inline-block";
      document[fa]("tttwitter")[La]("mouseup", Vi, false);
      document[fa]("bbback")[La]("mouseup", function () {
        ij.ﱠ︇︉︄(dj.ﱡ︇︈︄);
      }, false);
      document[fa]("fffacebook")[La]("mouseup", Wi, false);
      this.height = Math[A](this.id.clientHeight / 2);
    }
  };
  var g;
  var i = 0;
  var k = function () {
    f.update();
    if (++i != 30) {
      c.setTimeout(k, 33);
    } else {
      f.update();
    }
  };
  this.ﱠ︇︉︄ = function (c) {
    if (f.ﱣ︎︋︄ === true) {
      f.ﱣ︎︋︄ = false;
      g = c;
      m = -1;
      n();
      qj();
    }
  };
  var m = -1;
  var n = function () {
    f.update();
    if (++m == 30) {
      f.stop();
      f.ﱢ︎︋︄[Z].display = "none";
      return void g();
    }
    c.setTimeout(n, 33);
  };
  this.ﱢ︈︋︁ = false;
  this.stop = function () {
    this.ﱢ︈︋︁ = false;
  };
  this.ﱡ︇︈︄ = function () {
    rj();
    document[fa]("game_body")[Z].backgroundColor = ["#133A2B", "#042b30"][fj.time];
    f.ﱢ︎︋︄.init();
    dj.ﱟ︂︊︄[Z].display = "inline-block";
    f.ﱢ︈︋︁ = true;
    f.ﱣ︎︋︄ = true;
    m = -1;
    i = 0;
    k();
  };
  this.update = function () {
    this.ﱢ︎︋︄.translate.x = Math[A](jb - 275);
    this.ﱢ︎︋︄.translate.y = Math[A](kb - this.ﱢ︎︋︄.height - 28);
    dj.ﱟ︂︊︄.translate.x = this.ﱢ︎︋︄.translate.x - 350;
    dj.ﱟ︂︊︄.translate.y = this.ﱢ︎︋︄.translate.y + 0;
    dj.ﱟ︂︊︄.update();
    if (i != 30 || m != -1) {
      var c = 0;
      if (i != 30) {
        c = 1500 / (i + 1) - 50;
      }
      if (m != -1) {
        c = -(1750 / (30 - m + 1) - 48);
      }
      this.ﱢ︎︋︄.translate.y -= c;
    }
    this.ﱢ︎︋︄.update();
  };
  this.draw = function () {
    Xf();
    hj.alert.draw("#FFF", "#000");
  };
}
mycyph1 = 1;
var Yi = 1;
var Zi = 1;
var $i = [];
$i[-1] = 1;
$i[28] = 1;
$i[49] = 1;
$i[Tb.ﱞ️︋︄] = 2;
$i[8] = 2;
$i[1] = 2;
$i[3] = 2;
$i[4] = 2;
$i[31] = 2;
$i[32] = 2;
$i[9] = 2;
$i[57] = 2;
$i[0] = 2;
$i[63] = 2;
$i[17] = 2;
$i[5] = 2;
$i[6] = 2;
$i[30] = 2;
$i[Tb.ﱠ️︋︄] = 2;
$i[18] = 2;
$i[12] = 2;
$i[13] = 2;
$i[14] = 2;
$i[15] = 2;
$i[16] = 2;
$i[33] = 2;
$i[Tb.ﱟ️︋︄] = 2;
$i[35] = 2;
$i[36] = 2;
$i[37] = 2;
$i[38] = 2;
$i[39] = 2;
$i[45] = 2;
$i[62] = 2;
$i[54] = 2;
$i[53] = 2;
$i[46] = 3;
$i[50] = 3;
$i[51] = 3;
$i[52] = 3;
SOUND_NATURE = [];
SOUND_NATURE[0] = 0;
SOUND_NATURE[1] = 1;
SOUND_NATURE[2] = 1;
SOUND_NATURE[3] = 1;
SOUND_NATURE[4] = 0;
SOUND_NATURE[5] = 0;
SOUND_NATURE[6] = 0;
SOUND_NATURE[7] = 0;
SOUND_NATURE[8] = 0;
SOUND_NATURE[9] = 0;
SOUND_NATURE[10] = 1;
SOUND_NATURE[11] = 1;
SOUND_NATURE[12] = 1;
SOUND_NATURE[13] = 1;
SOUND_NATURE[14] = 1;
SOUND_NATURE[15] = 1;
SOUND_NATURE[16] = 0;
SOUND_NATURE[17] = 0;
SOUND_NATURE[18] = 0;
SOUND_NATURE[19] = 0;
SOUND_NATURE[20] = 0;
SOUND_NATURE[21] = 0;
SOUND_NATURE[22] = 0;
SOUND_NATURE[23] = 1;
SOUND_NATURE[24] = 1;
SOUND_NATURE[25] = 1;
SOUND_NATURE[26] = 1;
SOUND_NATURE[27] = 1;
SOUND_NATURE[28] = 1;
SOUND_NATURE[29] = 1;
SOUND_NATURE[30] = 1;
SOUND_NATURE[31] = 1;
SOUND_NATURE[32] = 1;
SOUND_NATURE[33] = 1;
SOUND_NATURE[34] = 1;
SOUND_NATURE[35] = 1;
SOUND_NATURE[36] = 1;
SOUND_NATURE[37] = 1;
SOUND_NATURE[38] = 1;
SOUND_NATURE[40] = 0;
SOUND_NATURE[41] = 0;
SOUND_NATURE[42] = 0;
SOUND_NATURE[50] = 1;
SOUND_NATURE[51] = 1;
SOUND_NATURE[52] = 1;
SOUND_NATURE[55] = 0;
SOUND_NATURE[56] = 0;
SOUND_NATURE[57] = 0;
SOUND_NATURE[58] = 0;
SOUND_BUILD = [];
SOUND_BUILD[{
  ﱠ︈︉︂: 0,
  ﱣ︍︎︁: 1,
  ﱣ︀︍︁: 2,
  ﱡ︇︎︁: 3,
  ﱣ︈︍︁: 4,
  ﱟ︈︍︁: 5,
  ﱡ︍︈︂: 6,
  ﱢ︈︍︁: 7,
  ﱞ︉︍︁: 8,
  ﱠ︉︍︁: 9,
  ﱠ️︈︂: 10,
  ﱡ︉︍︁: 11,
  ﱣ︉︍︁: 12,
  ﱢ︉︍︁: 13,
  ﱞ︊︍︁: 14,
  ﱟ️︈︂: 15,
  ﱡ️︈︂: 16,
  ﱣ️︈︂: 17,
  ﱣ︍︈︂: 18,
  ﱞ︂︍︁: 19,
  ﱠ︂︍︁: 20,
  ﱢ️︈︂: 21,
  ﱢ︆︍︁: 22,
  ﱞ︇︍︁: 23,
  ﱠ︇︍︁: 24,
  ﱟ︇︍︁: 25,
  ﱡ︇︍︁: 26,
  ﱣ︇︍︁: 27,
  ﱢ︇︍︁: 28,
  ﱠ︈︍︁: 29,
  ﱡ︂︍︁: 30,
  ﱣ︃︍︁: 31,
  ﱠ︄︍︁: 32,
  ﱠ︅︍︁: 33,
  ﱟ︀︉︂: 34,
  ﱞ︁︉︂: 35,
  ﱠ︌︍︁: 36,
  ﱢ︍︈︂: 37,
  ﱟ︍︍︁: 38,
  ﱞ︎︈︂: 39,
  ﱠ︎︈︂: 40,
  ﱣ︎︍︁: 41,
  ﱠ️︍︁: 42,
  ﱡ︎︈︂: 43,
  ﱟ︎︈︂: 44,
  ﱞ︁︎︁: 45,
  ﱠ︁︎︁: 46,
  ﱟ︁︎︁: 47,
  ﱡ︁︎︁: 48,
  ﱣ︁︎︁: 49,
  ﱢ︁︎︁: 50,
  ﱞ︂︎︁: 51,
  ﱠ︂︎︁: 52,
  ﱟ︂︎︁: 53,
  ﱣ︎︈︂: 54,
  ﱢ︎︈︂: 55,
  ﱡ︂︎︁: 56,
  ﱡ️︎︁: 60,
  ﱞ︉︎︁: 61,
  ﱡ︃︀︂: 62,
  ﱢ︇︀︂: 63,
  DRAGON: 64,
  ﱠ︍︂︂: 65,
  ﱠ︇︂︂: 66,
  ﱢ︀︅︂: 67,
  ﱣ︂︉︂: 68,
  ﱡ︈︀︂: 69,
  ﱣ︊︆︂: 70,
  ﱠ︄︎︁: 71,
  ﱟ︄︎︁: 72,
  ﱡ︄︎︁: 73,
  ﱢ︄︎︁: 74,
  ﱟ︅︎︁: 75,
  ﱡ︊︇︄: 76,
  ﱞ︇︎︁: 77,
  ﱟ︇︈︂: 78,
  ﱠ︃️︁: 79,
  ﱣ︉︎︁: 80,
  ﱠ︀︃︂: 81,
  ﱟ︆︃︂: 82,
  ﱡ️︋︄: 83,
  ﱣ️︋︄: 84,
  ﱢ️︋︄: 85,
  ﱟ︇︎︁: 86,
  ﱟ︋︄︂: 87,
  ﱠ︉︆︂: 88,
  ﱞ︀︌︄: 89,
  ﱡ︆︎︁: 90,
  ﱢ︆︎︁: 91,
  ﱣ︎︎︁: 100
}.ﱞ︀︍︁] = 0;
SOUND_BUILD[1] = 0;
SOUND_BUILD[29] = 0;
SOUND_BUILD[6] = 0;
SOUND_BUILD[3] = -1;
SOUND_BUILD[31] = -1;
SOUND_BUILD[2] = 0;
SOUND_BUILD[4] = 0;
SOUND_BUILD[30] = 0;
SOUND_BUILD[33] = 0;
SOUND_BUILD[32] = 1;
SOUND_BUILD[35] = 1;
SOUND_BUILD[7] = 1;
SOUND_BUILD[8] = 1;
SOUND_BUILD[9] = 1;
SOUND_BUILD[19] = 1;
SOUND_BUILD[50] = 1;
SOUND_BUILD[5] = 0;
SOUND_BUILD[12] = 1;
SOUND_BUILD[13] = 1;
SOUND_BUILD[14] = 1;
SOUND_BUILD[20] = 1;
SOUND_BUILD[52] = 1;
SOUND_BUILD[10] = 0;
SOUND_BUILD[15] = 1;
SOUND_BUILD[16] = 1;
SOUND_BUILD[17] = 1;
SOUND_BUILD[21] = 1;
SOUND_BUILD[51] = 1;
SOUND_BUILD[45] = 0;
SOUND_BUILD[46] = 1;
SOUND_BUILD[47] = 1;
SOUND_BUILD[48] = 1;
SOUND_BUILD[49] = 1;
SOUND_BUILD[53] = 1;
SOUND_BUILD[18] = 1;
SOUND_BUILD[22] = 1;
SOUND_BUILD[23] = 1;
SOUND_BUILD[11] = 0;
SOUND_BUILD[34] = 1;
var _i = {
  ﱠ︀︌︄: {
    ﱟ︀︌︄: null,
    path: ["audio/ambience.mp3"],
    ﱡ︀︌︄: {
      ﱣ︀︌︄: [90086, 300, false],
      ﱢ︀︌︄: [90391, 300, false],
      ﱞ︁︌︄: [90684, 300, false]
    },
    sample: {
      ﱣ︀︌︄: 8,
      ﱢ︀︌︄: 8,
      ﱞ︁︌︄: 8
    }
  },
  ﱠ︁︌︄: {
    ﱟ︀︌︄: null,
    path: ["audio/ambience.mp3"],
    ﱡ︀︌︄: {
      ﱟ︁︌︄: [89303, 300, false],
      p1: [89549, 300, false],
      p2: [89815, 300, false]
    },
    sample: {
      ﱟ︁︌︄: 8,
      p1: 8,
      p2: 8
    }
  },
  ﱡ︁︌︄: {
    ﱟ︀︌︄: null,
    path: ["audio/ambience.mp3"],
    ﱡ︀︌︄: {
      ﱣ︁︌︄: [88195, 300, false],
      ﱣ︅︇︄: [88473, 300, false],
      ﱢ︅︇︄: [88751, 300, false],
      ﱞ︆︇︄: [89025, 300, false]
    },
    sample: {
      ﱣ︁︌︄: 8,
      ﱣ︅︇︄: 8,
      ﱢ︅︇︄: 8,
      ﱞ︆︇︄: 8
    }
  },
  ﱢ︁︌︄: {
    ﱟ︀︌︄: null,
    path: ["audio/ambience.mp3"],
    ﱡ︀︌︄: {
      ﱞ︂︌︄: [100, 2800, true],
      ﱠ︂︌︄: [3100, 8800, true],
      ﱟ︂︌︄: [19882, 8301, true],
      ﱡ︂︌︄: [32604, 21890, true],
      ﱣ︂︌︄: [54524, 11393, true],
      ﱢ︂︌︄: [66961, 21223, true],
      ﱞ︃︌︄: [66961, 21223, true],
      fire: [12356, 6965, true],
      ﱞ︊︇︄: [28380, 1797, true],
      ﱠ︃︌︄: [30562, 655, true],
      ﱠ︂︇︄: [31658, 813, true],
      ﱟ︃︌︄: [66014, 925, true],
      ﱡ︃︌︄: [91022, 400, false],
      hand: [91431, 400, false],
      ﱣ︃︌︄: [92249, 500, false]
    },
    sample: {
      ﱞ︂︌︄: 1,
      ﱠ︂︌︄: 1,
      ﱟ︂︌︄: 1,
      ﱡ︂︌︄: 1,
      ﱣ︂︌︄: 1,
      ﱢ︂︌︄: 1,
      ﱞ︃︌︄: 1,
      fire: 8,
      ﱞ︊︇︄: 8,
      ﱠ︃︌︄: 8,
      ﱠ︂︇︄: 8,
      ﱟ︃︌︄: 8,
      ﱡ︃︌︄: 6,
      hand: 6,
      ﱣ︃︌︄: 6
    }
  }
};
var aj = function (c, d, e, f, g, i, k, m, n, p, q) {
  this.r = 1;
  this.delay = c;
  this.ﱢ︃︌︄ = c;
  this.ﱣ︃︆︄ = d;
  this.ﱡ︃︆︄ = e;
  this.ﱞ︄︌︄ = f;
  this.ﱠ︄︌︄ = g;
  this.ﱟ︄︌︄ = i;
  this.ﱞ︄︇︄ = k;
  this.ﱡ︄︌︄ = m;
  this.source = n;
  this.source.ﱣ︄︌︄ = n.x + n.w;
  this.source.ﱡ︍︈︄ = n.y + n.ﱟ︁︋︁;
  this.ﱢ︄︌︄ = p;
  this.ﱞ︆︋︁ = q;
  this.ﱞ︅︌︄ = 0;
  this.ﱠ︅︌︄ = {
    d: 5,
    m: 5
  };
  this.effect = function () {
    this.delay -= nj;
    if (this.delay < 0) {
      this.delay = this.ﱢ︃︌︄;
      var c = _i.ﱢ︁︌︄.ﱟ︀︌︄.ﱟ︅︌︄(this.ﱣ︃︆︄);
      var d = _i.ﱢ︁︌︄.ﱟ︀︌︄.ﱟ︅︌︄(this.ﱡ︃︆︄);
      if (c && !d) {
        var e = this.ﱞ︄︇︄.volume(this.ﱣ︃︆︄) * Yi;
        var f = (Math[o]() * this.ﱟ︄︌︄ + this.ﱠ︄︌︄) * Yi;
        this.ﱞ︄︇︄.ﱞ︄︌︄(e, f, this.ﱞ︄︌︄, this.ﱣ︃︆︄);
      } else if (!c && d) {
        e = this.ﱞ︄︇︄.volume(this.ﱡ︃︆︄) * Yi;
        f = (Math[o]() * this.ﱟ︄︌︄ + this.ﱠ︄︌︄) * Yi;
        this.ﱞ︄︇︄.ﱞ︄︌︄(e, f, this.ﱞ︄︌︄, this.ﱡ︃︆︄);
      }
    }
  };
  this.transition = function () {
    this.delay = this.ﱢ︃︌︄;
    this.ﱠ︅︌︄.d = this.ﱠ︅︌︄.m;
    if (gj.time) {
      this.ﱞ︄︇︄.ﱞ︄︌︄(0, this.ﱠ︄︌︄ * Yi, this.ﱡ︄︌︄, this.ﱣ︃︆︄);
      this.ﱞ︄︇︄.play(this.ﱣ︃︆︄);
      if (this.ﱞ︄︇︄.ﱟ︅︌︄(this.ﱡ︃︆︄)) {
        var c = this.ﱞ︄︇︄.volume(this.ﱡ︃︆︄) * Yi;
        this.ﱞ︄︇︄.ﱞ︄︌︄(c, 0, this.ﱡ︄︌︄, this.ﱡ︃︆︄);
      }
    } else {
      this.ﱞ︄︇︄.ﱞ︄︌︄(0, this.ﱠ︄︌︄ * Yi, this.ﱡ︄︌︄, this.ﱡ︃︆︄);
      this.ﱞ︄︇︄.play(this.ﱡ︃︆︄);
      if (this.ﱞ︄︇︄.ﱟ︅︌︄(this.ﱣ︃︆︄)) {
        c = this.ﱞ︄︇︄.volume(this.ﱣ︃︆︄) * Yi;
        this.ﱞ︄︇︄.ﱞ︄︌︄(c, 0, this.ﱡ︄︌︄, this.ﱣ︃︆︄);
      }
    }
  };
  this.check = function (c) {
    if (this.ﱞ︅︌︄) {
      if (Utils.ﱞ︆︋︁(c, this.ﱢ︄︌︄)) {
        if (!kj.transition && gj.ﱞ︉︆︄.now < 460000) {
          if (gj.time) {
            if (!this.ﱞ︄︇︄.ﱟ︅︌︄(this.ﱣ︃︆︄)) {
              this.ﱠ︅︌︄.d -= nj;
              if (this.ﱠ︅︌︄.d < 0) {
                this.transition();
              }
            }
          } else if (!this.ﱞ︄︇︄.ﱟ︅︌︄(this.ﱡ︃︆︄)) {
            this.ﱠ︅︌︄.d -= nj;
            if (this.ﱠ︅︌︄.d < 0) {
              this.transition();
            }
          }
        }
      } else {
        this.ﱞ︅︌︄ = 0;
        if (this.ﱞ︄︇︄.ﱟ︅︌︄(this.ﱣ︃︆︄)) {
          var d = this.ﱞ︄︇︄.volume(this.ﱣ︃︆︄) * Yi;
          this.ﱞ︄︇︄.ﱞ︄︌︄(d, 0, this.ﱡ︄︌︄, this.ﱣ︃︆︄);
        }
        if (this.ﱞ︄︇︄.ﱟ︅︌︄(this.ﱡ︃︆︄)) {
          d = this.ﱞ︄︇︄.volume(this.ﱡ︃︆︄) * Yi;
          this.ﱞ︄︇︄.ﱞ︄︌︄(d, 0, this.ﱡ︄︌︄, this.ﱡ︃︆︄);
        }
      }
    } else if (Utils.ﱞ︆︋︁(c, this.ﱞ︆︋︁)) {
      this.ﱞ︅︌︄ = 1;
      if (!kj.transition && gj.ﱞ︉︆︄.now < 460000) {
        this.transition();
      }
    }
  };
  this.update = function (c, d) {
    var e;
    var f;
    e = c.x < this.source.x ? kj.ﱡ︅︌︄(this.source.x) : c.x > this.source.ﱣ︄︌︄ ? kj.ﱡ︅︌︄(this.source.ﱣ︄︌︄) : d.x;
    f = c.y < this.source.y ? kj.ﱣ︅︌︄(this.source.y) : c.y > this.source.ﱡ︍︈︄ ? kj.ﱣ︅︌︄(this.source.ﱡ︍︈︄) : d.y;
    this.ﱞ︄︇︄.ﱟ︅︇︄(e, f, -0.5, this.ﱣ︃︆︄);
    this.ﱞ︄︇︄.ﱟ︅︇︄(e, f, -0.5, this.ﱡ︃︆︄);
  };
};
SOUND_PLAYER = {
  ﱢ︅︌︄: 0.4,
  ﱞ︆︌︄: 0.2,
  ﱠ︆︌︄: 0.2,
  ﱟ︆︌︄: 0.2,
  ﱡ︆︌︄: 300,
  ﱣ︆︌︄: 100,
  ﱢ︆︌︄: 100,
  ﱞ︇︌︄: 100,
  ﱠ︇︌︄: 0,
  ﱟ︇︌︄: 1,
  ﱣ︂︍︁: 2,
  ﱠ︈︀︂: 3,
  ﱡ︇︌︄: 4,
  ﱣ︇︌︄: 2
};
var bj = function (c, d, e) {
  this.ﱢ︇︌︄ = c;
  this.c = 0;
  this.ﱞ︄︇︄ = d;
  this.ﱣ︆︆︄ = e;
  this[ba] = e[Oa];
  this.play = function () {
    this.c = (this.c + 1) % this[ba];
    var c = this.ﱣ︆︆︄[this.c];
    this.ﱢ︇︌︄.ﱞ︈︌︄(this.ﱞ︄︇︄, c);
    this.ﱞ︄︇︄.play(c);
  };
};
var cj = function (c) {
  this.ﱠ︈︌︄ = 1;
  this.ﱠ︊︅︄ = 0;
  this.mode = -1;
  this.ﱞ︊︇︄ = kj.sample.ﱞ︊︇︄[c];
  this.ﱠ︃︌︄ = kj.sample.ﱠ︃︌︄[c];
  this.ﱠ︂︇︄ = kj.sample.ﱠ︂︇︄[c];
  this.ﱟ︃︌︄ = kj.sample.ﱟ︃︌︄[c];
  this.ﱟ︈︌︄ = new bj(this, _i.ﱠ︁︌︄.ﱟ︀︌︄, kj.ﱡ︈︌︄.ﱟ︈︌︄[c]);
  this.ﱣ︉︆︄ = new bj(this, _i.ﱡ︁︌︄.ﱟ︀︌︄, kj.ﱡ︈︌︄.ﱣ︉︆︄[c]);
  this.ﱠ︍︆︄ = new bj(this, _i.ﱠ︀︌︄.ﱟ︀︌︄, kj.ﱡ︈︌︄.ﱠ︍︆︄[c]);
  this.ﱠ︇︈︄ = c;
  this.x = 0;
  this.y = 0;
  this.move = 0;
  this.delay = SOUND_PLAYER.DELAY;
  this.ﱟ︅︇︄ = {
    x: 0,
    y: 0
  };
  this.ﱣ︈︌︄ = _i.ﱢ︁︌︄.ﱟ︀︌︄;
  this.ﱣ︇︈︄ = function (c) {
    if (c === 1) {
      this.ﱟ︈︌︄.play();
    } else if (c === 2) {
      this.ﱣ︉︆︄.play();
    } else if (c === 3) {
      this.ﱠ︍︆︄.play();
    }
  };
  this.ﱢ︈︌︄ = function (c) {
    if (c.ﱡ︁︇︄ > 0) {
      return 2;
    } else if (c.ﱢ︅︈︄ > 0) {
      return 1;
    } else if (c.ﱟ︁︇︄ > 0 || c.ﱟ︌︇︄ > 0) {
      return 3;
    } else {
      return 0;
    }
  };
  this.init = function (c) {
    this.ﱠ︈︌︄ = 0;
    this.ﱠ︊︅︄ = c;
    var d = gj.ﱞ︊︅︄[c];
    d.ﱠ︇︈︄ = this.ﱠ︇︈︄;
    this.mode = this.ﱢ︈︌︄(d);
    this.ﱟ︅︇︄.x = d.x;
    this.ﱟ︅︇︄.y = d.y;
  };
  this.ﱞ︉︌︄ = function () {
    this.ﱠ︈︌︄ = 1;
    this.mode = -1;
    this.ﱣ︈︌︄.stop(this.ﱞ︊︇︄);
    this.ﱣ︈︌︄.stop(this.ﱠ︃︌︄);
    this.ﱣ︈︌︄.stop(this.ﱠ︂︇︄);
    this.ﱣ︈︌︄.stop(this.ﱟ︃︌︄);
  };
  this.ﱞ︄︌︄ = function (c, d) {
    var e = this.ﱣ︈︌︄.volume(c) * Zi;
    this.ﱣ︈︌︄.ﱞ︄︌︄(e, 0, d, c);
  };
  this.ﱞ︈︌︄ = function (c, d) {
    if (this.move && this.ﱠ︇︈︄) {
      c.ﱟ︅︇︄(this.x, this.y, -0.5, d);
    }
  };
  this.effect = function (c, d, e, f, g, i, k) {
    this.delay = i;
    if (f && this.mode === g) {
      var m = this.ﱣ︈︌︄.volume(c) * Zi;
      if (this.move) {
        var n = (Math[o]() * e + d) * Zi;
        this.ﱣ︈︌︄.ﱞ︄︌︄(m, n, k, c);
      } else {
        this.ﱣ︈︌︄.ﱞ︄︌︄(m, 0, k, c);
      }
    } else if (this.mode != g && this.move) {
      this.ﱣ︈︌︄.ﱞ︄︌︄(0, (d + e) * Zi, k, c);
    } else if (this.move) {
      m = this.ﱣ︈︌︄.volume(c) * Zi;
      n = (Math[o]() * e + d) * Zi;
      this.ﱣ︈︌︄.ﱞ︄︌︄(m, n, k, c);
    }
    this.ﱞ︈︌︄(this.ﱣ︈︌︄, c);
    this.ﱣ︈︌︄.play(c);
  };
  this.update = function () {
    var c = gj.ﱞ︊︅︄[this.ﱠ︊︅︄];
    this.delay -= nj;
    if (!(this.delay > 0)) {
      var d = 0;
      if (c.x != this.ﱟ︅︇︄.x || c.y != this.ﱟ︅︇︄.y) {
        if (!this.move) {
          d = 1;
          this.move = 1;
        }
        this.x = kj.ﱠ︉︌︄(c.x, 2);
        this.y = kj.ﱟ︉︌︄(c.y, 2);
      } else if (this.move) {
        d = 1;
        this.move = 0;
      }
      this.ﱟ︅︇︄.x = c.x;
      this.ﱟ︅︇︄.y = c.y;
      mode = this.ﱢ︈︌︄(c);
      if (mode != this.mode) {
        if (this.mode === 1) {
          this.ﱞ︄︌︄(this.ﱞ︊︇︄, 300);
        } else if (this.mode === 2) {
          this.ﱞ︄︌︄(this.ﱠ︃︌︄, 100);
        } else if (this.mode === 0) {
          this.ﱞ︄︌︄(this.ﱠ︂︇︄, 100);
        } else if (this.mode === 3) {
          this.ﱞ︄︌︄(this.ﱟ︃︌︄, 100);
        }
      }
      if (mode === 1) {
        this.effect(this.ﱞ︊︇︄, 0.08, 0.3, d, mode, 0.4, 300);
      } else if (mode === 2) {
        this.effect(this.ﱠ︃︌︄, 0.2, 0.3, d, mode, 0.2, 100);
      } else if (mode === 0) {
        this.effect(this.ﱠ︂︇︄, 0.3, 0.6, d, mode, 0.2, 100);
      } else if (mode === 3) {
        this.effect(this.ﱟ︃︌︄, 0.1, 0.25, d, mode, 0.2, 100);
      }
      this.mode = mode;
    }
  };
  this.check = function () {
    var c = gj.ﱞ︊︅︄[this.ﱠ︊︅︄];
    return !!c || (this.ﱞ︉︌︄(c), false);
  };
};
mobile = 0;
document[fa]("version").innerHTML = "4.3";
var dj;
var ej = [];
var fj = {
  time: Math[A](Math[o]() * 2),
  items: []
};
document[fa]("game_body")[Z].backgroundColor = ["#133A2B", "#042b30"][fj.time];
fj.items[Na](new Pi(1, 0, 0, 0, 0, Math[o]() * Math[D] * 2, 2, 1));
fj.items[Na](new Pi(100, 0, 0, 0, 0, 0, 0, 5));
fj.items[Na](new Pi(2, 0, 0, 0, 0, Math[D] / 4, 0, 0));
fj.items[Na](new Pi(100, 0, 0, 0, 0, 0, 0, 5));
client = new function () {
  var e = this;
  this.ﱟ︀︉︄ = null;
  this.ﱡ︉︌︄ = 0;
  this.ﱢ︂︊︄ = [];
  this.ﱣ︉︌︄ = [[], [], [], [], [], [], [], [], []];
  this.ﱢ︉︌︄ = [-1, -1, -1, -1, -1, -1, -1, -1, -1];
  this.ﱟ︇︊︄ = 0;
  this.ﱣ︆︊︄ = 0;
  var f = {
    0: "normal",
    2: "zombies",
    3: "vampires",
    4: "forest",
    6: "community",
    7: "experimental"
  };
  this.ﱞ︊︌︄ = async function () {
    var c = await fetch("/api/server_list", {
      method: "GET"
    });
    if (c.status != 200) {
      return alert("Cannot get server list");
    }
    var d = await c.json();
    this.ﱢ︂︊︄ = [];
    for (const c of d) {
      this.ﱢ︂︊︄[Na]({
        i: c.server_region,
        a: c.server_name,
        ﱠ︊︌︄: f[c.game_mode],
        nu: c.players,
        m: c.max_players,
        ssl: c.is_ssl
      });
    }
  };
  this.ﱟ︊︌︄ = function (c) {
    for (var d = [], e = 0; e < c[Oa]; e++) {
      if (c[e].a[E](Ob) !== -1) {
        d[Na](e);
      }
    }
    if (d[Oa] === 0) {
      return 0;
    } else {
      return d[Math[A](Math[o]() * d[Oa])];
    }
  };
  this.ﱡ︊︌︄ = function (c) {
    if (c) {
      for (var d = 0, e = 0; e < c[Oa]; e++) {
        d += c[e].nu;
      }
      var f = document[fa]("servselect");
      if (client.ﱢ︉︌︄[client.ﱟ︇︊︄] === -1) {
        client.ﱢ︉︌︄[client.ﱟ︇︊︄] = f.selectedIndex = client.ﱟ︊︌︄(c);
      } else {
        f.selectedIndex = client.ﱢ︉︌︄[client.ﱟ︇︊︄];
      }
      var g = "<label for=\"ul-id\"><button type=\"button\" class=\"ng-binding\">" + c[f.selectedIndex].a + (c[f.selectedIndex].nu > 0 ? " [" + c[f.selectedIndex].nu + " " + cc[324] + "]" : "") + "</button></label><ul role=\"listbox\" id=\"ul-id\" class=\"md-whiteframe-z1\" name=\"ul-id\"><li role=\"option\" id=\"selectDisabled\">" + cc[323] + " (" + this.ﱣ︊︌︄ + ") " + cc[325] + "</li>";
      for (e = 0; e < c[Oa]; e++) {
        g += "<li role=\"option\">" + c[e].a;
        g += " [" + c[e].nu + " " + cc[324] + "]";
        g += "</li>\n";
      }
      g += "<li role=\"option\" id=\"selectDisabled\">(" + d + ") " + cc[326] + "</li>";
      g += "</div>";
      f.innerHTML = g;
      $(".md-select").on("click", function () {
        $(this).toggleClass("active");
      });
      $(".md-select ul li").on("click", function () {
        for (var c = $(this).text(), d = -1, e = client.ﱣ︉︌︄[client.ﱟ︇︊︄], f = 0; f < e[Oa]; f++) {
          if (e[f].a + " [" + e[f].nu + " " + cc[324] + "]" === c) {
            d = f;
            break;
          }
        }
        if (d !== -1) {
          document[fa]("servselect").selectedIndex = d;
          client.ﱢ︉︌︄[client.ﱟ︇︊︄] = d;
          $(".md-select ul li").removeClass("active");
          $(this).addClass("active");
          $(".md-select label button").text(c);
        }
      });
    }
  };
  this.ﱣ︊︌︄ = 0;
  this.ﱢ︊︌︄ = function () {
    this.ﱣ︊︌︄ = 0;
    for (var d = 0; d < client.ﱢ︂︊︄[Oa]; d++) {
      if (this.ﱢ︂︊︄[d].ﱠ︊︌︄ == "experimental") {
        this.ﱣ︉︌︄[Ki.ﱣ︈︆︄][Na](this.ﱢ︂︊︄[d]);
      } else if (this.ﱢ︂︊︄[d].ﱠ︊︌︄ == "zombies") {
        this.ﱣ︉︌︄[Ki.ﱟ︇︆︄][Na](this.ﱢ︂︊︄[d]);
      } else if (this.ﱢ︂︊︄[d].ﱠ︊︌︄ == "forest") {
        this.ﱣ︉︌︄[Ki.ﱟ︈︆︄][Na](this.ﱢ︂︊︄[d]);
      } else if (this.ﱢ︂︊︄[d].ﱠ︊︌︄ == "battle-royale") {
        this.ﱣ︉︌︄[Ki.ﱡ︈︆︄][Na](this.ﱢ︂︊︄[d]);
      } else if (this.ﱢ︂︊︄[d].ﱠ︊︌︄ == "vampires") {
        this.ﱣ︉︌︄[Ki.ﱣ︇︆︄][Na](this.ﱢ︂︊︄[d]);
      } else if (this.ﱢ︂︊︄[d].ﱠ︊︌︄ == "community") {
        this.ﱣ︉︌︄[Ki.ﱢ︈︆︄][Na](this.ﱢ︂︊︄[d]);
      } else {
        this.ﱣ︉︌︄[Ki.ﱠ︈︆︄][Na](this.ﱢ︂︊︄[d]);
      }
      this.ﱣ︊︌︄ += this.ﱢ︂︊︄[d].nu;
    }
    for (d = 0; d < this.ﱣ︉︌︄[Oa]; d++) {
      if (this.ﱣ︉︌︄[d][Oa] === 0 && d != Ki.ﱢ︈︆︄) {
        this.ﱣ︉︌︄[d][Na]({
          a: cc[327],
          nu: 0,
          i: "127.0.0.1",
          p: 80
        });
      }
    }
    this.ﱣ︉︌︄[Ki.ﱢ︈︆︄] = [];
    this.ﱣ︉︌︄[Ki.ﱢ︈︆︄][Na]({
      a: "Pvp Arena Europe",
      nu: 50,
      i: c.WEBSOCKET_URL,
      ﱠ︊︌︄: "community",
      p: 80,
      m: 100,
      ssl: true
    });
    setTimeout(() => {
      this.ﱡ︊︌︄(this.ﱣ︉︌︄[0]);
    }, 1500);
    this.ﱞ︋︊︄ = function (c) {
      client.ﱟ︇︊︄ = c;
      client.ﱡ︊︌︄(client.ﱣ︉︌︄[client.ﱟ︇︊︄]);
      client.ﱡ︊︌︄(client.ﱣ︉︌︄[client.ﱟ︇︊︄]);
      document[fa]("servselect").selectedIndex = client.ﱟ︇︊︄;
    };
    setTimeout(() => {
      this.ﱞ︋︊︄(6);
    }, 2000);
  };
  this.ﱞ︋︌︄ = 0;
  this.ﱠ︋︌︄ = 0;
  this.ﱟ︋︌︄ = null;
  this.ﱣ︋︎︄ = function () {
    e.ﱠ︋︌︄++;
    e.ﱟ︀︉︄.close();
    if (e.ﱠ︋︌︄ > 3) {
      1;
      dj.ﱡ︋︌︄ = Ji.ﱣ︋︌︄;
      e.ﱢ︋︌︄(cc[300]);
      dj.waiting = false;
      if (hj.reconnect.enabled) {
        jj.ﱠ︇︉︄(dj.ﱡ︇︈︄);
      }
    } else {
      e.ﱞ︌︌︄();
    }
  };
  this.ﱠ︌︌︄ = function (c) {
    if (this.ﱡ︉︌︄ == this.ﱟ︀︉︄.ﱡ︉︌︄) {
      this.ﱡ︉︌︄++;
      this.ﱢ︋︌︄(cc[301] + c);
      jj.ﱠ︇︉︄(dj.ﱡ︇︈︄);
    }
  };
  this.ﱟ︌︌︄ = function () {
    this.ﱢ︋︌︄("You speak too much");
  };
  this.ﱡ︌︌︄ = function () {
    clearTimeout(this.ﱟ︋︌︄);
    this.ﱢ︋︌︄(cc[302]);
    dj.waiting = false;
  };
  this.ﱣ︌︌︄ = function () {
    hj.ﱠ️︈︄.open = false;
  };
  this.ﱢ︌︌︄ = function () {
    jj.ﱠ︎︊︄ = 0;
  };
  this.ﱞ︍︌︄ = function () {
    jj.ﱞ︎︊︄ = 0;
  };
  this.ﱠ︍︌︄ = function (c) {
    hj.ﱟ︋︇︄.ﱡ︋︇︄ = c;
    if (gj.ﱣ︁︇︄ > -300) {
      if (c === 0) {
        this.ﱢ︋︌︄(cc[340]);
      } else {
        this.ﱢ︋︌︄(cc[341]);
      }
    }
  };
  this.ﱠ︆︆︄ = function (c) {
    hj.ﱠ︆︆︄ = c;
  };
  this.ﱟ︍︌︄ = function (c) {
    hj.ﱞ︅︆︄ = c;
  };
  this.ﱞ︅︆︄ = function (c) {
    hj.ﱞ︌︇︄.ﱡ︋︇︄ = c;
    if (gj.ﱟ︁︇︄ > -300) {
      if (c === 0) {
        this.ﱢ︋︌︄(cc[342]);
      } else {
        this.ﱢ︋︌︄(cc[343]);
      }
    }
  };
  this.ﱡ︍︌︄ = function (c) {
    if (c === 0) {
      document[fa]("exploreForest").src = "img/forest-leaf-ok.png";
    } else if (c === 1) {
      document[fa]("exploreWinter").src = "img/winter-flake-ok.png";
    } else if (c === 2) {
      document[fa]("exploreLava").src = "img/lava-volcano-ok.png";
    } else if (c === 3) {
      document[fa]("exploreDesert").src = "img/desert-cactus-ok.png";
    }
  };
  this.ﱣ︍︌︄ = function () {
    jj.ﱟ︊︋︄ = 0;
  };
  this.ﱢ︍︌︄ = function () {
    jj.ﱟ︎︊︄ = 0;
  };
  this.ﱞ︎︌︄ = function () {
    hj.ﱞ︁︆︄.ﱠ︂︆︄ = [];
    hj.ﱞ︁︆︄.n = [];
    hj.ﱞ︁︆︄.id = -1;
    hj.ﱞ︁︆︄.ﱠ︂︉︄.stop();
    hj.ﱟ︌︉︂.ﱠ︊︆︄ = [];
    hj.ﱟ︌︉︂.ﱢ︉︆︄ = false;
    hj.ﱟ︌︉︂.ﱠ︎︌︄ = false;
    hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
    hj.ﱟ︌︉︂.id = -1;
    hj.ﱟ︌︉︂.workbench = false;
    hj.ﱟ︌︉︂.ﱟ︋︎︄ = false;
    hj.ﱟ︌︉︂.fire = false;
    hj.ﱟ︌︉︂.water = false;
    hj.ﱟ︌︉︂.ﱣ︋︎︄ = new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1, 1);
  };
  this.ﱟ︎︌︄ = function () {
    clearTimeout(this.ﱟ︋︌︄);
    this.ﱢ︋︌︄();
    dj.waiting = false;
  };
  this.ﱢ︇︉︄ = function (c) {
    for (var d = 0; d < c[Oa]; d++) {
      if (typeof c[d] == "string") {
        c[d] = Utils.ﱡ︆︋︁(c[d]);
      }
    }
    hj.ﱣ︀︉︄.ﱡ︇︉︄(c[1], c[2], c[3], c[4]);
  };
  this.message = function (c) {
    this.ﱢ︋︌︄(c);
  };
  this.ﱡ︎︌︄ = function () {
    clearTimeout(this.ﱟ︋︌︄);
    this.ﱢ︋︌︄(cc[339]);
    dj.waiting = false;
  };
  this.ﱣ︎︌︄ = function () {
    clearTimeout(this.ﱟ︋︌︄);
    this.ﱢ︋︌︄(cc[338]);
    dj.waiting = false;
  };
  this.ﱢ︎︌︄ = function () {
    clearTimeout(this.ﱟ︋︌︄);
    this.ﱢ︋︌︄(cc[304]);
    dj.waiting = false;
  };
  this.ﱞ️︌︄ = function () {
    hj.ﱞ︁︆︄.ﱞ︂︉︄(1, 0);
    jj.ﱣ︂︉︄();
  };
  this.ﱠ️︌︄ = function (c) {
    var d = c[1];
    var e = gj.players[d];
    e.ﱡ︇︆︄ = c[2];
    e.ﱟ︃︇︄ = c[3];
    e.ﱞ︃︇︄ = c[4];
    e.ﱣ︂︇︄ = c[5];
    e.ﱢ︄︈︄ = c[6];
    e.ﱞ︅︈︄ = c[7];
    e.level = c[8];
    var f = gj.ﱞ︊︅︄[d * gj.ﱡ︅︈︄];
    if (f) {
      f.ﱡ︇︆︄ = c[2];
      f.ﱟ︃︇︄ = c[3];
      f.ﱞ︃︇︄ = c[4];
      f.ﱣ︂︇︄ = c[5];
    }
  };
  this.ﱟ️︌︄ = function (c) {
    if (c === 29) {
      hj.ﱞ︁︆︄.ﱞ︂︉︄(1, 0);
      jj.ﱣ︂︉︄();
    } else {
      this.ﱡ️︌︄([0, c, 1]);
    }
    hj.ﱟ︌︉︂.ﱢ︄︋︁();
  };
  this.ﱣ️︌︄ = function (c) {
    hj.ﱢ︄︆︄.delay = 0;
    hj.ﱟ︌︉︂.ﱢ︄︉︄(c);
  };
  this.ﱢ️︌︄ = function (c) {
    hj.ﱟ︌︉︂.ﱢ︄︋︁();
  };
  this.ﱞ︀︍︄ = function (c) {
    hj.ﱢ︄︆︄.delay = 0;
    hj.ﱟ︌︉︂.ﱞ︅︉︄(c);
  };
  this.ﱢ︋︌︄ = function (c) {
    if (hj.alert.text) {
      if (c !== hj.alert.text && c !== hj.alert.list[hj.alert.list[Oa] - 1]) {
        hj.alert.list[Na](c);
      }
    } else {
      hj.alert.text = c;
    }
  };
  this.ﱠ︀︍︄ = function () {
    this.ﱢ︋︌︄(cc[305]);
  };
  this.ﱟ︀︍︄ = function () {
    var c;
    c = hj.ﱡ︃︆︄ == 0 ? cc[306] : cc[307] + (hj.ﱡ︃︆︄ + 1) + cc[308];
    this.ﱢ︋︌︄(c);
    hj.ﱡ︃︆︄++;
  };
  this.ﱡ︀︍︄ = function () {
    clearTimeout(e.ﱟ︋︌︄);
    hj.reconnect.enabled = false;
    hj.ﱠ︅︈︄ = false;
    this.ﱢ︋︌︄(cc[309]);
    jj.ﱠ︇︉︄(dj.ﱡ︇︈︄);
    this.ﱟ︀︉︄.close();
  };
  this.ﱣ︀︍︄ = function () {
    1;
    clearTimeout(this.ﱟ︋︌︄);
    this.ﱢ︋︌︄(cc[310]);
    dj.waiting = false;
  };
  this.ﱢ︀︍︄ = function () {
    1;
    clearTimeout(this.ﱟ︋︌︄);
    this.ﱢ︋︌︄(cc[311]);
    dj.waiting = false;
  };
  this.ﱞ︁︍︄ = function (c) {
    var d = c[1];
    var e = gj.players;
    e[d].nickname = c[2];
    e[d].ﱡ︇︆︄ = c[3];
    e[d].ﱟ︃︇︄ = c[4];
    e[d].ﱞ︃︇︄ = c[5];
    e[d].ﱣ︂︇︄ = c[6];
    e[d].ﱢ︄︈︄ = c[7];
    e[d].ﱞ︅︈︄ = c[8];
    e[d].level = c[9];
    e[d].ﱞ︈︆︄ = 0;
    e[d].ﱢ︇︆︄ = null;
    e[d].ﱟ︌︎︄ = null;
    e[d].ﱢ︃︇︄ = null;
    e[d].ﱠ︅︈︄ = true;
    if (Gi === 1) {
      e[d].nickname += "|" + d;
    }
  };
  this.ﱡ️︈︄ = function () {
    this.ﱟ︀︉︄[Fi](rb[Xa].stringify([11]));
  };
  this.ﱠ︁︍︄ = function () {
    this.ﱢ︋︌︄(cc[312]);
  };
  this.ﱟ︁︍︄ = function () {
    this.ﱢ︋︌︄(cc[313]);
  };
  this.ﱞ︅︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](wb[ab].stringify([21, c]));
    hj.ﱠ️︈︄.open = false;
  };
  this.ﱡ︁︍︄ = function (c) {
    for (var d = Ii[c - 1].items, e = 0; e < d[Oa] && hj.ﱞ︁︆︄[ba] > hj.ﱞ︁︆︄.ﱠ︂︆︄[Oa]; e++) {
      var f = d[e][1];
      var g = d[e][0];
      if (d[e][1] === 29) {
        hj.ﱞ︁︆︄.ﱞ︂︉︄(1, 0);
      } else {
        this.ﱡ️︌︄([0, f, g]);
      }
    }
  };
  this.ﱡ️︌︄ = function (c) {
    for (var d = c[Oa], e = hj.ﱞ︁︆︄, f = 1; f < d; f += 2) {
      for (var g = c[f], i = c[f + 1], k = 0; k < e.ﱠ︂︆︄[Oa]; k++) {
        if (e.ﱠ︂︆︄[k].id == g) {
          e.n[g] += i;
          break;
        }
      }
      if (k == e.ﱠ︂︆︄[Oa]) {
        e.n[g] = i;
        e.ﱠ︂︆︄[Na](jj.ﱞ︈︋︄[g]);
        jj.ﱣ︂︉︄();
      }
    }
    hj.ﱟ︌︉︂.update();
  };
  this.ﱟ︅︆︄ = function (c, d, e, f, g, i, k) {
    hj.ﱟ︅︆︄.ﱣ︍︈︄ = c / 100;
    hj.ﱟ︅︆︄.ﱟ︁︋︁ = d / 100;
    hj.ﱟ︅︆︄.c = e / 100;
    hj.ﱟ︅︆︄.t = f / 100;
    hj.ﱟ︅︆︄.ﱟ︃︋︁ = g / 100;
    hj.ﱟ︅︆︄.ﱣ︁︉︄ = i / 100;
    hj.ﱠ︆︆︄ = k;
  };
  this.ﱣ︁︍︄ = function (c) {
    jj.ﱠ︃︋︄.modify(c, 2);
  };
  this.ﱢ︁︍︄ = function (c) {
    jj.ﱠ︃︋︄.modify(c, 0);
  };
  this.claimed = function (c) {
    jj.ﱠ︃︋︄.modify(c, 3);
  };
  this.ﱞ︂︍︄ = function (c, d) {
    hj.ﱟ︅︆︄.ﱣ︍︈︄ = c / 100;
    hj.ﱠ︆︆︄ = d;
  };
  this.ﱠ︂︍︄ = function (c) {
    hj.ﱟ︅︆︄.t = c / 100;
  };
  this.ﱟ︂︍︄ = function (c) {
    hj.ﱟ︅︆︄.ﱟ︁︋︁ = c / 100;
  };
  this.ﱡ︂︍︄ = function (c) {
    hj.ﱟ︅︆︄.ﱣ︁︉︄ = c / 100;
  };
  this.ﱣ︂︍︄ = function (c) {
    hj.ﱟ︅︆︄.c = c / 100;
  };
  this.ﱢ︂︍︄ = function (c) {
    gj.time = c;
    gj.transition = true;
    kj.transition = 1;
  };
  this.ﱞ︊︋︄ = function () {
    document[fa]("game_body")[Z].backgroundColor = ["#133A2B", "#042b30"][gj.time];
  };
  this.ﱞ︃︍︄ = function (c) {
    if (gj.mode == Ki.ﱠ︇︆︄ && gj.players[c].nickname !== "spectator") {
      this.ﱢ︋︌︄(gj.players[c].nickname + cc[314]);
    }
    gj.players[c].ﱠ︅︈︄ = false;
  };
  this.ﱠ︃︍︄ = function (c) {
    var d = new Uint16Array(c);
    player.ﱡ︈︋︁.ﱞ︀︉︄(d[1], d[2]);
  };
  this.ﱟ︃︍︄ = function (c) {
    var d = c[1] | c[2] << 8;
    var e = c[3] | c[4] << 8;
    hj.ﱡ︈︋︁.ﱞ︀︉︄(d, e);
  };
  this.ﱡ︃︍︄ = function (c) {
    var d = c[1] | c[2] << 8;
    var e = c[3];
    var f = (c[4] >> 1) / 127 * Math[D] * 2;
    var g = gj.ﱞ︊︅︄[e * gj.ﱡ︅︈︄ + d];
    if (g && g.ﱢ︋︆︄) {
      if (kj.loaded && kj.ﱡ︇︈︄) {
        kj.ﱢ︋︆︄(c[4] & 1, SOUND_BUILD[g.type], g.x, g.y);
      }
      g.ﱢ︋︆︄.angle = f;
      g.ﱢ︋︆︄.update = f;
    }
  };
  this.ﱣ︃︍︄ = function (c) {
    var d;
    var e = c[1] | c[2] << 8;
    var f = c[3] | c[4] << 8;
    var g = (c[5] >> 1) / 127 * Math[D] * 2;
    var i = c[6];
    var k = ej.ﱡ︌︆︄[f][e];
    switch (i) {
      case 0:
        (d = k.p[0][0]).angle = g;
        d.update = true;
        break;
      case 1:
        (d = k.s[0][0]).angle = g;
        d.update = true;
        break;
      case 2:
        (d = k.s[1][0]).angle = g;
        d.update = true;
        break;
      case 3:
        (d = k.s[2][0]).angle = g;
        d.update = true;
        break;
      case 4:
        (d = k.t[0][0]).angle = g;
        d.update = true;
        break;
      case 5:
        (d = k.t[1][0]).angle = g;
        d.update = true;
        break;
      case 6:
        (d = k.t[2][0]).angle = g;
        d.update = true;
        break;
      case 7:
        (d = k.t[3][0]).angle = g;
        d.update = true;
        break;
      case 8:
        (d = k.t[4][0]).angle = g;
        d.update = true;
        break;
      case 9:
        (d = k.t[5][0]).angle = g;
        d.update = true;
        break;
      case 10:
        (d = k.g[0][0]).angle = g;
        d.update = true;
        break;
      case 11:
        (d = k.g[1][0]).angle = g;
        d.update = true;
        break;
      case 12:
        (d = k.g[2][0]).angle = g;
        d.update = true;
        break;
      case 13:
        (d = k.d[0][0]).angle = g;
        d.update = true;
        break;
      case 14:
        (d = k.d[1][0]).angle = g;
        d.update = true;
        break;
      case 15:
        (d = k.d[2][0]).angle = g;
        d.update = true;
        break;
      case 16:
        (d = k.b[0][0]).angle = g;
        d.update = true;
        break;
      case 17:
        (d = k.b[1][0]).angle = g;
        d.update = true;
        break;
      case 18:
        (d = k.b[2][0]).angle = g;
        d.update = true;
        break;
      case 19:
        (d = k.b[3][0]).angle = g;
        d.update = true;
        break;
      case 20:
        (d = k.f[0][0]).angle = g;
        d.update = true;
        break;
      case 21:
        (d = k.f[1][0]).angle = g;
        d.update = true;
        break;
      case 22:
        (d = k.f[2][0]).angle = g;
        d.update = true;
        break;
      case 23:
        (d = k.ﱢ︃︍︄[0][0]).angle = g;
        d.update = true;
        break;
      case 24:
        (d = k.ﱢ︃︍︄[1][0]).angle = g;
        d.update = true;
        break;
      case 25:
        (d = k.ﱢ︃︍︄[2][0]).angle = g;
        d.update = true;
        break;
      case 26:
        (d = k.ﱞ︄︍︄[0][0]).angle = g;
        d.update = true;
        break;
      case 27:
        (d = k.ﱞ︄︍︄[1][0]).angle = g;
        d.update = true;
        break;
      case 28:
        (d = k.ﱞ︄︍︄[2][0]).angle = g;
        d.update = true;
        break;
      case 29:
        (d = k.ﱠ︈︇︄[0][0]).angle = g;
        d.update = true;
        break;
      case 30:
        (d = k.ﱠ︈︇︄[1][0]).angle = g;
        d.update = true;
        break;
      case 31:
        (d = k.ﱠ︈︇︄[2][0]).angle = g;
        d.update = true;
        break;
      case 32:
        (d = k.a[0][0]).angle = g;
        d.update = true;
        break;
      case 33:
        (d = k.a[1][0]).angle = g;
        d.update = true;
        break;
      case 34:
        (d = k.a[2][0]).angle = g;
        d.update = true;
        break;
      case 35:
        (d = k.cs[0][0]).angle = g;
        d.update = true;
        break;
      case 36:
        (d = k.cs[1][0]).angle = g;
        d.update = true;
        break;
      case 37:
        (d = k.cs[2][0]).angle = g;
        d.update = true;
        break;
      case 38:
        (d = k.cs[3][0]).angle = g;
        d.update = true;
        break;
      case 40:
        (d = k.plm[0][0]).angle = g;
        d.update = true;
        break;
      case 41:
        (d = k.plm[1][0]).angle = g;
        d.update = true;
        break;
      case 42:
        (d = k.plm[2][0]).angle = g;
        d.update = true;
        break;
      case 50:
        (d = k.re[0][0]).angle = g;
        d.update = true;
        break;
      case 51:
        (d = k.re[1][0]).angle = g;
        d.update = true;
        break;
      case 52:
        (d = k.re[2][0]).angle = g;
        d.update = true;
        break;
      case 55:
        (d = k.c[0][0]).angle = g;
        d.update = true;
        break;
      case 56:
        (d = k.m[0][0]).angle = g;
        d.update = true;
        break;
      case 57:
        (d = k.m[1][0]).angle = g;
        d.update = true;
        break;
      case 58:
        (d = k.m[2][0]).angle = g;
        d.update = true;
    }
    if (kj.loaded && kj.ﱡ︇︈︄ && d) {
      kj.ﱢ︋︆︄(c[3] & 1, SOUND_NATURE[i], d.x, d.y);
    }
  };
  this.ﱣ︎︅︄ = function () {
    this.ﱟ︀︉︄[Fi](tb[Wa].stringify([17, hj.ﱣ︎︅︄.ﱡ︊︅︄, hj.ﱣ︎︅︄.ﱣ︊︅︄]));
  };
  this.ﱢ︍︋︄ = function (c, d) {
    this.ﱟ︀︉︄[Fi](tb[Za].stringify([22, c.ﱡ︊︅︄, c.ﱣ︊︅︄, d]));
  };
  this.ﱠ︎︋︄ = function (c, d, e) {
    if (d) {
      this.ﱟ︀︉︄[Fi](tb[Za].stringify([25, c.ﱡ︊︅︄, c.ﱣ︊︅︄, d]));
    } else {
      this.ﱟ︀︉︄[Fi](tb[Ya].stringify([24, c.ﱡ︊︅︄, c.ﱣ︊︅︄, e]));
    }
  };
  this.ﱢ︌︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](yb[$a].stringify([26, c.ﱡ︊︅︄, c.ﱣ︊︅︄]));
  };
  this.ﱞ︆︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](yb[cb].stringify([27, c]));
  };
  this.ﱡ︍︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](xb[Wa].stringify([30, c.ﱡ︊︅︄, c.ﱣ︊︅︄]));
  };
  this.ﱞ︎︋︄ = function (c, d) {
    this.ﱟ︀︉︄[Fi](wb[$a].stringify([38, c.ﱡ︊︅︄, c.ﱣ︊︅︄, d, c.type]));
  };
  this.ﱣ︍︋︄ = function (c, d) {
    this.ﱟ︀︉︄[Fi](wb[$a].stringify([12, c.ﱡ︊︅︄, c.ﱣ︊︅︄, d]));
  };
  this.ﱟ︍︋︄ = function (c, d, e) {
    this.ﱟ︀︉︄[Fi](xb[Za].stringify([8, c.ﱡ︊︅︄, c.ﱣ︊︅︄, d, e]));
  };
  this.ﱣ︌︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](yb[$a].stringify([37, c.ﱡ︊︅︄, c.ﱣ︊︅︄, c.type]));
  };
  this.ﱡ︌︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](yb[$a].stringify([23, c.ﱡ︊︅︄, c.ﱣ︊︅︄]));
  };
  this.ﱟ︌︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](yb[$a].stringify([9, c.ﱡ︊︅︄, c.ﱣ︊︅︄]));
  };
  this.ﱠ︍︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](zb[_a].stringify([15, c.ﱡ︊︅︄, c.ﱣ︊︅︄]));
  };
  this.ﱞ︍︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](Ab[ab].stringify([16, hj.id, c.ﱣ︊︅︄]));
  };
  this.ﱣ︇︋︄ = function (c) {
    e.ﱟ︀︉︄[Fi](Bb[cb].stringify([20, hj.ﱞ️︅︄.id, hj.ﱢ️︅︄[c]]));
  };
  this.ﱢ︇︋︄ = function () {
    e.ﱟ︀︉︄[Fi](Cb[db].stringify([18, hj.ﱞ️︅︄.ﱡ︊︅︄, hj.ﱞ️︅︄.id]));
  };
  this.ﱞ︇︋︄ = function () {
    e.ﱟ︀︉︄[Fi](Db[eb].stringify([19]));
  };
  this.ﱡ︇︋︄ = function () {
    e.ﱟ︀︉︄[Fi](Db[cb].stringify([35, hj.ﱞ️︅︄.id]));
    if (document[fa]("lock_team").innerHTML == "LOCK") {
      hj.ﱞ️︅︄.ﱢ︎︎︄ = 1;
      document[fa]("lock_team").innerHTML = "UNLOCK";
    } else {
      hj.ﱞ️︅︄.ﱢ︎︎︄ = 0;
      document[fa]("lock_team").innerHTML = "LOCK";
    }
  };
  this.ﱠ︀️︄ = function (c, d) {
    if (d) {
      gj.ﱞ︊︈︄();
    }
    for (var e = 1; e < c[Oa]; e += 5) {
      var f = c[e];
      var g = c[e + 1] | c[e + 2] << 8;
      var i = c[e + 3] | c[e + 4] << 8;
      var k = f * gj.ﱡ︅︈︄ + g;
      if (i & 1) {
        gj.ﱠ︊︈︄(k);
      } else {
        var m = c[e + 5];
        var n = c[e + 6] / 255 * Math[D] * 2;
        var o = c[e + 7] | c[e + 8] << 8;
        var p = c[e + 9] | c[e + 10] << 8;
        var q = c[e + 11] | c[e + 12] << 8;
        var r = c[e + 13] | c[e + 14] << 8;
        var s = c[e + 15] | c[e + 16] << 8;
        e += 12;
        if (gj.ﱞ︊︅︄[k]) {
          var t = gj.ﱞ︊︅︄[k];
          t.r.x = o;
          t.r.y = p;
          if (f != 0 && Utils.ﱡ️︊︁(t, t.r) > 200) {
            t.x = o;
            t.y = p;
          }
          if (!(t.id === hj.id && f !== 0)) {
            t.ﱟ︅︈︄ = n;
          }
          t.action |= i;
          t.info = q;
          t.ﱡ️︎︄ = r;
          t.ﱟ︊︇︄ = s;
          if (t.update) {
            t.update(i);
          }
        } else {
          var u = new Pi(m, f, g, o, p, n, i, q, r, s);
          gj.ﱞ︊︅︄[k] = u;
          gj.ﱠ︀️︄[m][Na](u);
        }
      }
    }
  };
  this.ﱡ︆︆︄ = function (c) {
    this.ﱞ︋︌︄ = oj;
    hj.ﱟ︆︆︄.init(c);
  };
  this.ﱠ︄︍︄ = function (c) {
    if (Vb !== undefined) {
      Wb = Vb;
    }
    if (c[Oa] > 0) {
      Vb = JSON.parse(JSON.stringify(Wb));
      for (var d = 0; d < c[Oa]; d++) {
        var e = c[d];
        var f = Wb[e.id];
        if (f !== undefined) {
          f.r = e.recipe;
          f.w = e.workbench;
          f.f = e.fire;
          f.ﱟ︃︋︁ = e.water;
          f.e = e.ﱟ︋︎︄;
          f.time = 1 / e.time;
        }
      }
    }
  };
  this.ﱡ︆︉︄ = function (c) {
    if (c && c[Oa] !== 0) {
      hj.ﱡ︆︉︄.message = function (c) {
        var d = document[p]("canvas");
        var e = d[T]("2d");
        for (e[ea] = "round"; c[E]("\\n") !== -1;) {
          c = c.replace("\\n", "\n");
        }
        c = c.split("\n");
        color = [];
        var f = c[Oa] * 18 + 10;
        var g = 0;
        e[U] = "14px Baloo Paaji";
        for (var i = 0; i < c[Oa]; i++) {
          if (c[i].charAt(0) === "#") {
            color[i] = c[i].substring(0, 7);
            c[i] = c[i].substring(8);
          } else {
            color[i] = "#FFFFFF";
          }
          g = Math[ba](e[ka](c[i]).width + 16, g);
        }
        d.height = f;
        d.width = g;
        i = 0;
        for (; i < c[Oa]; i++) {
          var k = zd(1, c[i], 14, color[i], null, null, null, null, null, "#000", 6);
          e[r](k, 8, i * 18 + 5);
        }
        return d;
      }(c);
    } else {
      hj.ﱡ︆︉︄.message = undefined;
    }
  };
  this.ﱡ︀︉︄ = function (c) {
    var d = gj.ﱞ︊︅︄[c[1] * gj.ﱡ︅︈︄];
    if (d) {
      if (gj.mode === Ki.ﱟ︇︆︄ && d.ﱡ︇︆︄ === Ki.ﱡ︄︆︄) {
        if (hj.ﱟ️︅︄) {
          if (Math[o]() > 0.5) {
            d.text[Na](c[2] + " ..." + ZOMBIE_GRUMBLE);
          } else {
            d.text[Na](ZOMBIE_GRUMBLE + "... " + c[2]);
          }
        } else {
          d.text[Na](ZOMBIE_GRUMBLES[Math[A](Math[o]() * ZOMBIE_GRUMBLES[Oa])]);
        }
      } else {
        d.text[Na](c[2]);
      }
    }
  };
  this.ﱟ︎︋︄ = function (c) {
    if (hj.ﱞ︁︆︄[ba] !== hj.ﱞ︁︆︄.ﱠ︂︆︄[Oa] || Wb[c].ﱠ︄︉︂ === 29 || hj.ﱞ︁︆︄.ﱢ︀︆︄(Wb[c].ﱠ︄︉︂) != -1 || hj.ﱞ︁︆︄.ﱢ︂︉︄(Wb[c].r)) {
      this.ﱟ︀︉︄[Fi](rb[Xa].stringify([7, c]));
      return 1;
    } else {
      this.ﱟ︁︍︄();
      return 0;
    }
  };
  this.workbench = function (c) {
    hj.ﱟ︌︉︂.ﱡ︄︉︄(c);
  };
  this.ﱟ︋︎︄ = function (c) {
    hj.ﱟ︌︉︂.ﱟ︋︎︄ = c;
    hj.ﱟ︌︉︂.update();
  };
  this.fire = function (c) {
    hj.ﱟ︌︉︂.fire = c;
    hj.ﱟ︌︉︂.update();
  };
  this.water = function (c) {
    hj.ﱟ︌︉︂.water = c;
    hj.ﱟ︌︉︂.update();
  };
  this.ﱟ︄︍︄ = function (c) {
    this.ﱢ︋︌︄(cc[315]);
  };
  this.ﱡ︄︍︄ = function () {
    hj.ﱟ︌︉︂.ﱢ︄︋︁();
  };
  this.ﱞ︂︆︄ = function (c) {
    jj.ﱞ︂︆︄.players = [];
    for (var d = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄], e = 0, f = 1; f < c[Oa]; f += 2) {
      var g = {
        x: Math[A](c[f] * gj.w / 250),
        y: Math[A](c[f + 1] * gj.ﱟ︁︋︁ / 250)
      };
      if (d && !e && !hj.ﱠ️︅︄ && Utils.ﱡ️︊︁(g, d) < 250) {
        e += 1;
      } else {
        jj.ﱞ︂︆︄.players[Na](g);
      }
    }
  };
  this.ﱣ︄︍︄ = function () {
    hj.ﱣ︎︅︄.open = false;
    hj.ﱞ︀︇︄.enabled = false;
    hj.ﱞ︀︇︄.delay = -1;
    hj.ﱞ︀︇︄.ﱟ︌︎︄ = null;
    hj.ﱞ︀︇︄.ﱟ︄︇︄ = null;
    hj.ﱞ︀︇︄.now = -1;
  };
  this.ﱞ︀︇︄ = function (c) {
    Ki.ﱠ︄︇︄ = c;
    hj.ﱞ︀︇︄.enabled = true;
    hj.ﱞ︀︇︄.delay = new Date().getTime();
    hj.ﱞ︀︇︄.ﱟ︌︎︄ = null;
    hj.ﱞ︀︇︄.now = -1;
    for (var d = [45, 143, 57, 0, 5, 6, 30, 19, 62, 63, 9, 13, 12, 14, 15, 33, 34, 16, 17, 18, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 92, 93, 8, 1, 3, 4, 31, 32, 55, 53, 54], e = 0; e < d[Oa]; e++) {
      var f = hj.ﱞ︁︆︄.ﱢ︀︆︄(d[e]);
      if (f != -1) {
        hj.ﱞ︁︆︄.ﱞ︃︉︄(d[Oa][e], f);
      }
    }
    hj.ﱟ︌︉︂.ﱢ︄︋︁();
  };
  this.ﱢ︄︍︄ = function (c, d, e) {
    this.ﱞ︅︍︄(c, d * 256 + e);
  };
  this.ﱞ︅︍︄ = function (c, d) {
    hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
    hj.ﱞ︁︆︄.ﱠ︃︉︄(c, d, hj.ﱞ︁︆︄.ﱢ︀︆︄(c));
    hj.ﱟ︌︉︂.update();
  };
  this.ﱠ︅︍︄ = function (c) {
    hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
    hj.ﱟ︉︆︄.ﱠ︌︎︄ = true;
    var d = hj.ﱞ︁︆︄.ﱢ︀︆︄(c);
    hj.ﱞ︁︆︄.ﱠ︃︉︄(c, 1, d);
    if (d >= 0 && !hj.ﱞ︁︆︄.n[c]) {
      hj.ﱟ︌︉︂.update();
    }
    if (c == 153) {
      hj.ﱢ️︅︄ = [hj.id];
    }
  };
  this.ﱢ︃︋︄ = function () {
    this.ﱟ︀︉︄[Fi](tb[Wa].stringify([31]));
  };
  this.ﱣ︀︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](wb[Ya].stringify([32, c.ﱠ︀︋︄, c.id]));
  };
  this.ﱣ️︊︄ = function (c, d) {
    this.ﱟ︀︉︄[Fi](wb[$a].stringify([33, c, d]));
  };
  this.ﱠ︄︉︄ = function (c, d) {
    switch (c) {
      case 189:
      case 104:
      case 110:
      case 111:
      case 139:
      case 121:
      case 127:
      case 130:
      case 136:
      case 137:
      case 183:
      case 201:
      case 227:
      case 199:
      case 203:
      case 205:
      case 186:
      case 131:
      case 132:
      case 190:
      case 191:
      case 194:
      case 193:
        hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
        this.ﱟ︀︉︄[Fi](xb[Za].stringify([5, c]));
        break;
      case 108:
      case 154:
      case 109:
      case 126:
      case 182:
      case 200:
      case 198:
      case 185:
      case 187:
      case 202:
      case 204:
      case 107:
      case 156:
      case 157:
      case 158:
      case 159:
      case 112:
      case 161:
      case 145:
      case 146:
      case 160:
      case 165:
      case 166:
      case 167:
      case 118:
      case 212:
      case 206:
      case 207:
      case 208:
      case 209:
      case 210:
      case 214:
      case 162:
      case 163:
      case 164:
      case 113:
      case 116:
      case 117:
      case 211:
      case 213:
      case 119:
      case 184:
      case 135:
      case 129:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 192:
      case 195:
      case 176:
      case 177:
      case 138:
      case 153:
      case 215:
        if (!hj.ﱟ️︅︄) {
          if (hj.ﱟ︌︉︂.ﱞ︊︆︄ === c) {
            hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
          } else {
            hj.ﱟ︌︉︂.ﱞ︊︆︄ = c;
          }
        }
        break;
      case 0:
      case 57:
      case 5:
      case 6:
      case 30:
      case 19:
      case 9:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 92:
      case 93:
      case 12:
      case 13:
      case 14:
      case 15:
      case 33:
      case Tb.ﱟ️︋︄:
      case 16:
      case 17:
      case 34:
      case 18:
        if (!hj.ﱟ️︅︄) {
          hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
          if ((e = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄]) && e.ﱢ️︎︄ === c) {
            this.ﱟ︀︉︄[Fi](yb[$a].stringify([5, 7]));
          } else {
            hj.ﱣ︉︆︄.ﱠ︌︎︄ = true;
            this.ﱟ︀︉︄[Fi](zb[_a].stringify([5, c]));
          }
        }
        break;
      case 1:
      case 8:
      case 3:
      case 4:
      case 35:
      case 36:
      case 37:
      case 28:
      case 38:
      case 39:
      case 31:
      case 32:
      case 45:
      case 46:
      case 50:
      case 51:
      case 52:
      case 55:
      case 56:
      case 53:
      case 54:
      case 89:
      case 49:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
        if (!hj.ﱟ️︅︄) {
          hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
          if ((e = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄]) && e.ﱢ️︎︄ === c) {
            this.ﱟ︀︉︄[Fi](Ab[ab].stringify([5, 7]));
          } else {
            this.ﱟ︀︉︄[Fi](Bb[cb].stringify([5, c]));
          }
        }
        break;
      case 217:
      case 218:
      case 219:
      case 233:
      case 220:
      case 221:
      case 222:
      case 223:
      case 224:
      case 91:
        if (!hj.ﱟ️︅︄) {
          hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
          var e = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
          this.ﱟ︀︉︄[Fi](Bb[cb].stringify([5, c]));
        }
        break;
      case 77:
      case 78:
      case 79:
      case 58:
      case 25:
      case 26:
      case 27:
      case 43:
      case 44:
      case 20:
      case 21:
      case 22:
      case 59:
      case 60:
      case 90:
      case 61:
      case 47:
        if ((e = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄]) && e.ﱟ︊︆︄ !== c) {
          hj.ﱡ︉︆︄.ﱠ︌︎︄ = true;
        }
        this.ﱟ︀︉︄[Fi](xb[$a].stringify([5, c]));
        break;
      case 10:
      case 83:
      case 84:
      case 86:
      case 11:
      case 40:
      case 88:
      case 82:
      case 80:
      case 81:
      case 41:
      case 42:
      case 85:
      case 23:
      case 24:
      case 48:
        this.ﱟ︀︉︄[Fi](Cb[db].stringify([5, c]));
    }
  };
  this.ﱟ︄︋︄ = function (c) {
    this.ﱟ︀︉︄[Fi](wb[Xa].stringify([6, c]));
  };
  this.ﱟ︅︍︄ = function (c) {
    hj.ﱟ︉︆︄.ﱠ︌︎︄ = true;
    var d = hj.ﱞ︁︆︄.ﱢ︀︆︄(c);
    hj.ﱞ︁︆︄.ﱞ︃︉︄(c, d);
    hj.ﱟ︌︉︂.update();
  };
  this.ﱡ︄︋︄ = function (c, d) {
    this.ﱟ︀︉︄[Fi](rb[ab].stringify([29, c]));
  };
  this.ﱢ︄︋︄ = function (c, d) {
    this.ﱟ︀︉︄[Fi](tb[Wa].stringify([28, c]));
  };
  this.ﱡ︅︍︄ = function (c) {
    hj.ﱟ︉︆︄.ﱠ︌︎︄ = true;
    var d = hj.ﱞ︁︆︄.ﱢ︀︆︄(c);
    hj.ﱞ︁︆︄.ﱠ︃︉︄(c, 1, d);
    hj.ﱟ︌︉︂.update();
  };
  this.ﱣ︅︍︄ = function (c) {
    var d = c[1];
    var e = c[2] | c[3] << 8;
    hj.ﱟ︉︆︄.ﱠ︌︎︄ = true;
    var f = hj.ﱞ︁︆︄.ﱢ︀︆︄(d);
    hj.ﱞ︁︆︄.ﱠ︃︉︄(d, e, f);
    hj.ﱟ︌︉︂.update();
  };
  this.ﱠ︌︋︄ = function () {
    this.ﱟ︀︉︄[Fi](tb[Wa].stringify([14]));
  };
  this.ﱡ︁︉︄ = function (c) {
    this.ﱟ︀︉︄.send(JSON.stringify([2, c]));
  };
  this.ﱟ︈︉︄ = function (c) {
    this.ﱟ︀︉︄[Fi](yb[$a].stringify([36, c]));
  };
  this.ﱞ︉︉︄ = function (c) {
    var d = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
    if (hj.ﱟ️︅︄) {
      if (Math[o]() > 0.5) {
        d.text[Na](c.substring(0, 25) + " ..." + ZOMBIE_GRUMBLE);
      } else {
        d.text[Na](ZOMBIE_GRUMBLE + "... " + c.substring(0, 25));
      }
    } else {
      d.text[Na](c);
    }
    this.ﱟ︀︉︄[Fi](yb[$a].stringify([0, c]));
  };
  this.ﱟ︊︈︄ = function (c) {
    var d = player.select.ﱠ︀️︄;
    if (d[Oa] != 0) {
      var e = [2];
      var f = [];
      Utils.ﱞ︀︋︁(c, {
        x: player.ﱡ︈︋︁.rx,
        y: player.ﱡ︈︋︁.ry
      });
      e[Na](c.x);
      e[Na](c.y);
      for (var g = 0; g < d[Oa]; g++) {
        f[Na](d[g].ﱢ︅︍︄);
      }
      e[Na](f);
      this.ﱟ︀︉︄[Fi](zb[_a].stringify(e));
    }
  };
  this.ﱞ︆︍︄ = 0;
  this.ﱠ︆︍︄ = {
    i: 0,
    ﱠ︌︆︄: 0
  };
  this.ﱡ︋︋︄ = function () {
    if (oj - this.ﱞ︆︍︄ > 50) {
      this.ﱞ︆︍︄ = oj;
      var c = hj.ﱡ︈︋︁;
      var d = Math[A](c.x / 100);
      var e = Math[A](c.y / 100);
      if (!(this.ﱠ︆︍︄.i == d && this.ﱠ︆︍︄.ﱠ︌︆︄ == e)) {
        this.ﱟ︀︉︄[Fi](Bb[ab].stringify([1, Math[A](-c.x), Math[A](-c.y)]));
        this.ﱠ︆︍︄.i = d;
        this.ﱠ︆︍︄.ﱠ︌︆︄ = e;
      }
    }
  };
  this.ﱟ︆︍︄ = 0;
  this.ﱟ︋︋︄ = function () {
    if (oj - this.ﱟ︆︍︄ > 60000) {
      this.ﱟ︆︍︄ = oj;
      this.ping();
    }
  };
  this.lost = function () {};
  this.ﱡ︆︍︄ = function (c) {
    this.ﱢ︋︌︄(cc[316]);
    for (var d = 1; d < c[Oa]; d++) {
      hj.ﱢ️︅︄[Na](c[d]);
    }
  };
  this.ﱣ︆︍︄ = function (c) {
    this.ﱢ︋︌︄(gj.players[c].nickname + cc[318]);
    hj.ﱢ️︅︄[Na](c);
    var d = document[fa]("team_box");
    if (jj.ﱣ️︅︄ != -1 && d[Z].display == "inline-block") {
      jj.ﱞ︀︆︄[jj.ﱣ️︅︄].action();
    }
  };
  this.ﱢ︆︍︄ = function () {
    this.ﱢ︋︌︄(cc[319]);
    hj.ﱞ️︅︄.ﱠ︌︎︄ = true;
    hj.ﱢ️︅︄ = [];
    document[fa]("team_box")[Z].display = "none";
  };
  this.ﱞ︇︍︄ = function (c) {
    if (c == hj.id) {
      this.ﱢ︋︌︄(cc[320]);
      hj.ﱞ️︅︄.ﱠ︌︎︄ = true;
      hj.ﱢ️︅︄ = [];
      document[fa]("team_box")[Z].display = "none";
    } else {
      this.ﱢ︋︌︄(gj.players[c].nickname + cc[321]);
      for (var d = 0; d < hj.ﱢ️︅︄[Oa]; d++) {
        if (hj.ﱢ️︅︄[d] == c) {
          hj.ﱢ️︅︄[u](d, 1);
          break;
        }
      }
      var e = document[fa]("team_box");
      if (jj.ﱣ️︅︄ != -1 && e[Z].display == "inline-block") {
        jj.ﱞ︀︆︄[jj.ﱣ️︅︄].action();
      }
    }
  };
  this.ﱠ︇︍︄ = function (c) {
    hj.ﱠ︅︈︄ = false;
    this.ﱢ︋︌︄(cc[322]);
    if (this.ﱡ︉︌︄ == this.ﱟ︀︉︄.ﱡ︉︌︄) {
      this.ﱡ︉︌︄++;
      jj.ﱠ︇︉︄(dj.ﱡ︇︈︄);
      this.ﱟ︀︉︄.close();
    }
  };
  this.ﱟ︇︍︄ = function (d, e) {
    hj.ﱠ︅︈︄ = false;
    var f = e[2] | e[3] << 8;
    var g = e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24;
    hj.ﱠ︎︈︄.ﱟ︎︈︄ = ec[d][Math[A](Math[o]() * ec[d][Oa])];
    hj.ﱠ︎︈︄.ﱞ︈︆︄ = Utils.ﱢ︁︋︁(gj.players[hj.id].ﱞ︈︆︄);
    hj.ﱠ︎︈︄.ﱡ︎︈︄ = Utils.ﱢ︁︋︁(g);
    hj.ﱠ︎︈︄.ﱣ︎︈︄ = f;
    this.ﱢ︋︌︄(cc[317]);
    if (this.ﱡ︉︌︄ == this.ﱟ︀︉︄.ﱡ︉︌︄) {
      this.ﱡ︉︌︄++;
      this.ﱟ︀︉︄.close();
      setTimeout(() => {
        client.connect()
      }, 250)
      c.aiptag.ﱡ︈︉︄.display[Na](function () {
        c.aipDisplayTag.display("MFN_starve-io_300x250");
      });
    }
  };
  this.ping = function () {
    this.ﱟ︀︉︄[Fi]("[13]");
  };
  this.ﱞ︋︋︄ = function () {
    if (this.ﱟ︀︉︄.readyState == 3) {
      this.ﱞ︋︌︄ -= 600000;
    }
  };
  this.ﱠ︋︋︄ = function () {
    if (nj > 15) {
      this.ﱞ︋︌︄ = oj;
    }
    if (oj - this.ﱞ︋︌︄ > 600000) {
      this.ﱞ︋︌︄ = oj;
      this.lost();
    }
  };
  this.ﱡ︇︍︄ = function (c) {
    clearTimeout(this.ﱟ︋︌︄);
    document[fa]("commandMainBoxName").innerHTML = this.ﱣ︉︌︄[this.ﱟ︇︊︄][this.ﱢ︉︌︄[this.ﱟ︇︊︄]].a;
    document[fa]("exploreForest").src = "img/forest-leaf.png";
    document[fa]("exploreWinter").src = "img/winter-flake.png";
    document[fa]("exploreDesert").src = "img/desert-cactus.png";
    document[fa]("exploreLava").src = "img/lava-volcano.png";
    this.ﱞ︋︌︄ = oj;
    hj.ﱟ︅︆︄.ﱠ︅︆︄.ﱡ︄︋︁ = hj.ﱟ︅︆︄.ﱠ︅︆︄.em;
    hj.ﱟ︅︆︄.ﱡ︅︆︄.ﱡ︄︋︁ = hj.ﱟ︅︆︄.ﱡ︅︆︄.em;
    hj.ﱟ︅︆︄.ﱣ︅︆︄.ﱡ︄︋︁ = hj.ﱟ︅︆︄.ﱣ︅︆︄.em;
    hj.ﱟ︅︆︄.ﱢ︅︆︄.ﱡ︄︋︁ = hj.ﱟ︅︆︄.ﱢ︅︆︄.em;
    hj.ﱟ︅︆︄.ﱞ︆︆︄.ﱡ︄︋︁ = hj.ﱟ︅︆︄.ﱞ︆︆︄.em;
    hj.ﱟ︅︆︄.ﱣ︍︈︄ = 1;
    hj.ﱟ︅︆︄.c = 1;
    hj.ﱟ︅︆︄.ﱟ︁︋︁ = 1;
    hj.ﱟ︅︆︄.t = 1;
    hj.ﱟ︅︆︄.ﱟ︃︋︁ = 1;
    hj.ﱟ︅︆︄.ﱣ︁︉︄ = 1;
    hj.ﱢ︁︆︄ = false;
    jj.ﱞ︉︅︄.display = 0;
    hj.ﱞ︁︆︄.ﱠ︂︆︄ = [];
    hj.ﱞ︁︆︄.n = [];
    hj.ﱞ︁︆︄[ba] = Ki.ﱢ︁︈︄;
    hj.ﱞ︁︆︄.ﱢ︁︉︄ = 0;
    hj.ﱞ︁︆︄.ﱢ︂︇︄ = 0;
    hj.ﱞ︁︆︄.id = -1;
    jj.ﱠ︎︊︄ = 1;
    jj.ﱞ︎︊︄ = 1;
    jj.ﱟ︎︊︄ = 1;
    jj.ﱟ︊︋︄ = 1;
    hj.ﱠ︅︈︄ = true;
    hj.ﱞ︁︆︄.ﱠ︂︉︄.stop();
    hj.ﱟ︌︉︂.ﱠ︊︆︄ = [];
    hj.ﱟ︌︉︂.ﱢ︉︆︄ = false;
    hj.ﱟ︌︉︂.ﱠ︎︌︄ = false;
    hj.ﱟ︌︉︂.ﱞ︊︆︄ = -1;
    hj.ﱟ︌︉︂.id = -1;
    hj.ﱟ︌︉︂.workbench = false;
    hj.ﱟ︌︉︂.ﱟ︋︎︄ = false;
    hj.ﱟ︌︉︂.fire = false;
    hj.ﱟ︌︉︂.water = false;
    hj.ﱟ︌︉︂.ﱣ︋︎︄ = new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1, 1);
    hj.ﱣ︉︆︄.ﱣ︋︎︄ = new Utils.ﱠ︃︋︁(false, 0, 1, 0, 0.1, 1);
    hj.ﱣ︉︆︄.ﱠ︌︎︄ = false;
    hj.ﱡ︉︆︄.ﱣ︋︎︄ = new Utils.ﱠ︃︋︁(false, 0, 1, 0, 0.2, 1);
    hj.ﱡ︉︆︄.ﱠ︌︎︄ = false;
    hj.ﱟ︉︆︄.ﱣ︋︎︄ = new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1, 1);
    hj.ﱟ︉︆︄.ﱠ︌︎︄ = false;
    hj.ﱞ️︅︄.id = -1;
    hj.ﱞ️︅︄.ﱡ︊︅︄ = -1;
    hj.ﱞ️︅︄.ﱠ︌︎︄ = false;
    hj.ﱞ️︅︄.ﱣ︋︎︄ = new Utils.ﱠ︃︋︁(false, 0, 1, 0, 1 / 30, 1);
    jj.ﱞ︂︆︄.marker.x = -1;
    jj.ﱞ︂︆︄.marker.y = -1;
    jj.ﱠ︆︋︄.open = false;
    jj.ﱞ︂︆︄.players = [];
    hj.ﱟ︃︉︄.enabled = false;
    gj.mode = c[1];
    if (c[20] !== undefined && c[21] !== undefined) {
      gj.ﱣ︆︅︄ = c[20];
      gj.ﱢ︆︅︄ = c[21];
      gj.w = gj.ﱣ︆︅︄ * gj.ﱠ︈︇︄;
      gj.ﱟ︁︋︁ = gj.ﱢ︆︅︄ * gj.ﱟ︈︇︄;
    }
    gj.ﱡ︈︈︄ = c[22];
    gj.ﱟ︈︈︄ = c[23];
    e.ﱡ︆︉︄(c[24]);
    e.ﱠ︄︍︄(c[25]);
    hj.ﱟ︋︇︄.ﱡ︋︇︄ = c[26];
    hj.ﱞ︅︆︄ = 0;
    hj.ﱞ︌︇︄.ﱡ︋︇︄ = c[27];
    gj.ﱡ︉︈︄(c[19]);
    gj.time = c[5];
    gj.ﱞ︉︆︄.ﱠ︉︆︄ = c[15];
    gj.ﱞ︉︆︄.init = new Date().getTime();
    jj.ﱠ︃︋︄.ﱡ︎︆︄ = c[16];
    gj.transition = false;
    hj.ﱡ︃︆︄ = c[2];
    jj.ﱠ︃︋︄[n]();
    hj.ﱢ️︅︄ = c[8];
    gj.ﱠ︀️︄[0] = [];
    gj.ﱠ︀️︄[100] = [];
    gj.ﱠ︀️︄[2] = [];
    gj.ﱠ︀️︄[1] = [];
    gj.ﱠ︀️︄[6] = [];
    gj.ﱠ︀️︄[3] = [];
    gj.ﱠ︀️︄[31] = [];
    gj.ﱠ︀️︄[37] = [];
    gj.ﱠ︀️︄[43] = [];
    gj.ﱠ︀️︄[44] = [];
    gj.ﱠ︀️︄[39] = [];
    gj.ﱠ︀️︄[40] = [];
    gj.ﱠ︀️︄[54] = [];
    gj.ﱠ︀️︄[55] = [];
    gj.ﱠ︀️︄[4] = [];
    gj.ﱠ︀️︄[7] = [];
    gj.ﱠ︀️︄[8] = [];
    gj.ﱠ︀️︄[9] = [];
    gj.ﱠ︀️︄[10] = [];
    gj.ﱠ︀️︄[15] = [];
    gj.ﱠ︀️︄[16] = [];
    gj.ﱠ︀️︄[17] = [];
    gj.ﱠ︀️︄[45] = [];
    gj.ﱠ︀️︄[46] = [];
    gj.ﱠ︀️︄[47] = [];
    gj.ﱠ︀️︄[48] = [];
    gj.ﱠ︀️︄[49] = [];
    gj.ﱠ︀️︄[53] = [];
    gj.ﱠ︀️︄[11] = [];
    gj.ﱠ︀️︄[22] = [];
    gj.ﱠ︀️︄[23] = [];
    gj.ﱠ︀️︄[5] = [];
    gj.ﱠ︀️︄[12] = [];
    gj.ﱠ︀️︄[13] = [];
    gj.ﱠ︀️︄[14] = [];
    gj.ﱠ︀️︄[60] = [];
    gj.ﱠ︀️︄[70] = [];
    gj.ﱠ︀️︄[71] = [];
    gj.ﱠ︀️︄[72] = [];
    gj.ﱠ︀️︄[73] = [];
    gj.ﱠ︀️︄[74] = [];
    gj.ﱠ︀️︄[81] = [];
    gj.ﱠ︀️︄[82] = [];
    gj.ﱠ︀️︄[87] = [];
    gj.ﱠ︀️︄[86] = [];
    gj.ﱠ︀️︄[34] = [];
    gj.ﱠ︀️︄[65] = [];
    gj.ﱠ︀️︄[66] = [];
    gj.ﱠ︀️︄[67] = [];
    gj.ﱠ︀️︄[62] = [];
    gj.ﱠ︀️︄[63] = [];
    gj.ﱠ︀️︄[78] = [];
    gj.ﱠ︀️︄[77] = [];
    gj.ﱠ︀️︄[75] = [];
    gj.ﱠ︀️︄[76] = [];
    gj.ﱠ︀️︄[64] = [];
    gj.ﱠ︀️︄[69] = [];
    gj.ﱠ︀️︄[68] = [];
    gj.ﱠ︀️︄[79] = [];
    gj.ﱠ︀️︄[89] = [];
    gj.ﱠ︀️︄[83] = [];
    gj.ﱠ︀️︄[84] = [];
    gj.ﱠ︀️︄[85] = [];
    gj.ﱠ︀️︄[80] = [];
    gj.ﱠ︀️︄[88] = [];
    gj.ﱠ︀️︄[91] = [];
    gj.ﱠ︀️︄[90] = [];
    gj.ﱠ︀️︄[61] = [];
    gj.ﱠ︀️︄[18] = [];
    gj.ﱠ︀️︄[19] = [];
    gj.ﱠ︀️︄[20] = [];
    gj.ﱠ︀️︄[21] = [];
    gj.ﱠ︀️︄[50] = [];
    gj.ﱠ︀️︄[52] = [];
    gj.ﱠ︀️︄[51] = [];
    gj.ﱠ︀️︄[29] = [];
    gj.ﱠ︀️︄[56] = [];
    gj.ﱠ︀️︄[30] = [];
    gj.ﱠ︀️︄[38] = [];
    gj.ﱠ︀️︄[33] = [];
    gj.ﱠ︀️︄[32] = [];
    gj.ﱠ︀️︄[24] = [];
    gj.ﱠ︀️︄[25] = [];
    gj.ﱠ︀️︄[26] = [];
    gj.ﱠ︀️︄[27] = [];
    gj.ﱠ︀️︄[28] = [];
    gj.ﱠ︀️︄[42] = [];
    gj.ﱠ︀️︄[41] = [];
    gj.ﱠ︀️︄[35] = [];
    gj.ﱠ︀️︄[36] = [];
    gj.ﱞ︊︅︄ = [];
    gj.ﱡ︅︈︄ = c[7];
    hj.id = c[9];
    hj.ﱠ︊︅︄ = hj.id * gj.ﱡ︅︈︄;
    if (kj.loaded) {
      kj.players[0].ﱠ︊︅︄ = hj.ﱠ︊︅︄;
      kj.players[0].ﱠ︈︌︄ = 0;
    }
    lj.ﱣ︇︍︄();
    hj.ﱡ︈︋︁.ﱞ︀︉︄(c[3], c[10]);
    gj.players = [];
    for (var d = gj.players, f = 0; f < 210; f++) {
      d[Na](new Oi());
    }
    f = 0;
    for (var g = c[4]; f < g[Oa]; f++) {
      var i = d[g[f].i];
      i.nickname = g[f].n;
      i.ﱡ︇︆︄ = g[f].s;
      i.ﱟ︃︇︄ = g[f].a;
      i.ﱢ︄︈︄ = g[f].c;
      i.ﱣ︂︇︄ = g[f].b;
      i.ﱞ︅︈︄ = g[f].d;
      i.ﱞ︃︇︄ = g[f].g;
      i.level = g[f].ﱣ︍︈︄;
      i.ﱞ︈︆︄ = Utils.ﱣ︁︋︁(g[f].p);
      i.ﱠ︅︈︄ = true;
      if (Gi === 1) {
        i.nickname += "|" + g[f].i;
      }
    }
    hj.ﱟ︆︆︄[Pa]();
    if (gj.mode === Ki.ﱠ︇︆︄ && gj.players[hj.id].nickname === "spectator") {
      hj.ﱠ️︅︄ = true;
    } else {
      hj.ﱠ️︅︄ = false;
    }
    if (gj.mode === Ki.ﱟ︇︆︄ && gj.players[hj.id].ﱡ︇︆︄ === Ki.ﱡ︄︆︄) {
      hj.ﱟ️︅︄ = true;
    } else {
      hj.ﱟ️︅︄ = false;
    }
    if (gj.mode === Ki.ﱣ︇︆︄ && gj.players[hj.id].ﱡ︇︆︄ === Ki.ﱣ︄︆︄) {
      hj.ﱠ︆︈︄ = true;
    } else {
      hj.ﱠ︆︈︄ = false;
    }
    Cookies.set("starve_token", hj.ﱣ︊︈︄);
    var k = c[14];
    if (k[29]) {
      hj.ﱞ︁︆︄.ﱞ︂︉︄(1, 0);
    }
    for (f = 0; f < k[Oa]; f++) {
      if (k[f]) {
        if (f == 29) {
          continue;
        }
        if (f == 7) {
          continue;
        }
        this.ﱡ️︌︄([0, f, k[f]]);
      }
    }
    if (c[12] === 0) {
      hj.ﱠ️︈︄.delay = 0;
      jj.ﱠ︃︋︄[Qa](c[17]);
      hj.ﱠ️︈︄.open = false;
    } else {
      if (gj.mode === Ki.ﱟ︈︆︄) {
        this.ﱡ️︌︄([0, 232, 1]);
      } else if (gj.mode === Ki.ﱣ︇︆︄) {
        if (hj.ﱠ︆︈︄) {
          this.ﱡ️︌︄([0, 184, 4]);
        } else {
          this.ﱡ️︌︄([0, 185, 3]);
        }
      }
      if (gj.mode === Ki.ﱠ︈︆︄ || gj.mode === Ki.ﱣ︇︆︄ || gj.mode === Ki.ﱣ︈︆︄ || gj.mode === Ki.ﱟ︈︆︄) {
        hj.ﱠ️︈︄.delay = new Date().getTime();
        hj.ﱠ️︈︄.open = true;
        hj.ﱠ️︈︄.value = c[13];
        jj.ﱠ️︈︄.init();
      } else {
        hj.ﱠ️︈︄.delay = 0;
        hj.ﱠ️︈︄.open = false;
        hj.ﱠ️︈︄.value = 0;
      }
    }
    hj.ﱞ︀︇︄.enabled = c[6];
    hj.ﱞ︀︇︄.delay = -1;
    hj.ﱞ︀︇︄.ﱟ︌︎︄ = null;
    hj.ﱞ︀︇︄.now = -1;
    Cookies.set("starve_token_id", hj.ﱞ︎︈︄);
    if (hj.reconnect.enabled) {
      hj.reconnect.rotate = 0;
      hj.reconnect.enabled = false;
    } else {
      dj.ﱠ︇︉︄(jj.ﱡ︇︈︄);
      if (ga) {
        ga("send", "event", "Game", "play", "S" + dj.ﱡ︇︆︄ + "A" + dj.ﱟ︃︇︄);
      }
    }
  };
  this.connect = function () {
    this.ﱠ︋︌︄ = 0;
    this.ﱞ︌︌︄();
  };
  this.ﱢ︇︍︄ = function (e) {
    e = new Uint8Array(e[va](1));
    var f = new Blob([e], {
      type: "image/png"
    });
    var g = URL.createObjectURL(f);
    var i = new Image();
    i.onload = function () {
      var e = document[p]("canvas");
      e[Z].position = "absolute";
      e[Z].zIndex = 99999;
      e[Z].left = "0px";
      e[Z].top = "0px";
      e.width = c.innerWidth;
      e.height = c.innerHeight;
      document.body.appendChild(e);
      var f = e[T]("2d");
      f[d] = "black";
      f[pa](c.innerWidth / 2, c.innerHeight / 2, 170, 80);
      f[r](this, c.innerWidth / 2, c.innerHeight / 2);
      URL.revokeObjectURL(g);
      setTimeout(() => {
        hj.ﱡ︊︈︄ = prompt("[CAPTCHA] Enter the number");
        e.remove();
      }, 250);
    };
    i.src = g;
  };
  this.ﱞ︌︌︄ = async function () {
    var d = this.ﱢ︉︌︄[this.ﱟ︇︊︄];
    var f = this.ﱣ︉︌︄[this.ﱟ︇︊︄][d].i;
    let g = "ws" + (this.ﱣ︉︌︄[this.ﱟ︇︊︄][d].ssl ? "s" : "") + "://" + f;
    this.ﱟ︀︉︄ = new c.WebSocket(g);
    this.ﱟ︀︉︄.binaryType = "arraybuffer";
    this.ﱟ︀︉︄.ﱡ︉︌︄ = this.ﱡ︉︌︄;
    this.ﱟ︀︉︄.onmessage = function (c) {
      if (this.ﱡ︉︌︄ == e.ﱡ︉︌︄) {
        if (typeof c.data == "string") {
          var d = JSON.parse(c.data);
          switch (d[0]) {
            case 0:
              e.ﱡ︀︉︄(d);
              break;
            case 1:
              e.ﱠ︌︌︄(d[1]);
              break;
            case 2:
              e.ﱞ︁︍︄(d);
              break;
            case 3:
              e.ﱡ︇︍︄(d);
              break;
            case 4:
              e.message(d[1]);
              break;
            case 5:
              e.ﱢ︇︉︄(d);
              break;
            case 6:
              e.ﱡ︆︉︄(d[1]);
              break;
            case 7:
              e.ﱢ︎︌︄();
              break;
            case 8:
              e.ﱡ︆︆︄(d);
          }
        } else {
          var f = new Uint8Array(c.data);
          switch (f[0]) {
            case 0:
              e.ﱠ︀️︄(f, false);
              break;
            case 1:
              e.ﱠ︀️︄(f, true);
              break;
            case 2:
              e.ﱡ︄︍︄();
              break;
            case 3:
              var g = f[1];
              var i = f[2] | f[3] << 8;
              e.ﱡ️︌︄([0, g, i]);
              break;
            case 5:
              e.ﱢ︀︍︄();
              break;
            case 6:
              e.ﱟ︄︍︄();
              break;
            case 7:
              e.ﱣ︃︍︄(f);
              break;
            case 8:
              e.ﱟ️︌︄(f[1]);
              break;
            case 9:
              e.ﱞ︀︍︄(f[1]);
              break;
            case 10:
              e.ﱟ︁︍︄();
              break;
            case 11:
              g = f[1];
              i = f[2] | f[3] << 8;
              e.ﱞ︅︍︄(g, i);
              break;
            case 12:
              e.workbench(f[1]);
              break;
            case 13:
              e.ﱡ︃︍︄(f);
              break;
            case 14:
              e.ﱟ︌︌︄();
              break;
            case 15:
              e.ﱞ︃︍︄(f[1]);
              break;
            case 16:
              e.ﱟ︅︆︄(f[1], f[4], f[2], f[5], f[6], f[3], f[7]);
              break;
            case 17:
              e.ﱟ︃︍︄(f);
              break;
            case 18:
              e.ﱠ︁︍︄();
              break;
            case 19:
              e.fire(f[1]);
              break;
            case 20:
              e.ﱟ︀︍︄();
              break;
            case 22:
              e.ﱢ︂︍︄(f[1]);
              break;
            case 23:
              e.ﱠ︃︍︄(c.data);
              break;
            case 24:
              e.ﱠ︅︍︄(f[1]);
              break;
            case 25:
              e.ﱟ︇︍︄(f[1], f);
              break;
            case 26:
              e.ﱞ︂︆︄(f);
              break;
            case 27:
              e.ﱡ︀︍︄();
              break;
            case 28:
              e.ﱞ︀︇︄(f[1]);
              break;
            case 29:
              e.ﱣ︄︍︄();
              break;
            case 30:
              e.ﱠ︇︍︄();
              break;
            case 31:
              e.ﱡ︆︍︄(f);
              break;
            case 32:
              e.ﱞ︇︍︄(f[1]);
              break;
            case 33:
              e.ﱣ︆︍︄(f[1]);
              break;
            case 34:
              e.ﱢ︆︍︄();
              break;
            case 35:
              e.ﱡ︁︍︄(f[1]);
              break;
            case 36:
              e.water(f[1]);
              break;
            case 37:
              e.ﱞ︂︍︄(f[1], f[2]);
              break;
            case 38:
              e.ﱟ︂︍︄(f[1]);
              break;
            case 39:
              e.ﱠ︂︍︄(f[1]);
              break;
            case 40:
              e.ﱞ️︌︄();
              break;
            case 41:
              e.ﱠ️︌︄(f);
              break;
            case 42:
              e.ﱣ︁︍︄(f[1]);
              break;
            case 43:
              e.ﱢ︁︍︄(f[1]);
              break;
            case 44:
              e.claimed(f[1]);
              break;
            case 45:
              e.ﱣ️︌︄(f[1]);
              break;
            case 46:
              e.ﱢ️︌︄(f[1]);
              break;
            case 47:
              e.ﱟ︋︎︄(f[1]);
              break;
            case 48:
              e.ﱠ︀︍︄();
              break;
            case 50:
              e.ﱢ︄︍︄(f[1], f[2], f[3]);
              break;
            case 51:
              e.ﱣ︀︍︄();
              break;
            case 52:
              e.ﱟ︅︍︄(f[1]);
              break;
            case 53:
              e.ﱡ︅︍︄(f[1]);
              break;
            case 54:
              e.ﱞ︈︍︄();
              break;
            case 55:
              e.ﱡ︂︍︄(f[1]);
              break;
            case 56:
              e.ﱣ︂︍︄(f[1]);
              break;
            case 57:
              e.ﱣ︎︌︄();
              break;
            case 58:
              e.ﱡ︎︌︄();
              break;
            case 59:
              e.ﱞ︎︌︄();
              break;
            case 60:
              e.ﱣ︌︌︄();
              break;
            case 61:
              hj.ﱡ︈︋︁.ﱟ️︈︄ = 0.2;
              hj.ﱡ︈︋︁.delay = 3;
              break;
            case 62:
              e.ﱣ︅︍︄(f);
              break;
            case 63:
              e.ﱞ︍︌︄();
              break;
            case 64:
              e.ﱢ︌︌︄();
              break;
            case 65:
              e.ﱢ︍︌︄();
              break;
            case 66:
              e.ﱣ︍︌︄();
              break;
            case 67:
              e.ﱡ︍︌︄(f[1]);
              break;
            case 68:
              e.ﱠ︍︌︄(f[1]);
              break;
            case 69:
              e.ﱞ︅︆︄(f[1]);
              break;
            case 70:
              e.ﱟ︍︌︄(f[1]);
              break;
            case 71:
              e.ﱠ︆︆︄(f[1]);
              break;
            case 105:
              e.ﱢ︇︍︄(f);
          }
        }
      }
    };
    this.ﱟ︀︉︄.onopen = function () {
      setTimeout(() => {
        clearTimeout(e.ﱟ︋︌︄);
        hj.ﱠ︈︍︄ = hj.ﱠ︈︍︄ || Utils.ﱞ️︊︁("token");
        hj.ﱣ︊︈︄ = String(hj.ﱣ︊︈︄) === "null" || String(hj.ﱣ︊︈︄) === "undefined" ? Utils.ﱣ︅︋︁(14) : hj.ﱣ︊︈︄;
        hj.ﱞ︎︈︄ = String(hj.ﱞ︎︈︄) === "null" || String(hj.ﱞ︎︈︄) === "undefined" ? Utils.ﱣ︅︋︁(14) : hj.ﱞ︎︈︄;
        client.ﱟ︀︉︄[Fi](Db[db].stringify([dj.nickname.input.value, screen.width + 200, screen.height + 200, 4, hj.ﱣ︊︈︄, hj.ﱞ︎︈︄, hj.reconnect.enabled ? 1 : 0, dj.ﱡ︇︆︄, dj.ﱟ︃︇︄, dj.ﱢ︂︇︄, dj.ﱣ︂︇︄, dj.ﱢ︄︈︄, dj.ﱞ︅︈︄, xj === undefined ? 0 : xj, wj === undefined ? 0 : wj.substring(wj[Oa] - 50), Hi, hj.ﱠ︈︍︄, c.loginKey, hj.ﱡ︊︈︄]));
        hj.ﱠ︈︍︄ = undefined;
        hj.ﱡ︊︈︄ = null;
        e.ﱟ︋︌︄ = setTimeout(e.ﱣ︋︎︄, 2000);
      }, 2000);
    };
    this.ﱟ︀︉︄.onclose = function () {
      clearTimeout(e.ﱟ︋︌︄);
      dj.waiting = false;
    };
  };
}();
var gj;
var hj;
var ij;
var jj = {
  ﱢ︈︋︁: false
};
var kj = new function () {
  this.ﱡ︇︈︄ = 0;
  this.loaded = 0;
  this.transition = 0;
  this.ﱡ︅︌︄ = function (c) {
    return c / gj.w * 100;
  };
  this.ﱣ︅︌︄ = function (c) {
    return c / gj.ﱟ︁︋︁ * 100;
  };
  this.ﱠ︉︌︄ = function (c, d) {
    c = this.ﱡ︅︌︄(c) - this.ﱟ︈︍︄.x;
    return this.ﱟ︈︍︄.x + d * c;
  };
  this.ﱟ︉︌︄ = function (c, d) {
    c = Math[t](this.ﱣ︅︌︄(c) - this.ﱟ︈︍︄.y);
    return this.ﱟ︈︍︄.y + d * c;
  };
  this.sample = {};
  this.ﱡ︈︌︄ = {};
  this.ﱞ︄︇︄ = {};
  this.ﱡ︈︍︄ = function (c, d, e, f) {
    for (var g = 0; g < d[Oa]; g++) {
      var i = d[g];
      if (!c.ﱟ︅︌︄(i)) {
        c.ﱟ︅︇︄(e, f, -0.5, i);
        c.play(i);
        return true;
      }
    }
    return false;
  };
  this.ﱢ︋︆︄ = function (c, d, e, f) {
    e = this.ﱠ︉︌︄(e, 4);
    f = this.ﱟ︉︌︄(f, 4);
    if (c) {
      if (d === 1) {
        this.ﱡ︈︍︄(this.ﱞ︄︇︄.ﱣ︃︌︄, this.sample.ﱣ︃︌︄, e, f);
      } else if (d === 0) {
        this.ﱡ︈︍︄(this.ﱞ︄︇︄.ﱡ︃︌︄, this.sample.ﱡ︃︌︄, e, f);
      }
    } else {
      this.ﱡ︈︍︄(this.ﱞ︄︇︄.hand, this.sample.hand, e, f);
    }
  };
  this.ﱟ︈︍︄ = {
    x: 0,
    y: 0
  };
  this.ﱣ︈︍︄ = {
    x: 0,
    y: 0
  };
  this.ﱢ︈︍︄ = {};
  this.players = [];
  this.ﱣ︈︌︄ = function (c, d) {
    for (var e in this.ﱢ︈︍︄) {
      var f = this.ﱢ︈︍︄[e];
      f.check(c);
      if (f.ﱞ︅︌︄) {
        if (gj.ﱞ︉︆︄.now < 460000) {
          f.effect();
        }
        if (d) {
          f.update(c, this.ﱟ︈︍︄);
        }
        if (this.transition) {
          f.transition();
        }
      }
    }
    if (this.transition) {
      this.transition = 0;
    }
  };
  this.ﱞ︉︍︄ = function () {
    for (var c = [], d = 0; d < this.players[Oa]; d++) {
      if ((g = this.players[d]).ﱠ︈︌︄) {
        c[Na](d);
      } else if (!(g.ﱠ︈︌︄ || gj.ﱞ︊︅︄[g.ﱠ︊︅︄])) {
        g.ﱞ︉︌︄();
        c[Na](d);
      }
    }
    for (var e = gj.ﱠ︀️︄[0], f = (d = 0, 0); d < e[Oa] && f < c[Oa]; d++) {
      var g = e[d];
      if (!(gj.mode == Ki.ﱠ︇︆︄ && gj.players[g.id].nickname === "spectator" || g.ﱠ︇︈︄ !== -1 || g.ﱠ︊︅︄ === hj.ﱠ︊︅︄)) {
        this.players[c[f]].init(g.ﱠ︊︅︄);
        f++;
      }
    }
  };
  this.ﱠ︉︍︄ = function () {
    this.ﱞ︉︍︄();
    for (var c = 0; c < this.players[Oa]; c++) {
      var d = this.players[c];
      if (!d.ﱠ︈︌︄ && d.check()) {
        d.update();
      }
    }
  };
  this.ﱟ︉︍︄ = function (c) {
    if (this.ﱣ︈︍︄.x === c.x && this.ﱣ︈︍︄.y === c.y) {
      return 0;
    } else {
      this.ﱣ︈︍︄.x = c.x;
      this.ﱣ︈︍︄.y = c.y;
      this.ﱟ︈︍︄.x = this.ﱡ︅︌︄(c.x);
      this.ﱟ︈︍︄.y = this.ﱣ︅︌︄(c.y);
      Howler.ﱟ︅︇︄(this.ﱟ︈︍︄.x, this.ﱟ︈︍︄.y, 0);
      return 1;
    }
  };
  this.ﱣ︋︋︄ = function () {
    if (this.ﱡ︇︈︄ && this.loaded) {
      var c = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];
      if (c) {
        c.ﱠ︇︈︄ = 0;
        var d = this.ﱟ︉︍︄(c);
        if (gj.mode !== Ki.ﱟ︇︆︄ && gj.mode !== Ki.ﱟ︈︆︄ && gj.mode !== Ki.ﱡ︈︆︄) {
          this.ﱣ︈︌︄(c, d);
        }
        this.ﱠ︉︍︄();
      }
    }
  };
  this.ﱡ︉︍︄ = function () {
    for (var c in _i) {
      var d = _i[c];
      if (typeof d == "object" && d.path) {
        d.ﱟ︀︌︄ = new Howl({
          src: d.path,
          volume: 0,
          ﱡ︀︌︄: d.ﱡ︀︌︄
        });
      }
      for (var e in d.sample) {
        for (var f = d.sample[e], g = [], i = 0; i < f; i++) {
          var k = d.ﱟ︀︌︄.play(e);
          d.ﱟ︀︌︄.stop(k);
          d.ﱟ︀︌︄.on("fade", function (c) {
            if (!this.volume(c)) {
              this.stop(c);
            }
          }, k);
          g[Na](k);
        }
        if (g[Oa] > 1) {
          kj.sample[e] = g;
        } else {
          kj.sample[e] = g[0];
        }
        kj.ﱞ︄︇︄[e] = d.ﱟ︀︌︄;
      }
    }
  };
  this.ﱣ︉︍︄ = function (c, d, e) {
    for (var f = 0; f < c[Oa]; f++) {
      d.volume(e, c[f]);
    }
  };
  this.ﱢ︉︍︄ = function (c, d, e, f, g, i) {
    for (var k = c, m = 0; m < e; m++) {
      var n = k[m] = [];
      for (j = 0; j < f; j++) {
        n[j] = kj.sample[g + j][m];
        d.ﱟ︀︌︄.volume(i, n[j]);
      }
    }
  };
  this.init = function () {
    kj.ﱡ︉︍︄();
    kj.ﱡ︈︌︄.ﱟ︈︌︄ = [];
    kj.ﱡ︈︌︄.ﱣ︉︆︄ = [];
    kj.ﱡ︈︌︄.ﱠ︍︆︄ = [];
    kj.ﱢ︉︍︄(kj.ﱡ︈︌︄.ﱟ︈︌︄, _i.ﱠ︁︌︄, 8, 3, "p", 0.15);
    kj.ﱢ︉︍︄(kj.ﱡ︈︌︄.ﱣ︉︆︄, _i.ﱡ︁︌︄, 8, 4, "w", 0.15);
    kj.ﱢ︉︍︄(kj.ﱡ︈︌︄.ﱠ︍︆︄, _i.ﱠ︀︌︄, 8, 3, "d", 0.09);
    kj.ﱣ︉︍︄(kj.sample.hand, kj.ﱞ︄︇︄.hand, 0.15);
    kj.ﱣ︉︍︄(kj.sample.ﱡ︃︌︄, kj.ﱞ︄︇︄.ﱡ︃︌︄, 0.2);
    kj.ﱣ︉︍︄(kj.sample.ﱣ︃︌︄, kj.ﱞ︄︇︄.ﱣ︃︌︄, 1);
    kj.ﱢ︈︍︄.ﱞ︊︍︄ = new aj(12, this.sample.ﱟ︂︌︄, this.sample.ﱠ︂︌︄, 5000, 0.05, 0.4, _i.ﱢ︁︌︄.ﱟ︀︌︄, 3000, {
      x: Rb.ﱠ︊︍︄,
      y: Rb.ﱟ︊︍︄,
      w: gj.w,
      ﱟ︁︋︁: gj.ﱟ︁︋︁
    }, {
      x: Rb.ﱠ︊︍︄ - 2300,
      y: Rb.ﱟ︊︍︄ - 4000,
      w: gj.w,
      ﱟ︁︋︁: gj.ﱟ︁︋︁
    }, {
      x: Rb.ﱠ︊︍︄ - 1500,
      y: Rb.ﱟ︊︍︄ - 2000,
      w: gj.w,
      ﱟ︁︋︁: gj.ﱟ︁︋︁
    });
    kj.ﱢ︈︍︄.ﱡ︊︍︄ = new aj(12, this.sample.ﱣ︂︌︄, this.sample.ﱡ︂︌︄, 5000, 0.03, 0.25, _i.ﱢ︁︌︄.ﱟ︀︌︄, 3000, {
      x: 0,
      y: Rb.ﱟ︊︍︄ + 800,
      w: Rb.ﱠ︊︍︄ - 2300,
      ﱟ︁︋︁: gj.ﱟ︁︋︁
    }, {
      x: -100,
      y: Rb.ﱟ︊︍︄ - 300,
      w: Rb.ﱠ︊︍︄ - 100,
      ﱟ︁︋︁: gj.ﱟ︁︋︁
    }, {
      x: -100,
      y: Rb.ﱟ︊︍︄ + 400,
      w: Rb.ﱠ︊︍︄ - 1400,
      ﱟ︁︋︁: gj.ﱟ︁︋︁
    });
    kj.ﱢ︈︍︄.ﱟ︃︌︄ = new aj(12, this.sample.ﱞ︃︌︄, this.sample.ﱢ︂︌︄, 5000, 0.01, 0.22, _i.ﱢ︁︌︄.ﱟ︀︌︄, 3000, {
      x: -100,
      y: -100,
      w: gj.w + 200,
      ﱟ︁︋︁: Rb.ﱟ︊︍︄ - 1000
    }, {
      x: -100,
      y: -100,
      w: gj.w + 200,
      ﱟ︁︋︁: Rb.ﱟ︊︍︄ + 600
    }, {
      x: -100,
      y: -100,
      w: gj.w + 200,
      ﱟ︁︋︁: Rb.ﱟ︊︍︄ + 100
    });
    for (var c = 0; c < 8; c++) {
      kj.players[c] = new cj(c);
    }
    kj.players[0].init(hj.ﱠ︊︅︄);
    kj.loaded = 1;
  };
  this.ﱣ︊︍︄ = function () {
    if (!this.transition && gj.ﱞ︉︆︄.now < 460000) {
      this.transition = 1;
    }
  };
  this.ﱠ︇︉︄ = function () {
    if (this.ﱡ︇︈︄ && this.loaded) {
      for (var c in kj.sample) {
        var d = kj.sample[c];
        if (typeof d == "object") {
          for (var e = 0; e < d[Oa]; e++) {
            kj.ﱞ︄︇︄[c].stop(d[e]);
          }
        } else {
          kj.ﱞ︄︇︄[c].stop(d);
        }
      }
      for (e = 0; e < kj.players[Oa]; e++) {
        kj.players[e].ﱞ︉︌︄();
      }
    }
  };
  this.select = function () {
    if (kj.ﱡ︇︈︄) {
      kj.ﱠ︇︉︄();
    } else {
      if (!kj.loaded) {
        kj.init();
      }
      kj.players[0].ﱠ︊︅︄ = hj.ﱠ︊︅︄;
      kj.players[0].ﱠ︈︌︄ = 0;
      kj.ﱣ︊︍︄();
    }
    kj.ﱡ︇︈︄ = !kj.ﱡ︇︈︄;
  };
}();
var lj = new function () {
  this.ﱡ︁︊︄ = function () {
    this.ﱠ︉︇︄ = 81;
    this.ﱢ︈︇︄ = 68;
    this.ﱡ︉︇︄ = 90;
    this.ﱢ︊︍︄ = 83;
  };
  this.ﱣ︁︊︄ = function () {
    this.ﱠ︉︇︄ = 65;
    this.ﱢ︈︇︄ = 68;
    this.ﱡ︉︇︄ = 87;
    this.ﱟ︉︇︄ = 83;
  };
  this.ﱞ︋︍︄ = 0;
  this.ﱢ︊︍︄ = 1;
  this.ﱠ︋︍︄ = 49;
  this.ﱟ︋︍︄ = 50;
  this.ﱡ︋︍︄ = 51;
  this.ﱣ︋︍︄ = 52;
  this.ﱢ︋︍︄ = 53;
  this.ﱞ︌︍︄ = 17;
  this.ﱠ︌︍︄ = 37;
  this.ﱟ︌︍︄ = 39;
  this.ﱡ︌︍︄ = 38;
  this.ﱣ︌︍︄ = 40;
  this.ﱢ︌︍︄ = 32;
  this.ﱞ︍︍︄ = 82;
  this.ﱠ︍︍︄ = 71;
  this.ﱟ︍︍︄ = 86;
  this.ﱡ︍︍︄ = 66;
  this.ﱣ︁︊︄();
  this[Ma] = new Array(255);
  for (var c = 0; c < 255; c++) {
    this[Ma][c] = this.ﱞ︋︍︄;
  }
  this.ﱟ️︆︄ = function (c) {
    var d = Math[ta](c.charCode || c.keyCode, 255);
    this[Ma][d] = this.ﱞ︋︍︄;
  };
  this.ﱢ️︊︄ = function (c) {
    var d = Math[ta](c.charCode || c.keyCode, 255);
    if (d == this.ﱠ︉︇︄ || d == this.ﱠ︌︍︄) {
      this.ﱣ︍︍︄();
    } else if (d == this.ﱡ︉︇︄ || d == this.ﱡ︌︍︄) {
      this.ﱢ︍︍︄();
    } else if (d == this.ﱢ︊︍︄ || d == this.ﱞ︎︍︄) {
      this.ﱠ︎︍︄();
    } else if (!(d != this.ﱢ︈︇︄ && d != this.ﱟ︌︍︄)) {
      this.ﱟ︎︍︄();
    }
    this[Ma][d] = this.ﱢ︊︍︄;
    return d;
  };
  this.ﱣ︍︍︄ = function () {
    this[Ma][this.ﱢ︈︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱟ︌︍︄] = this.ﱞ︋︍︄;
  };
  this.ﱟ︎︍︄ = function () {
    this[Ma][this.ﱠ︉︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱠ︌︍︄] = this.ﱞ︋︍︄;
  };
  this.ﱠ︎︍︄ = function () {
    this[Ma][this.ﱡ︉︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱡ︌︍︄] = this.ﱞ︋︍︄;
  };
  this.ﱢ︍︍︄ = function () {
    this[Ma][this.ﱟ︉︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱣ︌︍︄] = this.ﱞ︋︍︄;
  };
  this.ﱣ︇︍︄ = function () {
    this[Ma][this.ﱢ︈︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱟ︌︍︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱠ︉︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱠ︌︍︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱡ︉︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱡ︌︍︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱟ︉︇︄] = this.ﱞ︋︍︄;
    this[Ma][this.ﱣ︌︍︄] = this.ﱞ︋︍︄;
  };
  this.ﱢ︀︉︄ = function () {
    return this[Ma][this.ﱠ︉︇︄] || this[Ma][this.ﱠ︌︍︄];
  };
  this.ﱞ︁︉︄ = function () {
    return this[Ma][this.ﱢ︈︇︄] || this[Ma][this.ﱟ︌︍︄];
  };
  this.ﱠ︁︉︄ = function () {
    return this[Ma][this.ﱡ︉︇︄] || this[Ma][this.ﱡ︌︍︄];
  };
  this.ﱟ︁︉︄ = function () {
    return this[Ma][this.ﱟ︉︇︄] || this[Ma][this.ﱣ︌︍︄];
  };
  this.ﱡ︎︍︄ = function () {
    return this[Ma][this.ﱞ︌︍︄];
  };
  this.ﱣ︎︍︄ = function () {
    return this[Ma][this.ﱠ︋︍︄];
  };
  this.ﱢ︎︍︄ = function () {
    return this[Ma][this.ﱟ︋︍︄];
  };
  this.ﱞ️︍︄ = function () {
    return this[Ma][this.ﱡ︋︍︄];
  };
  this.ﱠ️︍︄ = function () {
    return this[Ma][this.ﱣ︋︍︄];
  };
  this.ﱟ️︍︄ = function () {
    return this[Ma][this.ﱢ︌︍︄];
  };
  this.ﱡ️︍︄ = function () {
    return this[Ma][this.ﱞ︍︍︄];
  };
  this.ﱣ️︍︄ = function () {
    return this[Ma][this.ﱠ︍︍︄];
  };
  this.ﱢ️︍︄ = function () {
    return this[Ma][this.ﱟ︍︍︄];
  };
  this.ﱞ︀︎︄ = function () {
    return this[Ma][this.ﱡ︍︍︄];
  };
}();
var mj = new function () {
  this.ﱢ︊︍︄ = 0;
  this.ﱞ︋︍︄ = 1;
  this.IDLE = 2;
  this.ﱠ︀︎︄ = 0;
  this.ﱟ︀︎︄ = 1;
  this.ﱟ︅︇︄ = {
    x: 0,
    y: 0
  };
  this.ﱡ︀︎︄ = 0;
  this.ﱣ︀︎︄ = 0;
  this.angle = 0;
  this.state = this.IDLE;
  this.ﱡ️︊︁ = this.ﱠ︀︎︄;
  this.ﱢ️︊︄ = function () {
    this.state = this.ﱢ︊︍︄;
  };
  this.ﱟ️︆︄ = function () {
    this.state = this.ﱞ︋︍︄;
  };
  this.update = function () {
    return (this.ﱟ︅︇︄.x != this.ﱡ︀︎︄ || this.ﱟ︅︇︄.y != this.ﱣ︀︎︄) && (this.ﱡ︀︎︄ = this.ﱟ︅︇︄.x, this.ﱣ︀︎︄ = this.ﱟ︅︇︄.y, true);
  };
}();
var nj = 0;
var oj = 0;
var pj = new function (d, e, f) {
  this.ﱢ︆︆︄ = d;
  this.ﱞ︇︆︄ = e;
  this.ﱢ︀︎︄ = {
    translate: {
      x: 0,
      y: 0
    },
    [Z]: document[fa]("loading")[Z],
    update: function () {
      this[Z].left = this.translate.x + "px";
      this[Z].top = Math[A](this.translate.y) + "px";
    }
  };
  this.ﱢ︀︎︄[Z].position = "absolute";
  this.ﱢ︀︎︄[Z].display = "inline-block";
  this.ﱢ︀︎︄.update();
  this.ﱢ︈︋︁ = true;
  this.stop = function () {
    this.ﱢ︈︋︁ = false;
  };
  this.loading = {
    total: 1
  };
  var g = this;
  var i = function () {};
  var k = 0;
  function m(c) {
    if (c[E]("normal-mode") !== -1 || c[E]("player0") !== -1) {
      return 1;
    } else if (c[E]("day-bag") !== -1 || c[E]("night-bag") !== -1 || c[E]("day-book") !== -1 || c[E]("night-book") !== -1 || c[E]("day-player") !== -1 || c[E]("night-player") !== -1 || c[E]("day-accessory") !== -1 || c[E]("night-accessory") !== -1 || c[E]("day-crate") !== -1 || c[E]("night-crate") !== -1 || c[E]("day-skin") !== -1 || c[E]("night-skin") !== -1 || c[E]("day-river") !== -1 || c[E]("night-river") !== -1 || c[E]("day-river") !== -1 || c[E]("night-river") !== -1 || c[E]("day-rock") !== -1 || c[E]("night-rock") !== -1 || c[E]("day-flower") !== -1 || c[E]("night-flower") !== -1 || c[E]("day-leaf") !== -1 || c[E]("night-leaf") !== -1 || c[E]("day-herb") !== -1 || c[E]("night-herb") !== -1 || c[E]("day-shell") !== -1 || c[E]("night-shell") !== -1 || c[E]("day-hand-skin") !== -1 || c[E]("night-hand-skin") !== -1 || c[E]("bignight") !== -1 || c[E]("bigday") !== -1 || c[E]("bigzday") !== -1 || c[E]("bigznight") !== -1 || c[E]("tutorial-box") !== -1 || c[E]("tuto-") !== -1 || c[E]("-leaderboard-") !== -1 || c[E]("-lead-") !== -1 || c[E]("day-lava-") !== -1 || c[E]("night-lava-") !== -1 || c[E]("-click.png") !== -1 || c[E]("-in.png") !== -1 || c[E]("-fog") !== -1 || c[E]("-lava") !== -1 || c[E]("pebblecompo") !== -1 || c[E]("avatar-player") !== -1) {
      return 0;
    } else {
      return 1;
    }
  }
  this.ﱞ︁︎︄ = function () {
    g.update();
    if (++k == 40) {
      g.stop();
      return void i();
    }
    c.setTimeout(g.ﱞ︁︎︄, 33);
  };
  this.ﱠ︇︉︄ = function (c) {
    i = c;
    g.ﱞ︁︎︄();
  };
  new Date().getTime();
  Object[Ma](IMAGES)[Oa];
  for (var n in IMAGES) {
    if (m(IMAGES[n]) === 0) {
      0;
    }
  }
  var o = function () {
    if (this.ﱡ︇︋︁ !== 0) {
      return this.ﱡ︇︋︁;
    } else {
      this.ﱡ︇︋︁ = 2;
      this.src = this.ﱞ︁︋︄;
      return 0;
    }
  };
  var p = function (c) {
    this.ﱡ︇︋︁ = 1;
  };
  var q = 0;
  var r = function () {
    let c = async () => {
      !function () {
        if (q !== 1) {
          q = 1;
          if (fc !== Xb) {
            Xb();
          }
          fc();
          var c = Utils.ﱞ️︊︁("server");
          if (c !== null) {
            client.ﱣ︆︊︄ = 1;
            client.ﱢ︂︊︄ = [{
              nu: 0,
              m: 100,
              i: "server" + c + ".starve.io",
              p: 443,
              a: "Private Server " + c,
              ssl: 1
            }];
          }
          client.ﱢ︊︌︄();
          setTimeout(f, 100);
        }
      }();
    };
    if (document.fonts && document.fonts.check) {
      if (document.fonts.check("1em Baloo Paaji")) {
        setTimeout(c, 100);
      } else {
        setTimeout(r, 100);
      }
    } else {
      setTimeout(c, 1000);
    }
  };
  var s = function () {
    var c = this.src;
    var d = m(c) === 0 ? 10000 : 2000;
    setTimeout(function () {
      for (var d in DUMP_IMAGES) {
        if (c[E](DUMP_IMAGES[d]) !== -1) {
          IMAGES[d] = new Image();
          IMAGES[d].onload = p;
          IMAGES[d].onerror = s;
          IMAGES[d].src = c;
          break;
        }
      }
    }, d);
  };
  function t(d) {
    for (var e in IMAGES) {
      var f = IMAGES[e];
      if (typeof f == "string") {
        if (m(f) === d) {
          IMAGES[e] = new Image();
          IMAGES[e].ﱡ︇︋︁ = 0;
          IMAGES[e].onload = p;
          IMAGES[e].onerror = s;
          IMAGES[e].ﱞ︇︅︄ = o;
          if (c.location.protocol !== "https:") {
            IMAGES[e].ﱞ︁︋︄ = f;
          } else {
            IMAGES[e].ﱞ︁︋︄ = "https://starve.io/" + f;
          }
        }
      }
    }
  }
  t(1);
  t(0);
  zd(1, "l", 20, "#000");
  r();
  Vf();
  this.update = function () {
    this.ﱢ︀︎︄.translate.x = (hb - 500) / 2;
    this.ﱢ︀︎︄.translate.y = (ib - 150) / 2;
    var c = 2500 / (40 - k + 1) - 48;
    this.ﱢ︀︎︄.translate.y -= c;
    this.ﱢ︀︎︄.update();
  };
  this.ﱢ︀︎︄.update();
  this.draw = function () {
    try {
      Xf();
    } catch (c) {}
    this.update();
  };
}(fb, gb, function () {
  Wf();
  jj = new Ui(fb, gb);
  dj = new Ti(fb, gb);
  ij = new Xi(fb, gb);
  gj = new Qi();
  hj = new Si();
  pj.ﱠ︇︉︄(function () {
    pj.ﱢ︀︎︄[Z].display = "none";
    dj.ﱡ︇︈︄();
  });
});
function qj() {
  c.YMPB.refresh();
}
c.onbeforeunload = function () {
  if (jj.ﱢ︈︋︁) {
    return "Are you sure you want quit starve.io ;-; ?";
  }
};
Ib();
(function e(d) {
  c[v](e);
  nj = (d - oj) / 1000;
  oj = d;
  nj = nj > 1 ? 1 : nj;
  if (jj.ﱢ︈︋︁) {
    jj.draw();
  } else {
    gb[Ea](0, 0, hb, ib);
    if (pj.ﱢ︈︋︁) {
      pj.draw();
    } else if (dj.ﱢ︈︋︁) {
      dj.draw();
    } else if (ij.ﱢ︈︋︁) {
      ij.draw();
    }
  }
})(0);
if (c.YMPB) {
  isYolla = 1;
} else {
  c.YMPB = c.YMPB || {};
  isYolla = 0;
}
c.YMPB.que = c.YMPB.que || [];
c.aiptag = c.aiptag || {};
c.aiptag.consented = true;
c.aiptag.ﱡ︈︉︄ = c.aiptag.ﱡ︈︉︄ || [];
c.aiptag.ﱡ︈︉︄.display = c.aiptag.ﱡ︈︉︄.display || [];
c.aiptag.ﱡ︈︉︄.ﱞ︄︇︄ = c.aiptag.ﱡ︈︉︄.ﱞ︄︇︄ || [];
c.aiptag.ﱡ︈︉︄.ﱞ︄︇︄[Na](function () {
  adplayer = new aipPlayer({
    ﱠ︁︎︄: 960,
    ﱟ︁︎︄: 540,
    ﱡ︁︎︄: true,
    ﱣ︁︎︄: true,
    ﱢ︁︎︄: "loading advertisement",
    ﱞ︂︎︄: function () {
      return document[fa]("preroll");
    },
    ﱠ︂︎︄: function () {
      client.connect();
    },
    ﱟ︂︎︄: function () {}
  });
});
function rj() {
  sj.open("GET", "https://cdn.jsdelivr.net/gh/prebid/currency-file@1/latest.json?date=20190929", true);
  sj.send();
}
var sj = new XMLHttpRequest();
sj.onreadystatechange = function () {
  if (this.readyState === 4) {
    this.status;
  }
};
var tj = 0;
var uj = 1;
var vj = undefined;
var wj = undefined;
var xj = undefined;
var yj = 0;
c.onUserLogin = function () {
  yj = 1;
};
var zj = {
  ﱡ︂︎︄: "ACCESS_TOKEN"
};
var Aj = document[p]("script");
Aj.type = "text/javascript";
Aj.async = true;
Aj.src = "https://static.xsolla.com/embed/paystation/1.0.7/widget[ﱞ︉️︄].js";
Aj[La]("load", function (d) {
  c.XPayStationWidget.init(zj);
  c.XPayStationWidget.on("status-done", Mj);
}, false);
document.getElementsByTagName("head")[0].appendChild(Aj);
c.fbAsyncInit = function () {};
(function (c, d, e) {
  var f;
  var g = c.getElementsByTagName(d)[0];
  if (!c[fa](e)) {
    (f = c[p](d)).id = e;
    f.src = "https://connect.facebook.net/en_US/sdk.js";
    g.parentNode.insertBefore(f, g);
  }
})(document, "script", "facebook-jssdk");
var Bj = undefined;
var Cj = undefined;
var Dj = function () {
  c.gapi.auth2.init({
    ﱣ︂︎︄: "604822901057-k3dp7j5qpl6pnfr86rvi4r2qp20nk1oh.apps.googleusercontent.com",
    scope: "https://www.googleapis.com/auth/userinfo.profile"
  }).then(c => {
    (Bj = c).ﱞ︃︎︄.ﱢ︂︎︄(Ej);
    Bj.ﱠ︃︎︄.ﱢ︂︎︄(Fj);
    if (Bj.ﱞ︃︎︄.get()) {
      Bj.ﱠ︋︊︄();
    }
    Gj();
  });
};
var Ej = function (c) {};
var Fj = function (d) {
  if (wj === undefined && Cj !== undefined && (wj = Cj.ﱡ︋︊︄().ﱟ︃︎︄) !== undefined) {
    vj = tj;
    c.onUserLogin(xj);
  }
  if (d !== undefined && d.ﱞ︃︎︄() === true) {
    Cj = d;
    c.onUserLogin(d.id);
  }
};
var Gj = function () {
  if (Bj) {
    Cj = Bj.ﱠ︃︎︄.get();
  }
};
function Hj(d) {
  if (xj) {
    var e = new XMLHttpRequest();
    e.open("GET", DB + "xsolla?userid=" + xj + "&item=" + d);
    e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    e.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200 && e.responseText !== "0") {
        zj.ﱡ︂︎︄ = e.responseText;
        c.XPayStationWidget.init(zj);
        c.XPayStationWidget.open();
      }
    };
    e.send();
  }
}
function Ij(c) {
  var d = new XMLHttpRequest();
  d.open("GET", DB + "setRegion?token=" + wj + "&userid=" + xj + "&region=" + c);
  d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  d.onreadystatechange = function () {
    if (this.readyState === 4 && this.status === 200) {
      if (d.responseText !== "0") {
        dj.ﱟ︉︊︄(dj.ﱢ︈︊︄);
      } else {
        dj.ﱟ︉︊︄(dj.ﱡ︃︎︄);
      }
    }
  };
  d.send();
}
function Jj(c, d) {
  if (!(dj.ﱢ︆︊︄ > 0)) {
    if (dj.ﱞ︋︉︄ < d) {
      dj.ﱟ︉︊︄(dj.ﱡ︈︊︄);
    } else {
      dj.ﱢ︆︊︄ = 2;
      dj.ﱞ︇︊︄ = 0;
      dj.ﱠ︇︊︄ = 100;
      var e = new XMLHttpRequest();
      e.open("GET", DB + "buySpin?token=" + wj + "&userid=" + xj + "&spin=" + c);
      e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      e.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200) {
          if (e.responseText !== "0") {
            var c = JSON.parse(e.responseText);
            dj.ﱠ︊︊︄(c.ﱣ︃︎︄ * Math[D] * 2, c.type, c.id);
            dj.ﱞ︋︉︄ -= d;
          } else {
            dj.ﱢ︆︊︄ = 0;
          }
        }
      };
      e.send();
    }
  }
}
function Kj() {
  if (!(dj.ﱞ︋︉︄ < 300 && dj.ﱢ︌︉︄ > 0)) {
    var c = document[fa]("account_nickname_input").value.trim();
    document[fa]("account_nickname_input").value = c;
    if (!(c[Oa] < 1 || c[Oa] > 20)) {
      var d = new XMLHttpRequest();
      d.open("GET", DB + "changeNickname?token=" + wj + "&userid=" + xj + "&nickname=" + encodeURIComponent(c));
      d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      d.onreadystatechange = function () {
        if (this.readyState == 4 && this.status == 200 && d.responseText !== "0") {
          var c = Number(d.responseText);
          if (c > 0) {
            dj.ﱞ︋︉︄ -= c;
          }
          dj.ﱢ︌︉︄ = 1;
          dj.ﱟ︉︊︄(dj.ﱟ︈︊︄);
        }
      };
      d.send();
    }
  }
}
function Lj(c, d) {
  if (dj.ﱞ︋︉︄ < d) {
    dj.ﱟ︉︊︄(dj.ﱡ︈︊︄);
  } else {
    var e = new XMLHttpRequest();
    e.open("GET", DB + "buyKit?token=" + wj + "&userid=" + xj + "&kit=" + c);
    e.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    e.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200 && e.responseText !== "0") {
        var c = JSON.parse(e.responseText);
        dj.ﱞ︋︉︄ -= d;
        dj.ﱞ︎︉︄ = Date.now() + Number(c);
      }
    };
    e.send();
  }
}
function Mj() {
  var c = new XMLHttpRequest();
  c.open("GET", DB + "claimBread?userid=" + xj);
  c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  c.onreadystatechange = function () {
    if (this.readyState == 4 && this.status == 200 && c.responseText !== "0") {
      var d = Number(c.responseText);
      if (!isNaN(d)) {
        dj.ﱞ︋︉︄ = d;
      }
    }
  };
  c.send();
}
function Nj(d, e, f, g) {
  d = d === undefined ? dj.ﱞ︀︊︄ : d;
  e = e === undefined ? dj.ﱠ︀︊︄ : e;
  f = f === undefined ? dj.ﱟ︀︊︄ : f;
  g = g === undefined ? dj.ﱡ︀︊︄ : g;
  if (d !== dj.ﱞ︀︊︄ || e !== dj.ﱠ︀︊︄ || f !== dj.ﱟ︀︊︄ || g !== dj.ﱡ︀︊︄) {
    dj.ﱞ︀︊︄ = d;
    dj.ﱠ︀︊︄ = e;
    dj.ﱟ︀︊︄ = f;
    dj.ﱡ︀︊︄ = g;
    if (dj.ﱢ︅︊︄ === g) {
      g = "0";
    } else if (dj.ﱞ︆︊︄ === g) {
      g = "1";
    } else if (dj.ﱠ︆︊︄ === g) {
      g = "2";
    } else if (dj.ﱟ︆︊︄ === g) {
      g = "3";
    }
    if (dj.ﱞ︄︊︄ === e) {
      e = "total";
    } else if (dj.ﱣ︄︊︄ === e) {
      e = "normal";
    } else if (dj.ﱞ︅︊︄ === e) {
      e = "zombie";
    } else if (dj.ﱢ︄︊︄ === e) {
      e = "vampire";
    } else if (dj.ﱠ︅︊︄ === e) {
      e = "forest";
    }
    if (dj.ﱠ︄︊︄ === d) {
      d = "all";
    }
    if (dj.ﱟ︄︊︄ === d) {
      d = "week";
    }
    if (dj.ﱡ︄︊︄ === d) {
      d = "today";
    }
    if (dj.ﱟ︅︊︄ === f) {
      f = "kill";
    } else if (dj.ﱡ︅︊︄ === f) {
      f = "score";
    } else if (dj.ﱣ︅︊︄ === f) {
      f = "time";
    }
    var i = new XMLHttpRequest();
    i.open("GET", DB + "leaderboard?range=" + d + "&mode=" + e + "&sort=" + f + "&season=" + g);
    i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    i.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200 && i.responseText !== "0") {
        for (var d = JSON.parse(i.responseText), e = "", f = 0; f < d[Oa]; f++) {
          line = d[f];
          var g = line[1];
          if (g[E]("Starver#") === -1) {
            g = c.decodeURIComponent(c.escape(c.atob(g)));
          }
          e += "<div class=\"lineLeaderboard\">";
          e += "<div class=\"rank\">";
          e += f + 1 + "";
          e += "</div>";
          e += "<div class=\"name\">";
          e += g;
          e += "</div>";
          e += "<div class=\"lvl\">";
          e += dj.ﱢ︋︊︄(line[6]) + 1 + "";
          e += "</div>";
          e += "<div class=\"kills\">";
          e += line[5] + "";
          e += "</div>";
          e += "<div class=\"time\">";
          e += line[4] + "";
          e += "</div>";
          e += "<div class=\"score\">";
          e += line[3] + "";
          e += "</div>";
          e += "</div>";
        }
        document[fa]("leaderboard").innerHTML = e;
      }
    };
    i.send();
  }
}
c.onload = function () {
  c.gapi.load("auth2", Dj);
};




document.addEventListener("keydown", (e) => {
  if(hj.ﱡ︀︉︄.open) return;
  if(e.code == "KeyP") {
    Settings.ColoredSpikes.Style == 1 ? Settings.ColoredSpikes.Style = 3 : Settings.ColoredSpikes.Style = 1
    localStorage.setItem("colored_style_idnts", Settings.ColoredSpikes.Style)
  }
})

client.ﱟ︎︋︄ = function (c) {
    if (hj.ﱞ︁︆︄[ba] !== hj.ﱞ︁︆︄.ﱠ︂︆︄[Oa] || Wb[c].ﱠ︄︉︂ === 29 || hj.ﱞ︁︆︄.ﱢ︀︆︄(Wb[c].ﱠ︄︉︂) != -1 || hj.ﱞ︁︆︄.ﱢ︂︉︄(Wb[c].r)) {
      this.ﱟ︀︉︄[Fi](rb[Xa].stringify([7, c]));
      Settings.AutoCraft.id = c
      return 1;
    } else {
      this.ﱟ︁︍︄();
      return 0;
    }
};
client.ﱡ︄︋︄ = function (c, d) {
    this.ﱟ︀︉︄[Fi](rb[ab].stringify([29, c]));
    Settings.AutoRecycle.id = c
};


const my_mouse = {x: 0,y: 0,d: !!0}
document.addEventListener("mousemove", (e) => {my_mouse.x = e.clientX; my_mouse.y = e.clientY})
document.addEventListener("mousedown", (e) => {e.isTrusted && (my_mouse.d = true)})
document.addEventListener("mouseup", (e) => {e.isTrusted && (my_mouse.d = false)})
document.addEventListener("keydown", (e) => {
    if(hj.ﱡ︀︉︄.open) return;
    if(e.code == Settings.SwordInChest.key) Settings.SwordInChest.enable = true
    if(e.code == Settings.AutoSpike.key) Settings.AutoSpike.enable = true
    if(e.code == Settings.AutoSteal.key) Settings.AutoSteal.enable = true
})
document.addEventListener("keyup", (e) => {
    if(hj.ﱡ︀︉︄.open) return;
    if(e.code == Settings.SwordInChest.key) Settings.SwordInChest.enable = false
    if(e.code == Settings.AutoSpike.key) Settings.AutoSpike.enable = false
    if(e.code == Settings.AutoSteal.key) Settings.AutoSteal.enable = false
})
document.addEventListener("keypress", (e) => {
    if(hj.ﱡ︀︉︄.open) return;
    if(e.code == Settings.AutoCraft.key) Settings.AutoCraft.enable = !Settings.AutoCraft.enable
    if(e.code == Settings.AutoRecycle.key) Settings.AutoRecycle.enable = !Settings.AutoRecycle.enable
    if(e.code == Settings.AutoTotem.key) Settings.AutoTotem.enable = !Settings.AutoTotem.enable
    if(e.code == Settings.extractorPut.key) Settings.extractorPut.enable = !Settings.extractorPut.enable
})

function idnts_dist(a, b) {
    return Math.sqrt((b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y))
}

var mousedown = new MouseEvent("mousedown")
var mouseup = new MouseEvent("mouseup")

function mainHack() {
  requestAnimationFrame(mainHack)
  const ctx = document.querySelector("canvas").getContext("2d");
  const extractors = [24,25,26,27,28];
  const me = gj.ﱞ︊︅︄[hj.ﱠ︊︅︄];

  if(Settings.extractorPut.enable) {
    for(let j = 0; j < extractors.length; ++j) {
        var extractor = gj.ﱠ︀️︄[extractors[j]];
        for(let i = 0; i < extractor.length; ++i) {
            if(idnts_dist(me, extractor[i]) <= 300) {
                client.ﱟ︀︉︄[Fi](wb[Ya].stringify([38, extractor[i].ﱡ︊︅︄, extractor[i].id, 255, extractor[i].type]))
            }
        }
    }
  }
  
  if(Settings.AutoTotem.enable) {
    const totem = gj.ﱠ︀️︄[29];
    for(let i = 0; i < totem.length; ++i) {
        if(idnts_dist(me, totem[i]) <= 300) {
            client.ﱟ︀︉︄[Fi](wb[Ya].stringify([18, totem[i].ﱡ︊︅︄, totem[i].id]))
        }
    }
  }

  if(Settings.AutoSteal.enable) {
    const chest = gj.ﱠ︀️︄[11];
    for(let i = 0; i < chest.length; ++i) {
        if(idnts_dist(me, chest[i]) <= 300) {
            client.ﱟ︀︉︄[Fi](wb[Ya].stringify([9, chest[i].ﱡ︊︅︄, chest[i].id]))
        }
    }
    for(let j = 0; j < extractors.length; ++j) {
        var extractor = gj.ﱠ︀️︄[extractors[j]];
        for(let i = 0; i < extractor.length; ++i) {
            if(idnts_dist(me, extractor[i]) <= 300) {
                client.ﱟ︀︉︄[Fi](wb[Ya].stringify([37, extractor[i].ﱡ︊︅︄, extractor[i].id, extractor[i].type]))
            }
        }
    }
  }

  if(Settings.AutoCraft.enable) {
    client.ﱟ︀︉︄[Fi](wb[Ya].stringify([7, Settings.AutoCraft.id]))
  }
  if(Settings.AutoRecycle.enable) {
    client.ﱟ︀︉︄[Fi](wb[Ya].stringify([29, Settings.AutoRecycle.id]))
  }

  if(Settings.AutoCrown.enable) {
    const hammers = [35, 36, 37, 38, 39].reverse()
    const resurrection = gj.ﱠ︀️︄[22];
    for(let i = 0; i < resurrection.length; i++) {
      if(idnts_dist(me, resurrection[i]) <= 300) {
        if(!Settings.AutoCrown.ready && hj.ﱞ︀︇︄.enabled) {
          client.ﱟ︀︉︄[Fi](wb[Ya].stringify([17, resurrection[i].ﱡ︊︅︄,  resurrection[i].id]))
          Settings.AutoCrown.ready = true
        }
        if(Settings.AutoCrown.ready && !hj.ﱞ︀︇︄.enabled) {
          client.ﱟ︀︉︄[Fi](wb[Ya].stringify([5, 79]))
          for(let j = 0; j < hammers.length; ++j) {
            if(hj.ﱞ︁︆︄.ﱠ︂︆︄.find(e => e.id == hammers[j]) && me.ﱢ️︎︄  != hammers[j]) {
              client.ﱟ︀︉︄[Fi](wb[Ya].stringify([5, hammers[j]]))
              Settings.AutoCrown.ready = false
              break
            }
          }
        }
      }
    }
    if(hj.ﱞ︀︇︄.enabled && Settings.AutoCrown.ready) {
      Settings.AutoCrown.ready = false
      if(me.ﱢ️︎︄  != 79) {
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([5, 79]))
      }
      for(let j = 0; j < hammers.length; ++j) {
        if(hj.ﱞ︁︆︄.ﱠ︂︆︄.find(e => e.id == hammers[j]) && me.ﱢ️︎︄  != hammers[j]) {
          client.ﱟ︀︉︄[Fi](wb[Ya].stringify([5, hammers[j]]))
          Settings.AutoCrown.ready = false
          break
        }
      }
    }
  }
  

  function idnts_has_sword(player) {
    const gears = [57,0,5,6,30,19,62,63,9,12,13,14,15,33,34,16,17,18]
    for(let j = 0; j < gears.length; ++j) {
      if(player.ﱢ️︎︄  == gears[j]) return true
    }
    return false
  }
  
  if(Settings.SwordInChest.enable) {
    if(idnts_has_sword(me)) {
      const chest = gj.ﱠ︀️︄[11];
      var chest_is_near = false;
      var near_chest = undefined;
      for(let j = 0; j < chest.length; ++j) {
        if(idnts_dist(me, chest[j]) <= 300) {
          near_chest = chest[j]
          chest_is_near = true
        }
      }
      if(chest_is_near) {
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([8, near_chest.ﱡ︊︅︄, near_chest.id, me.ﱢ️︎︄ , 10]))
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([9, near_chest.ﱡ︊︅︄, near_chest.id]))
      } else {
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([10, 161, Math.floor(Math.random() * 256), 0]))
        for(let i = 0; i < chest.length; ++i) {
          if(idnts_dist(me, chest[i]) <= 300) {
            client.ﱟ︀︉︄[Fi](wb[Ya].stringify([8, chest[i].ﱡ︊︅︄, chest[i].id, me.ﱢ️︎︄ , 10]))
            client.ﱟ︀︉︄[Fi](wb[Ya].stringify([9, chest[i].ﱡ︊︅︄, chest[i].id]))
          }
        }
      }
    }
  }
  if(Settings.AutoSpike.enable) {
    const spikes = [156, 154, 162, 163, 164, 117, 213].reverse()
    let spike_has = undefined
    for(let j = 0; j < spikes.length; ++j) {
      if(hj.ﱞ︁︆︄.ﱠ︂︆︄.find(e => e.id == spikes[j])) {
        spike_has = spikes[j]
        break
      }
    }
    if(spike_has != undefined) {
      var pi2 = Math.PI * 2
      for(let i = 0; i < 40; i += 4) {
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([10, spike_has, Math.floor((((me.angle + pi2) % pi2) * 255) / pi2), 0]))
        document.dispatchEvent(mousedown)
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([10, spike_has, Math.floor((((me.angle + pi2) % pi2) * (255 + i)) / pi2), 0]))
        client.ﱟ︀︉︄[Fi](wb[Ya].stringify([10, spike_has, Math.floor((((me.angle + pi2) % pi2) * (255 - i)) / pi2), 0]))
      }
    }
  }

  // if(Settings.DrawInChest.enable) {
  //   const chest = gj.ﱠ︀️︄[11];
  //   for(let i = 0; i < chest.length; i++) {
  //     if(chest[i].action != 1024) {
  //       const image = new Image()
  //       image.src = jj.ﱠ︁︆︄[chest[i].action].info.ﱡ︃︉︂[0];
  //       ctx.save();
  //       ctx.globalAlpha = 0.9;
  //       ctx[r](image, hj.ﱡ︈︋︁.x + chest[i].x - 35, hj.ﱡ︈︋︁.y + chest[i].y - 35, 70, 70)
  //       ctx.font = "22px Baloo Paaji";
  //       ctx.strokeStyle = "black";
  //       ctx.lineWidth = 7;
  //       ctx.strokeText("x" + chest[i].info, hj.ﱡ︈︋︁.x + chest[i].x - 12, hj.ﱡ︈︋︁.y + chest[i].y + 35);
  //       ctx.fillStyle = "white";
  //       ctx.fillText("x" + chest[i].info, hj.ﱡ︈︋︁.x + chest[i].x - 12, hj.ﱡ︈︋︁.y + chest[i].y + 35);
  //       ctx.restore();
  //     }
  //   }
  // }

  if(Settings.TotemInfo.enable) {
    const totem = gj.ﱠ︀️︄[29];
    for(let i = 0; i < totem.length; ++i) {
      ctx.save()
      ctx.beginPath()
      ctx.lineWidth = 7
      ctx.font = "28px Baloo Paaji"
      ctx.strokeStyle = "#000"
      ctx.fillStyle = "#fff"
      ctx.strokeText((totem[i].info & 16) >> 4 ? "🔒" : "🔓", totem[i].x + hj.ﱡ︈︋︁.x - 22, totem[i].y + hj.ﱡ︈︋︁.y)
      ctx.fillText((totem[i].info & 16) >> 4 ? "🔒" : "🔓", totem[i].x + hj.ﱡ︈︋︁.x - 22, totem[i].y + hj.ﱡ︈︋︁.y)
      ctx.restore()
    }
  }

  if(Settings.extractorInfo.enable) {

    for(let j = 0; j < extractors.length; j++) {
      var extractor = gj.ﱠ︀️︄[extractors[j]];
      for(let i = 0; i < extractor.length; i++) {
        var color = "white"  
        if((extractor[i].info & 255) >= 255){
          color = "red"
        } else if((extractor[i].info & 255) > 0) {
          color = "orange"
        } else {
          color = "white"
        }
        ctx.save()
        ctx.lineWidth = 7
        ctx.font = "24px Baloo Paaji"
        ctx.strokeStyle = "#000"
        ctx.fillStyle = color
        ctx.strokeText(`x${extractor[i].info & 255}`, (extractor[i].x - 20) + hj.ﱡ︈︋︁.x, extractor[i].y + hj.ﱡ︈︋︁.y)
        ctx.fillText(`x${extractor[i].info & 255}`, (extractor[i].x - 20) + hj.ﱡ︈︋︁.x, extractor[i].y + hj.ﱡ︈︋︁.y)
        ctx.restore()
      }
      for(let i = 0; i < extractor.length; i++) {
        var color = "white"  
        if(((extractor[i].info >> 0xFF00) >> 8) >= 126){
          color = "red"
        } else if(((extractor[i].info >> 0xFF00) >> 8) > 0) {
          color = "orange"
        } else {
          color = "white"
        }
        ctx.save()
        ctx.lineWidth = 7
        ctx.font = "24px Baloo Paaji"
        ctx.strokeStyle = "#000"
        ctx.fillStyle = color
        ctx.strokeText(`x${(extractor[i].info & 0xFF00) >> 8}`, (extractor[i].x - 20) + hj.ﱡ︈︋︁.x, extractor[i].y + hj.ﱡ︈︋︁.y + 20)
        ctx.fillText(`x${(extractor[i].info & 0xFF00) >> 8}`, (extractor[i].x - 20) + hj.ﱡ︈︋︁.x, extractor[i].y + hj.ﱡ︈︋︁.y + 20)
        ctx.restore()
      }
    }
  }
  

}
mainHack();
